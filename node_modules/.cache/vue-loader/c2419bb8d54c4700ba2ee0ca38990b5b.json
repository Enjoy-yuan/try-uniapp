{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/teamSelect/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/teamSelect/index.vue","mtime":1596610933473},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport { queryRecords as getTeam } from '@/api/project/eas/database/groups'\nexport default {\n    name: 'teamSelect',\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        placeholder: {\n            type: String,\n            default: '请选择'\n        },\n        orgCode: {\n            type: String,\n            default: ''\n        }\n    },\n    model: {\n        prop: 'workCenterCode',\n        event: 'change'\n    },\n    data () {\n        return {\n            options: [],\n            itemKey: this.teamCode\n        }\n    },\n    watch: {\n        teamCode () {\n            this.itemKey = this.teamCode\n        },\n        orgCode (val) {\n            if (!val) {\n                this.itemKey = undefined\n            }\n            this.getOptions(val)\n        }\n    },\n    created () {\n        this.getOptions()\n    },\n    methods: {\n        getOptions (val) {\n            getTeam({\n                currentPage: 1,\n                pageSize: 1000,\n                orgCode: this.orgCode\n            }).then(res => {\n                this.options = res.data.list\n                // val接收组织编码，根据组织编码过滤，拿到对应组织下的班组\n                if (val) {\n                    this.options = this.options.filter(\n                        item => item.orgCode == val\n                    )\n                    let arr = this.options.map(i => {\n                        return i.teamCode == this.itemKey\n                    })\n                    if (!arr.includes(true)) {\n                        this.itemKey = undefined\n                    }\n                }\n            })\n        },\n        changeSelect (val) {\n            this.$emit('change', val)\n            let org = this.options\n                .filter(v => v.teamCode == val)\n                .find(value => value)\n            this.$emit('obj', org)\n        }\n    }\n}\n",null]}