{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/EamDialog/dialogEmployeeSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/EamDialog/dialogEmployeeSelect.vue","mtime":1596610933158},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Tree from \"@/components/Tree\" // Secondary package based on el-pagination\nimport Pagination from '@/components/Pagination'\nimport { selectlists } from '@/api/project/eas/database/groups'\n\nexport default {\n    name: 'employeeSelect',\n    components: { Pagination, Tree },\n    props: ['unMutiple', 'title', 'filterEmployeeCode', 'propName', 'propCode', 'required'],\n    data () {\n        return {\n            activeContent: 'content1',\n            treeType: 'org',\n            treeParams: {\n                orgCode: null\n            },\n            dialogVisible: false,\n            subList: [],\n            list: [],\n            total: 0,\n            listLoading: true,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                orgId: null,\n                employeeCode: null,\n                employeeName: null\n            },\n            selectedRows: [],\n            currentSelectedRow: null,\n            treeStyleObj: {\n                height: '437px'\n            }\n        }\n    },\n    created () {\n        this.handleQuery()\n    },\n    activated () {\n        this.handleQuery()\n    },\n    watch: {\n        'listQuery.orgId' (val) {\n            if (val) {\n                this.handleQuery()\n            }\n        },\n        'filterEmployeeCode' (val) {\n            if (val) {\n                this.handleQuery()\n            }\n        }\n    },\n    methods: {\n        handleQuery () {//查询组织列表\n            this.listQuery.page = 1\n            selectlists(this.listQuery, this.filterEmployeeCode).then(response => {\n                this.list = response.data.list\n                this.total = response.data.pages.count\n                if (this.subList) {\n                    this.subList.forEach(items => {\n                        this.list.forEach((item, index) => {\n                            if (item.employeeCode === items.employeeCode) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        })\n                    })\n                }\n            })\n        },\n        selectAll (val) {\n            // 全选\n            if (val.length == 0) {\n                this.$refs.tb.clearSelection()\n                this.subList = this.subList.filter(x => this.list.every(y => y.employeeCode !== x.employeeCode))\n                return false\n            }\n            val.forEach((items, indexv) => {\n                let isSelected = false\n                this.subList.forEach(item => {\n                    if (item.employeeCode === items.employeeCode) {\n                        isSelected = true\n                    }\n                })\n                if (!isSelected) {\n                    this.subList.push(val[indexv])\n                }\n            })\n        },\n        selectMain (val, row) {\n            let isuncheck = this.checkUnsel(val, row)\n            if (!isuncheck) {\n                if (this.unMutiple) {\n                    if (val.length == 1) {\n                        this.subList = val\n                    }\n                    else {\n                        this.$message({\n                            title: \"警告\",\n                            message: \"请选择一条信息\",\n                            type: \"warning\"\n                        })\n                    }\n                } else {\n                    if (this.subList) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false\n                            this.subList.forEach((item) => {\n                                if (item.employeeCode === items.employeeCode) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.subList.push(val[indexv])\n                            }\n                        })\n                    } else {\n                        this.subList = val\n                    }\n                }\n            } else {\n                this.subList = this.subList.filter(item => {\n                    return item.employeeCode !== row.employeeCode\n                })\n            }\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true\n            val.forEach(item => {\n                if (item.employeeCode === row.employeeCode) {\n                    isuncheck = false\n                }\n            })\n            return isuncheck\n        },\n        checked (i) {\n            this.$refs.tb.toggleRowSelection(this.list[i], true)\n        },\n        selectChange (val) {//备选项选中行\n            if (this.unMutiple) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        personConfirm () {\n            if (this.required && this.subList) {\n                if (this.subList.length === 0) {\n                    this.$message({ type: 'warning', message: '请选择一条数据' })\n                } else {\n                    this.$emit('personConfirm', this.subList, this.propCode, this.propName)\n                    this.dialogVisible = false\n                }\n            } else {\n                if (this.subList) {\n                    if (this.subList.length === 0) {\n                        this.$emit('personConfirm', [{ employeeCode: null, employeeName: null }], this.propCode, this.propName)\n                    } else {\n                        this.$emit('personConfirm', this.subList, this.propCode, this.propName)\n                    }\n                } else {\n                    this.$emit('personConfirm', [{ employeeCode: null, employeeName: null }], this.propCode, this.propName)\n                }\n\n                this.dialogVisible = false\n            }\n            this.subList = []\n            this.$refs.tb.clearSelection()\n        },\n        setTreeDatas (id) {\n            this.$set(this.listQuery, 'orgId', id)\n        }\n    }\n}\n",null]}