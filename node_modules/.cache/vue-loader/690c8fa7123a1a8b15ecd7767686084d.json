{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/EamDialog/dialogWorkSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/EamDialog/dialogWorkSelect.vue","mtime":1596610933158},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Tree from '@/components/Tree' // Secondary package based on el-pagination\nimport Pagination from '@/components/Pagination'\n// import { selectlists } from '@/api/system/organization'\n// import * as api from '@/api/data-base/work-center'\nimport { queryWorkcenters } from '@/api/project/eas/database/groups'\n\nexport default {\n    name: 'workSelect',\n    components: { Pagination, Tree },\n    props: [\n        'unMutiple',\n        'title',\n        'propName',\n        'filterWorkCenterCode',\n        'propCode',\n        'required'\n    ],\n    data () {\n        return {\n            activeContent: 'content1',\n            treeType: 'org',\n            treeParams: {\n                orgCode: null\n            },\n            dialogVisible: false,\n            list: [],\n            subList: [],\n            total: 0,\n            listLoading: true,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                orgId: null,\n                workCenterCode: null,\n                workCenterName: null\n            },\n            selectedRows: [],\n            currentSelectedRow: null,\n            treeStyleObj: {\n                height: '437px'\n            }\n        }\n    },\n    created () {\n        this.handleQuery()\n    },\n    activated () {\n        this.handleQuery()\n    },\n    watch: {\n        'listQuery.orgId' (val) {\n            if (val) {\n                this.handleQuery()\n            }\n        },\n        filterWorkCenterCode (val) {\n            if (val) {\n                this.handleQuery()\n            }\n        }\n    },\n    methods: {\n        handleQuery () {\n            //查询工作中心\n            this.listQuery.page = 1\n            queryWorkcenters(this.listQuery, this.filterWorkCenterCode).then(\n                response => {\n                    this.list = response.data.list\n                    this.total = response.data.pages.count\n                    if (this.subList) {\n                        this.subList.forEach(items => {\n                            this.list.forEach((item, index) => {\n                                if (\n                                    item.workCenterCode === items.workCenterCode\n                                ) {\n                                    this.$nextTick(function () {\n                                        this.checked(index)\n                                    })\n                                }\n                            })\n                        })\n                    }\n                }\n            )\n        },\n        selectAll (val) {\n            // 全选\n            if (val.length == 0) {\n                this.$refs.tb.clearSelection()\n                this.subList = this.subList.filter(x =>\n                    this.list.every(y => y.workCenterCode !== x.workCenterCode)\n                )\n                return false\n            }\n            val.forEach((items, indexv) => {\n                let isSelected = false\n                this.subList.forEach(item => {\n                    if (item.workCenterCode === items.workCenterCode) {\n                        isSelected = true\n                    }\n                })\n                if (!isSelected) {\n                    this.subList.push(val[indexv])\n                }\n            })\n        },\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val) //单击行绑定点击事件\n            this.subList.push(val)\n        },\n        selectChange (val) {\n            //备选项选中行\n            if (this.unMutiple) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(\n                        val[val.length - 1],\n                        'selected'\n                    ) //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        selectMain (val, row) {\n            let isuncheck = this.checkUnsel(val, row)\n            if (!isuncheck) {\n                if (this.unMutiple) {\n                    if (val.length == 1) {\n                        this.subList = val\n                    } else {\n                        this.$message({\n                            title: '警告',\n                            message: '请选择一条信息',\n                            type: 'warning'\n                        })\n                    }\n                } else {\n                    if (this.subList) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false\n                            this.subList.forEach(item => {\n                                if (\n                                    item.workCenterCode === items.workCenterCode\n                                ) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.subList.push(val[indexv])\n                            }\n                        })\n                    } else {\n                        this.subList = val\n                    }\n                }\n            } else {\n                this.subList = this.subList.filter(item => {\n                    return item.workCenterCode !== row.workCenterCode\n                })\n            }\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true\n            val.forEach(item => {\n                if (item.workCenterCode === row.workCenterCode) {\n                    isuncheck = false\n                }\n            })\n            return isuncheck\n        },\n        checked (i) {\n            this.$refs.tb.toggleRowSelection(this.list[i], true)\n        },\n        personConfirm () {\n            if (this.required && this.subList) {\n                if (this.subList.length === 0) {\n                    this.$message({\n                        type: 'warning',\n                        message: '请选择一条数据'\n                    })\n                } else {\n                    this.$emit(\n                        'workConfirm',\n                        this.subList,\n                        this.propCode,\n                        this.propName\n                    )\n                    this.dialogVisible = false\n                }\n            } else {\n                if (this.subList) {\n                    if (this.subList.length === 0) {\n                        this.$emit(\n                            'workConfirm',\n                            [{ workCenterCode: null, workCenterName: null }],\n                            this.propCode,\n                            this.propName\n                        )\n                    } else {\n                        this.$emit(\n                            'workConfirm',\n                            this.subList,\n                            this.propCode,\n                            this.propName\n                        )\n                    }\n                } else {\n                    this.$emit(\n                        'workConfirm',\n                        [{ workCenterCode: null, workCenterName: null }],\n                        this.propCode,\n                        this.propName\n                    )\n                }\n\n                this.dialogVisible = false\n            }\n            this.subList = []\n            this.$refs.tb.clearSelection()\n        },\n        setTreeDatas (id) {\n            this.$set(this.listQuery, 'orgId', id)\n        }\n    }\n}\n",null]}