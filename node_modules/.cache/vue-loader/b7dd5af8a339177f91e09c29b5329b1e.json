{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/customer/index.vue?vue&type=template&id=f1c96054&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/customer/index.vue","mtime":1600927611444},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"div\",\n        { staticClass: \"app-container\" },\n        [\n          _c(\"div\", { staticClass: \"filter-container\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"filter-items\" },\n              [\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    placeholder: _vm.$t(\"customer.customerCode\")\n                  },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.customerCode,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"customerCode\", $$v)\n                    },\n                    expression: \"listQuery.customerCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    placeholder: _vm.$t(\"customer.customerName\")\n                  },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.customerName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"customerName\", $$v)\n                    },\n                    expression: \"listQuery.customerName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: {\n                      size: \"small\",\n                      placeholder: _vm.$t(\"customer.customerType\"),\n                      clearable: \"\"\n                    },\n                    model: {\n                      value: _vm.listQuery.customerType,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"customerType\", $$v)\n                      },\n                      expression: \"listQuery.customerType\"\n                    }\n                  },\n                  _vm._l(_vm.dt_customer_type, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.dictItemKey,\n                      attrs: {\n                        label: item.dictItemValue,\n                        value: item.dictItemKey\n                      }\n                    })\n                  }),\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      type: \"primary\",\n                      size: \"small\",\n                      icon: \"el-icon-search\"\n                    },\n                    on: { click: _vm.handleQuery }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.search\")))]\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"table-container\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"oprate_btn\" },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-plus\"\n                      },\n                      on: { click: _vm.handleCreate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.add\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-edit\"\n                      },\n                      on: { click: _vm.handleUpdate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.edit\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-delete\"\n                      },\n                      on: { click: _vm.handleDelete }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.delete\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-upload2\"\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.export\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-edit\"\n                      },\n                      on: { click: _vm.handleImport }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.import\")))]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-table\",\n                {\n                  key: _vm.tableKey,\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.list,\n                    border: \"\",\n                    fit: \"\",\n                    height: _vm.theight,\n                    \"highlight-current-row\": \"\",\n                    size: \"mini\",\n                    \"cell-class-name\": \"table-cell\",\n                    \"header-cell-class-name\": \"header-cell\"\n                  },\n                  on: { \"selection-change\": _vm.selectRow }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      type: \"selection\",\n                      fixed: \"\",\n                      width: \"30\",\n                      align: \"center\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.customerCode\"),\n                      prop: \"customerCode\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.customerName\"),\n                      prop: \"customerName\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.customerType\"),\n                      prop: \"customerTypeName\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.customerPropertyName\"),\n                      prop: \"customerPropertyName\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.isRetailer\")\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n                        \" +\n                                _vm._s(\n                                  _vm._f(\"optionsFilter\")([\n                                    scope.row.isRetailer,\n                                    _vm.isRetailerOptions\n                                  ])\n                                ) +\n                                \"\\n                    \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"100\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.contact\"),\n                      prop: \"contact\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"100\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.contactNumber\"),\n                      prop: \"contactNumber\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"160\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.email\"),\n                      prop: \"email\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"260\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.address\"),\n                      prop: \"address\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      \"min-width\": \"480\",\n                      align: \"center\",\n                      label: _vm.$t(\"customer.remark\"),\n                      prop: \"remark\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"pagination\", {\n                attrs: {\n                  total: _vm.total,\n                  page: _vm.listQuery.currentPage,\n                  limit: _vm.listQuery.pageSize\n                },\n                on: {\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                  },\n                  \"update:limit\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                  },\n                  pagination: _vm.getList\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                title:\n                  _vm.dialogStatus == \"create\"\n                    ? _vm.$t(\"table.add\")\n                    : _vm.$t(\"table.edit\"),\n                visible: _vm.dialogFormVisible\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.dialogFormVisible = $event\n                },\n                close: _vm.handleClose\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"temp\",\n                  staticClass: \"small-space\",\n                  staticStyle: { \"max-width\": \"600px\" },\n                  attrs: {\n                    model: _vm.temp,\n                    rules: _vm.rules,\n                    \"label-width\": \"100px\",\n                    inline: true,\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"customer.customerCode\"),\n                        prop: \"customerCode\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { disabled: _vm.dialogStatus != \"create\" },\n                        on: {\n                          input: function($event) {\n                            return _vm.changeCase(_vm.temp.customerCode)\n                          }\n                        },\n                        model: {\n                          value: _vm.temp.customerCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"customerCode\", $$v)\n                          },\n                          expression: \"temp.customerCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"customer.customerName\"),\n                        prop: \"customerName\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.customerName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"customerName\", $$v)\n                          },\n                          expression: \"temp.customerName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: _vm.$t(\"customer.customerType\") } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            size: \"small\",\n                            placeholder: _vm.$t(\"table.select\")\n                          },\n                          model: {\n                            value: _vm.temp.customerType,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp, \"customerType\", $$v)\n                            },\n                            expression: \"temp.customerType\"\n                          }\n                        },\n                        _vm._l(_vm.dt_customer_type, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: { label: _vm.$t(\"customer.customerPropertyName\") }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            size: \"small\",\n                            placeholder: _vm.$t(\"table.select\")\n                          },\n                          model: {\n                            value: _vm.temp.customerProperty,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp, \"customerProperty\", $$v)\n                            },\n                            expression: \"temp.customerProperty\"\n                          }\n                        },\n                        _vm._l(_vm.dt_customer_property, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: _vm.$t(\"customer.isRetailer\") } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          model: {\n                            value: _vm.temp.isRetailer,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp, \"isRetailer\", $$v)\n                            },\n                            expression: \"temp.isRetailer\"\n                          }\n                        },\n                        _vm._l(_vm.isRetailerOptions, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.value,\n                            attrs: { label: item.label, value: item.value }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"customer.contact\"),\n                        prop: \"contact\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.contact,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"contact\", $$v)\n                          },\n                          expression: \"temp.contact\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"customer.contactNumber\"),\n                        prop: \"contactNumber\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.contactNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"contactNumber\", $$v)\n                          },\n                          expression: \"temp.contactNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: { label: _vm.$t(\"customer.email\"), prop: \"email\" }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.email,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"email\", $$v)\n                          },\n                          expression: \"temp.email\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"customer.address\"),\n                        prop: \"address\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.address,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"address\", $$v)\n                          },\n                          expression: \"temp.address\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"customer.remark\"),\n                        prop: \"remark\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.remark,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"remark\", $$v)\n                          },\n                          expression: \"temp.remark\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.dialogFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _vm.dialogStatus == \"create\"\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.create }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                    : _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.update }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          staticClass: \"table_dialog\",\n          attrs: {\n            \"custom-class\": \"dialog-custom\",\n            width: \"60%\",\n            title: \"储位物料导入\",\n            visible: _vm.importDialogVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.importDialogVisible = $event\n            }\n          }\n        },\n        [\n          _c(\"ImportFile\", {\n            ref: \"importDialog\",\n            attrs: { modalNo: _vm.modalNo }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}