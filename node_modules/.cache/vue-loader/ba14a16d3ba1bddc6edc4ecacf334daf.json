{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/knProcessing/wzsknProcessing/content/contentRegister.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/knProcessing/wzsknProcessing/content/contentRegister.vue","mtime":1596610934131},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/wms/knProcessing/wzsknProcessing\";\nimport knbomwlxz from '@/components/Select/knbomwlxz'//bom物料信息模块\nimport zsjwlxz from '@/components/Select/zsjwlxz'//主数据物料信息模块\nimport { mapState } from 'vuex';\nimport AuthoType from '@/components/Select/AuthoType.vue'//权限类型下拉组件\n// import wareAreaCode from '@/components/Select/wareAreaCode.vue'//区位下拉组件\n// import wareLocationCode from '@/components/Select/wareLocationCode.vue'//储位下拉组件\n\nexport default {\n    name: \"wzskncontentRegister\",\n    //   Pagination,wareAreaCode,wareLocationCode\n    components: { knbomwlxz, zsjwlxz, AuthoType },\n    data () {\n        return {\n            theight: 0,\n            list: null,\n            listTemp: null,\n            mainFormList: {\n                orgCode: '',\n                dicType: null,\n                accountDate: this.timeFormat()\n            },\n            configBusiness: {\n                db: '0908',\n                cz: '0902',\n                zz: '0901'\n            },\n            isEdit: false,\n            isSaveEdit: false,\n            unMutiplebom: true,\n            bomType: 'stores_processing_bom',\n            businessTypeList: [],\n            selectRows: [],\n            bomwlxzDialogFormVisible: false,\n            bomwlxzRows: [],\n            zsjwlxzDialogFormVisible: false,\n            zsjwlxzRows: [],\n            zsjwlxzAddDialogFormVisible: false,\n            zsjwlxzAddRows: [],\n            defaultStockType: undefined,\n            defaultStockStatus: undefined,\n            rules: {\n                orgCode: [\n                    { required: true, message: ' ', trigger: 'blur' }\n                ],\n                warehouseCode: [\n                    { required: true, message: ' ', trigger: 'blur' }\n                ],\n                wareAreaCode: [\n                    { required: true, message: ' ', trigger: 'blur' }\n                ],\n                wareLocationCode: [\n                    { required: true, message: ' ', trigger: 'blur' }\n                ],\n                dicType: [\n                    { required: true, message: ' ', trigger: 'blur' }\n                ],\n                materielCode: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n                ],\n                materielName: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n                ],\n                quantity: [\n                    { required: true, message: ' ', trigger: 'blur' }\n                ]\n            },\n            slocatorList: [],\n            areaList: [],\n            locatorList: [],\n            saveData: {}//保存的数据\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_stock_type: state => state.dict.dt_stock_type,\n            dt_stock_status: state => state.dict.dt_stock_status\n        })\n    },\n    mounted () {\n        this.setTableHeight();\n        this.$store.dispatch('dict/getDicData', ['dt_stock_type', 'dt_stock_status']);\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() + 8;\n        },\n        //主表勾选框选中\n        selectRow (val) {\n            this.selectRows = val[val.length - 1];\n            if (val.length > 1) {\n                this.$refs.tbmain.clearSelection()\n                this.$refs.tbmain.toggleRowSelection(val[val.length - 1], 'selected')\n            }\n        },\n        setdefault (val, i) {\n            if (i === 1) {\n                this.listQuery.orgCode = val;\n            } else if (i === 3) {\n                this.listQuery.warehouseCode = val;\n                this.getList();\n            }\n        },\n        timeFormat () {\n            var d = new Date();\n            var year = d.getFullYear();       //年  \n            var month = d.getMonth() + 1;     //月  \n            var day = d.getDate();            //日  \n\n            var clock = year + \"-\";\n            if (month < 10)\n                clock += \"0\";\n            clock += month + \"-\";\n\n            if (day < 10)\n                clock += \"0\";\n            clock += day + \" \";\n            return (clock);\n        },\n        getLocatorList (warehouseCode, areaCode, i) {\n            api.getLocator(warehouseCode, areaCode).then(res => {\n                this.$set(this.locatorList, i, res.data);\n                this.$set(this.list[i], 'wareLocationCode', res.data[0].locationCode);\n                this.$set(this.list, i, this.list[i]);\n            })\n        },\n        getsLocatorList (warehouseCode, areaCode) {\n            api.getLocator(warehouseCode, areaCode).then(res => {\n                this.slocatorList = res.data;\n                this.$set(this.mainFormList, 'wareLocationCode', this.slocatorList[0].locationCode)\n            })\n        },\n        change () {\n            api.getArea(this.mainFormList.warehouseCode).then(resa => {\n                this.areaList = resa.data;\n            })\n        },\n        changeAreaSel (areaCode, i) {\n            this.getLocatorList(this.mainFormList.warehouseCode, areaCode, i)\n        },\n        //搜索区位变化\n        changesAreaSel (areaCode) {\n            this.getsLocatorList(this.mainFormList.warehouseCode, areaCode)\n        },\n        showWlxz () {\n            if (!this.mainFormList.orgCode || !this.mainFormList.dicType || !this.mainFormList.warehouseCode || !this.mainFormList.wareAreaCode || !this.mainFormList.wareLocationCode) {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: '请先选择组织编码、仓库编码、业务类型、库区及库位',\n                    type: \"warning\"\n                });\n            } else {\n                if (this.mainFormList.dicType === this.configBusiness.db) {\n                    this.zsjwlxzDialogFormVisible = true;\n                    this.$nextTick(() => {\n                        this.$refs.zsjwlxzRef.getList();\n                    })\n                } else {\n                    this.bomwlxzDialogFormVisible = true;\n                    this.$nextTick(() => {\n                        this.$refs.bomwlxzRef.listAll = []\n                        this.$refs.bomwlxzRef.listSub = []\n                        this.$refs.bomwlxzRef.listSelected = []\n                        this.$refs.bomwlxzRef.getList1()\n                    })\n                }\n            }\n        },\n        handlebomwlClick (val) {\n            this.bomwlxzRows = {};\n            this.listTemp = [];\n            this.bomwlxzRows = val.v1;\n            this.listTemp = val.v2;\n        },\n        bomwlConfirm () {\n            //物料选中中弹窗确认按钮\n            if (this.bomwlxzRows.materielCode) {\n                this.list = [];\n                this.mainFormList.materielCode = this.bomwlxzRows.materielCode;\n                this.mainFormList.materielName = this.bomwlxzRows.materielName;\n\n                this.listTemp.map(item => {\n                    item.warehouseCode = this.mainFormList.warehouseCode;\n                    item.quota = this.mainFormList.dicType === '0906' ? item.assemblingNum : item.dismantlingNum\n                });\n                this.list = this.listTemp;\n                console.log(this.mainFormList)\n                api.queryStock(this.mainFormList.dicType).then(res => {\n                    console.log(res.data.list[0], 'handleQuery')\n                    this.defaultStockType = res.data.list[0].fetchStockType.split(\",\")[0]\n                    this.defaultStockStatus = res.data.list[0].fetchStockStat.split(\",\")[0]\n                    this.setDefaultTable()\n                    this.listTemp = [];\n                    this.isEdit = true;\n                    this.bomwlxzDialogFormVisible = false;\n                })\n\n\n                // api.getArea(this.mainFormList.warehouseCode).then(resa=>{\n                //   this.areaList = resa;\n                //   this.isEdit = true;\n                //   this.bomwlxzDialogFormVisible = false;\n                // })\n            } else {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: this.$t(\"message.checkedplease\"),\n                    type: \"warning\"\n                });\n            }\n        },\n        zsjwlConfirm () {\n            //库内换号物料选中中弹窗确认按钮\n            if (this.$refs.zsjwlxzRef.listSelected.length > 0) {\n                this.mainFormList.materielCode = this.$refs.zsjwlxzRef.listSelected[0].materielCode;\n                this.mainFormList.materielName = this.$refs.zsjwlxzRef.listSelected[0].materielName;\n                this.isEdit = true;\n                this.zsjwlxzDialogFormVisible = false;\n            } else {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: this.$t(\"message.checkedplease\"),\n                    type: \"warning\"\n                });\n            }\n        },\n        zsjwlAddConfirm () {\n            //库内换号新增物料选中中弹窗确认按钮\n            if (this.$refs.zsjwlxzAddRef.listSelected.length > 0) {\n                this.list = [];\n                let selecteda = this.$refs.zsjwlxzAddRef.listSelected;\n                selecteda.forEach((item) => {\n                    item.warehouseCode = this.mainFormList.warehouseCode;\n                    item.quota = 1;\n                });\n                this.list = [...selecteda];\n                this.isEdit = true;\n                this.zsjwlxzAddDialogFormVisible = false;\n            } else {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: this.$t(\"message.checkedplease\"),\n                    type: \"warning\"\n                });\n            }\n        },\n        //换号新增弹框显示\n        handleAdd () {\n            if (!this.mainFormList.orgCode || !this.mainFormList.dicType || !this.mainFormList.warehouseCode || !this.mainFormList.wareAreaCode || !this.mainFormList.wareLocationCode) {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: '请先选择组织编码、仓库编码、业务类型、库区及库位',\n                    type: \"warning\"\n                });\n            } else {\n                this.zsjwlxzAddDialogFormVisible = true;\n                this.$nextTick(() => {\n                    if (this.list) {\n                        this.$refs.zsjwlxzAddRef.listSelected = [...this.list];\n                    }\n                    this.$refs.zsjwlxzAddRef.getList();\n                })\n            }\n        },\n        //删除\n        handleDelete () {\n\n        },\n        //保存\n        handleSave () {\n            this.$refs.mainForm.validate((valid) => {\n                if (valid) {\n                    let saveData = {\n                        orgCode: '',\n                        warehouseCode: '',\n                        dicType: '',\n                        relationDicType: '',\n                        accountDate: '',\n                        processingAssemblyDTO: {},\n                        assemblyDetailDTOSs: []\n                    }\n\n                    for (let key in this.mainFormList) {\n                        if (key === 'orgCode' || key === 'warehouseCode' || key === 'dicType' || key === 'relationDicType' || key === 'accountDate') {\n                            saveData[key] = this.mainFormList[key]\n                        } else if (key === 'materielCode' || key === 'materielName' || key === 'measuringUnit' || key === 'wareAreaCode' || key === 'wareLocationCode' || key === 'stockState' || key === 'stockType' || key === 'quantity') {\n                            saveData.processingAssemblyDTO[key] = this.mainFormList[key];\n                        }\n                    }\n                    this.list.forEach((item, index) => {\n                        saveData.assemblyDetailDTOSs.push({});\n                        for (let key in item) {\n                            if (key === 'materielCode' || key === 'materielName' || key === 'measuringUnit' || key === 'quantity' || key === 'stockState' || key === 'stockType' || key === 'wareAreaCode' || key === 'wareLocationCode') {\n                                saveData.assemblyDetailDTOSs[index][key] = item[key];\n                            }\n                            if (key === 'stockStateArr') {\n                                saveData.assemblyDetailDTOSs[index]['stockState'] = item.stockStateArr.join(',');\n                            }\n                            if (key === 'stockTypeArr') {\n                                saveData.assemblyDetailDTOSs[index]['stockType'] = item.stockTypeArr.join(',');\n                            }\n                        }\n                    });\n\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        api.createProof(saveData).then(() => {\n                            this.isSaveEdit = true;\n                            this.$message({\n                                type: 'success',\n                                message: '保存成功'\n                            });\n                        })\n                    });\n                } else {\n                    this.$message({\n                        title: this.$t(\"message.warning\"),\n                        message: '请先填写及选择必填项',\n                        type: \"warning\"\n                    });\n                }\n            })\n        },\n        //刷新\n        handleRefresh () {\n            this.isEdit = false;\n            this.isSaveEdit = false;\n            this.list = [];\n        },\n        //业务类型相关值操作\n        setdicTypeRelated (val) {\n            this.list = []\n            this.mainFormList.materielCode = null\n            this.mainFormList.materielName = null\n\n\n            this.businessTypeList.options.forEach((item) => {\n                if (item.wareRuleCode === val) {\n                    this.mainFormList.relationDicType = item.completedLink;\n                    if (this.mainFormList.dicType === this.configBusiness.cz) {\n                        this.mainFormList.stockState = item.fetchStockStat;\n                        this.mainFormList.stockType = item.fetchStockType;\n                    } else {\n                        this.mainFormList.stockState = item.storeStockStat;\n                        this.mainFormList.stockType = item.storeStockType;\n                    }\n                }\n            })\n        },\n        //计算物料数量定额*加工数量\n        calQuantity () {\n            if (this.mainFormList.quantity) {\n                this.list.forEach((item, index) => {\n                    let num = this.mainFormList.quantity * item.quota;\n                    this.$set(this.list[index], 'quantity', num);\n                    this.$set(this.list, index, this.list[index]);\n                })\n            }\n        },\n        setDefaultTable () {\n            this.list.forEach((item, index) => {\n                if (this.mainFormList.dicType === this.configBusiness.cz) {\n                    this.$set(this.list[index], 'stockTypeArr', [this.defaultStockType])\n                    this.$set(this.list[index], 'stockStateArr', [this.defaultStockStatus])\n                } else {\n                    this.$set(this.list[index], 'stockType', this.defaultStockType)\n                    this.$set(this.list[index], 'stockState', this.defaultStockStatus)\n                }\n\n                this.list[index].wareAreaCode = this.areaList[0].areaCode\n                this.changeAreaSel(this.areaList[0].areaCode, index)\n            })\n        }\n    }\n}\n",null]}