{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/pointCheckPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/pointCheckPlan/index.vue","mtime":1596610933410},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/ESC/pointCheckPlan' // 增、删、改api引入\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport workCenterSelect from \"@/components/Select/work-center-select.vue\" //下拉组件\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'pointCheckPlan',\n    components: { Pagination, caiGou, workCenterSelect },\n    data () {\n        return {\n            theight: 0, //表格高度\n            list: [],\n            fromList: [],\n            detailList: [],\n            stateArry: [{\n                value: '0',\n                label: '漏检'\n            }, {\n                value: '2',\n                label: '异常'\n            }, {\n                value: '3',\n                label: '跳过'\n            }],\n            total: 0,\n            total1: 0,\n            tableKey: [0, 1], //表格索引\n            listQuery: {\n                organizationCode: undefined,\n                useDept: undefined,\n                deviceCode: undefined,\n                planDateStart: this.currentTime(),\n                materielCode: undefined,\n                planDateEnd: this.currentTime1(),\n                inspectionPlanName: undefined,\n                //查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            listQuery1: {\n                //从表查询\n                inspectionTaskCode: undefined,\n                state: undefined,\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                skipReason: undefined,\n            },\n            isEdit: false,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogStatus: '',\n            dialogFormVisible: false,\n            fromDialogFormVisible: false,\n            selectedRows: null, //多选时选中的所有行\n            selectFromList: null, //从表选中\n            pickerOptionsStart: {\n                disabledDate: (time) => {\n                    let endDateVal = this.listQuery.planDateEnd\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                },\n            },\n            pickerOptionsEnd: {\n                disabledDate: (time) => {\n                    let beginDateVal = this.listQuery.planDateStart\n                    if (beginDateVal) {\n                        return time.getTime() < new Date(beginDateVal).getTime()\n                    }\n                },\n            },\n        }\n    },\n    created () {\n        this.getList()\n    },\n    watch: {\n        dt_task_skip_reason () {\n            let options = [this.dt_task_skip_reason]\n            this.list = this.$myFun.srmCodeToName(\n                this.list,\n                options,\n                ['skipReason']\n            )\n        }\n    },\n    filters: {\n        defaultValFilter: function (e) {\n            if (Array.isArray(e)) {\n                return e.join(',')\n            } else {\n                return e\n            }\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_task_skip_reason: state => state.eamDict.dt_task_skip_reason\n        })\n    },\n\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_task_skip_reason'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n    },\n    methods: {\n        checked () {\n            this.$refs.mainList.toggleRowSelection(this.list[0], true)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        currentTime () {\n            var date = new Date()\n            var seperator1 = \"-\"\n            var year = date.getFullYear()\n            var month = date.getMonth() + 1\n            var strDate = date.getDate()\n            if (month >= 1 && month <= 9) {\n                month = \"0\" + month\n            }\n            if (strDate >= 0 && strDate <= 9) {\n                strDate = \"0\" + strDate\n            }\n            var currentdate = year + seperator1 + month + seperator1 + strDate + ' ' + \"00\" + \":\" + \"00\" + \":\" + \"00\"\n            return currentdate\n        },\n        currentTime1 () {\n            var date = new Date()\n            var seperator1 = \"-\"\n            var year = date.getFullYear()\n            var month = date.getMonth() + 1\n            var strDate = date.getDate()\n            if (month >= 1 && month <= 9) {\n                month = \"0\" + month\n            }\n            if (strDate >= 0 && strDate <= 9) {\n                strDate = \"0\" + strDate\n            }\n            var currentdate = year + seperator1 + month + seperator1 + strDate + ' ' + \"23\" + \":\" + \"59\" + \":\" + \"59\"\n            return currentdate\n        },\n        //获取主表数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                let options = [this.dt_task_skip_reason]\n                this.list = this.$myFun.srmCodeToName(\n                    this.list,\n                    options,\n                    ['skipReason']\n                )\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        //获取从表数据\n        getFromList () {\n            this.listQuery1.inspectionTaskCode = this.selectedRows.inspectionTaskCode\n            api.queryDetails(this.listQuery1).then(res => {\n                this.fromList = res.data.list\n                this.total1 = res.data.pages.count\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                skipReason: undefined,\n            }\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n            this.fromList = undefined\n        },\n        handleSkip () {\n            //主表跳过\n            this.resetTemp()\n            if (this.selectedRows) {\n                this.dialogStatus = 'create'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create () {\n            api.mainSkipReason(this.selectedRows.inspectionTaskCode, this.temp.skipReason).then(() => {\n                this.getList()\n                this.dialogFormVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '跳过成功',\n                    type: 'success',\n                    duration: 2000\n                })\n\n            })\n\n        },\n        //点检记录切换\n        stateChange (val) {\n            this.listQuery1.state = val\n            api.queryDetails(this.listQuery1).then(res => {\n                this.fromList = res.data.list\n                this.total1 = res.data.pages.count\n            })\n        },\n        handleSkip1 () {\n            //从表跳过\n            this.resetTemp()\n            if (this.selectFromList) {\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            api.fromSkipReason(this.selectedRows.inspectionTaskCode, this.selectFromList.inspectionTaskRecordCode, this.temp.skipReason).then(() => {\n                this.getFromList()\n                this.dialogFormVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '跳过成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        //主表勾选\n        selectChange (val) {\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.mainList.setCurrentRow(this.selectedRows)\n            if (this.selectedRows) {\n                this.getFromList()\n                this.isEdit = false\n            } else {\n                this.fromList = []\n                this.isEdit = true\n            }\n        },\n        //从表选择框选中\n        selectFromChange (val) {\n            this.selectFromList = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.fromList.clearSelection()\n                this.$refs.fromList.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.fromList.setCurrentRow(this.selectFromList)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.mainList.clearSelection()\n            this.$refs.mainList.toggleRowSelection(val)\n        },\n        rowClickFrom (val) {\n            this.$refs.fromList.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        inventoryDetail (val) {\n            this.fromDialogFormVisible = true\n            api.detailsSearch(val.inspectionTaskCode, val.inspectionTaskRecordCode).then(res => {\n                var tmp = res.data\n                tmp.forEach(item => {\n                    if (item.recordMode == 'dt_record_mode_multiple') {\n                        item.normalOption = item.normalOption.split(',')\n                        item.exceptionOption = item.exceptionOption.split(',')\n                        item.defaultVal = item.defaultVal.split(',')\n                    } else if (item.recordMode != 'dt_record_mode_single ') {\n                        item.normalOption = ''\n                        item.exceptionOption = ''\n                    }\n                })\n                this.detailList = tmp\n            })\n        }\n    }\n}\n",null]}