{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/barCodeRules/dialog/dialogAddMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/barCodeRules/dialog/dialogAddMain.vue","mtime":1596610933320},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/bar_code_rules'\nimport dialogAddSub from './dialogAddSub.vue'\nimport AuthoType from '@/components/Select/AuthoType.vue' //权限类型下拉组件\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'addMain',\n    components: { dialogAddSub, AuthoType },\n    data() {\n        return {\n            AddMainlist: {\n                ruleDescribe: '',\n                ruleType: '',\n                arrivalCompany: '',\n                barcodeRuleDetails: [] //所有的内容\n            },\n            barcodeRuleDetails: [], //所有的内容\n            lastBarcodeRuleDetails: [], //打开时的内容\n            selectedBarcodeRuleDetails: [], //选中添加的内容\n            rowId: '',\n            dialogStatus: 0,\n            dialogFormVisible: false,\n            selectRows: [],\n            rules: {\n                ruleDescribe: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    {\n                        max: 100,\n                        message: '颜色名称长度不能超过100',\n                        trigger: 'blur'\n                    }\n                ],\n                ruleType: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                arrivalCompany: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                seq: [{ required: true, message: '不能为空', trigger: 'blur' }]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_rules_type: state => state.dict.dt_rules_type\n        })\n    },\n    mounted() {\n        this.$store.dispatch('dict/getDicData', ['dt_rules_type'])\n    },\n    methods: {\n        //新增\n        addMainConfirm() {\n            this.$refs.AddMainlist.validate(valid => {\n                if (this.checkSeq()) {\n                    if (valid) {\n                        this.$confirm('确认保存吗?', '提示', {\n                            confirmButtonText: '确定',\n                            cancelButtonText: '取消',\n                            type: 'warning'\n                        })\n                            .then(() => {\n                                this.AddMainlist.barcodeRuleDetails = this.barcodeRuleDetails\n                                api.addRules(\n                                    this.AddMainlist,\n                                    this.AddMainlist.ruleType\n                                ).then(() => {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '保存成功'\n                                    })\n                                })\n                                this.$emit('refreshTable')\n                                this.dialogFormVisible = false\n                            })\n                            .catch(() => {\n                                this.$message({\n                                    type: 'info',\n                                    message: '已取消'\n                                })\n                            })\n                    } else {\n                        return false\n                    }\n                }\n            })\n        },\n        //编辑\n        updateMainConfirm() {\n            this.$refs.AddMainlist.validate(valid => {\n                if (this.checkSeq()) {\n                    if (valid) {\n                        this.$confirm('确认保存吗?', '提示', {\n                            confirmButtonText: '确定',\n                            cancelButtonText: '取消',\n                            type: 'warning'\n                        })\n                            .then(() => {\n                                this.AddMainlist.barcodeRuleDetails = this.barcodeRuleDetails\n                                api.updateRules(\n                                    this.rowId,\n                                    this.AddMainlist,\n                                    this.AddMainlist.ruleType\n                                ).then(() => {\n                                    this.$message({\n                                        type: 'success',\n                                        message: '保存成功'\n                                    })\n                                    this.$emit('refreshTable')\n                                    this.dialogFormVisible = false\n                                })\n                            })\n                            .catch(() => {\n                                this.$message({\n                                    type: 'info',\n                                    message: '已取消'\n                                })\n                            })\n                    } else {\n                        return false\n                    }\n                }\n            })\n        },\n        //添加项\n        addSub() {\n            if (this.AddMainlist.ruleType) {\n                this.$refs.addSubDialog.selectedList = this.barcodeRuleDetails\n                this.$refs.addSubDialog.listQuery.ruleType = this.AddMainlist.ruleType\n                this.$refs.addSubDialog.getAlternativeList()\n                this.$refs.addSubDialog.dialogFormVisible = true\n            } else {\n                this.$message.warning('请先选择规则类型！')\n            }\n        },\n        //删除内容某一行\n        deleteContent() {\n            if (this.selectRows) {\n                this.$confirm('确认要删除该数据?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        if (this.selectRows.barcodeRuleId) {\n                            this.lastBarcodeRuleDetails = this.lastBarcodeRuleDetails.filter(\n                                item => {\n                                    return (\n                                        item.rulePrepCode !==\n                                        this.selectRows.rulePrepCode\n                                    )\n                                }\n                            )\n                            this.combineBarcodeRuleDetails()\n                            let rulePrepCode = this.selectRows.rulePrepCode\n                            api.deleteDetail(\n                                this.rowId,\n                                rulePrepCode,\n                                this.selectRows.ruleType\n                            ).then(() => {\n                                this.selectedBarcodeRuleDetails = this.selectedBarcodeRuleDetails.filter(\n                                    item => {\n                                        return (\n                                            item.rulePrepCode !== rulePrepCode\n                                        )\n                                    }\n                                )\n                                this.$message({\n                                    type: 'success',\n                                    message: '删除成功'\n                                })\n                            })\n                        } else {\n                            this.selectedBarcodeRuleDetails = this.selectedBarcodeRuleDetails.filter(\n                                item => {\n                                    return (\n                                        item.rulePrepCode !==\n                                        this.selectRows.rulePrepCode\n                                    )\n                                }\n                            )\n                            this.combineBarcodeRuleDetails()\n                        }\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n            } else {\n                this.$message.warning('请勾选一条记录！')\n                return\n            }\n        },\n        setRulesContent(val) {\n            this.selectedBarcodeRuleDetails = val\n            this.combineBarcodeRuleDetails()\n            this.$refs.addSubDialog.dialogFormVisible = false\n        },\n        addSelectChange(val) {\n            this.selectRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.detailtable.clearSelection()\n                this.$refs.detailtable.toggleRowSelection(\n                    val[val.length - 1],\n                    'selected'\n                )\n            }\n        },\n        mainRowClick(val) {\n            this.selectRows = val\n            this.$refs.detailtable.clearSelection()\n            this.$refs.detailtable.toggleRowSelection(val, 'selected')\n        },\n        //合并已有和已选\n        combineBarcodeRuleDetails() {\n            this.barcodeRuleDetails = []\n            this.lastBarcodeRuleDetails.forEach(item => {\n                this.barcodeRuleDetails.push(item)\n            })\n            this.selectedBarcodeRuleDetails.forEach(item => {\n                this.barcodeRuleDetails.push(item)\n            })\n        },\n        //规则类型变化重新赋值\n        ruleTypeChange() {\n            this.barcodeRuleDetails = []\n        },\n        //检查顺序\n        checkSeq() {\n            let detail = this.barcodeRuleDetails\n            let seqArr = new Array()\n            for (let i = 0; i < detail.length; i++) {\n                if (!detail[i].seq) {\n                    this.$message({\n                        type: 'error',\n                        message: '请填写顺序'\n                    })\n                    return false\n                } else if (\n                    !detail[i].seq.toString().match(/^(0|\\+?[1-9][0-9]*)$/)\n                ) {\n                    this.$message({\n                        type: 'error',\n                        message: '请填写正整数'\n                    })\n                    return false\n                } else {\n                    seqArr.push(parseInt(detail[i].seq))\n                }\n            }\n            let arrf = Array.from(new Set(seqArr))\n\n            if (seqArr.length !== arrf.length) {\n                this.$message({\n                    type: 'error',\n                    message: '顺序不能相同'\n                })\n                return false\n            } else {\n                return true\n            }\n        }\n    }\n}\n",null]}