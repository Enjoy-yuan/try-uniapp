{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/outuser_management/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/outuser_management/index.vue","mtime":1596610933591},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { DICT_CODE} from \"@/utils/constant\"\nimport { authorizationrole,relation } from '@/api/system/user'\nimport { selectrole } from '@/api/system/role'\nimport * as api from '@/api/project/oa/purchase/outuser'\nimport { selectlists } from '@/api/system/user'\nimport * as api1 from '@/api/system/user'\nimport PsdInput from '@/components/PsdInput'\nimport {mapState} from 'vuex'\nimport { getDomainName,getDomainId} from '@/utils/auth'\n\nexport default {\n    name: \"outuser_management\",\n    components: { Pagination ,PsdInput},\n    data () {\n        return {\n            modalnum: null,//模板编号\n            theight: 0,\n            stheight: 0,//右子表高度\n            isSingle: false,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            data1:null,\n            tableKey: 0,\n            DICT_CODE:DICT_CODE,\n            // DT_ORG_FUNCTION:DT_ORG_FUNCTION,\n            checked1:undefined,\n            checked2:undefined,\n            list: [],\n            list1: [],\n            list4:null,\n            flag:false,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            isEdit:false,\n            listunrole:[],\n            listrole:[],\n            treeData:[],\n            activeName2: 'first',\n            listLoading: true,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                userArea:getDomainName().toUpperCase(),\n                Code:getDomainId(),\n                Name:undefined,\n                nouser:undefined\n            },\n            listQuery3: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n            },\n            listQuery1: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                domainScope:undefined\n            },\n            listQuery2: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n            },\n     \n            temp: {\n                domainScope:undefined,\n                domainId:undefined,\n                userName:undefined,\n                realName:undefined,\n                password:undefined,\n                state:1,\n                warehouseCode:undefined,\n                purchaseName:undefined,\n                supplierCode:undefined\n            },\n            dialogFormVisible: false,\n            dialogFormUser: false,\n            gnsqDialogFormVisible:false,\n            dialogStatus: '',\n            rules: {\n                userName: [\n                    { required: true, message: '请输入信息', trigger: 'blur' },\n                    \n                ],\n                realName: [\n                    { required: true, message: '请输入信息', trigger: 'blur' },\n                ],\n            },\n            dialogPvVisible: false,\n            pvData: [],\n            defaultProps: {\n                children: 'children',\n                label: 'organizationName'\n            },\n            contentStyleObj: {\n                height:'',\n            }\n        };\n    },\n    mounted () {\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n        this.$store.dispatch('dict/getDicData',['dt_domainScope_type']);\n        this.getList();\n        this.getList2()\n    },\n    computed:{\n        ...mapState({\n            dt_domainScope_type:state=>state.dict.dt_domainScope_type,\n        })\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() + 20;\n            this.stheight = this.theight -6;\n        },\n        updateVal(val){\n        this.temp.password=val\n        },\n        getList2(){\n          if(this.listQuery.userArea=='EMPLOYEE'){\n             this.isEdit=false\n          }else{\n            this.isEdit=true\n          }\n        },\n        getList() {//查询\n            if(this.listQuery.userArea==\"SUPPLIER\"){\n            this.listQuery.supplierCode=this.listQuery.Code\n            this.listQuery.supplierName=this.listQuery.Name      \n            api.queryRecords(this.listQuery).then(res => {\n            this.list = res.data.list\n            this.list.map(v=>{\n              v.Code=v.supplierCode\n                v.Name=v.supplierName\n              return v\n            })      \n            this.total = res.data.pages.count\n          })\n        }\n\n            if(this.listQuery.userArea==\"EMPLOYEE\"){\n            this.listQuery.supplierCode=this.listQuery.Code\n            this.listQuery.supplierName=this.listQuery.Name      \n            api.queryRecords(this.listQuery).then(res => {\n            this.list = res.data.list\n            this.list.map(v=>{\n              v.Code=v.supplierCode\n                v.Name=v.supplierName\n              return v\n            })\n          \n            this.total = res.data.pages.count\n          })\n        }\n          if(this.listQuery.userArea==\"CUSTOMER\"){\n            this.listQuery.customerCode=this.listQuery.Code\n            this.listQuery.customerName=this.listQuery.Name      \n            api.queryRecords1(this.listQuery).then(res => {\n            this.list = res.data.list\n            this.list.map(v=>{\n              v.Code=v.customerCode\n                v.Name=v.customerName\n              return v\n            })\n          \n            this.total = res.data.pages.count\n          })\n            }\n            \n        },\n        getList1(){\n            this.listQuery3.domainId=this.selectlistRow1.Code\n            selectlists(this.listQuery3).then(response => {\n                    this.list1 = response.data.list\n                    // this.total = response.data.pages.count\n                    setTimeout(() => {\n                    this.listLoading = false\n                    }, 1.5 * 100)\n                })\n          \n        },\n        handleQuery(){\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleQuery1(){\n            this.listQuery1.currentPage = 1\n            this.getList1()\n        },\n        handleCancel(){\n            this.dialogFormVisible = false,\n            this.$refs.psd.psdValue=''\n        },\n        handleCreate(){\n            this.flag = false\n            this.resetTemp()  \n            if(this.selectlistRow1){\n            this.temp.domainId=this.selectlistRow1.Code\n            this.temp.domainScope=this.listQuery.userArea\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            }\n            else{\n            this.$message({\n                title: '警告',\n                message: '请选择一条信息',\n                type: 'warning'\n                })\n        }\n        },\n        create(){\n            this.$refs.temp.validate((valid) => {\n            if (valid) {\n            api1.creat(this.temp).then(() => {\n                this.getList1()\n                this.dialogFormVisible = false\n                this.$notify({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        } else {\n            return false\n        }\n        })\n        },\n\n        handleUpdate(){\n            if(this.selectlistRow && this.selectlistRow.length==1){\n            this.temp = this.selectlistRow[0] // copy obj\n                api1.selectlist(this.temp.userName).then(res => {\n                this.temp=res.data\n                this.flag = true\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n                this.$nextTick(() => {\n                this.$refs['temp'].clearValidate()\n            })\n            })\n            }else{\n                this.$message({\n                        title: '警告',\n                        message: '请选择一条信息',\n                        type: 'warning'\n                    })\n            }\n        },\n\n        update(){\n            this.$refs['temp'].validate((valid) => {\n            if (valid) {\n            api1.updatalist(this.temp.userName,this.temp).then(() => {\n            this.getList1();\n            this.dialogFormVisible = false\n            this.$message({\n                title: '成功',\n                message: '更新成功',\n                type: 'success',\n                duration: 2000\n            })\n            })\n        }\n        })\n        },\n\n        handleDelete() {//删除列表\n            if(this.selectlistRow && this.selectlistRow.length==1){\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                }).then(() => {\n                    let ids=[]\n                    this.selectlistRow.forEach((val,index) => {\n                    ids[index]=val.userName\n                    })\n                    api1.deletelist(ids).then(() => {\n                    this.getList1(),\n                    this.$message({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                    type: 'info',\n                    message: '已取消删除'\n                    });\n                });\n                \n            }else{\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                    })\n            }\n        },\n        handleClose() {\n            this.resetTemp();\n            this.$refs.temp.resetFields();\n        },\n        update1(){\n\n        },\n        selectRow1 (val) {// 获取表格1复选框选中\n            this.selectlistRow1 = val[val.length-1]\n            if (val.length > 1) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val.pop())\n            } \n            this.$refs.tb.setCurrentRow(this.selectlistRow1);\n            if(this.selectlistRow1){\n                this.getList1() \n            }\n        },\n        selectRow2 (val) {  //表一单击行选中方法\n            this.selectlistRow2 = val\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)//单击行绑定点击事件\n                \n        },\n        getListRelation(){//查询关联的数据\n            this.listQuery2.type=1\n            relation(this.selectlistRow[0].userName,this.listQuery2).then(response =>{\n                this.listrole = response.data.list\n                this.total2 = response.data.pages.count\n                })\n        },\n        getListUnelation(){//查询未关联的数据\n            this.listQuery1.type=2\n            this.listQuery1.userName=this.selectlistRow[0].userName\n            relation(this.selectlistRow[0].userName,this.listQuery1).then(response =>{\n                this.listunrole = response.data.list\n                this.total1 = response.data.pages.count\n                })\n        },\n        handleTabClick(tab){//选项卡切换\n            if(tab.name==\"first\"){\n                // this.getListUnelation()\n                this.handsearchsole()\n            }else{\n                this.getListRelation()\n            }\n        \n        },\n        handleFilter() {\n            this.listQuery.page = 1\n            this.listLoading = true\n            //查询组织列表\n            selectlists(this.listQuery).then(response => {\n                this.list = response.data.list\n                this.total = response.data.pages.count\n                setTimeout(() => {\n                this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        resetTemp() {\n        this.temp = {\n            employeeCode: undefined,\n            employeeName:undefined,  \n            organizationId:undefined,\n            state:1,\n            mobile:undefined,\n            email:undefined,\n            officePhone:undefined,\n            birthday:undefined,\n            hireDate:undefined,\n            idNumber:undefined,\n            address:undefined,\n            remarks:undefined,\n            isLog:1,\n            password:undefined\n        }\n        },\n        //角色维护\n        handleUser() {\n            if(this.selectlistRow && this.selectlistRow.length==1){\n                this.dialogFormUser = true\n                this.listQuery1.domainScope=this.selectlistRow[0].domainScope\n                // this.handsearchsole()\n                // this.getListUnelation()  \n                    this.handsearchsole()              \n            }else{\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条用户信息',\n                    type: 'warning'\n                    })\n            }\n        \n        },\n        deleRole(){//删除关联角色\n        let fun='REMOVE'\n            if(this.selectlistRowUser1 && this.selectlistRowUser1.length>0){\n                let roleCodes=[]\n            for(let i=0;i<this.selectlistRowUser1.length;i++){\n                roleCodes[i]=this.selectlistRowUser1[i].roleCode\n            }\n            authorizationrole(this.selectlistRow[0].userName,roleCodes,fun).then(() =>{\n                    this.getListRelation()\n            })\n            this.dialogFormUser = true\n            }else{\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条角色信息',\n                    type: 'warning'\n                    })\n            }\n        },\n        handleCheckChange() {\n            return this.$refs.tree.getCheckedNodes().concat(this.$refs.tree.getHalfCheckedNodes())//获取选中和半选中状态下的数据\n        },\n        handsearchsole(){\n            selectrole(this.listQuery1).then(response => {\n                if(this.activeName2==\"first\"){\n                this.listunrole = response.data.list\n                this.total = response.data.pages.count\n                }else{\n                this.listrole = response.data.list\n                this.total = response.data.pages.count\n                }        \n            })\n        // this.handleUser()\n        },\n        addrole(){//角色授权\n            let fun='SAVE'\n            if(this.selectlistRowUser && this.selectlistRowUser.length>0){\n                let roleCodes=[]\n            for(let i=0;i<this.selectlistRowUser.length;i++){\n                roleCodes[i]=this.selectlistRowUser[i].roleCode\n            }\n            authorizationrole(this.selectlistRow[0].userName,roleCodes,fun).then(() =>{\n                    this.handleUser()\n            })\n            this.dialogFormUser = true\n            }else{\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条角色信息',\n                    type: 'warning'\n                    })\n            }\n            \n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        selectRowUser (val) {\n            this.selectlistRowUser = val\n        },\n        selectRowUser1 (val) {\n            this.selectlistRowUser1 = val\n        },\n        handleNodeClick() {//点击树查询\n            this.treeGetList();\n        }\n    }\n};\n",null]}