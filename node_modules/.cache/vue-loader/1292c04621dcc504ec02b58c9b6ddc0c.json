{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/productionExecution/productionDone/index.vue?vue&type=template&id=38ae491c&scoped=true&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/productionExecution/productionDone/index.vue","mtime":1596610933585},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"app-container\" }, [\n      _c(\"div\", { staticClass: \"filter-container\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"filter-items\" },\n          [\n            _c(\n              \"el-select\",\n              {\n                attrs: { clearable: \"\", placeholder: \"工段\", size: \"small\" },\n                on: { change: _vm.selectOption },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.productionSegment,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"productionSegment\", $$v)\n                  },\n                  expression: \"listQuery.productionSegment\"\n                }\n              },\n              _vm._l(_vm.dt_production_section, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: { label: item.dictItemValue, value: item.dictItemKey }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-select\",\n              {\n                attrs: {\n                  clearable: \"\",\n                  placeholder: \"随工单号\",\n                  size: \"small\"\n                },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.workOrderCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"workOrderCode\", $$v)\n                  },\n                  expression: \"listQuery.workOrderCode\"\n                }\n              },\n              _vm._l(_vm.options, function(item) {\n                return _c(\"el-option\", {\n                  key: item,\n                  attrs: { label: item, value: item }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"filter-item\",\n                staticStyle: { margin: \"0\" },\n                attrs: {\n                  icon: \"el-icon-search\",\n                  size: \"small\",\n                  type: \"primary\"\n                },\n                on: { click: _vm.handleCertain }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"table.certain\")))]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"table-container\" },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"temp\",\n              staticClass: \"small-space\",\n              staticStyle: { \"padding-bottom\": \"5px\" },\n              attrs: {\n                model: _vm.temp,\n                \"label-position\": \"center\",\n                \"label-width\": \"85px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"随工单号\", prop: \"workOrderCode\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"随工单号\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.workOrderCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"workOrderCode\", $$v)\n                      },\n                      expression: \"temp.workOrderCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"产品编码\", prop: \"productCode\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"产品编码\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.productCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"productCode\", $$v)\n                      },\n                      expression: \"temp.productCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"数量\", prop: \"planNum\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"数量\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.planNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"planNum\", $$v)\n                      },\n                      expression: \"temp.planNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"br\"),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"已完成\", prop: \"completeNum\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"已完成\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.completeNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"completeNum\", $$v)\n                      },\n                      expression: \"temp.completeNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"未完成\", prop: \"unCompleteNum\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"未完成\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.unCompleteNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"unCompleteNum\", $$v)\n                      },\n                      expression: \"temp.unCompleteNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"br\"),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"待返修\", prop: \"waitFixNum\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"待返修\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.waitFixNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"waitFixNum\", $$v)\n                      },\n                      expression: \"temp.waitFixNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"返修合格\", prop: \"fixQualifiedNum\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"返修合格\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.fixQualifiedNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"fixQualifiedNum\", $$v)\n                      },\n                      expression: \"temp.fixQualifiedNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"报废数量\", prop: \"scrapNum\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"filter-item\",\n                    attrs: { placeholder: \"报废数量\", size: \"small\" },\n                    model: {\n                      value: _vm.temp.scrapNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"scrapNum\", $$v)\n                      },\n                      expression: \"temp.scrapNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"br\"),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  staticStyle: { margin: \"5px 5px 10px 85px\" },\n                  attrs: {\n                    icon: \"el-icon-check\",\n                    size: \"small\",\n                    type: \"primary\"\n                  },\n                  on: { click: _vm.handleCompletion }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.completion\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  staticStyle: { margin: \"5px 5px 10px 0\" },\n                  attrs: {\n                    icon: \"el-icon-check\",\n                    size: \"small\",\n                    type: \"primary\"\n                  },\n                  on: { click: _vm.handleCompulsoryCompletion }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.compulsoryCompletion\")))]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"hr\", { staticClass: \"hrLineStyle\" }),\n          _vm._v(\" \"),\n          _vm.showPaster\n            ? _c(\n                \"el-table\",\n                {\n                  key: _vm.tableKey[0],\n                  ref: \"mainList\",\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.listPaster,\n                    \"default-sort\": { prop: \"date\", order: \"descending\" },\n                    height: _vm.theight,\n                    \"summary-method\": _vm.getSummaries,\n                    border: \"\",\n                    \"cell-class-name\": \"table-cell\",\n                    fit: \"\",\n                    \"header-cell-class-name\": \"header-cell\",\n                    \"highlight-current-row\": \"\",\n                    \"show-summary\": \"\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      fixed: \"\",\n                      label: \"序号\",\n                      prop: \"rowId\",\n                      width: \"50\"\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\"span\", [_vm._v(_vm._s(scope.$index + 1))])\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      4178052834\n                    )\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"PCB上板\",\n                      prop: \"pcb_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"锡膏印刷B\",\n                      prop: \"solderPastePrint_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"锡膏监测B\",\n                      prop: \"solderPasteDetection_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"贴片B\",\n                      prop: \"paster_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"回流焊B\",\n                      prop: \"reflowSoldering_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"光学监测B\",\n                      prop: \"opticsDetection_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"下板B\",\n                      prop: \"downBoard_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"PCB上板A\",\n                      prop: \"pcb_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"锡膏印刷A\",\n                      prop: \"solderPastePrint_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"锡膏监测A\",\n                      prop: \"solderPasteDetection_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"贴片A\",\n                      prop: \"paster_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"回流焊A\",\n                      prop: \"reflowSoldering_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"光学监测A\",\n                      prop: \"opticsDetection_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"下板A\",\n                      prop: \"downBoard_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showPaster\n            ? _c(\"pagination\", {\n                attrs: {\n                  limit: _vm.listQuery.pageSize,\n                  page: _vm.listQuery.currentPage,\n                  total: _vm.total\n                },\n                on: {\n                  \"update:limit\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                  },\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                  },\n                  pagination: _vm.getList\n                }\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showDepositing\n            ? _c(\n                \"el-table\",\n                {\n                  key: _vm.tableKey[1],\n                  ref: \"mainList\",\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.listDepositing,\n                    \"default-sort\": { prop: \"date\", order: \"descending\" },\n                    height: _vm.theight,\n                    \"summary-method\": _vm.getSummaries,\n                    border: \"\",\n                    \"cell-class-name\": \"table-cell\",\n                    fit: \"\",\n                    \"header-cell-class-name\": \"header-cell\",\n                    \"highlight-current-row\": \"\",\n                    \"show-summary\": \"\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      fixed: \"\",\n                      label: \"序号\",\n                      prop: \"rowId\",\n                      width: \"50\"\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\"span\", [_vm._v(_vm._s(scope.$index + 1))])\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      4178052834\n                    )\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"A面涂覆\",\n                      prop: \"depositing_a\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"涂覆监测\",\n                      prop: \"depositingDetection\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"分板\",\n                      prop: \"divideBoard\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"组件测量\",\n                      prop: \"moduleMeasure\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"人工插件\",\n                      prop: \"labourPlugIn\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"波峰焊\",\n                      prop: \"waveSoldering\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"焊点检测\",\n                      prop: \"weldingSpotDetection\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"B面涂覆\",\n                      prop: \"depositing_b\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showDepositing\n            ? _c(\"pagination\", {\n                attrs: {\n                  limit: _vm.listQuery.pageSize,\n                  page: _vm.listQuery.currentPage,\n                  total: _vm.total1\n                },\n                on: {\n                  \"update:limit\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                  },\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                  },\n                  pagination: _vm.getList\n                }\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showAssemble\n            ? _c(\n                \"el-table\",\n                {\n                  key: _vm.tableKey[2],\n                  ref: \"mainList\",\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.listAssemble,\n                    \"default-sort\": { prop: \"date\", order: \"descending\" },\n                    height: _vm.theight,\n                    \"summary-method\": _vm.getSummaries,\n                    border: \"\",\n                    \"cell-class-name\": \"table-cell\",\n                    fit: \"\",\n                    \"header-cell-class-name\": \"header-cell\",\n                    \"highlight-current-row\": \"\",\n                    \"show-summary\": \"\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      fixed: \"\",\n                      label: \"序号\",\n                      prop: \"rowId\",\n                      width: \"50\"\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\"span\", [_vm._v(_vm._s(scope.$index + 1))])\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      4178052834\n                    )\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"散热器涂导热脂\",\n                      prop: \"radiatorDepositingTcg\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"弹片铆压\",\n                      prop: \"depositingRiveting\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"外壳铆压\",\n                      prop: \"shellRiveting\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"功能监测\",\n                      prop: \"functionDetection\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"视觉监测\",\n                      prop: \"optesthesiaDetection\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showAssemble\n            ? _c(\"pagination\", {\n                attrs: {\n                  limit: _vm.listQuery.pageSize,\n                  page: _vm.listQuery.currentPage,\n                  total: _vm.total2\n                },\n                on: {\n                  \"update:limit\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                  },\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                  },\n                  pagination: _vm.getList\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}