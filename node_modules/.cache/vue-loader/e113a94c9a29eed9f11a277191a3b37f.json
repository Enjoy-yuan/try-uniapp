{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/priceNotification/priceConfirmList/dialog/addMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/priceNotification/priceConfirmList/dialog/addMain.vue","mtime":1596610933712},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/priceManage/priceConfirmList\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\nimport { mapState } from \"vuex\"\nimport dialogWlxzbyprice from '@/components/Dialog/dialogWlxzbyprice.vue'//物料选择\nimport throttle from 'lodash/throttle'\n\nexport default {\n    components: { caiGou, dialogGysxz, dialogWlxzbyprice },\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            dialogVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            list: [],\n            temp: {\n                documentType: 'PC60'\n            },\n            rules: {\n                orgCode: [{ required: true, message: '组织编码不能为空', trigger: 'blur' }],\n                documentType: [{ required: true, message: '类型不能为空', trigger: 'blur' }],\n                years: [{ required: true, message: '年度不能为空', trigger: 'blur' }],\n                validTimeStart: [{ required: true, message: '价格生效时间不能为空', trigger: 'blur' }],\n                validTimeEnd: [{ required: true, message: '价格失效时间不能为空', trigger: 'blur' }],\n                supplierCode: [{ required: true, message: '供应商编码不能为空', trigger: 'blur' }],\n                settlementMethod: [{ required: true, message: '结算方式不能为空', trigger: 'blur' }],\n                handleMethod: [{ required: true, message: '处理方式不能为空', trigger: 'blur' }],\n                taxRate: [{ required: true, message: '税率不能为空', trigger: 'blur' }],\n                requireReplyDate: [{ required: true, message: '要求回复时间不能为空', trigger: 'blur' }],\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pc6: state => state.dict.dt_srm_pc6,\n            dt_srm_pdt: state => state.dict.dt_srm_pdt,\n            dt_srm_pc7: state => state.dict.dt_srm_pc7,\n            dt_srm_pcc: state => state.dict.dt_srm_pcc,\n            dt_srm_pcb: state => state.dict.dt_srm_pcb,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pc6\", 'dt_srm_pdt', 'dt_srm_pc7', 'dt_srm_pcc'])\n    },\n    methods: {\n        //获取采购组织名称\n        selectName (val) {\n            this.temp.orgName = val\n        },\n        handleClose () {\n            this.$refs.dataForm.resetFields()\n        },\n        initData () {\n            this.temp = {\n                confirmationNo: undefined,\n                orgCode: undefined,\n                documentType: 'PC60',\n                years: undefined,\n                validTimeStart: undefined,\n                validTimeEnd: undefined,\n                supplierCode: undefined,\n                supplierName: undefined,\n                settlementMethod: undefined,\n                handleMethod: undefined,\n                taxRate: undefined,\n                requireReplyDate: undefined,\n                remark: undefined\n            }\n            this.list = []\n        },\n        //供应商\n        showGys () {\n            this.$refs.refGys.dialogVisible = true\n            this.$refs.refGys.getList()\n        },\n        //供应商确定\n        handleGysClick (val) {\n            this.$set(this.temp, 'supplierCode', val[0].supplierCode)\n            this.$set(this.temp, 'supplierName', val[0].supplierName)\n        },\n        getList (val) {\n            api.queryRecordsItems(val.confirmationNo).then(res => {\n                let options = [this.dt_srm_pcb]\n                res.data = this.$myFun.codeToName(res.data, options, ['dataSource'])\n                this.list = res.data\n            })\n        },\n        handleCreate () {\n            this.$nextTick(() => {\n                this.$refs.wlxz.listSelected = [...this.list]\n                this.$refs.wlxz.getList()\n            })\n            this.$refs.wlxz.dialogVisible = true\n        },\n        //物料选择确定\n        confirmWlxz (val) {\n            console.log(val)\n            let newChoice = []\n            val.forEach(item => {\n                let returnable = false\n                this.list.forEach(itemd => {\n                    if (item.sourceNo === itemd.sourceNo) {\n                        returnable = true\n                    }\n                })\n                if (returnable) {\n                    return\n                } else {\n                    newChoice.push(item)\n                }\n            })\n            newChoice.forEach(val => {\n                val.priceUnit = 1\n                if (val.dataSource == 'PCB0') {\n                    val.requirePrice = 0\n                } else if (val.dataSource == 'PCB2') {\n                    val.requirePrice = val.quotePrice\n                } else if (val.dataSource == 'PCB1') {\n                    val.requirePrice = val.actuarialPrice\n                }\n                this.list.push(JSON.parse(JSON.stringify(val)))\n                this.$refs.wlxz.dialogVisible = false\n            })\n\n        },\n        handleDelete (index) {\n            this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                this.list.splice(index, 1)\n                this.$message({\n                    type: \"success\",\n                    message: \"删除成功\"\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n        },\n        isRepeat (arr) {\n            var hash = {}\n            for (let i in arr) {\n                if (\n                    hash[arr[i].materielCode]\n                ) {\n                    return true\n                } else {\n                    hash[arr[i].materielCode] = true\n                }\n            }\n            return false\n        },\n        createData: throttle(function () {\n            this.$refs.dataForm.validate(valid => {\n                if (valid) {\n                    let status = this.isRepeat(this.list)\n                    console.log(status, 'status')\n                    if (status) {\n                        this.$message({\n                            title: \"警告\",\n                            message: \"物料编码不能重复\",\n                            type: \"warning\"\n                        })\n                    } else {\n                        let dto = {\n                            orgCode: this.temp.orgCode,\n                            orgName: this.temp.orgName,\n                            remark: this.temp.remark,\n                            requireReplyDate: this.temp.requireReplyDate,\n                            settlementMethod: this.temp.settlementMethod,\n                            supplierCode: this.temp.supplierCode,\n                            supplierName: this.temp.supplierName,\n                            supplierReplyTime: this.temp.supplierReplyTime,\n                            taxRate: this.temp.taxRate,\n                            validTimeEnd: this.temp.validTimeEnd,\n                            validTimeStart: this.temp.validTimeStart,\n                            years: this.temp.years,\n                            documentType: this.temp.documentType,\n                            handleMethod: this.temp.handleMethod,\n                            newPriceConfirmationItemDTOS: this.list\n                        }\n                        api.createRecords(dto).then(() => {\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.dialogVisible = false\n                            this.$emit('refresh')\n                        })\n                    }\n\n                } else {\n                    return false\n                }\n            })\n        }, 2000,\n            {\n                leading: true,\n                trailing: false\n            }),\n        updateData: throttle(function () {\n            let status = this.isRepeat(this.list)\n            if (status) {\n                this.$message({\n                    title: \"警告\",\n                    message: \"物料编码不能重复\",\n                    type: \"warning\"\n                })\n            } else {\n                let dto = {\n                    orgCode: this.temp.orgCode,\n                    orgName: this.temp.orgName,\n                    remark: this.temp.remark,\n                    requireReplyDate: this.temp.requireReplyDate,\n                    settlementMethod: this.temp.settlementMethod,\n                    supplierCode: this.temp.supplierCode,\n                    supplierName: this.temp.supplierName,\n                    supplierReplyTime: this.temp.supplierReplyTime,\n                    taxRate: this.temp.taxRate,\n                    validTimeEnd: this.temp.validTimeEnd,\n                    validTimeStart: this.temp.validTimeStart,\n                    years: this.temp.years,\n                    documentType: this.temp.documentType,\n                    handleMethod: this.temp.handleMethod,\n                    newPriceConfirmationItemDTOS: this.list\n                }\n                api.updateRecords(this.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '编辑成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisible = false\n                    this.$emit('refresh')\n                })\n            }\n        }, 2000,\n            {\n                leading: true,\n                trailing: false\n            })\n    }\n}\n",null]}