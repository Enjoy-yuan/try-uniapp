{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/contractTemplate/templateMaintenance/actuarialList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/contractTemplate/templateMaintenance/actuarialList.vue","mtime":1596610933616},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/contractManage/templateMaintenance\"\nimport * as apitree from \"@/api/project/srm/dataBase/dictMaintenance\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport Pagination from \"@/components/Pagination\"\nimport contentA from './content/contentA'\nimport contentB from './content/contentB'\nimport contentC from './content/contentC'\nimport addItem from './content/addItem'\nimport { mapState } from \"vuex\"\nexport default {\n    name: \"paymentMethod\",\n    components: { Pagination, caiGou, contentA, contentB, contentC, addItem },\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            total: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 15\n            },\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            tableKey: 0, //表格索引\n            contractCode: '',//合同模板号\n            contractType: '',//合同类型\n            orgCode: '',//采购组织\n            dialogVisible: false,\n            dialogStatus: '',\n            show: false,\n            tabName: 'contentA',\n            temp: {\n                versionNo: undefined,\n                rowId: undefined,\n                contractTemplateItemDTOS: [\n\n                ]\n            },\n            dialogVisibleItem: false,\n            dialogVisiblezf: false,\n            dialogVisiblesx: false,\n            dialogVisiblesc: false,\n            dialogVisiblefz: false,\n            deleteId: null,//删除id\n            status: '',//控制三个页签的新增编辑\n            rowId: null\n        }\n    },\n    created () { },\n\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pdv: state => state.dict.dt_srm_pdv,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\", 'dt_srm_pdv'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    watch: {\n        'dt_srm_pdv': function () {\n            this.getList()\n        }\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        //获取采购组织名称\n        selectName (val) {\n            this.temp.purchaseOrgName = val\n        },\n        //页签切换点击事件\n        handleClick (tab) {\n            if (tab.name === 'contentC') {\n                this.$nextTick(function () {\n                    this.$refs.contentC.getList()\n                })\n            }\n        },\n        //主表新增\n        createA (val) {\n            this.status = val\n            setTimeout(() => {\n                if (this.status != 'contentC') {\n                    this.$refs.addItem.show = false\n                } else {\n                    this.$refs.addItem.show = true\n                }\n            }, 1.5 * 100)\n            if (this.temp.versionNo === undefined) {\n                if (this.temp.years && this.temp.contractType && this.temp.purchaseOrg) {\n                    let dto = {\n                        parentCode: 'dt_srm_qtsx',\n                        currentPage: 1,\n                        pageSize: 15\n                    }\n                    apitree.queryRecords(dto).then(res => {\n                        let dataList = res.data.list.map(v => {\n                            v.content = \"\"\n                            let dto = {\n                                content: v.content,\n                                project: v.name,\n                                orderNo: v.weight,\n                                itemType: 'other'\n                            }\n                            return dto\n                        })\n                        this.temp.contractTemplateItemDTOS = dataList\n                        api.addRecord(this.temp).then(res => {\n                            this.temp = res.data\n                            this.$message({\n                                title: '成功',\n                                message: '主信息新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.$nextTick(function () {\n                                this.$refs.contentC.getList()\n                            })\n                            this.getList()\n                        })\n                    })\n                    setTimeout(() => {\n                        this.$refs.addItem.resetTemp()\n                    }, 1.5 * 100)\n                    this.dialogStatus = 'create'\n                    this.dialogVisibleItem = true\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择年度,合同类型,采购组织',\n                        type: 'warning',\n                        duration: 2000\n                    })\n                }\n            } else if (this.temp.versionNo !== undefined) {\n                setTimeout(() => {\n                    this.$refs.addItem.resetTemp()\n                }, 1.5 * 100)\n                this.dialogStatus = 'create'\n                this.dialogVisibleItem = true\n            }\n\n        },\n        //三页签明细编辑\n        updateA (val, row) {\n            this.status = val\n            this.dialogStatus = 'update'\n            this.dialogVisibleItem = true\n            setTimeout(() => {\n                if (this.status != 'contentC') {\n                    this.$refs.addItem.show = false\n                } else {\n                    this.$refs.addItem.show = true\n                }\n                this.$refs.addItem.temp = { ...row }\n                // this.$set(this.$refs.addItem.temp, 'orderNo', row.orderNo)\n                // this.$set(this.$refs.addItem.temp, 'content', row.content)\n                // this.$set(this.$refs.addItem.temp, 'rowId', row.rowId)\n            }, 1.5 * 100)\n        },\n        //三页签明细编辑确定按钮\n        updateDataItem () {\n            if (this.status === 'contentA') {\n                let dto = {\n                    content: this.removeTAG(this.$refs.addItem.temp.content),\n                    orderNo: this.$refs.addItem.temp.orderNo,\n                    itemType: 'contract',\n                    parentId: this.temp.rowId,\n                    project: ''\n                }\n                api.updateRecordItem(this.$refs.addItem.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '编辑成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisibleItem = false\n                    this.$refs.contentA.getList()\n                })\n            } else if (this.status === 'contentB') {\n                let dto = {\n                    content: this.removeTAG(this.$refs.addItem.temp.content),\n                    orderNo: this.$refs.addItem.temp.orderNo,\n                    itemType: 'nomal',\n                    parentId: this.temp.rowId,\n                    project: ''\n                }\n                api.updateRecordItem(this.$refs.addItem.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '编辑成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisibleItem = false\n                    this.$refs.contentB.getList()\n                })\n            } else if (this.status === 'contentC') {\n                let dto = {\n                    content: this.removeTAG(this.$refs.addItem.temp.content),\n                    orderNo: this.$refs.addItem.temp.orderNo,\n                    itemType: 'other',\n                    parentId: this.temp.rowId,\n                    project: this.$refs.addItem.temp.project\n                }\n                api.updateRecordItem(this.$refs.addItem.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '编辑成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisibleItem = false\n                    this.$refs.contentC.getList()\n                })\n            }\n        },\n        //过滤标签\n        removeTAG (str) {\n            return str.replace(/<[^>]+>/g, \"\")\n        },\n        //三页签明细新增确定按钮单击事件\n        createDataItem () {\n            if (this.status === 'contentA') {\n                let dto = {\n                    content: this.removeTAG(this.$refs.addItem.temp.content),\n                    orderNo: this.$refs.addItem.temp.orderNo,\n                    itemType: 'contract',\n                    project: '',\n                    parentId: 1\n                }\n                api.addRecordItem(this.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisibleItem = false\n                    this.$refs.contentA.getList()\n                })\n            } else if (this.status === 'contentB') {\n                let dto = {\n                    content: this.removeTAG(this.$refs.addItem.temp.content),\n                    orderNo: this.$refs.addItem.temp.orderNo,\n                    itemType: 'nomal',\n                    project: '',\n                    parentId: 1\n                }\n                api.addRecordItem(this.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisibleItem = false\n                    this.$refs.contentB.getList()\n                })\n            } else if (this.status === 'contentC') {\n                let dto = {\n                    content: this.removeTAG(this.$refs.addItem.temp.content),\n                    orderNo: this.$refs.addItem.temp.orderNo,\n                    itemType: 'other',\n                    project: this.$refs.addItem.temp.project,\n                    parentId: 1\n                }\n                api.addRecordItem(this.temp.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisibleItem = false\n                    this.$refs.contentC.getList()\n                })\n            }\n        },\n        refresh () {\n            this.getList()\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_p0, this.dt_srm_pdv]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state', 'contractType'])\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.resetTemp()\n            this.$nextTick(function () {\n                this.$refs.contentA.list = []\n                this.$refs.contentB.list = []\n                this.$refs.contentC.list = []\n            })\n            this.dialogStatus = 'create'\n            // this.show = false\n            this.dialogVisible = true\n        },\n        //编辑按钮单击事件方法\n        handleUpdate (index, val) {\n            this.dialogStatus = 'update'\n            // this.show = true\n            this.temp = { ...val }\n            this.$nextTick(function () {\n                this.$refs.contentA.getList()\n                this.$refs.contentB.getList()\n                this.$refs.contentC.getList()\n            })\n            this.dialogVisible = true\n        },\n        createData () {\n            let dto = {\n                parentCode: 'dt_srm_qtsx',\n                currentPage: 1,\n                pageSize: 15\n            }\n            apitree.queryRecords(dto).then(res => {\n                let dataList = res.data.list.map(v => {\n                    v.content = \"\"\n                    let dto = {\n                        content: v.content,\n                        project: v.name,\n                        orderNo: v.weight,\n                        itemType: 'other'\n                    }\n                    return dto\n                })\n                this.temp.contractTemplateItemDTOS = dataList\n                api.addRecord(this.temp).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisible = false\n                    this.getList()\n                })\n            })\n        },\n        updateData () {\n            api.updateRecord(this.temp.rowId, this.temp).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '编辑成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.dialogVisible = false\n                this.getList()\n            })\n        },\n        //删除按钮单击事件方法\n        handleDelete (index, val) {\n            console.log(index, val)\n            this.orgCode = val.purchaseOrgName\n            this.contractCode = val.versionNo\n            this.deleteId = val.rowId\n            this.dialogVisiblesc = true\n        },\n        //删除按钮确定事件\n        deleteData () {\n            api.deleteRecord(this.deleteId).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '删除成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.dialogVisiblesc = false\n                this.getList()\n            })\n        },\n        //作废按钮单击事件\n        handeCancel (index, val) {\n            this.dialogVisiblezf = true\n            this.contractType = val.contractTypeCN\n            this.orgCode = val.purchaseOrgName\n            this.contractCode = val.versionNo\n            this.rowId = val.rowId\n        },\n        //作废弹框确定按钮单击事件\n        cancel () {\n            let dto = {\n                method: 'invalid'\n            }\n            api.updateEffect(this.rowId, dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '废除成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getList()\n                this.dialogVisiblezf = false\n            })\n        },\n        //生效按钮单击事件\n        handleEffect (index, val) {\n            this.orgCode = val.purchaseOrgName\n            this.contractCode = val.versionNo\n            this.rowId = val.rowId\n            this.dialogVisiblesx = true\n        },\n        //生效弹框确定按钮单击事件\n        Effect () {\n            let dto = {\n                method: 'publish'\n            }\n            api.updateEffect(this.rowId, dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '发布成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getList()\n                this.dialogVisiblesx = false\n            })\n        },\n        //预览按钮单击事件\n        handlePreview (index, val) {\n            this.$emit('setState', 'preview', val)\n        },\n        //复制按钮单击事件\n        handleCopy () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state === 'P003') {\n                    this.orgCode = this.selectlistRow.purchaseOrgName\n                    this.contractCode = this.selectlistRow.versionNo\n                    this.dialogVisiblefz = true\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只有发布状态才可复制',\n                        type: 'warning',\n                        duration: 2000\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                    duration: 2000\n                })\n            }\n        },\n        //复制弹框确定按钮单击事件\n        confirmCopy () {\n            api.addRecordCopy(this.selectlistRow.rowId).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '复制成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getList()\n                this.dialogVisiblefz = false\n            })\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)\n        },\n        resetTemp () {\n            this.temp = {\n                versionNo: undefined,\n                years: undefined,\n                contractType: undefined,\n                purchaseOrg: undefined,\n                remark: undefined\n            }\n        }\n    }\n};\n",null]}