{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/batchAdding.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/batchAdding.vue","mtime":1599136050781},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/srm/contractManage/evaluationFormat'\n// import { queryRecords } from '@/api/project/srm/dataBase/dictMaintenance'\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport { mapState } from \"vuex\"\n\nimport setModel from '../dialog/setModel'//下拉组件\n\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\n// import evaluatePlan from '@/components/Dialog/evaluatePlan.vue'//主数据物料选择\nexport default {\n    components: { setModel, caiGou, dialogGysxz },\n    data () {\n        return {\n            Edit: false,\n            status: null,\n            selectStatus: false,\n            type: null,\n            DICT_CODE: DICT_CODE,\n            temp: {\n                rowId: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                evaluationType: undefined,\n                evaluationClassification: undefined,\n                evaluationPlan: undefined,\n                evaluationStage: undefined,\n                evaluationDate: undefined,\n                remark: undefined\n            },\n            list: [],\n            listSub: [],\n            rules: {\n                orgCode: [{ required: true, message: '组织编码不能为空', trigger: 'blur' }],\n                evaluationType: [{ required: true, message: '评价类型不能为空', trigger: 'blur' }],\n                evaluationClassification: [{ required: true, message: '评价类别不能为空', trigger: 'blur' }],\n                evaluationPlan: [{ required: true, message: '评价计划不能为空', trigger: 'blur' }],\n                evaluationStage: [{ required: true, message: '评价阶段不能为空', trigger: 'blur' }],\n                evaluationTime: [{ required: true, message: '评价日期不能为空', trigger: 'blur' }],\n            },\n            // 计划号列表\n            planData: [],\n            dialogPlanVisible: false,\n            selectedrow: null\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pak: state => state.dict.dt_srm_pak,  // 评价类型\n            dt_srm_pb1: state => state.dict.dt_srm_pb1,  // 评价分类\n            dt_srm_pb2: state => state.dict.dt_srm_pb2,   // 评价计划(类别)\n            dt_srm_pb3: state => state.dict.dt_srm_pb3,   // 评价阶段\n            dt_srm_pb4: state => state.dict.dt_srm_pb4,   // 评价项 \n        })\n    },\n    created () {\n        this.$store.dispatch(\"dict/getDicData\", ['dt_srm_pak', 'dt_srm_pb1', 'dt_srm_pb2', 'dt_srm_pb3', 'dt_srm_pb4'])\n    },\n    watch: {\n        // 根据采购组织获取评价计划数据\n        'temp.orgCode' (val) {\n            if (!val) {\n                this.temp.evaluationPlan = undefined\n                this.planData = []\n            } else {\n                this.getPlanNoData(val)\n            }\n        },\n    },\n    methods: {\n        // 初始化表单\n        initForm () {\n            this.temp = {\n                rowId: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                evaluationType: undefined,\n                evaluationClassification: undefined,\n                evaluationPlan: undefined,\n                evaluationStage: undefined,\n                evaluationTime: undefined,\n                remark: undefined\n            }\n            this.$refs['dataForm'].resetFields()\n            this.$refs['dataForm'].clearValidate()\n            this.list = []\n            this.listSub = []\n        },\n        //获取组织编码名称\n        selectName (val) {\n            this.temp.orgName = val\n        },\n        // 根据采购组织获取评价计划数据\n        getPlanNoData (val) {\n            if (val) {\n                let dto = {\n                    currentPage: 1,\n                    pageSize: 15,\n                    orgCode: val\n                }\n                api.getPlanNo(dto).then((res) => {\n                    // console.log(res)\n                    res.data.list.forEach((item) => {\n                        let obj = {\n                            evaluationPlanNo: item.evaluationPlanNo,\n                            evaluationStage: item.evaluationStage\n                        }\n                        this.planData.push(obj)\n                    })\n                    this.planData = this.$myFun.srmCodeToName(this.planData, [this.dt_srm_pb3], ['evaluationStage'])\n                })\n            }\n        },\n        showPJJH () {\n            if (!this.temp.orgCode) {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择采购组织！'\n                })\n            } else {\n                this.dialogPlanVisible = true\n            }\n        },\n        // 评价计划确定\n        handlePJJH () {\n            // console.log(this.selectedrow)\n            if (!this.selectedrow) {\n                this.$message({\n                    type: 'warning',\n                    message: '请选择一条或者几条！'\n                })\n            } else {\n                this.dialogPlanVisible = false\n                this.temp.evaluationPlan = this.selectedrow.evaluationPlanNo\n                this.temp.evaluationStage = this.selectedrow.evaluationStage\n            }\n        },\n        //批量新增\n        handleCreate () {\n            this.$refs.refGys.initSelect()\n            this.$refs.refGys.dialogVisible = true\n            this.$refs.refGys.getList()\n        },\n        //新增\n        // handleAdd () {\n        //     this.$refs.addMainSub.dialogVisible = true\n        // },\n        //供应商确定\n        handleGysClick (val) {\n            // this.$set(this.temp, 'supplierCode', val[0].supplierCode)\n            // this.$set(this.temp, 'supplierName', val[0].supplierName)\n            // console.log(val)\n\n            this.list = val\n            this.list.forEach((item, index) => {\n                this.$set(item, 'num1', index + 1)\n            })\n        },\n        //批量设置评价模型\n        handleSetmodel () {\n            this.$refs.setModel.dialogVisible = true\n            this.$refs.setModel.getList()\n            // this.$refs.setModel.$refs.tb.clearSelection()\n        },\n        handleConfirm (val) {\n            if (this.selectStatus == true) {\n                this.listSub.push(JSON.parse(JSON.stringify(val)))\n            } else {\n                this.listSub = val\n            }\n        },\n        // 模型设置确定\n        modelList (selectedRow) {\n            // console.log(selectedRow)\n            this.$nextTick(() => {\n                selectedRow.forEach((item, index) => {\n                    item.num2 = index + 1\n                })\n                this.listSub = selectedRow\n            })\n        },\n        handleClose () {\n            this.$emit('changeState', 'manage')\n        },\n        //保存按钮单击事件\n        handleSave () {\n            this.$refs.dataForm.validate(valid => {\n                if (valid) {\n                    let dto = {\n                        orgCode: this.temp.orgCode,\n                        orgName: this.temp.orgName,\n                        evaluationType: this.temp.evaluationType,\n                        evaluationClassification: this.temp.evaluationClassification,\n                        evaluationPlanNo: this.temp.evaluationPlan,\n                        evaluationStage: this.temp.evaluationStage,\n                        evaluationTime: this.temp.evaluationTime,\n                        remark: this.temp.remark,\n                        supplierInfoDTOS: this.list,\n                        evaluationModelInfoDTOS: this.listSub\n                    }\n                    console.log(dto)\n                    console.log(JSON.stringify(dto))\n                    api.batchAddRecord(dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '保存成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.$emit('changeState', 'manage')\n                        this.$emit('refresh')\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        // 表内修改\n        // handleUpdate (index, val) {\n        //     this.$refs.search.dialogStatus = 'update'\n        //     this.$refs.search.dialogVisible = true\n        //     this.$refs.search.temp = { ...val }\n        // },\n        //表格操作删除\n        // handleDelete (index, row) {\n        //     console.log('删除', index, row)\n        //     this.$confirm('确认要删除该数据项吗?', '提示', {\n        //         confirmButtonText: '确定',\n        //         cancelButtonText: '取消',\n        //         type: 'warning'\n        //     }).then(() => {\n\n        //         this.list = this.list.filter(item => {\n        //             let isD = true\n        //             if (row.rowId === item.rowId) {\n        //                 isD = false\n        //             }\n        //             return isD\n        //         })\n        //         this.$message({\n        //             type: 'success',\n        //             message: '删除成功'\n        //         })\n        //     }).catch(() => {\n        //         this.$message({\n        //             type: 'info',\n        //             message: '已取消'\n        //         })\n        //     })\n        // },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectedrow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbPlan.clearSelection() //清除其他行的选中\n                this.$refs.tbPlan.toggleRowSelection(val.pop(), 'selected')\n            }\n            this.$refs.tbPlan.setCurrentRow(this.selectedrow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.selectedrow = val\n            this.$refs.tbPlan.clearSelection()\n            this.$refs.tbPlan.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        handleDeleteModel (index, row) {\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.listSub = this.listSub.filter(item => {\n                    let isD = true\n                    if (row.dictItemKey === item.dictItemKey) {\n                        isD = false\n                    }\n                    return isD\n                })\n                this.$message({\n                    type: 'success',\n                    message: '删除成功'\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        }\n    }\n}\n",null]}