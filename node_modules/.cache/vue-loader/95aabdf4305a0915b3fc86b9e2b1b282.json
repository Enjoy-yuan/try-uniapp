{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/components/Select/tabSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/components/Select/tabSelect.vue","mtime":1600927611114},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination' // 分页组件\nimport * as roleapi from '@/api/system/role'\nimport * as personapi from '@/api/system/employees'\nexport default {\n    components: { Pagination },\n    //是否多选，名称，是否必须选择\n    props: ['unMutiple', 'isRequired', 'title', 'type', 'identity', 'selectIndex'],\n    data () {\n        return {\n            // selectIndex选择框的索引\n            // identity: null,//选项唯一标识\n            // type: null,//选择的内容\n            // isRequired: false,//是否为必选项\n            initSelected: null,//初始选中值\n            listAll: null,//备选项\n            listSelected: [],//已选项\n            listSub: null,//备选项子表\n            dialogVisible: false,\n            totalAll: 0,//总条数\n            totalSelected: 0,//选中的条数 暂未使用\n            activeName: 'first',//tab激活内容\n            tableKey: [0, 1, 2],//表格索引\n            selectRowData: null,\n            listQueryAll: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },//备选项查询条件\n            mainTitle: {\n                //预设分组，暂用角色代替\n                org: [\n                    { width: null, align: 'left', label: '分组编号', prop: 'roleCode' },\n                    { width: null, align: 'left', label: '分组名称', prop: 'roleName' },\n                    { width: null, align: 'left', label: '分组类型', prop: 'roleType' },\n                ],\n                personByGroup: [\n                    { width: null, align: 'left', label: '用户号', prop: 'employeeCode' },\n                    { width: null, align: 'left', label: '用户名', prop: 'employeeName' },\n                    { width: null, align: 'left', label: '分组名', prop: 'organizationId' }\n                ]\n            }//备选项主表头数据\n\n        }\n    },\n    mounted () {//创建时加载备选项\n        this.getList()\n    },\n    methods: {\n        //初始化选中内容\n        initSelect (val) {\n            this.listAll = null\n            this.listSelected = null\n            this.listSelected = val\n            this.getList()\n        },\n        //选中某一行\n        checked (i) {\n            this.$refs.tbselect.toggleRowSelection(this.listAll[i], true)\n        },\n        handleFilter1 () {//查询备选项\n            this.getList()\n        },\n        getList () {//备选项查询\n            switch (this.type) {\n                case 'org': {\n                    roleapi.queryRecords(this.listQueryAll).then(res => {\n                        this.listAll = res.data.list\n                        this.totalAll = res.data.pages.count\n                    })\n                    break\n                }\n                case 'personByGroup': {\n                    personapi.selectlists(this.listQueryAll).then(res => {\n                        this.listAll = res.data.list\n                        this.totalAll = res.data.pages.count\n                    })\n                    break\n                }\n            }\n\n            if (this.listSelected) {\n                this.listSelected.forEach(items => {\n                    this.listAll.forEach((item, index) => {\n                        if (item[this.identity] && items[this.identity]) {\n                            if (item[this.identity] === items[this.identity]) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        }\n                    })\n                })\n            }\n        },\n        // getList2 () {//已选项查询\n        //     this.listSelected = this.selectRowData\n        // },\n        selectChange (val) {\n            if (this.unMutiple) {\n                this.selectOneRow(val)\n            } else {\n                this.selectRows(val)\n            }\n        },\n        selectRows (val) {//备选项选中行\n            this.selectRowData = val\n            this.listSelected = this.selectRowData\n        },\n        selectOneRow (val) {\n            let arr = []\n            arr.push(val[val.length - 1])\n            this.selectRowData = arr\n\n            if (val.length > 1) {\n                this.$refs.tbselect.clearSelection()\n                this.$refs.tbselect.toggleRowSelection(val[val.length - 1], 'selected')\n            }\n            this.listSelected = this.selectRowData\n        },\n        //供应商选择确定\n        dialogConfirm () {\n            if (this.isRequired) {\n                if (!this.listSelected) {\n                    this.$message({\n                        title: this.$t('message.warning'),\n                        message: this.$t('message.checkedoneplease'),\n                        type: \"warning\"\n                    })\n                } else if (!this.unMutiple && this.listSelected.length > 1) {\n                    this.$message({\n                        title: this.$t('message.warning'),\n                        message: this.$t('message.checkedoneplease'),\n                        type: \"warning\"\n                    })\n                }\n                else {\n                    this.$emit('handleTabConfirm', [this.listSelected, this.selectIndex])\n                    this.dialogVisible = false\n                }\n            } else {\n                this.$emit('handleTabConfirm', [this.listSelected, this.selectIndex])\n                this.dialogVisible = false\n            }\n        }\n\n\n    }\n}\n",null]}