{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/optNotice/optNoticeReceive/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/optNotice/optNoticeReceive/index.vue","mtime":1596610934074},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/supplierSelect/optNotice/optNoticeFormation\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport { mapState } from \"vuex\"\nimport Pagination from \"@/components/Pagination\"\nimport dialogImport from '@/components/Dialog/dialogImport'\nimport dialogPreview from './dialog/dialogPreview'\n\n\nexport default {\n    name: \"optNoticeReceive\",\n    components: { caiGou, Pagination, dialogImport, dialogPreview },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            dataList: [],\n            itemList: [],//从表数据\n            total: 0,\n            totalItem: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: null,\n                noticeNo: null,\n                supplierName: null,\n                materialCode: null,\n                state: 'P003',\n                startDate: null,\n                endDate: null\n            },\n            itemQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                noticeNo: null\n            },\n            rangeDate: null,\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            filterConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '', copmNum: 0, class: 'filter-item' },\n                { type: 'commonInput', label: '选择通知书', prop: 'noticeNo', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '供应商名称', prop: 'supplierName', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料编码', prop: 'materialCode', width: '', class: 'filter-item ml_5' },\n                { type: 'daterange', label: '创建时间', prop: 'par9', width: '250px', startpl: '开始时间', endpl: '结束时间', class: 'filter-item ml_5' },\n            ],\n            tableConfig: [\n                { label: '通知书编号', prop: 'noticeNo', align: 'center', width: 'auto' },\n                { label: '主要内容', prop: 'content', align: 'center', width: 'auto' },\n                { label: '业务类型', prop: 'businessType', align: 'center', width: 'auto' },\n                { label: '采购组织', prop: 'orgCode', align: 'center', width: 'auto' },\n                { label: '供应商编码', prop: 'supplierCode', align: 'center', width: '140' },\n                { label: '供应商名称', prop: 'supplierName', align: 'center', width: 'auto' },\n                { label: '编制单位', prop: 'createOrgCode', align: 'center', width: '180' },\n                { label: '编制人', prop: 'creator', align: 'center', width: 'auto' },\n                { label: '编制时间', prop: 'createTime', align: 'center', width: 'auto' },\n                { label: '备注', prop: 'remark', align: 'center', width: 'auto' }\n            ],\n            tableConfigSub: [\n                { label: '物料编码', prop: 'materialCode', align: 'center', width: '180' },\n                { label: '物料名称', prop: 'materialName', align: 'center', width: '180' },\n                { label: '物料分类', prop: 'materialClassName', align: 'center', width: '180' },\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: '180' },\n                { label: '材质', prop: 'materialQuality', align: 'center', width: '180' },\n                { label: '重量', prop: 'weight', align: 'center', width: '180' },\n                { label: '项目号', prop: 'projectNo', align: 'center', width: 'auto' },\n                { label: '选择方案', prop: 'planNo', align: 'center', width: 'auto' },\n                { label: '选择方式', prop: 'choiceMethod', align: 'center', width: 'auto' },\n                { label: '信息来源', prop: 'sourceType', align: 'center', width: '140' }\n            ],\n            dialogConfig: [\n                { title: '上传附件' },\n                { title: '预览' }\n            ],\n            modalNo: 'EXTP-BAS-0001',//导入模板编号,\n            dialogImportVisible: false\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,//状态\n            dt_srm_pad: state => state.dict.dt_srm_pad\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\", \"dt_srm_pad\"])\n\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    watch: {\n        'rangeDate' (value) {\n            if (value) {\n                this.listQuery.startDate = value[0]\n                this.listQuery.endDate = value[1]\n            }\n        }\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 100\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_p0]\n                res.data = this.$myFun.transCodeToName(res.data, options, ['state'])\n                this.dataList = res.data.list\n                this.total = res.data.pages.count\n                this.setFirstLine()\n            })\n        },\n        //单条数据获取\n        getRow () {\n            api.queryMaterial(this.currentSelectedRow.noticeNo).then(res => {\n                this.itemList = res.data.list\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //表格操作预览\n        handlePreview (row) {\n            console.log(row)\n            this.$refs.refPreview.dialogVisible = true\n        },\n        //表格操作下载\n        handleDownload (row) {\n            console.log(row)\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                    this.getRow()\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n                this.getRow()\n            }\n\n        },\n        //加载时默认选中第一行\n        setFirstLine () {\n            this.$nextTick(() => {\n                if (this.dataList.length > 0) {\n                    this.$refs.tb.toggleRowSelection(this.dataList[0], \"selected\")\n                    this.$refs.tb.setCurrentRow(this.dataList[0])\n                } else {\n                    this.itemList = []\n                }\n            })\n        }\n    }\n};\n",null]}