{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/procurementDemand/newproductDemand/newproductWlwh/dialog/addMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/procurementDemand/newproductDemand/newproductWlwh/dialog/addMain.vue","mtime":1596610933861},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/procurementDemand/newproductWlwh\"\nimport { queryRecords } from \"@/api/project/srm/procurementDemand/divisionRules\"\nimport itemNumber from \"./itemNumber\"\nimport wlxz from \"./wlxz\"\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport wlxzbyzsj from \"@/components/Select/wlxzbyzsj.vue\"\nimport { mapState } from \"vuex\"\nimport dialogSpecialDistinction from '@/components/Dialog/dialogSpecialDistinction'//特殊区分\nimport throttle from 'lodash/throttle'\n\nexport default {\n    components: { caiGou, itemNumber, wlxz, dialogPersonSelect, wlxzbyzsj, dialogSpecialDistinction },\n    data () {\n        return {\n            partDialogVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            list: [],\n            listQuery: {},\n            title: '',\n            titlePerson: '',\n            person: '',\n            dialogVisible: false,\n            dialogVisiblewl: false,\n            dialogVisibleqf: false,\n            dialogVisiblePerson: false,\n            DICT_CODE: DICT_CODE,\n            rowId: null,\n            temp: {\n                specialDistinctionName: undefined\n            },\n            rules: {\n                purchaseOrg: [{ required: true, message: '采购组织不能为空', trigger: 'blur' }],\n                projectNo: [{ required: true, message: '项目号不能为空', trigger: 'blur' }],\n                mapNo: [{ required: true, message: '物料图号不能为空', trigger: 'blur' }],\n                specialDistinction: [{ required: true, message: '特殊区分不能为空', trigger: 'blur' }],\n                materialName: [{ required: true, message: '物料名称不能为空', trigger: 'blur' }],\n                heavyParts: [{ required: true, message: '是否关重件不能为空', trigger: 'blur' }],\n                materialType: [{ required: true, message: '物料类型不能为空', trigger: 'blur' }],\n                measurement: [{ required: true, message: '计量单位不能为空', trigger: 'blur' }],\n                assignPerson: [{ required: true, message: '任务分配人不能为空', trigger: 'blur' }],\n                sourceType: [{ required: true, message: '来源类型不能为空', trigger: 'blur' }],\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_materiel_type: state => state.dict.dt_materiel_type,\n            dt_unit_type: state => state.dict.dt_unit_type,\n            dt_srm_pb9: state => state.dict.dt_srm_pb9,\n            dt_yes_or_no: state => state.dict.dt_yes_or_no,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", ['dt_materiel_type', 'dt_unit_type', 'dt_srm_pb9', 'dt_yes_or_no'])\n    },\n    methods: {\n        //获取采购组织名称\n        selectName (val) {\n            this.temp.purchaseOrgName = val\n        },\n        handleClose () {\n            this.$refs.dataForm.resetFields()\n        },\n        //获取任务分配人\n        getAssignName () {\n            if (this.temp.purchaseOrg) {\n                let dto = {\n                    purchaseOrg: this.temp.purchaseOrg,\n                    divisionType: 'PBB0',//寻源分工\n                    currentPage: 1,\n                    pageSize: 15\n                }\n                queryRecords(dto).then(res => {\n                    this.$set(this.temp, 'assignPersonName', res.data.list[0].assigneeName)\n                    this.$set(this.temp, 'assignPerson', res.data.list[0].assignee)\n                })\n            } else {\n                this.temp.assignPersonName = undefined\n            }\n        },\n        //项目号选择\n        handleItem () {\n            this.$refs.item.dialogVisible = true\n        },\n        //物料分类选择\n        handleMaterial () {\n            this.$refs.classify.dialogCodeVisible = true\n        },\n        //特殊区分选择\n        handleSpecial () {\n            if (this.temp.purchaseOrg) {\n                this.$refs.Special.dialogVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请先选择采购组织',\n                    type: 'warning'\n                })\n            }\n\n        },\n        handleConfirm (val) {\n            console.log(val)\n            this.$set(this.temp, 'specialDistinction', val.distinctionCode)\n            this.$set(this.temp, 'specialDistinctionName', val.distinctionName)\n            // this.temp.specialDistinction = val.distinctionCode\n            // this.temp.specialDistinctionName = val.distinctionName\n        },\n        //物料分类弹框赋值\n        listSelected (val) {\n            this.$set(this.temp, 'classification', val[0].classCode)\n            this.$set(this.temp, 'classificationName', val[0].className)\n            this.$refs.classify.dialogCodeVisible = false\n        },\n        //人员选择\n        handlePerson (val) {\n            this.person = val\n            if (this.person == 'taskPerson') {\n                this.titlePerson = '分配任务人选择'\n            } else if (this.person == 'designPerson') {\n                this.titlePerson = '设计师选择'\n            } else if (this.person == 'zxPerson') {\n                this.titlePerson = '任务执行人选择'\n            }\n            this.$refs.person.dialogVisible = true\n        },\n        //人员选择确定\n        personConfirm (val) {\n            console.log(val[0].employeeName)\n            if (this.titlePerson === '分配任务人选择') {\n                this.$set(this.temp, 'assignPerson', val[0].employeeCode)\n                this.$set(this.temp, 'assignPersonName', val[0].employeeName)\n            }\n            if (this.titlePerson === '设计师选择') {\n                this.$set(this.temp, 'designer', val[0].employeeCode)\n                this.$set(this.temp, 'designerName', val[0].employeeName)\n            }\n            if (this.titlePerson === '任务执行人选择') {\n                this.$set(this.temp, 'executor', val[0].employeeCode)\n                this.$set(this.temp, 'executorName', val[0].employeeName)\n            }\n\n        },\n        //关联物料选择\n        handleWlxz () {\n            this.partDialogVisible = true\n        },\n        //关联物料确定\n        confirmWl () {\n            if (this.$refs.wlxzRef.listSelected.length > 0) {\n                this.temp.associatedMaterial = this.$refs.wlxzRef.listSelected[0].materielCode\n                this.partDialogVisible = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //新增确定按钮单击事件\n        createData: throttle(function () {\n            this.$refs.dataForm.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.dialogVisible = false\n                        this.$emit('refresh')\n                    })\n                } else {\n                    return false\n                }\n            })\n        }, 2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //编辑确定按钮单击事件\n        updateData: throttle(function () {\n            api.updateRecord(this.rowId, this.temp).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '编辑成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.dialogVisible = false\n                this.$emit('refresh')\n            })\n        }, 2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n\n        resetTemp () {\n            this.temp = {\n                purchaseOrg: undefined,\n                notice: undefined,\n                projectNo: undefined,\n                classification: undefined,\n                mapNo: undefined,\n                specialDistinction: undefined,\n                materialName: undefined,\n                specifications: undefined,\n                materialTexture: undefined,\n                weight: undefined,\n                heavyParts: undefined,\n                materialType: undefined,\n                targetPrice: undefined,\n                measurement: undefined,\n                completionTime: undefined,\n                assignPerson: undefined,\n                designer: undefined,\n                executor: undefined,\n                sourceType: undefined,\n                associatedMaterial: undefined,\n            }\n        }\n\n    }\n}\n",null]}