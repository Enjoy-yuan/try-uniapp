{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/RF/indexAnalysis/MTTR&MTBF/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/RF/indexAnalysis/MTTR&MTBF/index.vue","mtime":1596610933418},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api2 from '@/api/data-base/work-center'\nimport { selectlists } from '@/api/system/organization'\nimport Pagination from \"@/components/Pagination\" // 分页组件\nimport * as api from \"@/api/project/wms/productStocking/finishedStocking\"\nimport { mapState } from \"vuex\"\n\n\nexport default {\n    name: \"finishedStocking\",\n    components: { Pagination },\n    data () {\n        return {\n            value: undefined,\n            rheight: 0,\n            pheight: 0,\n            sheight: 0,\n            workCenterCode_options: [],\n            options: [],\n            options1: [],\n            areaList: null,\n            packDataList: null,\n            updatePacklist: {\n                barCode: [],\n                method: '',\n                supplierBatch: '',\n                supplierRemark: ''\n            },\n            locatorList: [],\n            list: [],\n            list1: null,\n            list2: null,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            activeName2: \"first\",\n            isEdit: false,\n            disabled: false,\n            accountDate: [this.currentTime(), this.currentTime()],\n            createTime: [this.currentTime(), this.currentTime()],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: undefined,\n                arrivalOrgCode: \"\",\n                businessType: undefined,\n                warehouseCode: undefined,\n                accountDate: this.timeFormat(),\n                toWarehouseCode: undefined,\n                workshopCode: undefined\n            },\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: undefined,\n                businessType: undefined,\n                warehouseCode: undefined,\n                workshopCode: undefined\n            },\n            listQueryPack: {\n                orderNumber: '',\n                materielCode: '',\n                orderNumbers: [],\n                barcodeRuleDetails: []\n            },\n            storesTransfersDTO: {\n                accountDate: undefined,\n                businessType: undefined,\n                businessTypeName: undefined,\n                orgCode: undefined,\n                receiveOrderItemDTOs: [],\n                receiveOrderNumber: undefined,\n                sourceOrderNumber: undefined,\n                supplierCode: undefined,\n                supplierName: undefined,\n                thirdWarehouseCode: undefined,\n                warehouseCode: undefined,\n                warehouseName: undefined\n            },\n            temp: {\n                orgCode: undefined,\n                businessType: undefined,\n                warehouseCode: undefined,\n                accountDate: undefined,\n                toWarehouseCode: undefined\n            },\n            giftQuantity: undefined,\n            materielCode: undefined,\n            measuringUnit: undefined,\n            receiveQuantity: undefined,\n            snp: undefined,\n            sourceRowNo: undefined,\n            specification: undefined,\n            wareAreaCode: undefined,\n            wareLocationCode: undefined,\n            receiveOrderNumber: undefined,\n            sourceOrderNumber: undefined,\n            supplierCode: undefined,\n            locationCode: undefined,\n            productBatch: undefined,\n            proofNo: undefined,\n            warehouseCode: undefined,\n            orgCode: undefined,\n            parentsRows: null,\n            listQuery2: {\n                receiveOrderNumber: undefined,\n                proofNo: undefined,\n                currentPage: 1,\n                pageSize: 10\n            },\n            printData: {},//打印数据\n            packPrintList: [],\n            dialogPack: false,//包装标签tag\n            dialogPackSet: false,//包装标签设置\n            dialogPackPrintVisible: false,//打印弹框显示\n            dto: {\n                detailDTOS: [],\n                dicType: undefined,\n                dicTypeName: undefined,\n                sourceType: undefined,\n                sourceTypeName: undefined,\n            },\n            dtos: {\n                businessType: undefined,\n                orgCode: undefined,\n                wareMaterielDTOS: [],\n                warehouseCode: undefined\n            },\n            selectPackRows: [],\n            value1: \"\",\n            dialogStatus: \"\",\n            wlxzRows: null,\n            wlxzDialogFormVisible: false,\n            tableKey: 0,\n            businessTypeName: undefined,\n            dialogPrintVisible: false,\n            rules: {\n                contact: [\n                    { max: 32, message: this.$t('validate.max32'), trigger: 'blur' }\n                ],\n                mobile: [\n                    { max: 32, message: this.$t('validate.max32'), trigger: 'blur' }\n                ],\n                plateNumber: [\n                    { max: 32, message: this.$t('validate.max32'), trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_materiel_type: state => state.eamDict.dt_materiel_type,\n            dt_materiel_classify: state => state.eamDict.dt_materiel_classify,\n            dt_work_center_workshop: state => state.businessComponent.dt_work_center_workshop,\n            dt_business_type_screenGroupNum: state => state.businessComponent.dt_business_type_screenGroupNum\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        this.$store.dispatch(\"eamDict/getDicData\", [\n            \"dt_materiel_type\",\n            \"dt_materiel_classify\"\n        ])\n        this.$store.dispatch(\"businessComponent/getBusinessComponentData\", [\n            \"dt_work_center_workshop\",\n            \"dt_business_type_screenGroupNum\"\n        ])\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.rheight = this.$myFun.getSingleTbHeight() - 30\n            this.pheight = this.$myFun.getSingleTbHeight() + 56\n            this.sheight = this.$myFun.getSingleTbHeight() - 70\n        },\n        timeFormat () {\n            var d = new Date()\n            var year = d.getFullYear()       //年  \n            var month = d.getMonth() + 1     //月  \n            var day = d.getDate()            //日  \n\n            var clock = year + \"-\"\n            if (month < 10)\n                clock += \"0\"\n            clock += month + \"-\"\n\n            if (day < 10)\n                clock += \"0\"\n            clock += day + \" \"\n            return (clock)\n        },\n        currentTime () {\n            var date = new Date()\n            var seperator1 = \"-\"\n            var year = date.getFullYear()\n            var month = date.getMonth() + 1\n            var strDate = date.getDate()\n            if (month >= 1 && month <= 9) {\n                month = \"0\" + month\n            }\n            if (strDate >= 0 && strDate <= 9) {\n                strDate = \"0\" + strDate\n            }\n            var currentdate = year + seperator1 + month + seperator1 + strDate\n            return currentdate\n        },\n\n        changeOrg () {//组织编码下拉change\n            this.listQuery1.orgCode = this.listQuery.orgCode\n            api2.queryRecords(this.listQuery).then(res => {\n                res = res.data\n                this.listQuery.workshopCode = res.list[0].bufferArea\n            })\n\n        },\n        handleQuery () {\n\n        },\n        stateWorkshop () {\n            api2.queryRecords(this.listQuery1).then(res => {\n                res = res.data\n                this.listQuery1.workshopCode = res.list[0].bufferArea\n            })\n\n        },\n        changeWarehouseCode () {//仓库编码下拉change\n            this.listQuery1.warehouseCode = this.listQuery.warehouseCode\n            this.listQuery.toWarehouseCode = this.listQuery.warehouseCode\n        },\n        changeWorkshopCode () {//车间下拉change\n            this.listQuery1.workshopCode = this.listQuery.workshopCode\n        },\n        getList1 () {//查询凭证号\n            if (this.accountDate) {\n                this.listQuery1.accountDateStart = this.accountDate[0]\n                this.listQuery1.accountDateEnd = this.accountDate[1]\n            } else {\n                this.listQuery1.accountDateStart = \"\"\n                this.listQuery1.accountDateEnd = \"\"\n\n            }\n            if (this.createTime) {\n                this.listQuery1.createDateStart = this.createTime[0]\n                this.listQuery1.createDateEnd = this.createTime[1]\n            } else {\n                this.listQuery1.createDateStart = \"\"\n                this.listQuery1.createDateEnd = \"\"\n\n            }\n            this.list2 = []\n            selectlists().then(response => {\n                api.queryRecords1(this.listQuery1).then(res => {\n                    res = res.data\n                    res.list.forEach((item, index) => {\n                        response.data.forEach((option) => {\n                            if (option.organizationCode == item['orgCode']) {\n                                res.list[index]['orgCode' + 'CN'] = option.organizationName\n                            }\n                        })\n\n                    })\n                    this.list1 = res.list\n                    this.total = res.pages.count\n                })\n            })\n\n        },\n        getList2 () {//已选项查询\n            const _this = this\n            api.queryRecords(this.listQuery2).then(res => {\n                res = res.data\n                res.list.map(v => {\n                    v.businessTypeName = _this.businessTypeName\n                    v.workshopCode = _this.workshopCode\n                    return v\n                })\n                this.list2 = res.list\n                this.total = res.pages.count\n            })\n        },\n\n        rowClassName ({ row, rowIndex }) {\n            //自增序号\n            row.id = rowIndex + 1\n        },\n        selectRow1 (val) {\n            this.selectRowData1 = val\n        },\n        //查询包装标签列表\n        handleQueryPack () {\n\n        },\n        handleCreate () {//新增弹窗\n            if (this.listQuery.orgCode && this.listQuery.accountDate && this.listQuery.warehouseCode && this.listQuery.businessType && this.listQuery.toWarehouseCode) {\n                this.wlxzDialogFormVisible = true\n                this.$nextTick(() => {\n                    this.$refs.wlxzRef.listSelected = [...this.list]\n                    this.$refs.wlxzRef.getList()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择查询条件\",\n                    type: \"warning\"\n                })\n            }\n            api.getArea(this.listQuery.warehouseCode).then(resa => {\n                resa = resa.data\n                this.areaList = resa\n            })\n        },\n        handleDblclickWlxz (row) {\n            this.wlxzRows = row\n        },\n        handleUpdate () {\n            let result = true\n            let groupList = []\n            this.list.forEach((item) => {\n                if (!item.areaCode || !item.locationCode) {\n                    this.$message({\n                        title: this.$t(\"message.warning\"),\n                        message: \"请先选择区位和储位\",\n                        type: \"warning\"\n                    })\n                    result = true\n                }\n                this.list.map(v => {\n                    v.wareAreaCode = v.areaCode\n                    v.wareLocationCode = v.locationCode\n                    v.toWareAreaCode = '*'\n                    v.toWareLocationCode = '*'\n                    return v\n\n\n                })\n                if (item.receiveQuantity > 0) {\n                    groupList.push(item)\n                    result = false\n                    this.storesTransfersDTO.receiveOrderItemDTOs = groupList\n                    if (result) {\n                        this.$message({\n                            title: \"警告\",\n                            message: \"本次发货不可全部为0或空\",\n                            type: \"warning\"\n                        })\n                    }\n                }\n\n            })\n            this.storesTransfersDTO.orgCode = this.listQuery.orgCode\n            this.storesTransfersDTO.businessType = this.listQuery.businessType\n            this.storesTransfersDTO.accountDate = this.listQuery.accountDate\n            this.storesTransfersDTO.warehouseCode = this.listQuery.warehouseCode\n            this.storesTransfersDTO.supplierCode = this.listQuery.workshopCode\n            this.storesTransfersDTO.receiveOrderItemDTOs = groupList\n            api.addRecords(this.storesTransfersDTO).then(() => {\n                this.disabled = true\n                this.$message({\n                    title: \"成功\",\n                    message: \"保存成功\",\n                    type: \"success\",\n                    duration: 2000\n                })\n            })\n\n        },\n\n        update () {\n            if (this.$refs.wlxzRef.listSelected.length > 0) {\n                this.list = this.$refs.wlxzRef.listSelected\n                this.wlxzDialogFormVisible = false\n                this.isEdit = true\n            } else {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: this.$t(\"message.checkedplease\"),\n                    type: \"warning\"\n                })\n            }\n        },\n        handleDelete () {//删除列表\n            if (this.selectRowData1 && this.selectRowData1.length == 1) {\n                this.$confirm(\"此操作将删除所选中数据, 是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        for (let i = 0; i < this.list.length; i++) {\n                            if (\n                                this.list[i].materielCode ===\n                                this.selectRowData1[0].materielCode\n                            ) {\n                                this.list.splice(i, 1)\n                                this.$message({\n                                    title: \"成功\",\n                                    message: \"删除成功\",\n                                    type: \"success\",\n                                    duration: 2000\n                                })\n                            }\n                        }\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: \"info\",\n                            message: \"已取消删除\"\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handelRefresh () {//刷新\n            this.isEdit = false\n            this.disabled = false\n            this.list = []\n            // this.listQuery = [];\n        },\n\n        selectRowchange (val) {\n            this.selectlistRowchange = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbb.clearSelection()\n                this.$refs.tbb.toggleRowSelection(val.pop())\n            }\n\n            if (this.selectlistRowchange) {\n                this.listQuery2.receiveOrderNumber = this.selectlistRowchange.receiveOrderNumber\n                this.businessTypeName = this.selectlistRowchange.businessTypeName\n                this.workshopCode = this.selectlistRowchange.workshopCode\n                this.getList2()\n            }\n\n        },\n\n        handleDownload () {//导出\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '凭证号', '业务类型', '物料编码', '物料名称',\n                    '数量', '生产批次', '车间', '组织编码',\n                    '仓库编码', '记账日期', '创建日期', '记账人',\n                ]\n                const filterVal = [\n                    'receiveOrderNumber', 'businessTypeName', 'materielCode', 'materielName',\n                    'receiveQuantity', 'productBatch', 'supplierCode', 'orgCode',\n                    'warehouseCode', 'accountDate', 'createTime', 'creator',\n                ]\n                const data = this.formatJson(filterVal, this.list2)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v => filterVal.map(j => {\n                if (j === 'timestamp') {\n                    return\n                } else {\n                    return v[j]\n                }\n            }))\n        },\n        handleFilter1 () {\n            if (this.listQuery1.businessType) {\n                this.getList1()\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择查询条件\",\n                    type: \"warning\"\n                })\n            }\n        },\n        clickRow (val) {//凭证号行点击\n            this.clickListRow = val\n            this.$refs.tbb.clearSelection()\n            this.$refs.tbb.toggleRowSelection(val) //单击行绑定点击事件\n        },\n        getLocatorList (warehouseCode, areaCode, i) {\n            api.getLocator(warehouseCode, areaCode).then(res => {\n                res = res.data\n                this.$set(this.locatorList, i, res)\n                this.$set(this.list[i], 'locationCode', res[0].locationCode)\n                this.$set(this.list, i, this.list[i])\n            })\n        },\n        changeAreaSel (areaCode, i) {\n            this.getLocatorList(this.listQuery.warehouseCode, areaCode, i)\n        },\n\n        //选中标签列表\n        selectPackRow (val) {\n            this.selectPackRows = val\n        },\n\n        //批量打印\n        handleBulkPrint () {\n            if (this.selectPackRows.length === 0) {\n                this.$message({\n                    title: this.$t('message.warning'),\n                    message: '请选择要打印的标签',\n                    type: \"warning\"\n                })\n            } else {\n                let printable = true\n                try {\n                    this.selectPackRows.forEach(item => {\n                        if (item.printSign === 1) {\n                            printable = false\n                            this.$message({\n                                title: this.$t('message.warning'),\n                                message: '所选项包含已打印过的标签，不能进行批量打印',\n                                type: \"warning\"\n                            })\n                            throw ''\n                        }\n                    })\n                    if (printable) {\n                        this.updateMethod = 'batchPrint'\n                        this.createPrintPack()\n                    }\n                } catch (err) {\n                    return\n                }\n            }\n        },\n        //补打\n        handleFillPrint () {\n            if (this.selectPackRows.length === 0) {\n                this.$message({\n                    title: this.$t('message.warning'),\n                    message: '请选择要打印的标签',\n                    type: \"warning\"\n                })\n            } else {\n                let printable = true\n                try {\n                    this.selectPackRows.forEach(item => {\n                        if (item.printSign === 0) {\n                            printable = false\n                            this.$message({\n                                title: this.$t('message.warning'),\n                                message: '所选项包含未打印过的标签，不能进行补打',\n                                type: \"warning\"\n                            })\n                        }\n                    })\n                    if (printable) {\n                        this.updateMethod = 'makeUpPrint'\n                        this.createPrintPack()\n                    }\n                } catch (e) {\n                    return\n                }\n            }\n\n        },\n        initUpdatePacklist () {\n            let barcodes = new Array()\n            this.selectPackRows.forEach(item => {\n                barcodes.push(item.barCode)\n            })\n            this.updatePacklist.barCode = barcodes\n            this.updatePacklist.method = this.updateMethod\n            if (this.updateMethod !== 'setUp') {\n                this.updatePacklist.supplierBatch = ''\n                this.updatePacklist.supplierRemark = ''\n            }\n        },\n\n\n\n    }\n};\n",null]}