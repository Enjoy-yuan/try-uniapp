{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/fileUpload/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/fileUpload/index.vue","mtime":1596610933461},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/file/file'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nexport default {\n    name: 'fileUpload',\n    components: { Pagination },\n    props: {\n        // 右侧第一个lable和placeholder\n        titleText: {\n            type: String,\n            default: '业务代码'\n        },\n        // 父级传过来用于传给接口的增删改查的code，如经验库传experienceCode，设备台账传deviceCode等等...\n        functionCode: {\n            type: String,\n            default: ''\n        },\n        // 针对不同页面的业务，需要不同的待选附件类别，从父级过滤好之后传进来\n        categoryData: {\n            type: Array,\n            default: () => {\n                return []\n            }\n        }\n    },\n    data () {\n        return {\n            list: [],\n            selectlistRow: [],\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            temp: {\n                functionCode: undefined,\n                fileType: 'document',\n                category: undefined\n            },\n            files: [],\n            fileList: [],\n            tableKey: 0\n        }\n    },\n    watch: {\n        functionCode (val) {\n            if (val) {\n                this.temp.functionCode = this.functionCode\n                this.getList()\n            } else {\n                this.list = []\n                this.temp = {\n                    functionCode: undefined,\n                    fileType: 'document',\n                    category: undefined\n                }\n            }\n        },\n        dt_file_type () {\n            if (this.list) {\n                let options = [this.categoryData, this.dt_file_type]\n                this.list = this.$myFun.srmCodeToName(\n                    this.list,\n                    options,\n                    ['category', 'fileType']\n                )\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_file_type: state => state.eamDict.dt_file_type\n        })\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', ['dt_file_type'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    destroyed () {\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryFile(Object.assign(this.temp, this.listQuery)).then(\n                res => {\n                    this.list = res.data.list\n                    let options = [this.categoryData, this.dt_file_type]\n                    this.list = this.$myFun.srmCodeToName(\n                        this.list,\n                        options,\n                        ['category', 'fileType']\n                    )\n                    this.total = res.data.pages.count\n                }\n            )\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 200 + 43\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        fileLimit (file) {\n            const isLt10M = file.size / 1024 / 1024 < 10\n            if (!isLt10M) {\n                this.$message({\n                    message: '上传文件大小不能超过 10MB!',\n                    type: 'warning'\n                })\n            }\n            return isLt10M\n        },\n        fileExceed () {\n            this.$message.error('一次最多上传10个文件')\n        },\n        handleFile (file, fileList) {\n            this.files = fileList\n        },\n        uploadFile () { },\n        handleUpload () {\n            if (this.temp.functionCode == undefined) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (this.temp.category == undefined) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择类别',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (!this.files.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择文件',\n                    type: 'warning'\n                })\n                return false\n            }\n            var data = new FormData()\n            this.files.forEach(file => {\n                data.append('files', file.raw)\n            })\n            api.uploadFile(this.temp.functionCode, data, this.temp)\n                .then(res => {\n                    if (res.status == 200) {\n                        this.$message({\n                            title: '成功',\n                            message: '上传成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    }\n                    this.getList()\n                    this.files = []\n                    this.fileList = []\n                })\n                .catch(() => {\n                    this.$message({\n                        title: '警告',\n                        message: '不支持的文件类型',\n                        type: 'warning'\n                    })\n                    this.files = []\n                    this.fileList = []\n                })\n        },\n        handleDeleteFile (row) {\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    api.deleteFile({ fileCode: row.fileCode }).then(res => {\n                        if (res.status == 204) {\n                            this.getList()\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n        },\n        handleDownloadFile (row) {\n            api.download(row.readName).then(res => {\n                var blob = new Blob([res.data], {\n                    type:\n                        'application/vnd.openxmlformats-officedocument.wordprocessingml.document;charset=utf-8'\n                }) //application/vnd.openxmlformats-officedocument.wordprocessingml.document这里表示doc类型\n                var contentDisposition = res.headers['content-disposition'] //从response的headers中获取filename, 后端response.setHeader(\"Content-disposition\", \"attachment; filename=xxxx.docx\") 设置的文件名;\n                let filename = contentDisposition.substring(\n                    contentDisposition.indexOf('=') + 1\n                )\n                var downloadElement = document.createElement('a')\n                var href = window.URL.createObjectURL(blob) //创建下载的链接\n                downloadElement.style.display = 'none'\n                downloadElement.href = href\n                downloadElement.download = filename //下载后文件名\n                document.body.appendChild(downloadElement)\n                downloadElement.click() //点击下载\n                document.body.removeChild(downloadElement) //下载完成移除元素\n                window.URL.revokeObjectURL(href) //释放掉blob对象\n            })\n        }\n    }\n}\n",null]}