{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/manage.vue","mtime":1599136050782},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryRecords } from '@/api/project/srm/dataBase/dictMaintenance'\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou' //采购组织下拉组件\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport zhEvaluation from \"../dialog/zhEvaluation\" // 综合评价组件\nimport search from '../dialog/search' //评价类型明细\nimport * as api from '@/api/project/srm/contractManage/evaluationFormat'\nexport default {\n    name: 'problemManagement',\n    components: { Pagination, caiGou, search, zhEvaluation },\n    data () {\n        return {\n            modalnum: null, //模板编号\n            theight: 0,\n            isSingle: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null, //当前选中的行\n            selectedRows: null, //多选时选中的所有行\n            list: [],\n            listSub: [],\n            phaseList: [],\n            total: 0,\n            selectedrow: null, //主表选中行\n            selectlistRow: null, // 从表选中行\n            DICT_CODE: DICT_CODE,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                evaluationPlanNo: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                evaluationType: undefined,\n                evaluationCategory: undefined,\n                evaluationStage: undefined,\n                startTime: undefined,\n                endTime: undefined,\n                evaluationNo: undefined,\n                state: undefined,\n                evaluationYear: undefined,\n                supplierCode: undefined,\n            },\n            sublistQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            tableKey: [0, 1] //表格索引，虚拟dom渲染表格时使用\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,     // 状态\n            dt_srm_pal: state => state.dict.dt_srm_pal,   // 评价状态\n            dt_srm_pak: state => state.dict.dt_srm_pak,   // 评价类型\n            dt_srm_pam: state => state.dict.dt_srm_pam,   // 综合等级\n            dt_srm_pb2: state => state.dict.dt_srm_pb2,   // 评价类别\n            dt_srm_pb3: state => state.dict.dt_srm_pb3,   // 评价阶段\n            dt_srm_pb4: state => state.dict.dt_srm_pb4,   // 评价项 \n        })\n    },\n    watch: {\n        'listQuery.evaluationCategory' (val) {\n            if (!val) {\n                this.listQuery.evaluationStage = undefined\n                this.phaseList = []\n            } else {\n                this.getPhaseData(val)\n            }\n        }\n    },\n    created () {\n        this.$store.dispatch('dict/getDicData', [\n            'dt_srm_p0',\n            'dt_srm_pal',\n            'dt_srm_pak',\n            'dt_srm_pam',\n            'dt_srm_pb2',\n            'dt_srm_pb3',\n            'dt_srm_pb4'\n        ])\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        // this.setFirstLine()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 200\n        },\n        //获取组织编码名称\n        selectName (val) {\n            this.listQuery.orgName = val\n        },\n        //评价类别评价阶段联动\n        getPhaseData (val) {\n            if (val) {\n                let dto = {\n                    currentPage: 1,\n                    pageSize: 15,\n                    parentCode: val\n                }\n                queryRecords(dto).then(res => {\n                    this.phaseList = res.data.list\n                })\n            }\n        },\n        //查询\n        handleQuery () {\n            this.listSub = []\n            this.getList()\n        },\n        //获取主表数据\n        getList () {\n            api.queryRecord(this.listQuery).then((res) => {\n                let options = [this.dt_srm_p0, this.dt_srm_pak, this.dt_srm_pam, this.dt_srm_pal, this.dt_srm_pb3]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state', 'evaluationType', 'grade', 'state', 'evaluationStage'])\n                res.data.list.forEach((item, index) => {\n                    item.num = index + 1\n                })\n                this.list = res.data.list\n                // console.log(res, '1')\n                this.total = this.list.length\n            })\n        },\n        //获取从表数据\n        getSubList () {\n            if (this.selectedrow) {\n                this.$nextTick(() => {\n                    api.queryOneRecord(this.selectedrow.evaluationNo, this.selectedrow.supplierCode).then((res) => {\n                        // console.log(res)\n                        let options = [this.dt_srm_pak, this.dt_srm_pb3, this.dt_srm_pal, this.dt_srm_pb4]\n                        this.listSub = this.$myFun.srmCodeToName(res.data.supplierEvaluationSheetItemDTOS, options, ['evaluationType', 'evaluationStage', 'state', 'evaluationItem'])\n                    })\n                })\n            } else {\n                this.listSub = []\n            }\n        },\n        // 新增\n        handleCreate () {\n            this.$emit('setState', 'create', '')\n        },\n        // 任务发布\n        handleTaskrelease () {\n            if (!this.selectedrow) {\n                this.$message({\n                    type: 'warning',\n                    message: '请选择一条信息！'\n                })\n            } else {\n                this.$confirm('是否发布', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    // console.log(this.selectedrow)\n                    let dto = {\n                        method: 0,\n                        recommendResult: \"\",\n                        remark: \"\"\n                    }\n                    api.submitRecord(this.selectedrow.rowId, dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            type: 'success',\n                            message: '发布成功！',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            }\n        },\n        // 综合评价弹框\n        handleZhEvaluation () {\n            if (!this.selectedrow) {\n                this.$message({\n                    type: 'warning',\n                    message: '请选择一条信息！'\n                })\n            } else {\n                this.$refs.zhPj.dialogVisible = true\n                this.$refs.zhPj.list.splice(0, 1, this.selectedrow)\n                this.$refs.zhPj.form = { ...this.selectedrow }\n            }\n\n        },\n        // 综合评价确定\n        handleConfirm (form) {\n            // console.log(form)\n            let dto = {\n                method: 1,\n                recommendResult: form.recommendResult,\n                remark: form.remark\n            }\n            // console.log(JSON.stringify(dto))\n            api.submitRecord(this.selectedrow.rowId, dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    type: 'success',\n                    message: '评价成功！',\n                    duration: 2000\n                })\n                this.$refs.zhPj.dialogVisible = false\n                this.getList()\n            })\n        },\n        // 评价发布\n        handleEvaluationrelease () {\n            if (!this.selectedrow) {\n                this.$message({\n                    type: 'warning',\n                    message: '请选择一条信息！'\n                })\n            } else {\n                this.$confirm('是否发布', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    // console.log(this.selectedrow)\n                    let dto = {\n                        method: 2,\n                        recommendResult: \"\",\n                        remark: \"\"\n                    }\n                    api.submitRecord(this.selectedrow.rowId, dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            type: 'success',\n                            message: '发布成功！',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            }\n        },\n        //行内删除按钮单击事件\n        handleDelete (index, val) {\n            this.$confirm('是否删除该信息', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    api.deleteRecord(val.rowId).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n        },\n        handleUpdate (index, val) {\n            this.$refs.search.dialogStatus = 'update'\n            this.$refs.search.dialogVisible = true\n            this.$refs.search.temp = { ...val }\n        },\n        // 从表行内查看\n        handleSee (index, val) {\n            this.$refs.search.dialogStatus = 'see'\n            this.$refs.search.dialogVisible = true\n            // console.log(val, 'val')\n            this.$refs.search.temp = { ...val }\n        },\n        // //查询\n        // handleQuery () {\n        //     this.listSub = []\n        //     this.listQuery.currentPage = 1\n        //     this.getList()\n        // },\n        //每页大小变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                this.selectedrow = val[val.length - 1]\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], 'selected')\n                }\n                this.$refs.tb.setCurrentRow(this.selectedrow)\n                this.getSubList()\n            } else {\n                this.selectlistRow = val\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectChangeSub (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbSub.clearSelection()\n                this.$refs.tbSub.toggleRowSelection(val.pop())\n            }\n            this.$refs.tbSub.setCurrentRow(this.selectlistRow)\n        },\n        rowClickSub (val) {\n            this.$refs.tbSub.clearSelection()\n            this.$refs.tbSub.toggleRowSelection(val)\n        },\n        //加载时默认选中第一行\n        setFirstLine () {\n            this.$nextTick(() => {\n                this.$refs.tb.toggleRowSelection(this.list[0])\n                this.$refs.tb.setCurrentRow(this.list[0])\n            })\n        }\n    }\n}\n",null]}