{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTEM/EMTabs/attribute.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTEM/EMTabs/attribute.vue","mtime":1597995948998},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/IOT/em\"\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport attributeSelect from '@/components/Select/attributeSelect'\nimport attributeFrom from '../../../components/attributeFrom'\nexport default {\n    name: \"attributeInfo\",\n    props: ['code', 'row'],\n    data () {\n        return {\n            isTick: true,// 多选\n            theight: 0,//表格高度\n            listLoading: false,\n            list: [],\n            total: 0,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                attributeName: undefined\n            },\n            attributeList: null, //查询出已选的\n            subAttributeList: null, // 选中的\n            temp: {\n                attributeCode: undefined,\n                attributeName: undefined,\n                attributeType: undefined,\n                attributeTypeName: undefined,\n                company: undefined,\n                companyName: undefined,\n                dataType: undefined,\n                dataTypeName: undefined,\n                enumValue: undefined, // 暂不需要\n                max: undefined,\n                min: undefined,\n                readType: undefined,\n                readTypeName: undefined,\n                remark: undefined\n            },\n            dialogFormType: undefined,\n            dialogFormVisible: false,\n            subDialogFormVisible: false,\n            tableKey: [0, 1] //表格索引\n        }\n    },\n    components: { attributeFrom, attributeSelect, Pagination },\n    computed: {\n        ...mapState({\n            iot_attribute_type: state => state.iotDict.iot_attribute_type,\n            iot_attribute_company: state => state.iotDict.iot_attribute_company,\n            iot_data_type: state => state.iotDict.iot_data_type,\n            iot_read_type: state => state.iotDict.iot_read_type,\n            iot_is_standard: state => state.iotDict.iot_is_standard,\n            iot_state: state => state.iotDict.iot_state,\n\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        stateClass (state) {\n            if (state == '0') {\n                return 'iot-warning'\n            } else if (state == '1') {\n                return 'iot-success'\n            } else if (state == '2') {\n                return 'iot-info'\n            }\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 30\n        },\n        //获取表格数据\n        getList () {\n            this.listLoading = true\n            api.queryCollects(this.code, this.row.deviceCode, this.listQuery).then(response => {\n                this.list = response.data.records\n                this.list = this.$myFun.srmCodeToName(response.data.records, [this.iot_attribute_type, this.iot_data_type, this.iot_read_type, this.iot_attribute_company, this.iot_is_standard, this.iot_state], ['attributeType', 'dataType', 'readType', 'company', 'isStandard', 'iotState'])\n                this.total = response.data.total\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.dialogFormType = 'create'\n            this.dialogFormVisible = true\n        },\n        create (val) {\n            api.addCollect(this.code, this.row.deviceCode, val).then(() => {\n                this.getList()\n                this.dialogFormVisible = false\n                this.resTemp()\n                this.$notify({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n\n            })\n        },\n        //编辑按钮单击事件方法\n        handleUpdate (attributeCode) {\n            api.queryCollect(this.code, this.row.deviceCode, attributeCode).then(res => {\n                this.temp = res.data\n                this.temp.min = parseInt(res.data.min)\n                this.temp.max = parseInt(res.data.max)\n                this.dialogFormType = 'update'\n                this.dialogFormVisible = true\n            })\n        },\n        update (val) {\n            api.updateCollect(this.code, this.row.deviceCode, val.attributeCode, val).then(() => {\n                this.getList()\n                this.dialogFormVisible = false\n                this.resTemp()\n                this.$notify({\n                    title: '成功',\n                    message: '修改成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        //删除按钮单击事件方法\n        handleDelete (attributeCode) {\n            this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    api.deleteCollect(this.code, this.row.deviceCode, attributeCode).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    }).catch(() => {\n                        this.getList()\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n        },\n        // 查询标准属性列表\n        handleStandardCollect () {\n            api.queryStandardCollect(this.code, this.row.deviceCode).then(\n                res => {\n                    this.attributeList = res.data\n                    this.subDialogFormVisible = true\n                    this.$nextTick(function () {\n                        this.$refs.attributeSelect.getList()\n                    })\n                }\n            )\n        },\n        getAttribute (val) {\n            this.subAttributeList = val\n        },\n        updateStandardCollect () {\n            let getRow = new Promise((resolve) => {\n                for (let i = 0; i < this.subAttributeList.length; i++) {\n                    for (let j = 0; j < this.attributeList.length; j++) {\n                        if (this.subAttributeList[i].attributeCode == i.attributeCode) {\n                            this.subAttributeList[i].rowId = this.attributeList[j].rowId\n                            break\n                        } else {\n                            delete this.subAttributeList[i].rowId\n                        }\n                    }\n                }\n                this.subAttributeList.forEach(item => {\n                    this.attributeList.forEach(i => {\n                        if (item.attributeCode == i.attributeCode) {\n                            item.rowId = i.rowId\n\n                        } else {\n                            delete item.rowId\n                        }\n                    })\n                })\n                resolve(this.subAttributeList)\n            })\n            getRow.then(() => {\n                api.updatestandardCollect(this.code, this.row.deviceCode, this.subAttributeList).then(() => {\n                    this.getList()\n                    this.subDialogFormVisible = false\n                    this.$notify({\n                        title: '成功',\n                        message: '修改成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n\n                })\n            })\n        },\n        resTemp () {\n            this.temp = {\n                attributeCode: undefined,\n                attributeName: undefined,\n                attributeType: undefined,\n                attributeTypeName: undefined,\n                company: undefined,\n                companyName: undefined,\n                dataType: undefined,\n                dataTypeName: undefined,\n                enumValue: undefined, // 暂不需要\n                max: undefined,\n                min: undefined,\n                readType: undefined,\n                readTypeName: undefined,\n                remark: undefined\n            }\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isTick) {\n                this.selectedRows = val\n            } else {\n                this.selectlistRow = val[val.length - 1]\n                if (val.length > 1) {\n                    this.$refs.subTb.clearSelection()\n                    this.$refs.subTb.toggleRowSelection(val[val.length - 1])\n                }\n                this.$refs.subTb.setCurrentRow(this.selectlistRow)\n            }\n        }\n    }\n};\n",null]}