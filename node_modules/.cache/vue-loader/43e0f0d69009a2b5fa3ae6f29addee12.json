{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainPlan/index.vue","mtime":1596610933390},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport caiGou from '@/components/Select/xtpt/caigou' //下拉组件\nimport * as api from '@/api/project/eas/em/maintainPlan'\nimport { queryRecords } from '@/api/project/eas/database/groups' //班组\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex' // 基本数据引入\nimport employeesSelect from '@/components/Select/employeesSelect' //操作人\nimport emplSelect from \"../../components/teamEmpSelect\" //操作人下拉框\nimport eqmtSelect from '../../components/eqmtSelect'\nimport materielSelect from './materielSelect'\nimport teamSelect from '../../components/teamSelect'\nimport partSelect from '../../components/maintainPartSelect'\nimport deviceType from '../../components/deviceTypeSelect'\n\n\nexport default {\n    name: 'maintainPlan',\n    components: {\n        Pagination,\n        caiGou,\n        employeesSelect,\n        eqmtSelect,\n        materielSelect,\n        partSelect,\n        teamSelect,\n        emplSelect,\n        deviceType\n    },\n    data () {\n        return {\n            checkList: [],\n            groupList: [],\n            parentRow: [],\n            teamList: [],\n            deviceList: [],\n            upkeepList: [],\n            materielList: [],\n            value: '',\n            theight: 0, //表格高度\n            isSingle: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            materielData: [],\n            list: [],\n            total: 0,\n            tableKey: [0, 1, 2, 3], //表格索引\n            listQuery: {\n                orgCode: undefined,\n                equipmentCode: undefined,\n                teamCode: undefined,\n                upkeepPlanTimeStart: undefined,\n                upkeepPlanTimeEnd: undefined,\n                maintainPlanCode: undefined,\n                state: undefined,\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n            },\n            listQuery1: {\n                //从表查询\n                currentPage: 1,\n                pageSize: 15,\n            },\n            temp: {\n                teamName: undefined,\n                teamCode: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                applicant: undefined,\n                applicantName: undefined,\n                loopMode: undefined,\n                loopCycle: undefined,\n                maintainLevel: undefined,\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined,\n                promptLeadTime: undefined,\n                deviceTypeCode: undefined\n            },\n            updateTemp: {\n                teamName: undefined,\n                teamCode: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                applicant: undefined,\n                applicantName: undefined,\n                loopMode: undefined,\n                loopCycle: undefined,\n                maintainLevel: undefined,\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined,\n                promptLeadTime: undefined,\n                deviceTypeCode: undefined\n            },\n            tempTime: {\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined,\n            },\n            tempFrom: {\n                assembleLine: undefined,\n                assembleQuantity: undefined,\n                bomId: undefined,\n                endDate: undefined,\n                manufactureLine: undefined,\n                materielCode: undefined,\n                startDate: undefined,\n                workStationCode: undefined,\n                timeRange: undefined,\n            },\n            dto: {\n                applicant: undefined,\n                applicantName: undefined,\n                deviceList: [],\n                loopCycle: undefined,\n                loopMode: undefined,\n                maintainLevel: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                positionList: [],\n                promptLeadTime: undefined,\n                spareList: [],\n                teamCode: undefined,\n                teamName: undefined,\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined\n            },\n            upDto: {\n                applicant: undefined,\n                applicantName: undefined,\n                loopCycle: undefined,\n                loopMode: undefined,\n                maintainLevel: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                equipmentCode: undefined,\n                positionList: [],\n                promptLeadTime: undefined,\n                spareList: [],\n                teamCode: undefined,\n                teamName: undefined,\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined\n            },\n            dtos: {\n                maintainPlanCodeList: [],\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined,\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogFormVisible: false,\n            upDialogFormVisible: false,\n            importDialogVisible: false,\n            supportDialogVisible: false,\n            timeDialogFormVisible: false,\n            fromDialogStatus: '',\n            deviceFormVisible: false,\n            fromDialogFormVisible: false,\n            partVisible: false,\n            currentSelectedRow: null,\n            selectedRows: null,\n            selectFromList: null,\n            selectMateriel: null,\n            selectPart: null,\n            rules: {\n                applicant: [\n                    {\n                        required: true,\n                        message: '保养负责人不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                maintainLevel: [\n                    {\n                        required: true,\n                        message: '保养级别不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                teamCode: [\n                    {\n                        required: true,\n                        message: '班组编码不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                teamName: [\n                    {\n                        required: true,\n                        message: '班组名称不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                upkeepPlanTimeEnd: [\n                    {\n                        required: true,\n                        message: '计划保养结束时间不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                upkeepPlanTimeStart: [\n                    {\n                        required: true,\n                        message: '计划保养开始时间不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                deviceTypeCode: [\n                    {\n                        required: true,\n                        message: '设备类型不能为空',\n                        trigger: 'blur',\n                    }\n                ]\n            },\n            timeRules: {\n                upkeepPlanTimeEnd: [\n                    {\n                        required: true,\n                        message: '计划保养结束时间不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n                upkeepPlanTimeStart: [\n                    {\n                        required: true,\n                        message: '计划保养开始时间不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n            },\n            pickerOptionsStart: {\n                disabledDate: (time) => {\n                    let endDateVal = this.tempTime.upkeepPlanTimeEnd\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                },\n            },\n            pickerOptionsEnd: {\n                disabledDate: (time) => {\n                    let beginDateVal = this.tempTime.upkeepPlanTimeStart\n                    if (beginDateVal) {\n                        return time.getTime() < new Date(beginDateVal).getTime()\n                    }\n                },\n            },\n            pickerOptionsStart1: {\n                disabledDate: (time) => {\n                    let endDateVal = this.temp.upkeepPlanTimeEnd\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                },\n            },\n            pickerOptionsEnd1: {\n                disabledDate: (time) => {\n                    let beginDateVal = this.temp.upkeepPlanTimeStart\n                    if (beginDateVal) {\n                        return time.getTime() < new Date(beginDateVal).getTime()\n                    }\n                },\n            },\n        }\n    },\n    created () {\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_upkeep_plan_state: (state) => state.eamDict.dt_upkeep_plan_state,\n            dt_inspect_plan_cycle: (state) => state.eamDict.dt_inspect_plan_cycle,\n            dt_loop_mode: (state) => state.eamDict.dt_loop_mode,\n            dt_upkeep_level: (state) => state.eamDict.dt_upkeep_level,\n        }),\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        'temp.timeRange' (value) {\n            if (value) {\n                this.temp.startDate = value[0]\n                this.temp.endDate = value[1]\n            }\n        },\n        'tempFrom.timeRange' (value) {\n            if (value) {\n                this.tempFrom.startDate = value[0]\n                this.tempFrom.endDate = value[1]\n            }\n        },\n        'temp.deviceTypeCode' (value) {\n            if (value) {\n                this.upkeepList = []\n                this.deviceList = []\n            }\n        }\n    },\n    mounted () {\n\n        this.getGroup()\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        let p = new Promise((res) => {\n            res(\n                this.$store.dispatch('eamDict/getDicData', [\n                    'dt_loop_mode',\n                    'dt_upkeep_level',\n                    'dt_upkeep_plan_state',\n                    'dt_inspect_plan_cycle'\n                ])\n            )\n        })\n        Promise.all([p]).then(() => {\n            this.getList()\n        })\n    },\n    methods: {\n        getBug (val) {\n            this.$set(this.temp, 'applicant', val.employeeCode)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        //获取班组\n        getGroup () {\n            queryRecords(this.listQuery1).then((res) => {\n                this.groupList = res.data.list\n            })\n        },\n        //班组选择\n        changeClass (val) {\n            if (val) {\n                this.temp.teamName = val.teamCode\n                this.updateTemp.teamName = val.teamName\n            }\n        },\n        getList () {\n            //获取表格数据\n            if (this.value) {\n                var d1 = this.value[0]\n                var d2 = this.value[1]\n                this.listQuery.upkeepPlanTimeStart = d1\n                this.listQuery.upkeepPlanTimeEnd = d2\n            } else {\n                this.listQuery.upkeepPlanTimeStart = ''\n                this.listQuery.upkeepPlanTimeEnd = ''\n            }\n            api.queryRecords(this.listQuery).then((res) => {\n                this.list = res.data.list\n                let options = [this.dt_loop_mode, this.dt_upkeep_level, this.dt_inspect_plan_cycle]\n                this.list = this.$myFun.srmCodeToName(\n                    this.list,\n                    options,\n                    ['loopMode', 'maintainLevel', 'cycleUnit']\n                )\n                this.total = res.data.pages.count\n            })\n        },\n        //获取组织名称\n        org (val) {\n            this.temp.orgName = val\n            this.updateTemp.orgName = val\n        },\n        //保养负责人弹窗\n        handleApplicant () {\n            this.supportDialogVisible = true\n        },\n        //保养父子传值\n        handleSupport (row) {\n            this.parentRow = row\n        },\n        //保养确认\n        supportCreate () {\n            this.temp.applicant = this.parentRow[0].employeeCode\n            this.temp.applicantName = this.parentRow[0].employeeName\n            this.updateTemp.applicant = this.parentRow[0].employeeCode\n            this.updateTemp.applicantName = this.parentRow[0].employeeName\n            this.supportDialogVisible = false\n        },\n        resetTemp () {\n            this.temp = {\n                teamName: undefined,\n                teamCode: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                applicant: undefined,\n                applicantName: undefined,\n                loopMode: undefined,\n                loopCycle: undefined,\n                maintainLevel: undefined,\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined,\n                promptLeadTime: undefined,\n            }\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //打开设备编码弹窗\n        createDevice () {\n            if (!this.temp.deviceTypeCode) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备类型',\n                    type: 'warning',\n                })\n                return\n            }\n            setTimeout(() => {\n                this.$refs.eqmtSelect.listQuery.typeCode = this.temp.deviceTypeCode\n                this.$refs.eqmtSelect.getList()\n            }, 0)\n            this.deviceFormVisible = true\n        },\n        //设备编码确认\n        deviceCreate () {\n            let deviceList = this.deviceList.concat(\n                this.$refs.eqmtSelect.currentSelect\n            )\n            this.deviceList = deviceList.filter((x, index) => {\n                var arrids = []\n                deviceList.forEach((item) => {\n                    arrids.push(item.deviceCode)\n                })\n                return arrids.indexOf(x.deviceCode) === index\n            })\n            this.deviceFormVisible = false\n            this.$refs.eqmtSelect.currentSelect = null\n        },\n        //删除设备编码\n        deleteDevice () {\n            if (this.selectFromList && this.selectFromList.length > 0) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        this.deviceList = this.$myFun.getArrDifference(\n                            this.deviceList,\n                            this.selectFromList\n                        )\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000,\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        //打开部位弹窗\n        createPart () {\n            setTimeout(() => {\n                this.$refs.partSelect.getList()\n            }, 0)\n            this.partVisible = true\n        },\n        //部位确认\n        getPart () {\n            let upkeepList = this.upkeepList.concat(\n                this.$refs.partSelect.currentSelect\n            )\n            this.upkeepList = upkeepList.filter((x, index) => {\n                var arrids = []\n                upkeepList.forEach((item) => {\n                    arrids.push(item.partCode)\n                })\n                return arrids.indexOf(x.partCode) === index\n            })\n\n            this.partVisible = false\n            this.$refs.partSelect.currentSelect = undefined\n        },\n        //删除部位\n        deletePart () {\n            if (this.selectPart && this.selectPart.length > 0) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        this.upkeepList = this.$myFun.getArrDifference(\n                            this.upkeepList,\n                            this.selectPart\n                        )\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000,\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        //打开物料弹窗\n        createMateriel () {\n            this.importDialogVisible = true\n            setTimeout(() => {\n                this.$refs.importDialog.getEquipmentData()\n            }, 0)\n        },\n        //物料编码确认\n        materielUpdate () {\n            let materielList = this.materielList.concat(\n                this.$refs.importDialog.listSelected\n            )\n            this.materielList = materielList.filter((x, index) => {\n                var arrids = []\n                materielList.forEach((item) => {\n                    arrids.push(item.materielCode)\n                })\n                return arrids.indexOf(x.materielCode) === index\n            })\n            this.importDialogVisible = false\n            this.$refs.importDialog.listSelected = undefined\n\n        },\n        //删除物料\n        deleteMateriel () {\n            if (this.selectMateriel && this.selectMateriel.length > 0) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        this.materielList = this.$myFun.getArrDifference(\n                            this.materielList,\n                            this.selectMateriel\n                        )\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000,\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        //新增\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.getGroup()\n            this.materielList = []\n            this.upkeepList = []\n            this.deviceList = []\n            this.dialogFormVisible = true\n        },\n        //新增方法\n        create () {\n            //编辑确认\n            let noNumber = this.materielList.filter(i => {\n                return !i.applyQuantity\n            })\n            if (this.deviceList.length == 0) {\n                this.$message({\n                    title: '警告',\n                    message: '设备表不能为空',\n                    type: 'warning',\n                })\n                return false\n            }\n            if (noNumber.length !== 0) {\n                this.$message({\n                    title: '警告',\n                    message: '备件数量不能为空',\n                    type: 'warning',\n                })\n                return false\n            }\n            this.$refs['tempref'].validate((valid) => {\n                if (valid) {\n\n                    this.dto.applicant = this.temp.applicant\n                    this.dto.applicantName = this.temp.applicantName\n                    this.dto.loopCycle = parseInt(this.temp.loopCycle)\n                    this.dto.loopMode = this.temp.loopMode\n                    this.dto.cycleUnit = this.temp.cycleUnit\n                    this.dto.maintainLevel = this.temp.maintainLevel\n                    this.dto.orgCode = this.temp.orgCode\n                    this.dto.orgName = this.temp.orgName\n                    this.dto.promptLeadTime = parseInt(this.temp.promptLeadTime)\n                    this.dto.teamCode = this.temp.teamCode\n                    this.dto.teamName = this.temp.teamName\n                    this.dto.upkeepPlanTimeEnd = this.temp.upkeepPlanTimeEnd\n                    this.dto.upkeepPlanTimeStart = this.temp.upkeepPlanTimeStart\n                    this.dto.deviceTypeCode = this.temp.deviceTypeCode\n                    this.dto.positionList = this.upkeepList.map((i, index) => {\n                        return {\n                            ifNormal: i.ifNormal,\n                            maintenanceCode: i.maintenanceCode,\n                            remark: i.remark,\n                            serialNumber: index + 1\n                        }\n                    })\n                    this.dto.spareList = this.materielList\n                    this.dto.deviceList = this.deviceList.map(i => {\n                        return i.deviceCode\n                    })\n\n                    api.addRecords(this.dto).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //编辑\n        handleUpdate () {\n            //编辑按钮单击事件方法\n            if (this.selectedRows) {\n                if (this.selectedRows.state == '生效') {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对生效状态下的数据进行编辑',\n                        type: 'warning',\n                    })\n                    return false\n                }\n                api.detailsRecords(this.selectedRows.maintainPlanCode).then(res => {\n                    this.updateTemp = res.data\n                    this.materielList = res.data.spareList\n                    this.upkeepList = res.data.positionList\n                    this.upDialogFormVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        //编辑方法\n        update () {\n            //编辑确认\n            this.upDto.applicant = this.updateTemp.applicant\n            this.upDto.applicantName = this.updateTemp.applicantName\n            this.upDto.loopCycle = parseInt(this.updateTemp.loopCycle)\n            this.upDto.cycleUnit = this.updateTemp.cycleUnit\n            this.upDto.loopMode = this.updateTemp.loopMode\n            this.upDto.loopMode = this.updateTemp.loopMode\n            this.upDto.maintainLevel = this.updateTemp.maintainLevel\n            this.upDto.orgCode = this.updateTemp.orgCode\n            this.upDto.orgName = this.updateTemp.orgName\n            this.upDto.equipmentCode = this.updateTemp.equipmentCode\n            this.upDto.promptLeadTime = parseInt(this.updateTemp.promptLeadTime)\n            this.upDto.teamCode = this.updateTemp.teamCode\n            this.upDto.teamName = this.updateTemp.teamName\n            this.upDto.upkeepPlanTimeEnd = this.updateTemp.upkeepPlanTimeEnd\n            this.upDto.upkeepPlanTimeStart = this.updateTemp.upkeepPlanTimeStart\n            this.upDto.deviceTypeCode = this.updateTemp.deviceTypeCode\n            this.upDto.positionList = this.upkeepList\n            this.upDto.spareList = this.materielList\n            this.$refs['updateTemp'].validate((valid) => {\n                if (valid) {\n                    api.updateRecords(this.selectedRows.maintainPlanCode, this.upDto).then(() => {\n                        this.getList()\n                        this.upDialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '编辑成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        //删除\n        handleDelete () {\n            //删除按钮单击事件方法\n            if (this.selectedRows) {\n                if (this.selectedRows.state == '生效') {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对生效状态下的数据进行删除',\n                        type: 'warning',\n                    })\n                    return false\n                }\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        api.deleteRecords([\n                            this.selectedRows.maintainPlanCode,\n                        ]).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000,\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        resetTime () {\n            this.tempTime = {\n                upkeepPlanTimeEnd: undefined,\n                upkeepPlanTimeStart: undefined,\n            }\n        },\n        //打开时间调整\n        handleTime () {\n            if (this.selectedRows) {\n                if (this.selectedRows.state == '生效') {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对生效状态下的数据进行时间调整',\n                        type: 'warning',\n                    })\n                    return false\n                }\n                this.tempTime.upkeepPlanTimeEnd = this.selectedRows.upkeepPlanTimeEnd\n                this.tempTime.upkeepPlanTimeStart = this.selectedRows.upkeepPlanTimeStart\n                this.timeDialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        //时间调整确认\n        timeUpdate () {\n            this.dtos.maintainPlanCodeList = []\n            this.dtos.maintainPlanCodeList.push(\n                this.selectedRows.maintainPlanCode\n            )\n            this.dtos.upkeepPlanTimeEnd = this.tempTime.upkeepPlanTimeEnd\n            this.dtos.upkeepPlanTimeStart = this.tempTime.upkeepPlanTimeStart\n            this.$refs['tempTime'].validate((valid) => {\n                if (valid) {\n                    api.timeRecords(this.dtos).then(() => {\n                        this.getList()\n                        this.timeDialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '日期调整成功',\n                            type: 'success',\n                            duration: 2000,\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //派工\n        handleDispatch () {\n            if (this.selectedRows.state == '生效') {\n                this.$message({\n                    title: '警告',\n                    message: '无法对生效状态下的数据进行派工',\n                    type: 'warning',\n                })\n                return false\n            }\n            if (this.selectedRows) {\n                this.$confirm('是否开始派工?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        api.dispatchRecords(this.selectedRows.maintainPlanCode).then(() => {\n                            this.getList()\n                            this.$message({\n                                title: '成功',\n                                message: '派工成功',\n                                type: 'success',\n                                duration: 2000,\n                            })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n\n\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                })\n            }\n        },\n        //主表勾选\n        selectChange (val) {\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows)\n        },\n        //主表行点击\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        //设备选择框选中\n        selectFromChange (val) {\n            this.selectFromList = val\n        },\n        //物料选择框选中\n        selectMaterielChange (val) {\n            this.selectMateriel = val\n        },\n        //部位选择框选中\n        selectPartChange (val) {\n            this.selectPart = val\n        },\n\n    },\n}\n",null]}