{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/materiel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/materiel/index.vue","mtime":1600927611451},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/data-base/materiel\"\nimport Pagination from \"@/components/Pagination\"\nimport ImportFile from \"@/components/ImportFile\"\nimport dictItemSelect from \"@/components/Select/dictItemSelect.vue\"\nimport measureUnitTable from \"@/components/Table/measureUnitTable.vue\"\nimport { DICT_CODE, TWO_STATE_OPTIONS } from \"@/utils/constant\"\nimport { parseTime } from \"@/utils\"\n\nimport qrcode from \"@/components/QRCode\"\n\nexport default {\n    name: \"materiel\",\n    components: { Pagination, dictItemSelect, measureUnitTable, ImportFile, qrcode },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            theight: 0,//表格高度\n            dialogPrintVisible: false,\n            selectlistRow: [],\n            printData: {},//打印数据\n            code: '',\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                materielCode: undefined,\n                materielName: undefined,\n                materielType: undefined,\n                materielClassify: undefined,\n                materielGroup: undefined,\n                specification: undefined,\n                materialQuality: undefined,\n                productionState: undefined\n            },\n            temp: {\n                classStandard: undefined,\n                externalMaterielCode: undefined,\n                height: undefined,\n                importantMaterielMark: 0,\n                length: undefined,\n                materialQuality: undefined,\n                materielClassify: undefined,\n                materielCode: undefined,\n                materielEngName: undefined,\n                materielGroup: undefined,\n                materielName: undefined,\n                materielType: undefined,\n                measuringUnit: undefined,\n                measuringUnitName: undefined,\n                productStandard: undefined,\n                productionState: undefined,\n                remark: undefined,\n                shelfLife: undefined,\n                specification: undefined,\n                volume: undefined,\n                weight: undefined,\n                width: undefined\n            },\n            materielCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogFormVisible2: false,\n            importDialogVisible: false,//导入弹框\n            modalNo: 'EXTP-BAS-0001',//导入模板编号\n            dialogStatus: \"\",\n            tableKey: 0,\n            DICT_CODE: DICT_CODE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            rules: {\n                measuringUnitName: [\n                    { required: true, message: \"计量单位不能为空\", trigger: \"blur\" }\n                ],\n                materielCode: [\n                    { required: true, message: \"物料编码不能为空\", trigger: \"blur\" },\n                    { pattern: /^[A-Z-_0-9]{1,50}$/, message: \"由大写字母，数字，—和_组成，长度不能超过50\", trigger: \"blur\" }\n                ],\n                materielName: [\n                    { required: true, message: \"物料名称不能为空\", trigger: \"blur\" },\n                    { max: 100, message: this.$t(\"validate.max32\"), trigger: \"blur\" }\n                ],\n                materielEngName: [\n                    { required: true, message: \"物料名称不能为空\", trigger: \"blur\" },\n                    { max: 100, message: this.$t(\"validate.max32\"), trigger: \"blur\" }\n                ],\n                materielType: [\n                    { required: true, message: \"物料类型不能空\", trigger: \"blur\" }\n                ],\n                materielClassify: [\n                    { required: true, message: \"物料分类不能空\", trigger: \"blur\" }\n                ],\n\n                specification: [\n                    { max: 50, message: \"长度不能超过50\", trigger: \"blur\" }\n                ],\n                materialQuality: [\n                    { max: 50, message: \"长度不能超过50\", trigger: \"blur\" }\n                ],\n                externalMaterielCode: [\n                    { pattern: /^[A-Z-_0-9]{1,50}$/, message: \"由大写字母，数字，—和_组成，长度不能超过50\", trigger: \"blur\" }\n                ],\n                weight: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: \"由正数组成，保留两位有效数，长度不能超过14\", trigger: \"blur\" }\n                ],\n                volume: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: \"由正数组成，保留两位有效数，长度不能超过14\", trigger: \"blur\" }\n                ],\n                length: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: \"由正数组成，保留两位有效数，长度不能超过14\", trigger: \"blur\" }\n                ],\n                width: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: \"由正数组成，保留两位有效数，长度不能超过14\", trigger: \"blur\" }\n                ],\n                height: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: \"由正数组成，保留两位有效数，长度不能超过14\", trigger: \"blur\" }\n                ],\n                shelfLife: [\n                    { pattern: /^[1-9]\\d{0,11}$/, message: \"由正数组成，长度不能超过12\", trigger: \"blur\" }\n                ],\n                classStandard: [\n                    { max: 100, message: this.$t(\"validate.max32\"), trigger: \"blur\" }\n                ],\n                productStandard: [\n                    { max: 50, message: \"长度不能超过50\", trigger: \"blur\" }\n                ],\n                remark: [\n                    { max: 512, message: \"描述长度为512内\", trigger: \"blur\" }\n                ]\n            }\n        }\n    },\n    created () {\n        this.getList()\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = \"create\"\n            this.dialogFormVisible = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        handleUpdate () {\n            //编辑弹窗\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true //员工编码不可以编写\n                this.temp = this.selectlistRow[0] // copy obj\n                api.getRecord(this.temp.materielCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = \"update\"\n                    this.dialogFormVisible = true\n                    this.$nextTick(() => {\n                        this.$refs[\"temp\"].clearValidate()\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        update () {\n            //编辑\n            this.$refs[\"temp\"].validate(valid => {\n                if (valid) {\n                    // const tempData = Object.assign({}, this.temp)\n                    // tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n                    api.updateRecord(this.temp.materielCode, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: \"成功\",\n                                message: \"更新成功\",\n                                type: \"success\",\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm(\"此操作将删除所选中数据, 是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.materielCode\n                        })\n                        api.deleteRecord(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: \"成功\",\n                                    message: \"删除成功\",\n                                    type: \"success\",\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: \"info\",\n                            message: \"已取消删除\"\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"新增成功\",\n                            type: \"success\",\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                classStandard: undefined,\n                externalMaterielCode: undefined,\n                height: undefined,\n                importantMaterielMark: 0,\n                length: undefined,\n                materialQuality: undefined,\n                materielClassify: undefined,\n                materielCode: undefined,\n                materielEngName: undefined,\n                materielGroup: undefined,\n                materielName: undefined,\n                materielType: undefined,\n                measuringUnit: undefined,\n                measuringUnitName: undefined,\n                productStandard: undefined,\n                productionState: undefined,\n                remark: undefined,\n                shelfLife: undefined,\n                specification: undefined,\n                volume: undefined,\n                weight: undefined,\n                width: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleClose2 () { },\n        handleMeasuringUnit () {\n            this.dialogFormVisible2 = true\n        },\n        handleDblclick (row) {\n            this.temp.measuringUnit = row.measureCode\n            this.temp.measuringUnitName = row.measureName\n            this.dialogFormVisible2 = false\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import(\"@/vendor/Export2Excel\").then(excel => {\n                const tHeader = [\n                    \"物料编码\", \"物料名称\", \"物料名称（英文）\",\n                    \"物料类型\", \"物料分类\", \"物料组\",\n                    \"规格\", \"材质\", \"计量单位\",\n                    \"外部物料编码\", \"重量\", \"体积\",\n                    \"长\", \"宽\", \"高\",\n                    \"保质期\", \"产品等级\", \"产品标准\",\n                    \"生产状态\", \"重保标记\", \"备注\"\n                ]\n                const filterVal = [\n                    \"materielCode\", \"materielName\", \"materielEngName\",\n                    \"materielType\", \"materielClassify\", \"materielGroup\",\n                    \"specification\", \"materialQuality\", \"measuringUnitName\",\n                    \"externalMaterielCode\", \"weight\", \"volume\",\n                    \"length\", \"width\", \"height\",\n                    \"shelfLife\", \"classStandard\", \"productStandard\",\n                    \"productionState\", \"importantMaterielMark\", \"remark\"\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: \"table-list\"\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === \"timestamp\") {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        },\n        handleImport () {\n            this.importDialogVisible = true\n            this.$nextTick(() => {\n                this.$refs.importDialog.getList()\n            })\n        },\n        //单据打印\n        receiptPrint () {\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                this.dialogPrintVisible = true\n                this.dialogStatus = \"print\"\n                this.printData = this.selectlistRow\n                this.code = this.printData[0].materielCode\n                this.$nextTick(() => {\n                    this.$refs.childQRcode.qrCreate(this.printData[0].materielCode)\n                })\n\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'))\n                return false\n            }\n\n        },\n        //单据打印执行\n        doReceiptPrint () {\n            let newWin = window.open(\"\")\n            var newstr = document.getElementById('receipt').innerHTML\n            newWin.document.write(newstr)\n            newWin.document.close()//IE添加\n\n            setTimeout(function () {\n                newWin.print()\n                newWin.close()\n            }, 100)\n        },\n    }\n};\n",null]}