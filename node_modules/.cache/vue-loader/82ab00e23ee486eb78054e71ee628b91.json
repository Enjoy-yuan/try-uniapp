{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/content/tabPlanList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/content/tabPlanList.vue","mtime":1596610934083},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryRecords, queryRow, updateRecords, deleteRecords } from \"@/api/project/srm/supplierSelect/options/option\"\nimport { mapState } from \"vuex\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport Pagination from \"@/components/Pagination\"\n// import { mapState } from \"vuex\"\n\nexport default {\n    name: \"tabPlanList\",\n    components: { caiGou, Pagination },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: false,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            dataList: [],\n            dataListWL: [],\n            dataListGYS: [],\n            total: 0,\n            rangeDate: null,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: null,\n                startDate: null,\n                endDate: null,\n                choiceMethod: null,\n                state: null\n            },\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            filterConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '', copmNum: 0, class: 'filter-item' },\n                { type: 'dictSelect', dType: 'dt_srm_pdf', label: '选择方式', prop: 'choiceMethod', width: '', class: 'filter-item ml_5' },\n                { type: 'dictSelect', dType: 'dt_srm_p0', label: '状态', prop: 'state', width: '', class: 'filter-item ml_5' },\n                { type: 'daterange', label: '创建时间', prop: 'rangeDate', width: '250px', startpl: '开始时间', endpl: '结束时间', class: 'filter-item ml_5' },\n            ],\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'handleAdd', name: '新增' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handlePublish', name: '发布' },\n                { id: 2, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleUpload', name: '资料上传' },\n                { id: 3, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleTimeset', name: '投开标时间设置' }\n            ],\n            tableConfig: [\n                { label: '状态', prop: 'stateCN', align: 'center', width: 'auto' },//CN\n                { label: '方案编号', prop: 'planNo', align: 'center', width: '150' },\n                { label: '方案描述', prop: 'planDesc', align: 'center', width: '180' },\n                { label: '选择方式', prop: 'choiceMethodCN', align: 'center', width: 'auto' },//CN\n                { label: '技术应答截止时间', prop: 'technicalBidDeadline', align: 'center', width: '150' },\n                { label: '报价截止时间', prop: 'quotationDeadline', align: 'center', width: '150' },\n                { label: '技术开标时间', prop: 'technicalBidOpeningTime', align: 'center', width: '150' },\n                { label: '商务开标时间', prop: 'businessOpeningTime', align: 'center', width: '150' },\n                { label: '报价方式', prop: 'quotationMethodCN', align: 'center', width: 'auto' },\n                { label: '采购组织', prop: 'orgName', align: 'center', width: 'auto' },//Name\n                { label: '编制单位', prop: 'editOrgName', align: 'center', width: 'auto' },\n                { label: '编制人', prop: 'editorName', align: 'center', width: 'auto' },\n                { label: '编制时间', prop: 'createTime', align: 'center', width: '150' },\n                { label: '备注', prop: 'remark', align: 'center', width: 'auto' }\n            ],\n            tableConfigWlSub: [\n                { label: '打包号', prop: 'packageNo', align: 'center', width: '150' },\n                { label: '物料编码', prop: 'materielCode', align: 'center', width: '180' },\n                { label: '物料名称', prop: 'materielName', align: 'center', width: '180' },\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: '120' },//CN\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: 'auto' },\n                { label: '项目号', prop: 'projectNo', align: 'center', width: '150' },\n                { label: '车型', prop: 'prop7', align: 'center', width: 'auto' },//wu sourceType来源类型\n                { label: '基准年', prop: 'baseYearQuantity', align: 'center', width: 'auto' },\n                { label: '第一年需求', prop: 'firstYearQuantity', align: 'center', width: 'auto' },\n                { label: '第二年需求', prop: 'secondYearQuantity', align: 'center', width: 'auto' },\n                { label: '第三年需求', prop: 'thirdYearQuantity', align: 'center', width: 'auto' },\n                { label: '第四年需求', prop: 'forthYearQuantity', align: 'center', width: 'auto' },\n                { label: '第五年需求', prop: 'fifthYearQuantity', align: 'center', width: 'auto' }\n            ],\n            tableConfigGysSub: [\n                { label: '供应商编码', prop: 'supplierCode', align: 'center', width: 'auto' },\n                { label: '供应商名称', prop: 'supplierName', align: 'center', width: '180' },\n                { label: '推荐理由', prop: 'recommendReason', align: 'center', width: 'auto' }\n            ]\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_materiel_classify: state => state.dict.dt_materiel_classify,\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pdf: state => state.dict.dt_srm_pdf,//选择方式\n            dt_srm_pdi: state => state.dict.dt_srm_pdi//报价方式\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_materiel_classify\", \"dt_srm_p0\", \"dt_srm_pdf\", \"dt_srm_pdi\"])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n    },\n    watch: {\n        'rangeDate' (value) {\n            if (value) {\n                this.listQuery.startDate = value[0]\n                this.listQuery.endDate = value[1]\n            } else {\n                this.listQuery.startDate = null\n                this.listQuery.endDate = null\n            }\n        },\n    },\n    methods: {\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 215\n        },\n        //获取表格数据\n        getList () {\n            if (this.listQuery.orgCode) {\n                queryRecords(this.listQuery).then(res => {\n                    let options = [this.dt_materiel_classify, this.dt_srm_p0, this.dt_srm_pdf, this.dt_srm_pdi]\n                    res.data = this.$myFun.codeToName(res.data, options, [\n                        'materielType', 'state', 'choiceMethod', 'quotationMethod'\n                    ])\n                    this.dataList = res.data.list\n                    this.total = res.data.pages.count\n                    this.setFirstLine()\n                })\n            } else {\n                this.$message({ type: 'warning', message: '采购组织不能为空' })\n            }\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    //新增\n                    this.handleAdd()\n                    break\n                }\n                case 1: {\n                    //发布\n                    this.handlePublish()\n                    break\n                }\n                case 2: {\n                    //资料上传\n                    // this.handleUpload()\n                    this.$message({ type: 'info', message: '仍在开发中' })\n                    break\n                }\n                case 3: {\n                    //投开标时间设置\n                    if (this.currentSelectedRow) {\n                        this.$emit('showST')\n                    } else {\n                        this.$message({\n                            type: 'warning',\n                            message: '请先选择一条信息'\n                        })\n                    }\n                    break\n                }\n            }\n        },\n        //新增按钮\n        handleAdd () {\n            console.log('新增')\n            this.$emit('setFormationState', 'add', null)\n        },\n        handlePublish () {\n            if (this.selectedRows) {\n                if (this.selectedRows.length > 0) {\n                    this.$confirm('确认发布?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        this.publish()\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n                }\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择一条信息'\n                })\n            }\n        },\n        //发布按钮\n        publish () {\n            this.selectedRows.forEach((item, index) => {\n                let pdata = {\n                    method: \"RELEASE\",\n                    planNo: item.planNo,\n                }\n                updateRecords(pdata).then(res => {\n                    console.log('发布res', res)\n                    console.log(index, this.selectedRows.length)\n                    if (index === this.selectedRows.length - 1) {\n                        setTimeout(() => {\n                            this.$message({\n                                type: 'success',\n                                message: '发布成功'\n                            })\n                            this.getList()\n                        }, 300)\n                    }\n                })\n            })\n\n        },\n        // publish: async function () {\n        //     await Promise.all(\n        //         this.selectedRows.forEach(item => {\n        //             let pdata = {\n        //                 method: \"RELEASE\",\n        //                 planNo: item.planNo,\n        //             }\n        //             updateRecords(pdata).then(res => {\n        //                 console.log('发布res', res)\n        //                 this.getList()\n        //             })\n        //         })\n        //     )\n        // },\n        //表格操作编辑\n        handleUpdate (index, row) {\n            console.log('编辑', index, row)\n            queryRow(row.planNo).then(res => {\n                this.$emit('setFormationState', 'edit', res.data)\n            })\n        },\n        //表格操作删除\n        handleDelete (index, row) {\n            console.log('删除', index, row)\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                //api\n                deleteRecords(row.planNo).then(res => {\n                    console.log('删除成功', res)\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        //提交审批\n        handleSubmit (index, row) {\n            console.log('提交审批', index, row)\n            let pdata = {\n                method: \"SUBMIT\",\n                planNo: row.planNo,\n            }\n            updateRecords(pdata).then(res => {\n                console.log('审批res', res)\n                this.$message({ type: 'success', message: '审批成功' })\n                this.getList()\n            })\n        },\n        //单条数据获取\n        getRow () {\n            if (this.currentSelectedRow) {\n                if (this.currentSelectedRow.planNo) {\n                    queryRow(this.currentSelectedRow.planNo).then(res => {\n                        this.dataListWL = res.data.purchasePlanMaterielDTOs\n                        this.dataListGYS = res.data.purchasePlanSupplierDTOs\n                    })\n                }\n            }\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                    this.getRow()\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n                this.getRow()\n            }\n        },\n        //加载时默认选中第一行\n        setFirstLine () {\n            this.$nextTick(() => {\n                if (this.dataList.length > 0) {\n                    this.$refs.tb.toggleRowSelection(this.dataList[0], \"selected\")\n                    this.$refs.tb.setCurrentRow(this.dataList[0])\n                }\n            })\n        },\n        showGys () {\n            this.$refs.refGys.dialogVisible = true\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            console.log(gysRows)\n            this.listQuery.supplierCode = gysRows[0].supplierCode\n            this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName)\n        },\n        //默认选中采购\n        setCaigou (options) {\n            if (options) {\n                if (options.length > 0) {\n                    this.listQuery.orgCode = options[0].organizationCode\n                    this.getList()\n                }\n            }\n        },\n\n    }\n};\n",null]}