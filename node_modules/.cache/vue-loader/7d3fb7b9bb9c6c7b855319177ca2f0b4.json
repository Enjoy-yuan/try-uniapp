{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/systemMenu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/systemMenu/index.vue","mtime":1596610934268},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport {\n    selectDatas,\n    addData,\n    deleteData,\n    selectEndpoints,\n    addRelation,\n    renewData\n} from '@/api/system/menu'\nimport SelectTree from '@/components/SelectTree/index.vue'\nimport SelectTreeOption from '@/components/SelectTreeOption' // Secondary package based on el-pagination\nimport { refreshMenu } from '@/utils/tool'\nimport resource from '@/utils/resource'\nimport getAllHasChildrenRowId from '@/utils/addRouter'\n\nexport default {\n    name: 'systemMenu',\n    components: { Pagination, SelectTree, SelectTreeOption },\n    data() {\n        return {\n            //下拉框树数据\n            isClearable: true, // 可清空（可选）\n            isAccordion: true, // 可收起（可选）\n            valueId: undefined, // 初始ID（可选）\n            props: {\n                // 配置项（必选）\n                value: 'id',\n                label: 'name',\n                children: 'children'\n                // disabled:true\n            },\n            //下拉框树数据\n            tableKey: 0,\n            list: [],\n            listRelation: [],\n            listUnrelation: [],\n            icons: this.$myFun.getSVG,\n            treeData: [],\n            theight: 0, //表格高度\n            btnFucList: [\n                { rowId: '1', btnFunc: '添加', btnName: 'btnAdd' },\n                { rowId: '2', btnFunc: '编辑', btnName: 'btnEdit' },\n                { rowId: '3', btnFunc: '删除', btnName: 'btnDelete' }\n            ], //按钮列表\n            total: 0,\n            total1: 0,\n            total2: 0,\n            listLoading: true,\n            circle: '',\n            listQuery: {\n                parentId: 0,\n                currentPage: 1,\n                pageSize: 15,\n                page: 1\n            },\n            listQuery2: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1\n            },\n            listQueryZy: {\n                currentPage: 1,\n                pageSize: 10,\n                page: true,\n                url: undefined\n            },\n            temp: {\n                allowEmptyValue: 'PC',\n                icons: undefined\n            },\n            treeList: [],\n            allCodes: [],\n            dialogFormVisible: false,\n            dialogFormUser: false,\n            btnAuthorityDialog: false, //按钮权限弹框\n            btnSelectRow: [],\n            childId: [],\n            dialogStatus: '',\n            activeName2: 'first',\n            rules: {\n                catalogCode: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 100,\n                        message: this.$t('validate.max32'),\n                        trigger: 'blur'\n                    }\n                ],\n                catalogName: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 100,\n                        message: this.$t('validate.max32'),\n                        trigger: 'blur'\n                    }\n                ],\n                nodeType: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            dialogPvVisible: false,\n            pvData: [],\n            defaultProps: {\n                rowId: 'rowId', // 父级唯一标识\n                children: 'children',\n                label: 'catalogName'\n            },\n            contentStyleObj: {\n                height: null\n            }\n        }\n    },\n    mounted() {\n        this.$store.dispatch('dict/getDicData', [\n            'dt_org_type',\n            'dt_org_function'\n        ])\n\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n            this.setTreeHeight()\n        }\n        this.getTree()\n        this.getList()\n    },\n    methods: {\n        getValue(value) {\n            this.valueId = value\n            this.$set(this.temp, 'icons', value)\n            console.log(this.valueId, this.temp, 'this.valueId,this.temp')\n        },\n        //添加按钮\n        addButton() {\n            this.btnFucList.push({ rowId: '', btnFunc: '', btnName: '' })\n        },\n        //删除按钮\n        deleteButton() {},\n        //保存按钮\n        confirmBtnList() {},\n        btnSelectChange(val) {\n            this.btnSelectRow = val\n        },\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight() - 10\n        },\n        resetTemp() {\n            this.temp = {\n                nodeType: 1,\n                allowEmptyValue: 'PC'\n            }\n        },\n        pidFilter(value) {\n            //父目录过滤器\n            if (value === 0) {\n                return '根目录'\n            } else {\n                for (let i = 0; i < this.list.length; i++) {\n                    if (this.list[i].rowId == value) {\n                        return this.list[i].catalogName\n                    }\n                }\n            }\n        },\n        handleTabClick(tab) {\n            //选项卡切换\n            if (tab.name == 'second') {\n                this.getListRelation()\n            } else {\n                this.getListUnelation()\n            }\n        },\n        destroyed() {\n            //自适应窗体大小\n            this.setTreeHeight()\n            window.removeEventListener('resize', this.setTableHeight)\n            window.removeEventListener('resize', this.setTreeHeight)\n        },\n        getList() {\n            //获取数据\n            selectDatas(this.listQuery).then(response => {\n                this.list = response.data.list.filter(v => {\n                    if (resource[v.url]) {\n                        if (\n                            v.parentId == 0 ||\n                            getAllHasChildrenRowId.indexOf(v.rowId) > 0\n                        ) {\n                            v.icons = v.icons || 'setting-fill'\n                        } else {\n                            v.icons = v.icons || 'circle'\n                        }\n                        return v\n                    }\n                })\n                this.total = response.data.pages.count\n                setTimeout(() => {\n                    this.setTableHeight()\n                    this.setTreeHeight()\n                }, 100)\n            })\n        },\n        getTree() {\n            //获取树数据\n            selectDatas().then(response => {\n                this.treeData = this.$myFun.addTreeRoot(response.data)\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        //树高度设置\n        setTreeHeight() {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight()\n        },\n        handleCreate() {\n            //新增弹窗调用\n            if (this.listQuery.parentId || this.listQuery.parentId === 0) {\n                this.resetTemp()\n                this.dialogStatus = 'create'\n                this.valueId = undefined\n                this.$set(this.temp, 'icons', undefined)\n                this.dialogFormVisible = true\n                this.temp.parentId = this.listQuery.parentId\n                this.$nextTick(() => {\n                    this.$refs['dataForm'].clearValidate()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择上级菜单',\n                    type: 'warning'\n                })\n            }\n        },\n        handleUpdate() {\n            //更新弹窗调用\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.temp = this.selectlistRow[0]\n                this.valueId = this.selectlistRow[0].icons\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n                this.$nextTick(() => {\n                    this.$refs['dataForm'].clearValidate()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleFilter() {\n            //查询\n            this.getList()\n        },\n        handleResource() {\n            this.listQueryZy.currentPage = 1\n            selectEndpoints(this.listQueryZy).then(response => {\n                this.listUnrelation = response.data.list\n                this.total1 = response.data.pages.count\n            })\n        },\n        createData() {\n            //新增\n            this.$refs['dataForm'].validate(valid => {\n                if (valid) {\n                    addData(this.temp).then(() => {\n                        this.getList()\n                        this.getTree()\n                        refreshMenu()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '创建成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        updateData() {\n            //更新\n            this.$refs['dataForm'].validate(valid => {\n                if (valid) {\n                    // const tempData = Object.assign({}, this.temp)\n                    // tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n                    renewData(this.temp.catalogCode, this.temp).then(() => {\n                        this.getList()\n                        this.getTree()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        refreshMenu()\n                        // this.$router.go(0)\n                    })\n                }\n            })\n        },\n        handleDelete() {\n            //删除\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        deleteData(this.selectlistRow[0].catalogCode).then(\n                            () => {\n                                this.getList()\n                            }\n                        )\n                        this.getTree()\n                        refreshMenu()\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        getListRelation() {\n            //查询关联的数据\n            this.listQuery2.catalogCode = this.selectlistRow[0].catalogCode\n            selectEndpoints(this.listQuery2).then(response => {\n                this.listRelation = response.data.list\n                this.total2 = response.data.pages.count\n            })\n        },\n        getListUnelation() {\n            //查询未关联资源列表\n            selectEndpoints(this.listQueryZy).then(response => {\n                this.listUnrelation = response.data.list\n                this.total1 = response.data.pages.count\n            })\n        },\n        handleAdd() {\n            //资源关联弹窗\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.dialogFormUser = true\n                if (this.activeName2 == 'second') {\n                    this.getListRelation()\n                    this.activeName2 = 'first'\n                }\n                this.getListUnelation()\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        authority() {\n            //授权\n            let fun = 'SAVE'\n            if (this.selectlistRowUser && this.selectlistRowUser.length > 0) {\n                let endpointCodes = []\n                for (\n                    let index = 0;\n                    index < this.selectlistRowUser.length;\n                    index++\n                ) {\n                    endpointCodes[index] = this.selectlistRowUser[\n                        index\n                    ].endpointCode\n                }\n                addRelation(\n                    this.selectlistRow[0].catalogCode,\n                    endpointCodes,\n                    fun\n                ).then(() => {\n                    // this.getListUnelation()\n                    this.$message({\n                        title: '成功',\n                        message: '授权成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //全部授权\n        authorityAll() {\n            let fun = 'SAVE'\n            let a = {\n                currentPage: 1,\n                pageSize: 3000,\n                page: true\n            }\n            selectEndpoints(a).then(response => {\n                this.allCodes = response.data.list.map(v => {\n                    return v.endpointCode\n                })\n            })\n            addRelation(\n                this.selectlistRow[0].catalogCode,\n                this.allCodes,\n                fun\n            ).then(() => {\n                // this.getListUnelation()\n                this.$message({\n                    title: '成功',\n                    message: '全部授权成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        unauthority() {\n            //取消授权\n            let fun = 'REMOVE'\n            if (this.selectlistRowUser && this.selectlistRowUser.length > 0) {\n                let endpointCodes = []\n                for (\n                    let index = 0;\n                    index < this.selectlistRowUser.length;\n                    index++\n                ) {\n                    endpointCodes[index] = this.selectlistRowUser[\n                        index\n                    ].endpointCode\n                }\n                addRelation(\n                    this.selectlistRow[0].catalogCode,\n                    endpointCodes,\n                    fun\n                ).then(() => {\n                    this.getListRelation()\n                    this.$message({\n                        title: '成功',\n                        message: '取消授权成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // 获取表格选中时的数据\n        selectRow(val) {\n            if (val.length > 1) {\n                this.$refs.tb_a.clearSelection() //清除其他行的选中\n                this.$refs.tb_a.toggleRowSelection(\n                    val[val.length - 1],\n                    'selected'\n                ) //单击行绑定点击事件\n            } else if (val.length === 1) {\n                this.selectlistRow = val\n            }\n        },\n        rowClick(val) {\n            this.$refs.tb_a.clearSelection() //清除其他行的选中\n            this.$refs.tb_a.toggleRowSelection(val) //单击行绑定点击事件\n        },\n\n        selectRowUser(val) {\n            this.selectlistRowUser = val\n        },\n        selectRowUser1(val) {\n            this.selectlistRowUser1 = val\n        },\n        handleNodeClick(data) {\n            //点击树查询\n            this.listQuery.parentId = data.rowId\n            this.getList()\n        },\n        //按钮权限添加\n        handleBtnAuthority() {\n            this.btnAuthorityDialog = true\n        }\n    }\n}\n",null]}