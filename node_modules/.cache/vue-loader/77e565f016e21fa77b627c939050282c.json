{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/product/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/product/index.vue","mtime":1596610933510},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/dataBase/product.js'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nexport default {\n    name: 'product',\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                productCode: undefined,\n                productName: undefined\n            },\n            temp: {\n                productCode: undefined,\n                productName: undefined,\n                productType: undefined,\n                unitPrice: undefined,\n                remark: undefined\n            },\n            productCode: undefined,\n            readonly: false,\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            rules: {\n                productCode: [\n                    {\n                        required: true,\n                        message: '产品编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 50,\n                        message: '长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ],\n                unitPrice: [{\n                    required: true,\n                    message: '单价不能为空',\n                    trigger: 'blur'\n                }],\n                productName: [\n                    {\n                        required: true,\n                        message: '产品名称不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 50,\n                        message: '长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ],\n                productType: [\n                    {\n                        required: true,\n                        message: '请选择产品类型',\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 50,\n                        message: '长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: [\n                    {\n                        max: 50,\n                        message: '长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_product_type: state => state.emsDict.dt_product_type\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.$store.dispatch('emsDict/getDicData', ['dt_product_type'])\n        this.getList()\n    },\n    destroyed () {\n        this.setTableHeight()\n        this.$store.dispatch('emsDict/getDicData', ['dt_product_type'])\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.getDTOs(this.listQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.readonly = false //员工编码不可以编写\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true //员工编码不可以编写\n                this.temp = JSON.parse(JSON.stringify(this.selectlistRow[0]))\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update: throttle(\n            function () {\n                this.$refs['temp'].validate(valid => {\n                    if (valid) {\n                        api.patchDTO(this.temp.productCode, this.temp).then(\n                            () => {\n                                this.getList()\n                                this.dialogFormVisible = false\n                                this.$message({\n                                    title: '成功',\n                                    message: '更新成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                            }\n                        )\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //删除列表\n        handleDelete () {\n            if (this.selectlistRow && this.selectlistRow.length >= 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.productCode\n                        })\n                        api.deleteDTO(ids).then(() => {\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create: throttle(\n            function () {\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        api.postDTO(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        resetTemp () {\n            this.temp = {\n                productCode: undefined,\n                productName: undefined,\n                productType: undefined,\n                remark: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n        },\n        deleteQuery () {\n            // 清除查询条件\n            this.listQuery.currentPage = 1\n            this.listQuery.productCode = undefined\n            this.listQuery.productName = undefined\n            this.getList()\n        },\n    }\n}\n",null]}