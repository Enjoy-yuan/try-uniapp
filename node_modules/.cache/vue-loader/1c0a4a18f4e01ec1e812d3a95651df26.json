{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/kpiModel/workCenter/rightcontent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/kpiModel/workCenter/rightcontent.vue","mtime":1596610933508},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/work-center'\nimport Pagination from '@/components/Pagination'\nimport warehouseSelect from '@/components/Select/warehouse-select.vue'\nimport orgSelect from '@/components/Select/orgSelect.vue'\nimport { mapState } from 'vuex'\n\n\nexport default {\n    name: 'workCenter',\n    components: { Pagination, warehouseSelect, orgSelect },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            DT_ORG_TYPE: 'dt_org_type_factory',\n            theight: 0,//表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: undefined,\n                workCenterCode: undefined,\n                workCenterName: undefined,\n                parentCode: undefined\n            },\n            temp: {\n                orgCode: undefined,\n                workCenterType: undefined,\n                workCenterCode: undefined,\n                workCenterName: undefined,\n                productNum: undefined,\n                feedArea: undefined,\n                parentCode: undefined,\n                workCenterClass: undefined,\n                workCenterGroup: undefined,\n                workCenterModel: undefined,\n                beatTimeunit: undefined,\n                productBeat: undefined,\n                bufferArea: undefined\n            },\n            orgCode: undefined,\n            parentCode: undefined,\n            parentName: undefined,\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            rules: {\n                workCenterType: [\n                    { required: true, message: '工作中心类型不能为空', trigger: 'blur' }\n                ],\n                workCenterClass: [\n                    { required: true, message: '工作中心类别不能为空', trigger: 'blur' }\n                ],\n                workCenterCode: [\n                    { required: true, message: '工作中心编号不能为空', trigger: 'blur' },\n                    { pattern: /^[A-Z-_0-9]{0,32}$/, message: '由大写字母、数字、-和_组成，长度为32', trigger: 'blur' }\n                ],\n                workCenterName: [\n                    { required: true, message: '工作中心编号不能为空', trigger: 'blur' },\n                    { max: 100, message: '颜色简称长度不能超过100', trigger: 'blur' }\n                ],\n                productNum: [\n                    { pattern: /^[1-9]\\d{0,8}$/, message: '由正数组成，长度不能超过8', trigger: 'blur' }\n                ],\n                productBeat: [\n                    { pattern: /^[0-9]{0,6}(\\.[0-9]{4})?$/, message: '由正数组成，保留四位有效数，长度不能超过6', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_workcenter_type: state => state.emsDict.dt_workcenter_type,\n            dt_workcenter_class: state => state.emsDict.dt_workcenter_class,\n            dt_workcenter_group: state => state.emsDict.dt_workcenter_group,\n            dt_workcenter_model: state => state.emsDict.dt_workcenter_model,\n            dt_timeunit: state => state.emsDict.dt_timeunit\n        })\n    },\n    mounted () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_workcenter_type', 'dt_workcenter_class', 'dt_workcenter_group', 'dt_workcenter_model', 'dt_timeunit'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    destroyed () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_workcenter_type', 'dt_workcenter_class', 'dt_workcenter_group', 'dt_workcenter_model', 'dt_timeunit'])\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        getList (node) {\n            if (node) {\n\n                this.orgCode = node.orgCode\n                if (node.workCenterCode != undefined) {\n                    this.parentCode = node.workCenterCode\n                    this.parentName = node.label\n                } else {\n                    this.parentCode = ''\n                    this.parentName = ''\n                }\n                this.listQuery.orgCode = node.orgCode\n                this.listQuery.parentCode = node.workCenterCode\n            }\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            if (!this.orgCode) {\n                this.$message.warning('请选择对应工厂或者上级工作中心！')\n                return\n            }\n            this.resetTemp()\n            this.temp.orgCode = this.orgCode\n            this.temp.parentCode = this.parentCode\n            this.temp.parentName = this.parentName\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        handleUpdate () {//编辑弹窗\n            if (!this.orgCode) {\n                this.$message.warning('请选择对应工厂或者上级工作中心！')\n                return\n            }\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true//员工编码不可以编写\n                this.temp = this.selectlistRow[0]\n                api.getRecord(this.temp.workCenterCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {//编辑\n            this.$refs['temp'].validate((valid) => {\n                if (valid) {\n                    api.updateRecord(this.workCenterCode, this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        handleDeleteBatch () {\n            if (this.selectCode.length == 0) {\n                this.$message.warning('请勾选记录！')\n                return\n            }\n            this.delete(this.selectCode)\n        },\n        handleDelete () {//删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                }).then(() => {\n                    let ids = []\n                    this.selectlistRow.forEach((val, index) => {\n                        ids[index] = val.workCenterCode\n                    })\n                    api.deleteRecord(ids).then(() => {\n                        this.getList(),\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create () {\n            this.$refs.temp.validate((valid) => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.handleChange()\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        cancel () {\n            this.dialogFormVisible = false\n        },\n        resetTemp () {\n            this.temp = {\n                orgCode: undefined,\n                workCenterType: undefined,\n                workCenterCode: undefined,\n                workCenterName: undefined,\n                productNum: undefined,\n                feedArea: undefined,\n                parentCode: undefined,\n                workCenterClass: undefined,\n                workCenterGroup: undefined,\n                workCenterModel: undefined,\n                beatTimeunit: undefined,\n                productBeat: undefined,\n                bufferArea: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.workCenterCode)\n        },\n        handleChange () {\n            this.$emit('fresh', true)\n        }\n    }\n}\n",null]}