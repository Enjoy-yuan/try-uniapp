{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/settings/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/settings/index.vue","mtime":1596610934265},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/color'\nimport Pagination from '@/components/Pagination'\nimport { parseTime } from '@/utils'\nimport addKey from './addKey'\nimport detail from './historydetail'\nimport addUser from \"@/components/Select/personSelect.vue\";\n\nexport default {\n    name: 'color',\n    components: { Pagination, addKey, addUser, detail },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            start: \"\",\n            end: \"\",\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                colorCode: undefined,\n                colorName: undefined\n            },\n            temp: {\n                colorCode: undefined,\n                colorName: undefined,\n                colorAbbreviation: undefined,\n                state: 1,\n                remark: undefined\n            },\n            mainList: {},\n            activeCollNames: ['1'],\n            parentsRows: [],\n            colorCode: undefined,\n            selectCode: [],\n            dialogVisible: false,\n            dialogVisiblekey: false,\n            dialogVisibleperson: false,\n            dialogVisibledetail: false,\n            dialogStatus: '',\n            tableKey: 0,\n        }\n    },\n    created () {\n        this.getList()\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            //新增\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogVisible = true\n        },\n        handleUpdate (index, row) {\n            console.log(row, '111')\n            this.resetTemp()\n            this.dialogStatus = 'update'\n            this.dialogVisible = true\n            this.mainList = row\n        },\n        handleDelete () {\n\n        },\n        handleDetail () {\n            this.dialogVisibledetail = true\n        },\n        handleAddKey () {\n            this.dialogVisiblekey = true\n        },\n        personSelect (row) {\n            this.parentsRows = row;\n        },\n        handleAddUser () {\n            this.dialogVisibleperson = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        confirmKey () {\n            if (this.$refs.addKey.listSelected.length > 0) {\n                this.mainList.organizationCode = this.$refs.addKey.listSelected[0].organizationCode;\n                this.dialogVisiblekey = false;\n            } else {\n                this.mainList.organizationCode = null;\n                this.dialogVisiblekey = false;\n            }\n        },\n        confirmUser () {\n            if (!this.parentsRows[0]) {\n                this.mainList.organizationName = \"\";\n                this.mainList.organizationName = \"\";\n                this.dialogVisibleperson = false;\n\n            } else {\n                this.mainList.organizationName = this.parentsRows[0].employeeName;\n\n                this.dialogVisibleperson = false;\n            }\n        },\n\n        update () {\n            //编辑提交\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(this.temp.colorCode, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        create () {\n            //新增确认按钮\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        cancel () {\n            //取消弹窗按钮\n            this.dialogFormVisible = false\n        },\n        resetTemp () {\n            this.temp = {\n                colorCode: undefined,\n                colorName: undefined,\n                colorAbbreviation: undefined,\n                state: 1,\n                remark: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.colorCode)\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '颜色编码',\n                    '颜色名称',\n                    '颜色简称',\n                    '状态',\n                    '备注'\n                ]\n                const filterVal = [\n                    'colorCode',\n                    'colorName',\n                    'colorAbbreviation',\n                    'state',\n                    'remark'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === 'timestamp') {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        }\n    }\n}\n",null]}