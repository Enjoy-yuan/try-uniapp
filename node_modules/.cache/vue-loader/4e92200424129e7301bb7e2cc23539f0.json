{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/purchasing_Order_Formulation/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/purchasing_Order_Formulation/index.vue","mtime":1596610933594},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/oa/purchase/purchasing_Order_Formulation'\n\nimport { DT_ORG_TYPE, DICT_CODE } from '@/utils/constant'\nimport warehouseSelect from '@/components/Select/warehouse-select.vue'//下拉组件\nimport caiGou from '@/components/Select/xtpt/caigou.vue'//下拉组件\nimport gysxz from '@/components/Select/gysxz'//供应商选择\nimport wlxzbySourceList from \"@/components/Select/wlxzbySourceList\" //物料信息模块\nimport Pagination from \"@/components/Pagination\"\n\nimport purchasingPersonnel from './purchasingPersonnel'//采购计划员\nimport { mapState } from 'vuex'\nexport default {\n    name: \"purchasing_Order_Formulation\",\n    components: { Pagination, caiGou, gysxz, warehouseSelect, wlxzbySourceList, purchasingPersonnel },\n    data () {\n        return {\n            modalnum: null,//模板编号\n            theight: 0,\n            tableKey: [0, 1],//表格索引，虚拟dom渲染表格时使用\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            list: [],\n            total: 0,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                businessType: undefined,\n                arrivalCompany: undefined,\n                arrivalRepository: undefined,\n                supplierName: undefined,\n                state: undefined,\n            },\n            isChangeAddS: false,//供应商选择控制\n            parentsRows: [],\n            parentsRows1: null,\n            parentsRows3: null,\n            list1: [],\n            total1: 0,\n            listQuery1: {\n                currentPage: 1,\n                pageSize: 10,\n                orderNumber: undefined\n            },\n            isEdit: true,\n            list2: [],\n            total2: 0,\n            listQuery2: {\n                currentPage: 1,\n                pageSize: 10,\n            },\n            listLoading: true,\n            showReviewer: false,\n            temp: {\n                supplierCode: '',\n                unMutiple: true\n            },\n            dialogFormVisible: false,\n            gysxzDialogFormVisible: false,//供应商弹框显示\n            isGysRequired: false,//供应商非必选\n            gysMutiple: true,//供应商单选\n            wlxzDialogFormVisible: false,\n            purchasingPersonnelDialogFormVisible: false,\n            dialogStatus: '',\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            DICT_CODE: DICT_CODE,\n            rules: {\n                businessType: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' },\n                ],\n                purchaseClassify: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' },\n                ],\n                arrivalCompany: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' },\n                ],\n                orgCode: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' },\n                ],\n                groupCode: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n                ],\n                supplierName: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n                ],\n                purchaseEmp: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n                ],\n                supplierCode: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n                ],\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_dd_state: state => state.dict.dt_dd_state,\n            dt_ckyw_tpye: state => state.dict.dt_ckyw_tpye,\n            dt_purchase_class: state => state.dict.dt_purchase_class\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.$store.dispatch('dict/getDicData', ['dt_dd_state', 'dt_ckyw_tpye', 'dt_purchase_class'])\n        this.getList()\n    },\n    watch: {\n        tb () {\n            this.$nextTick(() => {\n                this.$refs.tb.toggleRowSelection(this.tb[0], true)\n            })\n        },\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        getList () {//查询\n            // this.listLoading = true\n\n            api.selectList(this.listQuery).then(response => {\n                let options = [this.dt_dd_state, this.dt_ckyw_tpye, this.dt_purchase_class]\n                response = this.$myFun.codeToName(response.data, options, ['state', 'businessType', 'purchaseClassify'])\n\n                this.list = response.list\n                this.total = response.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n                // Just to simulate the time of the request\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n\n            this.listLoading = false\n        },\n        checked () {\n            this.$refs.tb.toggleRowSelection(this.list[0], true)//官网方法，重点\n        },\n        resetTemp () {//重置temp\n            this.temp = {\n                materielselect: 1,\n                supplierCode: ''\n            }\n        },\n        handelRefresh () {//刷新\n            this.isEdit = false\n            this.list2 = []\n        },\n        isIntegerNotMust (event) {//验证正整数\n            var value = event.target.value\n            if (!/^\\+?[1-9][0-9]*$/.test(value)) {\n                this.$message({\n                    title: \"警告\",\n                    message: \"只能正整数\",\n                    type: \"warning\"\n                })\n                event.target.value = ''\n            }\n        },\n        getList2 () {//新增弹窗内查询\n            this.listLoading = false\n        },\n        selectRow1 (val) {//获取关联选中信息\n            this.selectListRow1 = val\n        },\n        selectRow2 (val) {//获取关联选中信息\n            this.selectListRow2 = val\n        },\n        selectRow (val) {//获取表一选中信息\n            this.selectListRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()//清除其他行的选中\n                this.$refs.tb.toggleRowSelection(val[val.length - 1], 'selected')//单击行绑定点击事件\n            }\n            this.$refs.tb.setCurrentRow(this.selectListRow)\n            if (this.selectListRow) {\n                this.listQuery1.orderNumber = this.selectListRow.orderNumber//总是获取当前数组最后一个值\n                api.selectListItems(this.listQuery1).then(res => {\n                    this.list1 = res.data.list\n                    this.total1 = res.data.pages.count\n                })\n            } else {\n                this.list1 = []\n            }\n        },\n        openDetails (val) {//表一行点击，拉去表二信息\n            this.$refs.tb.clearSelection()//清除其他行的选中\n            this.$refs.tb.toggleRowSelection(val)//单击行绑定点击事件\n            if (this.selectListRow) {\n                this.listQuery1.orderNumber = this.selectListRow.orderNumber//总是获取当前数组最后一个值\n            }\n\n            api.selectListItems(this.listQuery1).then(res => {\n                this.list1 = res.list\n                this.total1 = res.pages.count\n            })\n\n        },\n        handleFilter () {//查询\n            this.getList()\n        },\n        handleDelete () {//删除表一\n            if (this.selectListRow && (this.selectListRow.state == 'CREATE' || this.selectListRow.state == 'FEEDBACK')) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n\n                }).then(() => {\n                    api.deleteList(this.selectListRow.orderNumber).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\"\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条已创建(CREATE)或已反馈(FEEDBACK)的信息\",\n                    type: \"warning\"\n                })\n            }\n\n        },\n        handleDelete1 () {//删除表二\n\n        },\n        handleDelete2 () {//删除弹窗表格\n            if (this.selectListRow2 && this.selectListRow2.length > 0) {\n                this.list2 = this.$myFun.getArrDifference(this.list2, this.selectListRow2)\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n\n        handlegPersonnel () {//业务人员\n            this.purchasingPersonnelDialogFormVisible = true\n        },\n        purchasingPersonnels (row) {\n            this.parentsRows3 = row\n        },\n\n        handleDblclickWlxz (row) {\n            this.parentsRows1 = row\n        },\n        showGysxz (val) {\n            if (val === \"add\") {\n                this.isChangeAddS = true\n            }\n            this.$refs.dialogRefgys.dialogVisible = !this.$refs.dialogRefgys.dialogVisible\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            this.parentsRows = gysRows\n            if (!this.isChangeAddS) {\n                if (!this.parentsRows[0]) {\n                    this.listQuery.supplierCode = \"\"\n                    this.listQuery.supplierName = \"\"\n                    this.$refs.dialogRefgys.dialogVisible = false\n                } else if (this.parentsRows.length === 1) {\n                    this.listQuery.supplierCode = this.parentsRows[0].supplierCode\n                    this.listQuery.supplierName = this.parentsRows[0].supplierName\n                    this.$refs.dialogRefgys.dialogVisible = false\n                }\n            } else {\n                if (!this.parentsRows[0]) {\n                    this.$message({\n                        title: this.$t(\"message.warning\"),\n                        message: this.$t(\"message.checkedplease\"),\n                        type: \"warning\"\n                    })\n                } else {\n                    this.temp.supplierCode = this.parentsRows[0].supplierCode\n                    this.temp.supplierName = this.parentsRows[0].supplierName\n                    this.gysxzDialogFormVisible = false\n                }\n                this.isChangeAddS = false\n            }\n\n        },\n        // update1(){//供应商选中弹窗确认按钮\n        //     if (!this.isChangeAddS) {\n        //         if(!this.parentsRows[0]){\n        //             this.listQuery.supplierCode = \"\";\n        //             this.listQuery.supplierName = \"\";\n        //             this.gysxzDialogFormVisible = false;\n        //         }else if(this.parentsRows.length === 1){\n        //             this.listQuery.supplierCode = this.parentsRows[0].supplierCode;\n        //             this.listQuery.supplierName = this.parentsRows[0].supplierName;\n        //             this.gysxzDialogFormVisible = false;\n        //         }\n        //     } else {\n        //         if(!this.parentsRows[0]){\n        //             this.$message({\n        //                 title: this.$t(\"message.warning\"),\n        //                 message: this.$t(\"message.checkedplease\"),\n        //                 type: \"warning\"\n        //             });\n        //         }else{\n        //             this.temp.supplierCode = this.parentsRows[0].supplierCode;\n        //             this.temp.supplierName = this.parentsRows[0].supplierName;\n        //             this.gysxzDialogFormVisible = false;\n        //         }\n        //         this.isChangeAddS = false;\n        //     }\n        // },\n        update2 () {//物料选中中弹窗确认按钮\n            if (this.$refs.wlxzRef.listSelected.length > 0) {\n                this.list2 = this.$refs.wlxzRef.listSelected.map(v => {\n                    v.snp = v.snp2\n                    return v\n                })\n                this.wlxzDialogFormVisible = false\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        update3 () {//采购计划员中弹窗确认按钮\n            if (this.parentsRows3.length && this.parentsRows3.length == 1) {\n                // this.temp.supplierCode = this.parentsRows3[0].employeeCode;\n                this.temp.purchaseEmp = this.parentsRows3[0].employeeCode\n                this.temp.purchaseEmpName = this.parentsRows3[0].employeeName\n                this.purchasingPersonnelDialogFormVisible = false\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleCreate () {//新增\n            this.resetTemp()\n            // this.list2=null\n            this.list2 = []\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.isEdit = false\n        },\n        arrivalCompanyName (name) {//到货单位\n            this.temp.arrivalCompanyName = name\n        },\n        orgName (name) {//组织编码\n            this.temp.orgName = name\n        },\n        groupName (name) {//采购组名称\n            this.temp.groupName = name\n        },\n        purchaseClassifyName (vId) {//采购分类名称\n            let obj = {}\n            obj = this.dt_purchase_class.find((item) => {//这里的userList就是上面遍历的数据源\n                return item.dictItemKey === vId//筛选出匹配数据\n            })\n            this.temp.purchaseClassifyName = obj.dictItemValue\n\n        },\n        arrivalRepositoryName (name) {//到货仓库名称\n            this.list2[this.rowIndex].arrivalRepositoryName = name\n        },\n        selectArrivalRepository (index) {//获取所在行的ID\n            this.rowIndex = index\n        },\n        createData () {//新增确认按钮\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    for (let i = 0; i < this.list2.length; i++) {\n                        this.list2[i].arrivalCompany = this.temp.arrivalCompany\n                        this.list2[i].arrivalCompanyName = this.temp.arrivalCompanyName\n                        if (!this.list2[i].purchaseMeasuringUnit) {\n                            this.list2[i].purchaseMeasuringUnit = this.list2[i].measuringUnit\n                            this.list2[i].purchaseMeasuringUnitName = this.list2[i].measuringUnitName\n                        }\n                    }\n                    this.temp.purchaseOrderItemList = this.list2.map(v => {\n                        // if(!v.snp){\n                        //     v.snp=1\n                        // }\n                        if (!v.transferRate) {\n                            v.transferRate = 1\n                        }\n                        return v\n                    })\n                    api.creatList(this.temp).then(() => {\n                        this.$message({\n                            title: \"成功\",\n                            message: \"新增成功\",\n                            type: \"success\"\n                        })\n                        this.dialogFormVisible = false\n                        this.getList()\n                    })\n\n                }\n            })\n        },\n        handleCreate1 () {//弹窗内新增\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n\n        },\n        handleUpdate () {//编辑\n            if (this.selectListRow && (this.selectListRow.state == 'CREATE' || this.selectListRow.state == 'FEEDBACK')) {\n                this.dialogFormVisible = true\n                this.dialogStatus = 'update'\n                this.temp = this.selectListRow\n                this.list2 = this.list1\n                this.isEdit = true\n\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条已确认或者已反馈的信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        updateData () {//编辑确认按钮\n            for (let i = 0; i < this.list2.length; i++) {\n                this.list2[i].arrivalCompany = this.temp.arrivalCompany\n                this.list2[i].remark = ''\n            }\n            this.temp.purchaseOrderItemList = this.list2\n            api.updataList(this.temp).then(() => {\n                this.getList()\n                this.$message({\n                    title: \"成功\",\n                    message: \"编辑成功\",\n                    type: \"success\"\n                })\n                this.dialogFormVisible = false\n            })\n        },\n        handleCreate2 () {//物料信息弹窗\n            if (this.temp.supplierCode && this.temp.orgCode && this.temp.arrivalCompany && this.temp.groupCode && this.temp.purchaseEmp) {\n                this.wlxzDialogFormVisible = true\n                this.isEdit = true\n                this.$nextTick(() => {\n                    this.$refs.wlxzRef.listQuery.toOrgCode = this.temp.arrivalCompany\n                    this.$refs.wlxzRef.listQuery.orgCode = this.temp.orgCode\n                    this.$refs.wlxzRef.listQuery.supplierCode = this.temp.supplierCode\n                    this.$refs.wlxzRef.listSelected = [...this.list2]\n                    this.$refs.wlxzRef.getList()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请先选择必填项\",\n                    type: \"warning\"\n                })\n            }\n\n        },\n        handleSubmit () {//提交\n            if (this.selectListRow && (this.selectListRow.state == 'CREATE' || this.selectListRow.state == 'FEEDBACK')) {\n                this.$confirm('此操作将提交所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n\n                }).then(() => {\n                    this.selectListRow.method = 'RELEASE'\n                    api.handleList(this.selectListRow).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: \"成功\",\n                            message: \"确认成功\",\n                            type: \"success\"\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消提交'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条已创建(CREATE)或已反馈(FEEDBACK)的信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleCancel () {//作废\n            if (this.selectListRow && this.selectListRow.state == 'RELEASE') {\n                this.$confirm('此操作将作废所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n\n                }).then(() => {\n                    this.selectListRow.method = 'CANCEL'\n                    api.handleList(this.selectListRow).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: \"成功\",\n                            message: \"作废成功\",\n                            type: \"success\"\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消作废'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条已发布(RELEASE)的信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleClosed () {//整单关闭\n            if (this.selectListRow && this.selectListRow.state == 'CONFIRM') {\n                this.$confirm('此操作将整单关闭所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n\n                }).then(() => {\n                    this.selectListRow.method = 'CLOSE'\n                    api.handleList(this.selectListRow).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: \"成功\",\n                            message: \"整单关闭成功\",\n                            type: \"success\"\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消整单关闭'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条已确认(CONFIRM)的信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleClosedOne () {//订单单行关闭\n            if (this.selectListRow1 && this.selectListRow1.length > 0 && this.selectListRow.state == 'CONFIRM') {\n                this.$confirm('此操作将单行关闭所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n\n                }).then(() => {\n                    let rowIds = this.selectListRow1.map(function (item) {\n                        return item.rowNo\n                    })\n                    this.selectListRow.rowNos = rowIds\n                    api.closedListItems(this.selectListRow).then(() => {\n                        this.$message({\n                            title: \"成功\",\n                            message: \"订单单行关闭成功\",\n                            type: \"success\"\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消单行关闭'\n                    })\n                })\n\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条已确认的信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        open () {\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        }\n\n    }\n};\n",null]}