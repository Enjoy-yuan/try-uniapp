{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/equipmentMaintenance/index.vue?vue&type=template&id=78fa3092&scoped=true&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/equipmentMaintenance/index.vue","mtime":1596610933395},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"app-container\" }, [\n      _c(\"div\", { staticClass: \"filter-container\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"filter-items\" },\n          [\n            _c(\"el-input\", {\n              staticClass: \"filter-item\",\n              attrs: { size: \"small\", placeholder: \"工单号\" },\n              nativeOn: {\n                keyup: function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.handleQuery($event)\n                }\n              },\n              model: {\n                value: _vm.listQuery.workOrderNumber,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"workOrderNumber\", $$v)\n                },\n                expression: \"listQuery.workOrderNumber\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\"el-input\", {\n              staticClass: \"filter-item\",\n              attrs: { size: \"small\", placeholder: \"设备编号\" },\n              nativeOn: {\n                keyup: function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.handleQuery($event)\n                }\n              },\n              model: {\n                value: _vm.listQuery.deviceCode,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"deviceCode\", $$v)\n                },\n                expression: \"listQuery.deviceCode\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"el-select\",\n              {\n                attrs: {\n                  size: \"small\",\n                  placeholder: \"紧急程度\",\n                  clearable: \"\"\n                },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.urgencyDegree,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"urgencyDegree\", $$v)\n                  },\n                  expression: \"listQuery.urgencyDegree\"\n                }\n              },\n              _vm._l(_vm.dt_urgency_degree, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: { label: item.dictItemValue, value: item.dictItemKey }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-select\",\n              {\n                attrs: {\n                  size: \"small\",\n                  placeholder: \"维修类型\",\n                  clearable: \"\"\n                },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.maintainType,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"maintainType\", $$v)\n                  },\n                  expression: \"listQuery.maintainType\"\n                }\n              },\n              _vm._l(_vm.dt_maintain_type, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: { label: item.dictItemValue, value: item.dictItemKey }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-select\",\n              {\n                attrs: { size: \"small\", placeholder: \"状态\", clearable: \"\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.states,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"states\", $$v)\n                  },\n                  expression: \"listQuery.states\"\n                }\n              },\n              _vm._l(_vm.dataList, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: { label: item.dictItemValue, value: item.dictItemKey }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"el-date-picker\", {\n              staticStyle: { width: \"400px\" },\n              attrs: {\n                type: \"datetimerange\",\n                size: \"small\",\n                \"range-separator\": \"-\",\n                \"start-placeholder\": \"开单开始日期\",\n                \"end-placeholder\": \"开单结束日期\"\n              },\n              model: {\n                value: _vm.value,\n                callback: function($$v) {\n                  _vm.value = $$v\n                },\n                expression: \"value\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"filter-item\",\n                attrs: {\n                  type: \"primary\",\n                  size: \"small\",\n                  icon: \"el-icon-search\"\n                },\n                on: { click: _vm.handleQuery }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"table.search\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-popover\",\n              {\n                attrs: { placement: \"bottom\", trigger: \"click\", width: \"200\" }\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: { click: _vm.refreshUpdate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.refresh\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: { placeholder: \"设备名称\", size: \"small\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.deviceName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"deviceName\", $$v)\n                    },\n                    expression: \"listQuery.deviceName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: { placeholder: \"使用部门\", size: \"small\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.useDeptName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"useDeptName\", $$v)\n                    },\n                    expression: \"listQuery.useDeptName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: { placeholder: \"设备地址\", size: \"small\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.address,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"address\", $$v)\n                    },\n                    expression: \"listQuery.address\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"el-select\",\n                  {\n                    staticClass: \"filter-item select\",\n                    attrs: { placeholder: \"故障等级\", size: \"small\" },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.handleQuery($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.listQuery.faultGrade,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"faultGrade\", $$v)\n                      },\n                      expression: \"listQuery.faultGrade\"\n                    }\n                  },\n                  _vm._l(_vm.dt_fault_grade, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.dictItemKey,\n                      attrs: {\n                        label: item.dictItemValue,\n                        value: item.dictItemKey\n                      }\n                    })\n                  }),\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"deviceTypeSelect\", {\n                  ref: \"deviceType\",\n                  staticClass: \"filter-item select\",\n                  attrs: { placeholder: \"设备类型\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.deviceType,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"deviceType\", $$v)\n                    },\n                    expression: \"listQuery.deviceType\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"faultTypeSelect\", {\n                  ref: \"faultType\",\n                  staticClass: \"filter-item select\",\n                  attrs: { placeholder: \"故障类型\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.faultTypeCode,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"faultTypeCode\", $$v)\n                    },\n                    expression: \"listQuery.faultTypeCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"el-input\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      placeholder: \"主修人\",\n                      size: \"small\",\n                      disabled: \"\"\n                    },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.handleQuery($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.listQuery.mainMaintainerCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"mainMaintainerCode\", $$v)\n                      },\n                      expression: \"listQuery.mainMaintainerCode\"\n                    }\n                  },\n                  [\n                    _c(\"el-button\", {\n                      attrs: {\n                        slot: \"append\",\n                        icon: \"el-icon-search\",\n                        disabled: \"\"\n                      },\n                      on: { click: _vm.handleClickMain },\n                      slot: \"append\"\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: {\n                      \"border-bottom\": \"1px solid #DCDFE6 !important\",\n                      height: \"32px\"\n                    },\n                    attrs: { slot: \"reference\" },\n                    slot: \"reference\"\n                  },\n                  [_vm._v(\"更多\")]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"table-container\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"oprate_btn\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-plus\"\n                  },\n                  on: { click: _vm.handleRefuse }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.refuse\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-edit\"\n                  },\n                  on: { click: _vm.handleAscend }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.ascend\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-folder-add\"\n                  },\n                  on: { click: _vm.handleStart }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.maintenanceStart\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-folder-remove\"\n                  },\n                  on: { click: _vm.handleContent }\n                },\n                [_vm._v(\"维修内容\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-folder-checked\"\n                  },\n                  on: { click: _vm.handleEnd }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.maintenanceEnd\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-finished\"\n                  },\n                  on: { click: _vm.handleTechnical }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.technical\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-video-play\"\n                  },\n                  on: { click: _vm.handleWaitStart }\n                },\n                [_vm._v(\"待件开始\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-video-pause\"\n                  },\n                  on: { click: _vm.handleWaitEnd }\n                },\n                [_vm._v(\"待件结束\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-upload2\"\n                  },\n                  on: { click: _vm.handleDownload }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.export\")))]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              key: _vm.tableKey[0],\n              ref: \"mainList\",\n              staticStyle: { width: \"100%\" },\n              attrs: {\n                data: _vm.list,\n                border: \"\",\n                fit: \"\",\n                height: _vm.theight,\n                \"highlight-current-row\": \"\",\n                size: \"mini\",\n                \"cell-class-name\": \"table-cell\",\n                \"header-cell-class-name\": \"header-cell\"\n              },\n              on: {\n                \"selection-change\": _vm.selectRow,\n                \"row-click\": _vm.showSubTable\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  type: \"selection\",\n                  fixed: \"\",\n                  width: \"30\",\n                  align: \"center\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"状态\",\n                  prop: \"stateCN\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"150\",\n                  align: \"center\",\n                  label: \"工单号\",\n                  prop: \"workOrderNumber\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"组织编码\",\n                  prop: \"organizationName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"维修组\",\n                  prop: \"classCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"主修人\",\n                  prop: \"mainMaintainerName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"维修开始时间\",\n                  prop: \"maintainStartTime\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"维修结束时间\",\n                  prop: \"maintainEndTime\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"设备编号\",\n                  prop: \"deviceCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"设备名称\",\n                  prop: \"deviceName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"设备类型\",\n                  prop: \"deviceTypeName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"使用部门\",\n                  prop: \"useDeptName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"设备地址\",\n                  prop: \"address\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"技术人员请求数量\",\n                  prop: \"technologyRequestQuantity\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"故障描述\",\n                  prop: \"faultDescription\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"报修人\",\n                  prop: \"repairsName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"停机时间\",\n                  prop: \"machineHaltTime\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"报修时间\",\n                  prop: \"repairsTime\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"维修级别\",\n                  prop: \"mainMaintainerName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"登到时间\",\n                  prop: \"arriveTime\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"维修类型\",\n                  prop: \"maintainTypeCN\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"150\",\n                  align: \"center\",\n                  label: \"维修用时\",\n                  prop: \"maintenanceTime\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"pagination\", {\n            attrs: {\n              total: _vm.total,\n              page: _vm.listQuery.currentPage,\n              limit: _vm.listQuery.pageSize\n            },\n            on: {\n              \"update:page\": function($event) {\n                return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n              },\n              \"update:limit\": function($event) {\n                return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n              },\n              pagination: _vm.getList\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                title: \"拒单\",\n                visible: _vm.refuseFormVisible\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.refuseFormVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"refuseReason\",\n                  staticClass: \"small-space\",\n                  staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                  attrs: {\n                    model: _vm.temp,\n                    rules: _vm.refuseReasonRules,\n                    \"label-position\": \"center\",\n                    \"label-width\": \"110px\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"97%\" },\n                      attrs: { label: \"拒单说明\", prop: \"refuseReason\" }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { type: \"textarea\", rows: 3 },\n                        model: {\n                          value: _vm.temp.refuseReason,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"refuseReason\", $$v)\n                          },\n                          expression: \"temp.refuseReason\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.refuseFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    { attrs: { type: \"primary\" }, on: { click: _vm.create } },\n                    [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                title: \"技术请求\",\n                visible: _vm.technologyFormVisible\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.technologyFormVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"techTemp\",\n                  staticClass: \"small-space\",\n                  staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                  attrs: {\n                    model: _vm.techTemp,\n                    rules: _vm.techTempRules,\n                    \"label-position\": \"center\",\n                    \"label-width\": \"110px\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"97%\" },\n                      attrs: {\n                        label: \"请求说明\",\n                        prop: \"technologyRequestContent\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { type: \"textarea\", rows: 3 },\n                        model: {\n                          value: _vm.techTemp.technologyRequestContent,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.techTemp,\n                              \"technologyRequestContent\",\n                              $$v\n                            )\n                          },\n                          expression: \"techTemp.technologyRequestContent\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.technologyFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.techCreate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                title: \"待件开始\",\n                visible: _vm.waitFormVisible\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.waitFormVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"waitTempref\",\n                  staticClass: \"small-space\",\n                  staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                  attrs: {\n                    model: _vm.waitTemp,\n                    rules: _vm.waitTempRules,\n                    \"label-position\": \"center\",\n                    \"label-width\": \"110px\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"97%\" },\n                      attrs: { label: \"待件说明\", prop: \"waitPartExplain\" }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { type: \"textarea\", rows: 3 },\n                        model: {\n                          value: _vm.waitTemp.waitPartExplain,\n                          callback: function($$v) {\n                            _vm.$set(_vm.waitTemp, \"waitPartExplain\", $$v)\n                          },\n                          expression: \"waitTemp.waitPartExplain\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.waitFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.waitCreate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              staticClass: \"table_dialog\",\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                title: \"委外\",\n                visible: _vm.suppierDialogVisible,\n                \"close-on-click-modal\": false\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.suppierDialogVisible = $event\n                }\n              }\n            },\n            [\n              _c(\"suppierSelect\", { on: { change: _vm.handleSuppier } }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.suppierDialogVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.suppierCreate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              attrs: {\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                visible: _vm.fixDialogFormVisible,\n                \"custom-class\": \"dialog-custom\",\n                title: \"维修内容\"\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.fixDialogFormVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"fixTemp\",\n                  staticClass: \"small-space\",\n                  staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                  attrs: {\n                    model: _vm.fixTemp,\n                    rules: _vm.rules,\n                    \"label-position\": \"center\",\n                    \"label-width\": \"110px\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修单号\", prop: \"workOrderNumber\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"维修单号\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.workOrderNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"workOrderNumber\", $$v)\n                          },\n                          expression: \"fixTemp.workOrderNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"组织编码\", prop: \"organizationCode\" } },\n                    [\n                      _c(\"caiGou\", {\n                        staticClass: \"filter-item\",\n                        attrs: {\n                          orgType: _vm.DT_ORG_TYPE.factory,\n                          disabled: \"\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.organizationCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"organizationCode\", $$v)\n                          },\n                          expression: \"fixTemp.organizationCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修班组\", prop: \"classCode\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"维修班组\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.classCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"classCode\", $$v)\n                          },\n                          expression: \"fixTemp.classCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修人\", prop: \"mainMaintainerName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"维修人\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.mainMaintainerName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"mainMaintainerName\", $$v)\n                          },\n                          expression: \"fixTemp.mainMaintainerName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"设备编码\", prop: \"deviceCode\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"设备编码\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.deviceCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"deviceCode\", $$v)\n                          },\n                          expression: \"fixTemp.deviceCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"设备名称\", prop: \"deviceName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"设备名称\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.deviceName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"deviceName\", $$v)\n                          },\n                          expression: \"fixTemp.deviceName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"使用部门\", prop: \"useDeptName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"使用部门\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.useDeptName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"useDeptName\", $$v)\n                          },\n                          expression: \"fixTemp.useDeptName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"设备地址\", prop: \"address\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"设备地址\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.address,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"address\", $$v)\n                          },\n                          expression: \"fixTemp.address\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"设备类型\", prop: \"deviceType\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"设备类型\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.deviceType,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"deviceType\", $$v)\n                          },\n                          expression: \"fixTemp.deviceType\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"设备故障\", prop: \"faultNumber\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"设备故障\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.faultNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"faultNumber\", $$v)\n                          },\n                          expression: \"fixTemp.faultNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"发生时间\", prop: \"happenTime\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"发生时间\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.happenTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"happenTime\", $$v)\n                          },\n                          expression: \"fixTemp.happenTime\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"操作人\", prop: \"operatorName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"操作人\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.operatorName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"operatorName\", $$v)\n                          },\n                          expression: \"fixTemp.operatorName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"故障部位\", prop: \"partName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"故障部位\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.partName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"partName\", $$v)\n                          },\n                          expression: \"fixTemp.partName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"故障类型\", prop: \"faultTypeName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"故障类型\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.faultTypeName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"faultTypeName\", $$v)\n                          },\n                          expression: \"fixTemp.faultTypeName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"故障级别\", prop: \"faultGrade\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"故障级别\", disabled: \"\" },\n                        model: {\n                          value: _vm.fixTemp.faultGrade,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"faultGrade\", $$v)\n                          },\n                          expression: \"fixTemp.faultGrade\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"紧急程度\", prop: \"urgencyDegree\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { size: \"small\", disabled: \"\" },\n                          model: {\n                            value: _vm.fixTemp.urgencyDegree,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"urgencyDegree\", $$v)\n                            },\n                            expression: \"fixTemp.urgencyDegree\"\n                          }\n                        },\n                        _vm._l(_vm.dt_urgency_degree, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"97%\" },\n                      attrs: { label: \"故障描述\", prop: \"faultDescription\" }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          rows: 3,\n                          placeholder: \"故障描述\",\n                          type: \"textarea\",\n                          disabled: \"\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.faultDescription,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"faultDescription\", $$v)\n                          },\n                          expression: \"fixTemp.faultDescription\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"故障原因\", prop: \"faultCause\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { size: \"small\" },\n                          model: {\n                            value: _vm.fixTemp.faultCause,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"faultCause\", $$v)\n                            },\n                            expression: \"fixTemp.faultCause\"\n                          }\n                        },\n                        _vm._l(_vm.dt_fault_cause, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修级别\", prop: \"maintainGrade\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { size: \"small\" },\n                          model: {\n                            value: _vm.fixTemp.maintainGrade,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"maintainGrade\", $$v)\n                            },\n                            expression: \"fixTemp.maintainGrade\"\n                          }\n                        },\n                        _vm._l(_vm.dt_maintain_grade, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修类型\", prop: \"maintainType\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { size: \"small\" },\n                          model: {\n                            value: _vm.fixTemp.maintainType,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"maintainType\", $$v)\n                            },\n                            expression: \"fixTemp.maintainType\"\n                          }\n                        },\n                        _vm._l(_vm.dt_maintain_type, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"是否停机\", prop: \"ifMachineHalt\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { size: \"small\" },\n                          on: { change: _vm.timeWhether },\n                          model: {\n                            value: _vm.fixTemp.ifMachineHalt,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"ifMachineHalt\", $$v)\n                            },\n                            expression: \"fixTemp.ifMachineHalt\"\n                          }\n                        },\n                        _vm._l(_vm.dt_yes_or_no, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"停机时长\", prop: \"machineHaltTime\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"分钟\", disabled: _vm.isTime },\n                        model: {\n                          value: _vm.fixTemp.machineHaltTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"machineHaltTime\", $$v)\n                          },\n                          expression: \"fixTemp.machineHaltTime\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"委外单位\",\n                        prop: \"entrustOuterCompanyCode\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-input\",\n                        {\n                          attrs: { disabled: \"\" },\n                          model: {\n                            value: _vm.fixTemp.entrustOuterCompanyCode,\n                            callback: function($$v) {\n                              _vm.$set(\n                                _vm.fixTemp,\n                                \"entrustOuterCompanyCode\",\n                                $$v\n                              )\n                            },\n                            expression: \"fixTemp.entrustOuterCompanyCode\"\n                          }\n                        },\n                        [\n                          _c(\"el-button\", {\n                            attrs: {\n                              slot: \"append\",\n                              icon: \"el-icon-search\",\n                              disabled: _vm.isEdit\n                            },\n                            on: { click: _vm.handleClickEntrust },\n                            slot: \"append\"\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"开始时间\", prop: \"maintainStartTime\" } },\n                    [\n                      _c(\"el-date-picker\", {\n                        staticClass: \"time\",\n                        attrs: {\n                          size: \"small\",\n                          \"picker-options\": _vm.pickerStart,\n                          type: \"datetime\",\n                          \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                          placeholder: \"开始时间\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.maintainStartTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"maintainStartTime\", $$v)\n                          },\n                          expression: \"fixTemp.maintainStartTime\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"结束时间\", prop: \"maintainEndTime\" } },\n                    [\n                      _c(\"el-date-picker\", {\n                        staticClass: \"time\",\n                        attrs: {\n                          size: \"small\",\n                          \"picker-options\": _vm.pickerEnd,\n                          type: \"datetime\",\n                          \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                          placeholder: \"结束时间\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.maintainEndTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"maintainEndTime\", $$v)\n                          },\n                          expression: \"fixTemp.maintainEndTime\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修时长\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticClass: \"spendTime\",\n                        attrs: {\n                          placeholder: \"小时\",\n                          type: \"Number\",\n                          min: \"0\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.maintainSpendTimeHour,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"maintainSpendTimeHour\", $$v)\n                          },\n                          expression: \"fixTemp.maintainSpendTimeHour\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-input\", {\n                        staticClass: \"spendTime\",\n                        attrs: {\n                          placeholder: \"分钟\",\n                          type: \"Number\",\n                          min: \"0\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.maintainSpendTimeMinute,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.fixTemp,\n                              \"maintainSpendTimeMinute\",\n                              $$v\n                            )\n                          },\n                          expression: \"fixTemp.maintainSpendTimeMinute\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修费用\", prop: \"maintainCost\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"维修费用\" },\n                        model: {\n                          value: _vm.fixTemp.maintainCost,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"maintainCost\", $$v)\n                          },\n                          expression: \"fixTemp.maintainCost\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"维修状态\", prop: \"state\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { size: \"small\", disabled: \"\" },\n                          model: {\n                            value: _vm.fixTemp.state,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"state\", $$v)\n                            },\n                            expression: \"fixTemp.state\"\n                          }\n                        },\n                        _vm._l(_vm.dt_maintain_worder_state, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"经验代码\", prop: \"experienceCode\" } },\n                    [\n                      _c(\n                        \"el-input\",\n                        {\n                          attrs: { placeholder: \"经验代码\", disabled: \"\" },\n                          model: {\n                            value: _vm.fixTemp.experienceCode,\n                            callback: function($$v) {\n                              _vm.$set(_vm.fixTemp, \"experienceCode\", $$v)\n                            },\n                            expression: \"fixTemp.experienceCode\"\n                          }\n                        },\n                        [\n                          _c(\"el-button\", {\n                            attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                            on: { click: _vm.handleExperience },\n                            slot: \"append\"\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        icon: \"el-icon-plus\",\n                        size: \"small\",\n                        type: \"primary\"\n                      },\n                      on: { click: _vm.experienceCreate }\n                    },\n                    [_vm._v(\"新增经验\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"97%\" },\n                      attrs: { label: \"处理描述\", prop: \"disposeDescribe\" }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          rows: 3,\n                          placeholder: \"处理描述\",\n                          type: \"textarea\"\n                        },\n                        model: {\n                          value: _vm.fixTemp.disposeDescribe,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fixTemp, \"disposeDescribe\", $$v)\n                          },\n                          expression: \"fixTemp.disposeDescribe\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"hrLineStyle\" }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"oprate_btn\" },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        icon: \"el-icon-plus\",\n                        size: \"small\",\n                        type: \"primary\"\n                      },\n                      on: { click: _vm.handleCreateFrom }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.add\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        icon: \"el-icon-edit\",\n                        size: \"small\",\n                        type: \"primary\"\n                      },\n                      on: { click: _vm.handleUpdateFrom }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.save\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        icon: \"el-icon-edit\",\n                        size: \"small\",\n                        type: \"primary\"\n                      },\n                      on: { click: _vm.handleDeleteFrom }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"btn.delete\")))]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-table\",\n                {\n                  key: _vm.tableKey[1],\n                  ref: \"tb2\",\n                  attrs: {\n                    data: _vm.timeData,\n                    height: _vm.theight * 0.7,\n                    border: \"\",\n                    \"cell-class-name\": \"table-cell\",\n                    fit: \"\",\n                    \"header-cell-class-name\": \"header-cell\",\n                    \"highlight-current-row\": \"\"\n                  },\n                  on: { \"selection-change\": _vm.selectRowTime }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { type: \"selection\", width: \"30\" }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"员工编码\",\n                      prop: \"maintainerCode\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"员工姓名\",\n                      prop: \"maintainerName\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: \"开始时间\",\n                      prop: \"startTime\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-date-picker\", {\n                              attrs: {\n                                type: \"datetime\",\n                                \"picker-options\": _vm.pickerOptionsStart,\n                                \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                                placeholder: \"选择日期时间\"\n                              },\n                              on: { change: _vm.startTimeStatus },\n                              model: {\n                                value: scope.row.startTime,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"startTime\", $$v)\n                                },\n                                expression: \"scope.row.startTime\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"span\", [_vm._v(_vm._s(scope.row.startTime))])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"结束时间\",\n                      prop: \"endTime\",\n                      \"show-overflow-tooltip\": \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-date-picker\", {\n                              attrs: {\n                                type: \"datetime\",\n                                \"picker-options\": _vm.pickerOptionsEnd,\n                                \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                                placeholder: \"选择日期时间\"\n                              },\n                              on: { change: _vm.endTimeStatus },\n                              model: {\n                                value: scope.row.endTime,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"endTime\", $$v)\n                                },\n                                expression: \"scope.row.endTime\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"span\", [_vm._v(_vm._s(scope.row.endTime))])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"维修用时（小时）\",\n                      \"min-width\": \"100\",\n                      prop: \"maintainSpendTime\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: \"实际用时（小时）\",\n                      prop: \"realitySpendTime\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: {\n                                size: \"small\",\n                                type: \"Number\",\n                                min: \"0\",\n                                placeholder: \"请输入内容\"\n                              },\n                              model: {\n                                value: scope.row.realitySpendTime,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"realitySpendTime\", $$v)\n                                },\n                                expression: \"scope.row.realitySpendTime\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: \"维修工作描述\",\n                      prop: \"remark\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: {\n                                size: \"small\",\n                                placeholder: \"请输入内容\"\n                              },\n                              model: {\n                                value: scope.row.remark,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"remark\", $$v)\n                                },\n                                expression: \"scope.row.remark\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"span\", [_vm._v(_vm._s(scope.row.remark))])\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"pagination\", {\n                attrs: {\n                  limit: _vm.listQuery.pageSize,\n                  page: _vm.listQuery.currentPage,\n                  total: _vm.total1\n                },\n                on: {\n                  \"update:limit\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                  },\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                  },\n                  pagination: _vm.getList\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"hrLineStyle\" }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"oprate_btn\" },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        icon: \"el-icon-edit\",\n                        size: \"small\",\n                        type: \"primary\"\n                      },\n                      on: { click: _vm.handleSave }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.save\")))]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-table\",\n                {\n                  key: _vm.tableKey[2],\n                  ref: \"tb2\",\n                  attrs: {\n                    data: _vm.bjData,\n                    height: _vm.theight * 0.7,\n                    border: \"\",\n                    \"cell-class-name\": \"table-cell\",\n                    fit: \"\",\n                    \"header-cell-class-name\": \"header-cell\",\n                    \"highlight-current-row\": \"\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { type: \"selection\", width: \"30\" }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"备件编码\",\n                      prop: \"materielCode\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"备件名称\",\n                      prop: \"materielName\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"计量单位\",\n                      prop: \"measureCode\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"备件仓库\",\n                      prop: \"warehouseName\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"申请数量\",\n                      \"min-width\": \"100\",\n                      prop: \"applyQuantity\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"出库数量\",\n                      \"min-width\": \"100\",\n                      prop: \"lastCheckTime\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: \"使用数量\",\n                      prop: \"useQuantity\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: {\n                                size: \"small\",\n                                type: \"Number\",\n                                min: \"0\",\n                                placeholder: \"请输入内容\"\n                              },\n                              model: {\n                                value: scope.row.useQuantity,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"useQuantity\", $$v)\n                                },\n                                expression: \"scope.row.useQuantity\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      width: \"120\",\n                      align: \"center\",\n                      label: \"退回数量\",\n                      prop: \"returnQuantity\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: {\n                                size: \"small\",\n                                type: \"Number\",\n                                min: \"0\",\n                                placeholder: \"请输入内容\"\n                              },\n                              model: {\n                                value: scope.row.returnQuantity,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"returnQuantity\", $$v)\n                                },\n                                expression: \"scope.row.returnQuantity\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"pagination\", {\n                attrs: {\n                  limit: _vm.listQuery.pageSize,\n                  page: _vm.listQuery.currentPage,\n                  total: _vm.total2\n                },\n                on: {\n                  \"update:limit\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                  },\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                  },\n                  pagination: _vm.getList\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"hrLineStyle\" }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.fixDialogFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.fixCreate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              staticClass: \"table_dialog\",\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                title: \"经验库\",\n                visible: _vm.expBaseDialogVisible,\n                \"close-on-click-modal\": false\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.expBaseDialogVisible = $event\n                }\n              }\n            },\n            [\n              _c(\"expBaseSelect\", { on: { change: _vm.handleExpBase } }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.expBaseDialogVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.expBaseCreate }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              staticClass: \"table_dialog\",\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                title:\n                  _vm.dialogStatus == \"employeeCreate\" ? \"员工管理\" : \"主修人\",\n                visible: _vm.employeeDialogVisible,\n                \"close-on-click-modal\": false\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.employeeDialogVisible = $event\n                }\n              }\n            },\n            [\n              _c(\"employeesSelect\", { on: { change: _vm.handleEmployee } }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.employeeDialogVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _vm.dialogStatus == \"employeeCreate\"\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.employeeCreate }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                    : _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.employeeUpdate }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"table-container\" },\n        [\n          _c(\n            \"el-tabs\",\n            {\n              attrs: { type: \"card\" },\n              on: { \"tab-click\": _vm.handleClick },\n              model: {\n                value: _vm.tabName,\n                callback: function($$v) {\n                  _vm.tabName = $$v\n                },\n                expression: \"tabName\"\n              }\n            },\n            _vm._l(_vm.tabConfig, function(item) {\n              return _c(\n                \"el-tab-pane\",\n                {\n                  key: item.prop,\n                  attrs: { label: item.label, name: item.name }\n                },\n                [\n                  item.prop === \"sbtp\"\n                    ? _c(\"tab1\", {\n                        ref: \"tab1\",\n                        refInFor: true,\n                        attrs: { workOrderNumber: _vm.workOrderNumberA }\n                      })\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  item.prop === \"sbfj\"\n                    ? _c(\"tab2\", {\n                        ref: \"tab2\",\n                        refInFor: true,\n                        attrs: {\n                          selectlist: _vm.selectlistRowA,\n                          workOrderNumber: _vm.workOrderNumberA,\n                          org: _vm.organizationCodeA\n                        }\n                      })\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  item.prop === \"bjqd\"\n                    ? _c(\"fileUpload\", {\n                        ref: \"tab4\",\n                        refInFor: true,\n                        attrs: {\n                          titleText: \"维修单号\",\n                          categoryData: _vm.dt_file_equipment,\n                          functionCode: _vm.workOrderNumberA\n                        }\n                      })\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  item.prop === \"glzsb\"\n                    ? _c(\"imgUpload\", {\n                        ref: \"tab3\",\n                        refInFor: true,\n                        attrs: {\n                          titleText: \"维修单号\",\n                          categoryData: _vm.dt_file_equipment,\n                          functionCode: _vm.workOrderNumberA\n                        }\n                      })\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            1\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}