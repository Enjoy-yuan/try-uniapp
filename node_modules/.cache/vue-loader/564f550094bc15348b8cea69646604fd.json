{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/exceltemplate/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/exceltemplate/index.vue","mtime":1600927611530},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\";\nimport { DICT_CODE, DT_ORG_TYPE, THE_STATE_OPTIONS } from \"@/utils/constant\";\nimport { mapState } from \"vuex\";\nimport * as api from \"@/api/system/exceltemplate\";\nimport { TWO_STATE_OPTIONS } from \"@/utils/constant\";\n\nexport default {\n    name: \"exceltemplate\",\n    components: {\n        Pagination,\n    },\n    data () {\n        return {\n            list: null,\n            list1: null,\n            list2: null,\n            total: 0,\n            theight: 0,\n            total1: 0,\n            total2: 0,\n            value1: \"\",\n            tkq: \"\",\n            value2: \"\",\n            value3: \"\",\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: undefined,\n                productionline: undefined,\n                station: undefined,\n                feedType: undefined,\n                state: undefined,\n                batchNumber: undefined,\n                leadTime: undefined,\n                feedTime: undefined,\n                feedwarehouse: undefined,\n                workShop: undefined,\n                pushTimeStart: undefined,\n                pushTimeEnd: undefined,\n                pushMaterialState: undefined\n            },\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                supplierCode: undefined,\n                orderNumber: undefined\n            },\n            listQuery2: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            listQueryItems: {\n                currentPage: 1,\n                pageSize: 10,\n                excelCode: undefined\n            },\n            dto: {\n                excelCode: undefined,\n                excelName: undefined,\n                objectClass: undefined,\n                processService: undefined,\n                queryService: undefined,\n\n\n            },\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            listLoading: true,\n            isEaid: false,\n            isEdit: true,\n            parentsRows1: undefined,\n            gw: undefined,\n            feedArea: undefined,\n            tableKey: [0, 1],//表格索引，虚拟dom渲染表格时使用\n            temp: {\n                state: undefined,\n                remark: undefined,\n                rowNo: undefined,\n                materielCode: undefined,\n                materielName: undefined,\n                orgCode: undefined,\n                productionline: undefined,\n                station: undefined,\n                feedType: undefined,\n                batchNumber: undefined,\n                leadTime: undefined,\n                feedTime: undefined,\n                feedwarehouse: undefined,\n                workShop: undefined,\n                goodsReadyEmpName: undefined,\n                materialputEmpName: undefined\n            },\n            tempb: {\n\n            },\n            xzwlDialogFormVisible: undefined,\n            blPersonnelDialogFormVisible1: undefined,\n            tlPersonnelDialogFormVisible2: undefined,\n            rules: {\n                factory: [{ required: true, message: \"请选择\", trigger: \"blur\" }],\n                pushMaterialType: [\n                    { required: true, message: \"请选择\", trigger: \"blur\" }\n                ],\n                lineCode: [{ required: true, message: \"请选择\", trigger: \"blur\" }],\n                workshopCode: [{ required: true, message: \"请选择\", trigger: \"blur\" }],\n                warehouseCode: [{ required: true, message: \"请选择\", trigger: \"blur\" }],\n                goodsReadyTime: [\n                    { required: true, message: \"请选择\", trigger: \"blur\" }\n                ],\n            },\n            // measureCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogFormVisible1: false,\n            employeeDialogFormVisible: false,\n            dialogStatus: \"\",\n            DICT_CODE: DICT_CODE,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            // dimensionOptions: DICT_CODE,\n            THE_STATE_OPTIONS: THE_STATE_OPTIONS\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_field_type: state => state.dict.dt_field_type,\n            dt_pushmaterial_state: state => state.dict.dt_pushmaterial_state\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\n            \"dt_field_type\",\n            \"dt_pushmaterial_state\",\n            \"dt_station_type\"\n        ]);\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n        this.getList();\n    },\n    filters: {\n        notNullFilter: function (a) {\n            if (a === false) {\n                return \"否\"\n            } else {\n                return \"是\"\n            }\n        }\n    },\n    methods: {\n\n        getList () { //查询主表\n            api.queryRecords(this.listQuery).then(response => {\n                this.list = response.data.list;\n                this.total = response.data.pages.count;\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            });\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185;\n        },\n        checked () {\n            this.$refs.dd.toggleRowSelection(this.list[0], true);//官网方法，重点\n        },\n        getItemsList () {  //查询订单明细\n            this.listQueryItems.excelCode = this.selectlistRow.excelCode;\n            api.getRecorditems(this.listQueryItems).then(response => {\n                this.list1 = response.data.list;\n                this.total1 = response.data.pages.count;\n            });\n        },\n\n        handleQuery () {\n            this.listQuery.currentPage = 1;\n            this.getList();\n        },\n        handleCreate () { //新增\n            this.resetTemp();\n            this.dialogStatus = \"create\";\n            // this.temp.pushOrderCode=this.selectlistRow.pushOrderCode\n            this.dialogFormVisible = true;\n\n        },\n        create () { //新增\n            this.dto = this.temp\n            api.addRecord(this.dto).then(() => {\n                this.dialogFormVisible = false;\n                this.getList()\n                this.$message({\n                    title: \"成功\",\n                    message: \"新增成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n            })\n        },\n        handlecreateB () { //新增明细\n            api.addRecorditems(this.selectlistRow.excelCode, this.tempb).then(() => {\n                this.getItemsList()\n                this.$message({\n                    title: \"成功\",\n                    message: \"新增成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n                this.resetTemp();\n            })\n\n        },\n        handleDelete () { //删除\n            if (this.selectlistRow) {\n                this.$confirm(\"此操作将永久删除该文件,是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    api.deleteRecord(this.selectlistRow.excelCode).then(() => {\n                        this.getList();\n                        this.$message({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    });\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\"\n                    })\n                })\n\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\",\n                    duration: 2000\n                });\n            }\n        },\n        handleDeleteitems () {\n            if (this.selectlistRow1.length) {\n                this.$confirm(\"此操作将永久删除该文件,是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    api.deleteRecorditems(this.selectlistRow1[0].excelCode, this.selectlistRow1[0].fieldCode).then(() => {\n                        this.getItemsList();\n                        this.$message({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    });\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\"\n                    })\n                })\n\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\",\n                    duration: 2000\n                });\n            }\n        },\n        handleUpdate () {//编辑 \n            this.resetTemp();\n            if (this.selectlistRow) {\n                this.dialogFormVisible = true;\n                this.temp = this.selectlistRow\n                this.dialogStatus = \"update\";\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\",\n                    duration: 2000\n                });\n            }\n        },\n\n        update () {//编辑\n            api.updateRecord(this.selectlistRow.excelCode, this.temp).then(() => {\n                this.dialogFormVisible = false;\n                this.$message({\n                    title: \"成功\",\n                    message: \"编辑成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n                this.getList();\n            });\n        },\n        handleUpdateitems () {\n            if (this.selectlistRow1.length == 1) {\n                this.tempb = this.selectlistRow1[0]\n                this.dialogStatus = 'updateitems'\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\",\n                    duration: 2000\n                });\n            }\n        },\n        Updateitems () {\n            api.updateRecorditems(this.selectlistRow1[0].excelCode, this.selectlistRow1[0].fieldCode, this.tempb).then(() => {\n                this.getItemsList()\n                this.$message({\n                    title: \"成功\",\n                    message: \"编辑成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n                this.resetTemp();\n            })\n        },\n        selectRow (val) {//表一复选框选中方法\n            this.selectlistRow = val[val.length - 1];\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection();\n                this.$refs.tb.toggleRowSelection(val.pop());\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow);\n            if (this.selectlistRow) {\n                this.getItemsList();\n            }\n        },\n        selectRow1 (val) { //表二复选框选中方法\n            this.selectlistRow1 = val;\n        },\n        selectRow2 (val) {//表一单击行选中方法\n            this.selectlistRow2 = val;\n            this.$refs.tb.clearSelection();\n            this.$refs.tb.toggleRowSelection(val);\n        },\n\n        selectRow3 (val) {//表二单击行选中方法\n            this.selectlistRow3 = val;\n            // this.$refs.tb.clearSelection()\n            // this.$refs.tb.toggleRowSelection(val)//单击行绑定点击事件\n        },\n        selectRow4 (val) {\n            this.selectlistRow4 = val;\n        },\n        cancel () {\n            this.dialogFormVisible = false;\n        },\n        resetTemp () {\n            this.tempb = {\n                columnNo: undefined,\n                excelCode: undefined,\n                lineCode: undefined,\n                field: undefined,\n                fieldCode: undefined,\n                fieldDemo: undefined,\n                fieldName: undefined,\n                fieldType: undefined,\n                notNull: undefined,\n                validation: undefined,\n            };\n            this.temp = {\n                excelCode: undefined,\n                excelName: undefined,\n                objectClass: undefined,\n                processService: undefined,\n                queryService: undefined,\n            };\n        },\n        handleClose () {\n            this.resetTemp();\n            this.$refs.temp.resetFields();\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.measureCode);\n        }\n    }\n};\n",null]}