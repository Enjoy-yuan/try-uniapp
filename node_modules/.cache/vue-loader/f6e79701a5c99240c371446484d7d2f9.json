{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/useSpareparts/collectingDelivery/content/contentProof.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/useSpareparts/collectingDelivery/content/contentProof.vue","mtime":1596610934224},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/wms/useSpareparts/collectingDelivery'\nimport AuthoType from '@/components/Select/AuthoType.vue'//权限类型下拉组件\nimport Pagination from \"@/components/Pagination\"\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport { mapState } from 'vuex'\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\nimport dialogOrgSelect from '@/components/Dialog/dialogOrgSelect'\nimport qrcode from \"@/components/QRCode\"\nexport default {\n    name: \"contentProof\",\n    components: { Pagination, AuthoType, dialogPersonSelect, dialogOrgSelect, qrcode },\n    data () {\n        return {\n            theight: 0,\n            sheight: 0,\n            tableKey: 0,\n            list: null,\n            listDetail: null,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            total: 0,\n            rangeTime: \"\",\n            selectRows: [],\n            dialogGys: false,\n            supplierRows: [],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                purchaseOrderNumber: '',\n                receiveOrderNumber: '',\n                createDateStart: '',\n                createDateEnd: '',\n                orgCode: '',\n                warehouseCode: '',\n                businessType: '',\n                supplierCode: ''//供应商\n            },\n            downloadLoading: false,\n            dialogPrintVisible: false,\n            printData: {},//打印数据\n            rules: {\n\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_use_type_screenGroupNum: state => state.businessComponent.dt_use_type_screenGroupNum\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.$store.dispatch('businessComponent/getBusinessComponentData', ['dt_use_type_screenGroupNum'])\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 50\n            this.sheight = this.$myFun.getSingleTbHeight() - 75\n        },\n        //申请单位选择\n        showOrg () {\n            this.$refs.refOrg.dialogVisible = true\n        },\n        //申请单位确定\n        confirmOrg (data) {\n            console.log(data)\n            if (data) {\n                this.$set(this.listQuery, 'departmentCode', data[0].organizationCode)\n                this.$set(this.listQuery, 'departmentName', data[0].organizationName)\n            }\n        },\n        //人员选择\n        showPerson () {\n            this.$refs.person.dialogVisible = true\n        },\n        //人员选择确定\n        personConfirm (val) {\n            this.$set(this.listQuery, 'applyEmp', val[0].employeeCode)\n            this.$set(this.listQuery, 'applyEmpName', val[0].employeeName)\n        },\n        //显示主表\n        getList () {\n            if (this.rangeTime) {\n                var d1 = this.rangeTime[0]\n                var d2 = this.rangeTime[1]\n                this.listQuery.createDateStart = d1\n                this.listQuery.createDateEnd = d2\n            } else {\n                this.listQuery.createDateStart = ''\n                this.listQuery.createDateEnd = ''\n            }\n            api.queryRecordsMain(this.listQuery).then(res => {\n                this.list = res.data.list\n            })\n        },\n        //显示从表\n        getSubList () {\n            let dto = {\n                outOrderNumber: this.selectlistRow.outOrderNumber,\n                businessType: this.listQuery.businessType,\n                currentPage: 1,\n                pageSize: 10,\n            }\n            api.queryRecordsSub(dto).then(res => {\n                this.listDetail = res.data.list\n            })\n        },\n        //查询\n        handleQuery () {\n            this.listRow = []\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //每页大小变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbMain.clearSelection()\n                this.$refs.tbMain.toggleRowSelection(val.pop())\n            }\n            if (this.selectlistRow) {\n                this.locateWarehouseCode = this.selectlistRow.warehouseCode\n                this.getSubList()\n            }\n            this.$refs.tbMain.setCurrentRow(this.selectlistRow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tbMain.clearSelection()\n            this.$refs.tbMain.toggleRowSelection(val)\n        },\n\n        setdefault (val, i) {\n            if (i === 1) {\n                this.listQuery.orgCode = val\n            } else if (i === 3) {\n                this.listQuery.warehouseCode = val\n                this.listQuery.businessType = this.dt_use_type_screenGroupNum.options[0].wareRuleCode\n                this.getList()\n            }\n        },\n        //打印\n        receiptPrint () {\n            if (this.selectlistRow) {\n                this.dialogPrintVisible = true\n                this.dialogStatus = \"print\"\n                this.printData = this.selectlistRow\n                this.$nextTick(() => {\n                    this.$refs.childQRcode.qrCreate(this.printData.outOrderNumber)\n                })\n\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'))\n                return false\n            }\n\n        },\n        //打印执行\n        doReceiptPrint () {\n            let newWin = window.open(\"\")\n            var newstr = document.getElementById('receipt').innerHTML\n            newWin.document.write(newstr)\n            newWin.document.close()//IE添加\n\n            setTimeout(function () {\n                newWin.print()\n                newWin.close()\n            }, 100)\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '打印次数', '凭证号', '业务类型',\n                    '物料编码', '物料名称', '数量',\n                    '组织编码', '领用部门', '领用人',\n                    '仓库编码', '区位', '储位',\n                    '记账日期', '创建时间',\n                    '记账人', '凭证行号', '申请单号',\n\n                ]\n                const filterVal = [\n                    'printNumber', 'outOrderNumber', 'businessType',\n                    'materielCode', 'materielName', 'outStockNum',\n                    'orgCode', 'params1', 'params2',\n                    'warehouseCode', 'areaName',\n                    'locationName', 'accountDate',\n                    'createTime', 'creator', 'rowNo',\n                    'sourceOrderCode'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v => filterVal.map(j => {\n                if (j === 'timestamp') {\n                    return\n                } else {\n                    return v[j]\n                }\n            }))\n        },\n    }\n}\n",null]}