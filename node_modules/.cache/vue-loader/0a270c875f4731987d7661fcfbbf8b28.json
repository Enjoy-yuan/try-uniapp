{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/Select/wlxzPlan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/Select/wlxzPlan.vue","mtime":1596610933177},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'wlxzbykcz',\n    components: { Pagination },\n    props: ['orgCode', 'unMutiple', 'stockType', 'warehouseCode'],\n    data () {\n        return {\n            list: null,\n            total: 0,\n            areaList: null,\n            spanArr: [],\n            locatorList: null,\n            stockStateArr: [],\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                materielCode: undefined,\n                materielName: undefined,\n                orgCode: this.orgCode,\n                warehouseCode: this.warehouseCode,\n                stockType: this.stockType,\n                stockState: this.stockState\n            },\n            activeName2: 'first',\n            listSelected: [],\n            materielCode: undefined,\n            selectCode: [],\n            tableKey: 0,\n            employeeType: undefined,\n            isEdit: false,\n            isUnselected: false\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_stock_type: state => state.dict.dt_stock_type,\n            dt_stock_status: state => state.dict.dt_stock_status,\n            dt_materiel_type: state => state.dict.dt_materiel_type,\n        })\n    },\n    mounted () {\n        // this.$store.dispatch('dict/getDicData', ['dt_stock_type', 'dt_stock_status', 'dt_materiel_type', 'dt_stock_type']);\n        this.getList()\n        this.getSpanArr(this.list)\n    },\n    methods: {\n        getList () {\n            this.list = [{\n                groupNumber: '3', materielMapCode: 'WL005', specialDistinction: '',\n                materielCode: 'WL005', materielName: '测试物料1', assignPerson: '',\n                materialClassify: '管件', specifications: '5*8', quality: '塑胶',\n                weight: '1', materialType: '零部件', isCloseHeavy: '否',\n                linkNumber: 'TZS0001', unit: '根', targetPrice: '1.50',\n                completeTime: '2019-08-31', orgCode: 'XX采购组织', itemCode: 'P0001',\n                sourceMode: '新品', linkMaterialCode: '', designer: '刘全',\n                taskPerson: '司马长风', taskAssignTime: '2019-08-10'\n            }, {\n                groupNumber: '3', materielMapCode: 'WL001', specialDistinction: '',\n                materielCode: 'WL001', materielName: '测试物料2', assignPerson: '',\n                materialClassify: '管件', specifications: '5*9', quality: '塑胶',\n                weight: '1', materialType: '零部件', isCloseHeavy: '否',\n                linkNumber: 'TZS0001', unit: '根', targetPrice: '1.50',\n                completeTime: '2019-08-31', orgCode: 'XX采购组织', itemCode: 'P0001',\n                sourceMode: '新品', linkMaterialCode: '', designer: '刘全',\n                taskPerson: '司马长风', taskAssignTime: '2019-08-10'\n            }]\n            if (this.listSelected) {\n                this.listSelected.forEach(items => {\n                    this.list.forEach((item, index) => {\n                        if (item.rowId === items.rowId) {\n                            this.$nextTick(function () {\n                                this.checked(index)\n                            })\n                        }\n                    })\n                })\n            }\n\n        },\n        checked (i) {\n            this.$refs.tb_bx.toggleRowSelection(this.list[i], true)\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true\n            val.forEach(item => {\n                if (item.rowId === row.rowId) {\n                    isuncheck = false\n                }\n            })\n            return isuncheck\n        },\n        selectMain (val, row) {\n            let isuncheck = this.checkUnsel(val, row)\n            if (!isuncheck) {\n                if (this.unMutiple) {\n                    if (val.length == 1) {\n                        this.selectSameProp(this.list, \"groupNumber\", val)\n                        // this.listSelected = val;\n                    }\n                    else {\n                        this.$message({\n                            title: \"警告\",\n                            message: \"请选择一条信息\",\n                            type: \"warning\"\n                        })\n                    }\n                } else {\n                    if (this.listSelected) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false\n                            this.listSelected.forEach((item) => {\n                                if (item.rowId === items.rowId) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.listSelected.push(val[indexv])\n                            }\n                        })\n                    } else {\n                        this.listSelected = val\n                    }\n                }\n            } else {\n                this.listSelected = this.listSelected.filter(item => {\n                    return item.rowId !== row.rowId\n                })\n            }\n        },\n        //选中num相同的\n        selectSameProp (data, prop, val) {\n            this.listSelected = []\n            for (let j = 0; j < val.length; j++) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i][prop] === val[j][prop]) {\n                        this.listSelected.push(data[i])\n                    }\n                }\n            }\n        },\n        getSpanArr (data) {\n            data.sort(this.compareObj(\"groupNumber\"))\n            for (var i = 0; i < data.length; i++) {\n                if (i === 0) {\n                    this.spanArr.push(1)\n                    this.pos = 0\n                } else {\n                    // 判断当前元素与上一个元素是否相同\n                    if (data[i].groupNumber === data[i - 1].groupNumber) {\n                        this.spanArr[this.pos] += 1\n                        this.spanArr.push(0)\n                    } else {\n                        this.spanArr.push(1)\n                        this.pos = i\n                    }\n                }\n            }\n        },\n        compareObj (prop) {\n            return function (obj1, obj2) {\n                let val1 = obj1[prop]\n                let val2 = obj2[prop]; if (val1 < val2) {\n                    return -1\n                } else if (val1 > val2) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        },\n        objectSpanMethod ({ rowIndex, columnIndex }) {\n            if (columnIndex === 0) {\n                const _row = this.spanArr[rowIndex]\n                const _col = _row > 0 ? 1 : 0\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                }\n            }\n            if (columnIndex === 1) {\n                const _row = this.spanArr[rowIndex]\n                const _col = _row > 0 ? 1 : 0\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                }\n            }\n        }\n    },\n    watch: {\n        orgCode: {\n            handler (newValue) {\n                this.listQuery.orgCode = newValue\n                this.getList()\n            },\n            deep: true\n        },\n        warehouseCode: {\n            handler (newValue) {\n                this.listQuery.warehouseCode = newValue\n                this.getList()\n            },\n            deep: true\n        },\n\n        stockType: {\n            handler (newValue) {\n                this.listQuery.stockType = newValue\n                this.getList()\n            },\n            deep: true\n        }\n    }\n}\n",null]}