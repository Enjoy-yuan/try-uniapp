{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/components/Select/work-center-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/components/Select/work-center-select.vue","mtime":1600927611121},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\n// import fetch from '@/utils/fetch'\nimport request from '@/utils/request'\nexport default {\n    name: 'work-center-select',\n    props: {\n        orgCode: {\n            required: true,\n            type: String,\n            default: ''\n        },\n        workCenterType: {\n            required: true,\n            type: String,\n            default: ''\n        },\n        workCenterClass: {\n            required: true,\n            type: String,\n            default: ''\n        },\n        workCenterCode: {\n            type: String,\n            default: ''\n        },\n        placeholder: {\n            type: String,\n            default: '请选择'\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n    },\n    model: {\n        prop: 'workCenterCode',\n        event: 'change'\n    },\n    data () {\n        return {\n            options: [],\n            selectValue: this.workCenterCode\n        }\n    },\n    watch: {\n        workCenterCode: {\n            handler: function () {\n                this.selectValue = this.workCenterCode\n            },\n            immediate: true\n        },\n        orgCode: {\n            handler: function (val, oldVal) {\n\n                if (val) {\n                    this.getOptions()\n                } else {\n                    this.options = []\n                }\n                if (oldVal) {\n                    this.selectValue = undefined\n                    this.$emit('change', undefined)\n                }\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        getOptions () {\n\n            return request({\n                url: '/base-modeling/work-centers',\n                method: 'get',\n                params: {\n                    orgCode: this.orgCode,\n                    workCenterType: this.workCenterType,\n                    workCenterClass: this.workCenterClass\n                }\n            }).then(res => {\n                this.options = res.data\n                this.$emit('linecode', this.options)\n            })\n        },\n        changeSelect (val) {\n            let name = ''\n            let dd = this.options.filter(v => {\n                if (v.workCenterCode == val) {\n                    return v\n                }\n            })\n            let org = this.options.filter(v => v.workCenterCode == val)\n                .find((value) => value)\n            if (org) {\n                name = org.workCenterName\n            }\n            this.$emit('selectName1', name)\n            this.$emit('change', val)\n            this.$emit('change1', dd)\n        }\n    }\n}\n",null]}