{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/warehouse/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/warehouse/index.vue","mtime":1600927611471},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/warehouse'\nimport Pagination from '@/components/Pagination'\nimport orgSelect from '@/components/Select/orgSelect.vue'\nimport materielDictItemTable from '@/components/Table/materiel-dict-item-table.vue'\nimport wlxzbyzsj from '@/components/Select/wlxzbyzsj.vue'\nimport { DICT_CODE, DT_ORG_TYPE, TWO_STATE_OPTIONS } from '@/utils/constant'\nimport { mapState } from 'vuex'\nimport AuthoType from \"@/components/Select/AuthoType.vue\" //权限类型下拉组件\n\n\nexport default {\n    name: 'warehouse',\n    components: { Pagination, orgSelect, materielDictItemTable, wlxzbyzsj, AuthoType },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            wlselect: null,\n            theight: 0,//表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                warehouseCode: undefined,\n                warehouseName: undefined,\n                warehouseType: undefined,\n                warehouseClass: undefined,\n                orgCode: undefined\n            },\n            temp: {\n                areaEnabled: 0,\n                batchEnabled: undefined,\n                erpWarehouseCode: undefined,\n                locationEnabled: 0,\n                wmsEnabled: 0,\n                minusEnabled: undefined,\n                batchRuleDiff: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                remark: undefined,\n                warehouseAddr: undefined,\n                warehouseClass: undefined,\n                warehouseCode: undefined,\n                warehouseGroup: undefined,\n                warehouseName: undefined,\n                warehouseType: undefined\n            },\n            enableds: {\n                areaEnabled: false,\n                locationEnabled: false,\n                wmsEnabled: false,\n            },\n            warehouseCode: undefined,\n            orgCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            DICT_CODE: DICT_CODE,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            employeeType: undefined,\n            activeName: '1',\n            typeDialogVisible: false,\n            batchList: [],\n            partDialogVisible: false,\n            minusList: [],\n            rules: {\n                orgCode: [\n                    { required: true, message: '请选择组织编码', trigger: 'blur' }\n                ],\n                warehouseCode: [\n                    { required: true, message: '仓库编号不能空', trigger: 'blur' },\n                    { pattern: /^[A-Z0-9]{0,8}$/, message: '由大写字母和数字组成，长度为8', trigger: 'blur' }\n                ],\n                warehouseName: [\n                    { required: true, message: '仓库名称不能空', trigger: 'blur' },\n                    { max: 60, message: '长度不能超过60', trigger: 'blur' }\n                ],\n                warehouseType: [\n                    { required: true, message: '请选择仓库类型', trigger: 'blur' }\n                ],\n                warehouseClass: [\n                    { required: true, message: '请选择仓库类别', trigger: 'blur' }\n                ],\n                wareLoctionMateriel: [\n                    { required: true, message: '储位物料关系不能为空\"', trigger: 'blur' }\n                ],\n                erpWarehouseCode: [\n                    { pattern: /^[A-Z0-9]{0,8}$/, message: '由大写字母和数字组成，长度为8', trigger: 'blur' }\n                ],\n                warehouseAddr: [\n                    { max: 200, message: '长度不能超过200', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 512, message: '描述长度为512内', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_warehouse_type: state => state.dict.dt_warehouse_type,\n            dt_warehouse_class: state => state.dict.dt_warehouse_class,\n            dt_warehouse_group: state => state.dict.dt_warehouse_group,\n            dt_batch_enabled: state => state.dict.dt_batch_enabled,\n            dt_negativestock_en: state => state.dict.dt_negativestock_en,\n            dt_batch_rule_diff: state => state.dict.dt_batch_rule_diff,\n            dt_material_relation: state => state.dict.dt_material_relation\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_warehouse_type', 'dt_warehouse_class', 'dt_warehouse_group', 'dt_batch_enabled', 'dt_negativestock_en', 'dt_batch_rule_diff', 'dt_material_relation'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n\n        handleDownload () {//导出\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '组织名称', '仓库类型', '仓库编码', '仓库名称',\n                    '仓库类别', '仓库组', 'ERP仓库编码', '储位物料关系',\n                    '区位启用', '储位启用', 'WMS管理', '批次启用',\n                    '储位物料关系', '负库存启用', '批次规则区分', '仓库地址',\n                    '备注', '创建人', '创建时间', '修改人',\n                    '修改时间'\n                ]\n                const filterVal = [\n                    'orgName', 'warehouseTypeName', 'warehouseCode', 'warehouseName',\n                    'warehouseClassName', 'warehouseGroupName', 'erpWarehouseCode', 'relation',\n                    'areaEnabled', 'locationEnabled', 'wmsEnabled', 'batchEnabledName',\n                    'wareLoctionMateriel', 'minusEnabledName', 'batchRuleDiffName', 'warehouseAddr',\n                    'remark', 'creator', 'createTime', 'updator',\n                    'updateTime'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v => filterVal.map(j => {\n                if (j === 'timestamp') {\n                    return\n                } else {\n                    return v[j]\n                }\n            }))\n        },\n        handleUpdate () {//编辑弹窗\n            console.log(this.selectlistRow[0], '000')\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true//员工编码不可以编写\n                this.temp = this.selectlistRow[0] // copy obj\n                if (this.selectlistRow[0].locationEnabled == 1) {\n                    this.enableds.locationEnabled = true\n                } if (this.selectlistRow[0].areaEnabled == 1) {\n                    this.enableds.areaEnabled = true\n                } if (this.selectlistRow[0].wmsEnabled == 1) {\n                    this.enableds.wmsEnabled = true\n                }\n                api.getRecord(this.temp.warehouseCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                    this.$nextTick(() => {\n                        this.$refs['temp'].clearValidate()\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {//编辑\n            this.$refs['temp'].validate((valid) => {\n                if (valid) {\n                    this.boolean2Int()\n                    api.updateRecord(this.temp.warehouseCode, this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        handleDelete () {//删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                }).then(() => {\n                    let ids = []\n                    this.selectlistRow.forEach((val, index) => {\n                        ids[index] = val.warehouseCode\n                    })\n                    api.deleteRecord(ids).then(() => {\n                        this.getList(),\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create () {\n            this.$refs.temp.validate((valid) => {\n                if (valid) {\n                    this.boolean2Int()\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                areaEnabled: false,\n                batchEnabled: undefined,\n                erpWarehouseCode: undefined,\n                locationEnabled: false,\n                wmsEnabled: false,\n                minusEnabled: undefined,\n                batchRuleDiff: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                remark: undefined,\n                warehouseAddr: undefined,\n                warehouseClass: undefined,\n                warehouseCode: undefined,\n                warehouseGroup: undefined,\n                warehouseName: undefined,\n                warehouseType: undefined\n            }\n            this.activeName = '1'\n            this.enableds = {\n                areaEnabled: false,\n                locationEnabled: false,\n                wmsEnabled: false,\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        selectName (val) {\n            this.temp.orgName = val\n        },\n        boolean2Int () {\n            this.temp.areaEnabled = this.enableds.areaEnabled ? 1 : 0\n            this.temp.locationEnabled = this.enableds.locationEnabled ? 1 : 0\n            this.temp.wmsEnabled = this.enableds.wmsEnabled ? 1 : 0\n        },\n        int2Boolean () {\n            this.enableds.areaEnabled = this.temp.areaEnabled === 1\n            this.enableds.locationEnabled = this.temp.locationEnabled === 1\n            this.enableds.wmsEnabled = this.temp.wmsEnabled === 1\n        },\n        handleClickTab (val) {\n            if (val.name == '2') {\n                this.listBatch()\n            } else if (val.name == '3') {\n                this.listMinus()\n            }\n        },\n        listBatch () {\n            api.listBatch(this.temp.warehouseCode).then(res => {\n                this.batchList = res.data\n            })\n        },\n        handleCreateBatch () {\n            console.log(this.temp.batchEnabled, '98789')\n            if (this.temp.batchEnabled == 'dt_batch_enabled_type') { //按分类启用\n                this.typeDialogVisible = true\n            } else if (this.temp.batchEnabled == 'dt_batch_enabled_part') {//按物料启用\n                this.partDialogVisible = true\n                this.wlselect = null\n            }\n        },\n        handleDeleteBatch (row) {\n            this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                api.deleteBatch(row.warehouseCode, row.objectCode).then(() => {\n                    this.listByActiveName()\n                    this.$notify({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            })\n        },\n        createBatch (temp) {\n            console.log(temp, '000')\n            api.addBatch(this.temp.warehouseCode, temp).then(() => {\n                this.listByActiveName()\n                this.typeDialogVisible = false\n                this.partDialogVisible = false\n                this.$notify({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        selectTypeRow (rows) {\n            const temp = rows.map(v => {\n                let temp = {\n                    warehouseCode: this.temp.warehouseCode,\n                    objectCode: v.dictItemKey,\n                    objectName: v.dictItemValue,\n                    batchEnabled: this.temp.batchEnabled,\n                    minusEnabled: this.temp.minusEnabled\n                }\n                return temp\n            })\n\n            this.createByActiveName(temp)\n        },\n        listMinus () {\n            api.listMinus(this.temp.warehouseCode).then(res => {\n                this.minusList = res.data\n            })\n        },\n        handleCreateMinus () {\n            if (this.temp.minusEnabled == 'dt_negativestock_en_type') { //按分类启用\n                this.typeDialogVisible = true\n            } else if (this.temp.minusEnabled == 'dt_negativestock_en_part') { //按物料启用\n                this.partDialogVisible = true\n            }\n        },\n\n        handleConfirm () {\n            if (this.$refs.wlxz.listSelected.length > 0) {\n                const temp = this.$refs.wlxz.listSelected.map(v => {\n                    let temp = {\n                        warehouseCode: this.temp.warehouseCode,\n                        objectCode: v.materielCode,\n                        objectName: v.materielName,\n                        batchEnabled: this.temp.batchEnabled,\n                        minusEnabled: this.temp.minusEnabled\n                    }\n                    return temp\n                })\n                this.wlselect = temp\n                api.addBatch(this.temp.warehouseCode, this.wlselect).then(() => {\n                    this.listByActiveName()\n                    this.typeDialogVisible = false\n                    this.partDialogVisible = false\n                    this.$notify({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            } else {\n                this.$notify({\n                    title: '警告',\n                    message: '请勾选记录',\n                    type: 'warning',\n                    duration: 2000\n                })\n            }\n\n        },\n        handleDeleteMinus (row) {\n            this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                api.deleteMinus(row.warehouseCode, row.objectCode).then(() => {\n                    this.listByActiveName()\n                    this.$notify({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            })\n        },\n        createMinus (temp) {\n            api.addMinus(this.temp.warehouseCode, temp).then(() => {\n                this.listByActiveName()\n                this.typeDialogVisible = false\n                this.partDialogVisible = false\n                this.$notify({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        selectPartRow (rows) {\n            const temp = rows.map(v => {\n                let temp = {\n                    warehouseCode: this.temp.warehouseCode,\n                    objectCode: v.materielCode,\n                    objectName: v.materielName,\n                    batchEnabled: this.temp.batchEnabled,\n                    minusEnabled: this.temp.minusEnabled\n                }\n                return temp\n            })\n            this.wlselect = temp\n        },\n        listByActiveName () {\n            if (this.activeName == '2') {\n                this.listBatch()\n            } else if (this.activeName == '3') {\n                this.listMinus()\n            }\n        },\n        createByActiveName (temp) {\n            if (this.activeName == '2') {\n                this.createBatch(temp)\n            } else if (this.activeName == '3') {\n                this.createMinus(temp)\n            }\n        }\n    }\n}\n",null]}