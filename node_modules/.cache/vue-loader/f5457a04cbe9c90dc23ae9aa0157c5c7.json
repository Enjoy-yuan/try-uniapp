{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/sourceList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/sourceList/index.vue","mtime":1600927611465},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/data-base/source-list\"\nimport { selectlists } from '@/api/system/organization'\nimport Pagination from \"@/components/Pagination\"\nimport orgSelect from \"@/components/Select/orgSelect.vue\"\nimport { DT_ORG_FUNCTION } from \"@/utils/constant\"\nimport { validatorContactNumber, validatorEmail } from \"@/utils/validate\"\nimport wlxzbyzsj from \"@/components/Select/wlxzbyzsj.vue\"\nimport gysxz from \"@/components/Select/gysxz\" //供应商选择\nimport { parseTime } from '@/utils'\nimport ImportFile from \"@/components/ImportFile\"\nexport default {\n    name: \"sourceList\",\n    components: {\n        Pagination,\n        orgSelect,\n        gysxz,\n        wlxzbyzsj,\n        ImportFile\n    },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            parentsRows: null,\n            parentsRows1: null,\n            theight: 0,//表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                materielCode: undefined,\n                supplierCode: undefined,\n                orgCode: undefined\n            },\n            temp: {\n                materielCode: undefined,\n                supplierCode: undefined,\n                orgCode: undefined,\n                materielName: undefined,\n                state: 1,\n                supplierName: undefined,\n                stockContain: undefined\n            },\n            importDialogVisible: false,//导入弹框\n            modalNo: 'EXTP-BAS-0007',//导入模板编号\n            orgCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            materielDialogFormVisible: false,\n            gysxzDialogFormVisible: false,\n            dialogStatus: \"\",\n            tableKey: 0,\n\n            DT_ORG_FUNCTION: DT_ORG_FUNCTION,\n\n\n            rules: {\n                customerCode: [\n                    { required: true, message: \"客户编码不能为空\", trigger: \"blur\" },\n                    { pattern: /^[A-Z-_0-9]{1,50}$/, message: \"由大写字母，数字，—和_组成，长度不能超过50\", trigger: \"blur\" }\n                ],\n                customerName: [\n                    { required: true, message: \"客户名称不能为空\", trigger: \"blur\" },\n                    { max: 100, message: \"长度不能超过100\", trigger: \"blur\" }\n                ],\n                contact: [{ max: 50, message: \"长度不能超过50\", trigger: \"blur\" }],\n                contactNumber: [{ validator: validatorContactNumber, trigger: \"blur\" }],\n                email: [{ validator: validatorEmail, trigger: \"blur\" }],\n                address: [{ max: 512, message: \"长度不能超过512\", trigger: \"blur\" }],\n                remark: [{ max: 512, message: \"描述长度为512内\", trigger: \"blur\" }]\n            }\n        }\n    },\n    created () {\n        this.getList()\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            selectlists().then(response => {\n                api.queryRecords(this.listQuery).then(res => {\n                    res.data.list.forEach((item, index) => {\n                        response.data.forEach((option) => {\n                            if (option.organizationCode == item['orgCode']) {\n                                res.data.list[index]['orgCode' + 'CN'] = option.organizationName\n                            }\n                        })\n                    })\n                    this.list = res.data.list\n                    this.total = res.data.pages.count\n                })\n            }),\n                api.queryRecords(this.listQuery).then(res => {\n                    this.list = res.data.list\n                    this.total = res.data.pages.count\n                })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = \"create\"\n            this.dialogFormVisible = true\n        },\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true //组织编码不可以编写\n                this.temp = this.selectlistRow[0] // copy obj\n                this.dialogStatus = \"update\"\n                this.dialogFormVisible = true\n                this.$nextTick(() => {\n                    this.$refs[\"temp\"].clearValidate()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        update () {\n            this.$refs[\"temp\"].validate(valid => {\n                if (valid) {\n                    api.updateRecord(this.temp.rowId, this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: \"成功\",\n                            message: \"更新成功\",\n                            type: \"success\",\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        mydata () { },\n        handleDelete () {//删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm(\"此操作将删除所选中数据, 是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    let ids = []\n                    this.selectlistRow.forEach((val, index) => {\n                        ids[index] = val.rowId\n                    })\n                    api.deleteRecord(ids).then(() => {\n                        this.getList(),\n                            this.$message({\n                                title: \"成功\",\n                                message: \"删除成功\",\n                                type: \"success\",\n                                duration: 2000\n                            })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\"\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"新增成功\",\n                            type: \"success\",\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                materielCode: undefined,\n                supplierCode: undefined,\n                orgCode: undefined,\n                materielName: undefined,\n                stockContain: undefined,\n                state: 1,\n                supplierName: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleClickgysxz () {\n            this.$refs.gysxz.dialogVisible = true\n        },\n        // handleDblclickgysxz (row) {//父子页面通信\n        //     this.parentsRows = row;\n        // },\n        handleGysClick (row) {//供应商选中弹窗确认按钮\n            this.$set(this.temp, 'supplierCode', row[0].supplierCode)\n            this.$set(this.temp, 'supplierName', row[0].supplierName)\n        },\n        handleClickMateriel () {\n            this.materielDialogFormVisible = true\n            this.$nextTick(() => {\n                this.$refs.wlxz.getList()\n            })\n        },\n        // handleDblclickMateriel (row) {\n        //     this.parentsRows1 = row;\n        //     this.parentsRows1.snp = this.parentsRows1.stockContain;\n        //     this.temp.materialQuality = this.parentsRows1.materialQuality;\n        //     this.temp.materielCode = this.parentsRows1.materielCode;\n        //     this.temp.materielName = this.parentsRows1.materielName;\n        //     this.temp.materielClassify = this.parentsRows1.materielClassify;\n        //     this.temp.materielGroup = this.parentsRows1.materielGroup;\n        //     this.temp.measuringUnit = this.parentsRows1.measuringUnit;\n        //     this.temp.measuringUnitName = this.parentsRows1.measuringUnitName;\n        //     this.temp.materielType = this.parentsRows1.materielType;\n        //     this.temp.specification = this.parentsRows1.specification;\n        //     this.materielDialogFormVisible = false;\n        // },\n        wlxzConfirm () {\n            if (this.$refs.wlxz.listSelected.length > 0) {\n                this.$set(this.temp, 'materielName', this.$refs.wlxz.listSelected[0].materielName)\n                this.$set(this.temp, 'materielCode', this.$refs.wlxz.listSelected[0].materielCode)\n                this.$set(this.temp, 'materielClassify', this.$refs.wlxz.listSelected[0].materielClassify)\n                this.$set(this.temp, 'materielType', this.$refs.wlxz.listSelected[0].materielType)\n                this.materielDialogFormVisible = false\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        selectName (val) {\n            this.temp.orgCode = val\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '组织编码', '组织名称', '物料编码',\n                    '物料名称', \"供应商编码\", \"供应商名称\",\n                    '状态'\n                ]\n                const filterVal = [\n                    'orgCode', 'orgName', 'materielCode',\n                    'materielName', \"supplierCode\", \"supplierName\",\n                    'state'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v => filterVal.map(j => {\n                if (j === 'timestamp') {\n                    return parseTime(v[j])\n                } else {\n                    return v[j]\n                }\n            }))\n        },\n        handleImport () {\n            this.importDialogVisible = true\n            this.$nextTick(() => {\n                this.$refs.importDialog.getList()\n            })\n        }\n\n    }\n};\n",null]}