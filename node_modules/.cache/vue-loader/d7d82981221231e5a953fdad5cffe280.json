{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/deviceTypeSelect/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/deviceTypeSelect/index.vue","mtime":1596610933432},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/database/eqmt'\nexport default {\n    name: 'deviceTypeSelectTree',\n    props: {\n        /* 配置项 */\n        props: {\n            type: Object,\n            default: () => {\n                return {\n                    rowId: 'rowId', // 父级唯一标识\n                    children: 'children',\n                    label: 'typeName'\n                }\n            }\n        },\n        /* 初始值 */\n        value: {\n            type: String,\n            default: () => {\n                return undefined\n            }\n        },\n        /* 可清空选项 */\n        clearable: {\n            type: Boolean,\n            default: () => {\n                return true\n            }\n        },\n        /* 自动收起 */\n        accordion: {\n            type: Boolean,\n            default: () => {\n                return false\n            }\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data () {\n        return {\n            // 数据默认字段\n            defaultProps: {\n                rowId: 'rowId', // 父级唯一标识\n                children: 'children',\n                label: 'typeName'\n            },\n            // 数据列表\n            options: [],\n            valueId: this.value, // 初始值\n            valueTitle: '',\n            defaultExpandedKey: []\n        }\n    },\n    mounted () {\n        //获取数据\n        api.queryRecords(this.listQuery).then(res => {\n            this.options = this.$myFun.buildTree(\n                res.data,\n                'typeCode',\n                'superiorCode'\n            )[0].children\n            this.initHandle()\n        })\n\n    },\n    methods: {\n        // 初始化值\n        initHandle () {\n            if (this.valueId) {\n                this.valueTitle = this.$refs.selectTree.getNode(\n                    this.valueId\n                ).data[this.props.label] // 初始化显示\n                this.$refs.selectTree.setCurrentKey(this.valueId) // 设置默认选中\n                this.defaultExpandedKey = [this.valueId] // 设置默认展开\n            }\n            this.$nextTick(() => {\n                let scrollWrap = document.querySelectorAll(\n                    '.el-scrollbar .el-select-dropdown__wrap'\n                )[0]\n                let scrollBar = document.querySelectorAll(\n                    '.el-scrollbar .el-scrollbar__bar'\n                )\n                scrollWrap.style.cssText =\n                    'margin: 0px; max-height: none; overflow: hidden;'\n                scrollBar.forEach(ele => (ele.style.width = 0))\n            })\n        },\n        // 切换选项\n        handleNodeClick (node) {\n            this.valueTitle = node[this.props.label]\n            this.valueId = node[this.props.value]\n            this.$emit('getValue', node)\n            // 向父级提交input事件，相当于绑定父级v-model的值\n            this.$emit('input', node.typeCode)\n        },\n        // 清除选中\n        clearHandle () {\n            this.valueTitle = ''\n            this.valueId = null\n            this.clearSelected()\n            this.$emit('getValue', null)\n            this.$emit('input', undefined)\n        },\n        /* 清空选中样式 */\n        clearSelected () {\n            let allNode = document.querySelectorAll(\n                '#tree-option .el-tree-node'\n            )\n            allNode.forEach(element => element.classList.remove('is-current'))\n        }\n    }\n}\n",null]}