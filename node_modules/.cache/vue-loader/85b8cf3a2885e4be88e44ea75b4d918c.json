{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/targetInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/targetInfo.vue","mtime":1596611178236},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\"\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nexport default {\n    name: \"targetInfo\",\n    props: ['code'],\n    data () {\n        return {\n            theight: 0,//表格高度\n            listLoading: false,\n            list: [],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                normName: undefined\n            },\n            dialogFormVisible: false,\n            dialogFormType: undefined,\n            temp: {\n                company: undefined,\n                companyName: undefined,\n                normCode: undefined,\n                normName: undefined,\n                remark: undefined\n            },\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            tableKey: 0,//表格索引\n            rules: {\n                normCode: [\n                    {\n                        required: true,\n                        message: '指标编码不能为空',\n                        trigger: ['blur', 'chnage']\n                    },\n                    {\n                        pattern: /^[a-zA-Z0-9]{0,32}$/,\n                        message: '由大写字母、数字组成，长度为32',\n                        trigger: ['blur', 'chnage']\n                    }\n                ],\n                normName: [\n                    {\n                        required: true,\n                        message: '指标名称不能为空',\n                        trigger: ['blur', 'chnage']\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' },\n                    {\n                        pattern: /^[\\u4e00-\\u9fa5]+$/,\n                        message: '只允许中文输入',\n                        trigger: ['blur', 'chnage']\n                    }\n                ],\n                company: [\n                    {\n                        required: true,\n                        message: '请选择单位',\n                        trigger: 'change'\n                    }\n                ],\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            iot_norm_company: state => state.iotDict.iot_norm_company\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getCompany (val) {\n            let arr = this.iot_norm_company.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.companyName = arr[0].dictItemValue\n        },\n        //获取表格数据\n        getList () {\n            this.listLoading = true\n            api.queryNorms(this.code, this.listQuery).then(res => {\n                this.list = res.data\n                this.list = this.$myFun.srmCodeToName(res.data, [this.iot_norm_company], ['company'])\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.dialogFormType = 'create'\n            this.dialogFormVisible = true\n        },\n        create: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        api.addNorm(this.code, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.resTemp()\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //编辑按钮单击事件方法\n        handleUpdate (normCode) {\n            api.queryNorm(this.code, normCode).then(res => {\n                this.temp = res.data\n                this.dialogFormType = 'update'\n                this.dialogFormVisible = true\n            })\n        },\n        update: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        api.updateNorm(this.code, this.temp.normCode, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.resTemp()\n                            this.$notify({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //删除按钮单击事件方法\n        handleDelete (normCode) {\n            this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    api.deleteNorm(this.code, normCode).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    }).catch(() => {\n                        this.getList()\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n        },\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        resTemp () {\n            this.temp = {}\n        }\n    }\n};\n",null]}