{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/dataBase/workCenterDir/workCenterMaster/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/dataBase/workCenterDir/workCenterMaster/index.vue","mtime":1596610933579},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport RightContent from './rightcontent'\nimport { buildTree } from '@/utils'\nimport { selectlists as listOrg } from '@/api/system/organization'\nimport { queryRecords as listWorkCenter } from '@/api/project/mes/dataBase/work-center'\nimport orgSelect from '@/components/Select/orgSelect.vue'\n\nexport default {\n    name: 'gzzxzsj',\n    components: { RightContent, orgSelect },\n    data() {\n        return {\n            data: [],\n            defaultProps: {\n                children: 'children',\n                label: 'label'\n            },\n            //树高度样式\n            contentStyleObj: {\n                height: ''\n            },\n            orgCode: '',\n            DT_ORG_TYPE: 'dt_org_type_factory'\n        }\n    },\n    created() {\n        window.addEventListener('resize', this.getHeight)\n\n        this.initTree()\n    },\n    mounted() {\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTreeHeight()\n        }\n        this.setTreeHeight()\n    },\n    methods: {\n        initTree() {\n            const orgQuery = {\n                type: this.DT_ORG_TYPE,\n                organizationCode: this.orgCode,\n                state: 1\n            }\n            const org = listOrg(orgQuery)\n            const workCenter = listWorkCenter({ orgCode: this.orgCode })\n            Promise.all([org, workCenter]).then(([org, workCenter]) => {\n                const workCenters = workCenter.data.map(v => {\n                    return {\n                        orgCode: v.orgCode,\n                        parentCode: v.parentCode,\n                        workCenterCode: v.workCenterCode,\n                        label: v.workCenterName\n                    }\n                })\n\n                const wcsTree = buildTree(\n                    workCenters,\n                    'workCenterCode',\n                    'parentCode',\n                    'children'\n                )\n\n                this.data = org.data.map(v => {\n                    const children = wcsTree.filter(\n                        v1 => v1.orgCode == v.organizationCode\n                    )\n                    return {\n                        label: v.organizationName,\n                        orgCode: v.organizationCode,\n                        children: children\n                    }\n                })\n            })\n        },\n        handleFresh(val) {\n            if (val) {\n                this.initTree()\n            }\n        },\n        handleChange(val) {\n            this.orgCode = val\n            this.initTree()\n            this.$refs.uploadRef.list = []\n        },\n        handleNodeClick(data) {\n            this.$refs.uploadRef.getList(data)\n        },\n        getHeight() {\n            this.contentStyleObj.height =\n                document.body.scrollHeight - 110 + 'px'\n        },\n        //树高度设置\n        setTreeHeight() {\n            this.contentStyleObj.height =\n                parseInt(this.$myFun.getTreehHeight()) - 40 + 'px'\n        }\n    },\n    destroyed() {\n        window.removeEventListener('resize', this.getHeight)\n    }\n}\n",null]}