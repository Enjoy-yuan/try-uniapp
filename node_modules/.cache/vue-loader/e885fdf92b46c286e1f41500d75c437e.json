{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabQuote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabQuote.vue","mtime":1596610933675},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\"\nexport default {\n    name: 'tabQuote',\n    props: ['tabQuoteList'],\n    data () {\n        return {\n            type: null,\n            tableData: [],\n            tableConfig: [\n                {\n                    label: '制造总费用', prop: 'no1', align: 'center', width: 'auto',\n                    innerArr: [\n                        { label: '类型', fixed: true, prop: 'totalType', align: 'center', width: 'auto' },\n                        { label: '原材料费用', prop: 'rawMaterialCost', align: 'center', width: 'auto' },\n                        { label: '回收价值', prop: 'recoveryValue', align: 'center', width: 'auto' },\n                        { label: '外购/协费用', prop: 'outsourcingCost', align: 'center', width: '100' },\n                        { label: '专业工装费用', prop: 'toolingCost', align: 'center', width: '120' },\n                        { label: '加工费用', prop: 'processingCost', align: 'center', width: 'auto' },\n                        { label: '废品损失', prop: 'wasteLoss', align: 'center', width: 'auto' },\n                    ]\n                },\n                {\n                    label: '期间费用', prop: 'no2', align: 'center', width: 'auto',\n                    innerArr: [\n                        { type: 'commonInput', label: '设计/实验费用', prop: 'designCost', align: 'center', width: '120' },\n                        { label: '管理费率', prop: 'managementRate', align: 'center', width: 'auto' },\n                        { label: '管理费', prop: 'managementCost', align: 'center', width: 'auto' },\n                        { label: '财务费率', prop: 'financialRate', align: 'center', width: 'auto' },\n                        { label: '财务费用', prop: 'financialCost', align: 'center', width: 'auto' },\n                        { label: '包装费用', prop: 'packingCost', align: 'center', width: 'auto' },\n                        { label: '物流费用', prop: 'logisticsCost', align: 'center', width: 'auto' },\n                        { type: 'commonInput', label: '其它费用', prop: 'otherCost', align: 'center', width: 'auto' }\n                    ]\n                },\n                { label: '利润率', prop: 'profitRate', align: 'center', width: 'auto' },\n                { label: '利润', prop: 'profit', align: 'center', width: 'auto' },\n                { label: '核实价', prop: 'realPrice', align: 'center', width: 'auto' },\n            ]\n        }\n    },\n    computed: {\n        ...mapState({\n            sums: state => state.getData.sums,//原材料小计精算(A)\n            RecoveryValue: state => state.getData.recoveryValue,//回收价值精算(A6)\n            WGsums: state => state.getData.WGsums,//外购小计精算(B)\n            ApportionmentFee: state => state.getData.ApportionmentFee,//单件摊销精算(C)\n            JGsums: state => state.getData.JGsums,//加工费用精算(D)\n            Part: state => state.getData.Part,//单零件成本精算(H)\n            Wldata: state => state.getData.Wldata,//物流小计精算精算(I)\n            WasteLossYCL: state => state.getData.WasteLossYCL,//(A8)\n            Loss: state => state.getData.Loss,//(B4)\n            WasteLossZY: state => state.getData.WasteLossZY,//(C4)\n            RatedPower: state => state.getData.RatedPower,//(D6)\n        })\n    },\n    watch: {\n        tabQuoteList (val) {\n            if (this.type == 'add') {\n                let arr = JSON.parse(JSON.stringify(val))\n                arr.forEach(i => {\n                    i.totalType = '报价'\n                })\n                this.tableData = arr\n                let dto = {\n                    totalType: '精算',\n                    rawMaterialCost: 0,\n                    recoveryValue: 0,\n                    outsourcingCost: 0,\n                    toolingCost: 0,\n                    processingCost: 0,\n                    wasteLoss: 0,\n                    designCost: 0,\n                    managementRate: 0,\n                    managementCost: 0,\n                    financialRate: 0,\n                    financialCost: 0,\n                    packingCost: 0,\n                    logisticsCost: 0,\n                    otherCost: 0,\n                    realPrice: 0,\n                    profit: 0\n                }\n                dto.otherCost = this.tableData[0].otherCost\n                dto.designCost = this.tableData[0].designCost\n                dto.managementRate = this.tableData[0].managementRate\n                dto.financialRate = this.tableData[0].financialRate\n                dto.profitRate = this.tableData[0].profitRate\n                this.tableData.push(dto)\n                this.getRealPrice()\n            } else {\n                console.log(val, '9999')\n                let arr = JSON.parse(JSON.stringify(val))\n                this.tableData = arr\n                // this.tableData = arr.map(v => {\n                //     v.totalType = '精算'\n                //     return v\n                // })\n                console.log(this.tableData, '123')\n                this.getRealPrice()\n            }\n        },\n        //原材料费用（A）\n        'sums' (val) {\n\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'rawMaterialCost', val)\n                this.getRealPrice()\n\n            }\n\n        },\n        //回收价值(A6)\n        'RecoveryValue' (val) {\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'recoveryValue', val)\n                this.getRealPrice()\n\n            }\n\n        },\n        //外购小计精算(B)\n        'WGsums' (val) {\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'outsourcingCost', val)\n                this.getRealPrice()\n\n            }\n\n        },\n        //单件摊销精算(C)\n        'ApportionmentFee' (val) {\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'toolingCost', val)\n                this.getRealPrice()\n            }\n\n        },\n        //加工费用精算(D)\n        'JGsums' (val) {\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'processingCost', val)\n                this.getRealPrice()\n            }\n\n        },\n        //单零件成本精算(H)\n        'Part' (val) {\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'packingCost', val)\n                this.getRealPrice()\n\n            }\n\n        },\n        //物流精算(I)\n        'Wldata' (val) {\n            if (this.tableData.length > 0) {\n                this.$set(this.tableData[this.tableData.length - 1], 'logisticsCost', val)\n                this.getRealPrice()\n            }\n\n        },\n        //物流精算(A8)\n        'WasteLossYCL' () {\n            if (this.tableData.length > 0) {\n                this.getRealPrice()\n            }\n        },\n        //物流精算(B4)\n        'Loss' () {\n            if (this.tableData.length > 0) {\n                this.getRealPrice()\n            }\n\n        },\n        //物流精算(C4)\n        'WasteLossZY' () {\n            if (this.tableData.length > 0) {\n                this.getRealPrice()\n\n            }\n\n        },\n        //物流精算(D6)\n        'RatedPower' () {\n            if (this.tableData.length > 0) {\n                this.getRealPrice()\n\n            }\n\n        },\n\n    },\n    methods: {\n        //废品损失计算\n        getwasteLossData () {\n            let a = this.WasteLossYCL + this.Loss + this.WasteLossZY + this.RatedPower\n            this.$emit('getLossData', this.checkValue(a))\n            return this.WasteLossYCL + this.Loss + this.WasteLossZY + this.RatedPower\n        },\n        //利润计算\n        getProfit () {\n            let dataItem = this.sums - this.RecoveryValue + this.WGsums + this.ApportionmentFee + this.JGsums//(A-A6+B+C+D)\n            let EData = this.WasteLossYCL + this.Loss + this.WasteLossZY + this.RatedPower//(A8+B4+C4+D6)//E\n            // let GLcost = (dataItem + EData) * 0.05 //F\n            // let CWcost = (dataItem + EData) * 0.05 //G\n            let GLcost = (dataItem + EData) * parseFloat(this.tableData[this.tableData.length - 1].managementRate) //F\n            let CWcost = (dataItem + EData) * parseFloat(this.tableData[this.tableData.length - 1].financialRate) //G\n            let Profit = (dataItem + EData + GLcost + CWcost) * this.tableData[this.tableData.length - 1].profitRate //K\n            this.$emit('getProfit', this.checkValue(Profit))\n            return this.checkValue(Profit)\n        },\n        //核实价计算\n        getRealPrice () {\n            let dataItem = this.sums - this.RecoveryValue + this.WGsums + this.ApportionmentFee + this.JGsums//(A-A6+B+C+D)\n            let EData = this.WasteLossYCL + this.Loss + this.WasteLossZY + this.RatedPower//(A8+B4+C4+D6)//E\n            // let GLcost = (dataItem + EData) * 0.05 //F\n            // let CWcost = (dataItem + EData) * 0.05 //G\n            // let Profit = (dataItem + EData + GLcost + CWcost) * 0.2 //K\n            let GLcost = ((dataItem + EData) * parseFloat(this.tableData[this.tableData.length - 1].managementRate)) || 0 //F\n            let CWcost = ((dataItem + EData) * parseFloat(this.tableData[this.tableData.length - 1].financialRate)) || 0 //G\n            let Profit = ((dataItem + EData + GLcost + CWcost) * parseFloat(this.tableData[this.tableData.length - 1].profitRate)) || 0 //K\n            let a\n\n            a = this.checkValue(parseFloat(dataItem) + parseFloat(EData) + parseFloat(GLcost) + parseFloat(CWcost) + parseFloat(Profit) + this.Part + this.Wldata + parseFloat(this.tableData[this.tableData.length - 1].otherCost) + parseFloat(this.tableData[this.tableData.length - 1].designCost))\n\n            this.$emit('getReal', a)\n            return a\n        },\n        checkValue (val) {\n            if (isNaN(val) || val == Infinity) {\n                return undefined\n            } else {\n                if (val.toString().indexOf('.') !== -1) {\n                    val = parseFloat(val).toFixed(2)\n                }\n                return val\n            }\n        },\n        getList (val) {\n            if (val && val[0].totalQuotation) {\n                this.tableData = [val[0].totalQuotation].map(v => {\n                    v.type = '报价'\n                    return v\n                })\n            } else {\n                this.tableData = val[0].totalQuotations.map(v => {\n                    v.type = '报价'\n                    return v\n                })\n            }\n\n            let dto = {\n                type: '精算',\n                rawMaterialCost: null,\n                recoveryValue: null,\n                outsourcingCost: null,\n                toolingCost: null,\n                processingCost: null,\n                wasteLoss: null,\n                designCost: null,\n                managementRate: null,\n                managementCost: null,\n                financialRate: null,\n                financialCost: null,\n                packingCost: null,\n                logisticsCost: null,\n                otherCost: null\n            }\n            dto.otherCost = this.tableData[0].otherCost\n            dto.designCost = this.tableData[0].designCost\n            dto.managementRate = this.tableData[0].managementRate\n            dto.financialRate = this.tableData[0].financialRate\n            dto.profitRate = this.tableData[0].profitRate\n            this.tableData.push(dto)\n            // this.getrealPrice()\n        },\n        initData (val) {\n            this.type = val\n            this.tableData = []\n        }\n    }\n}\n",null]}