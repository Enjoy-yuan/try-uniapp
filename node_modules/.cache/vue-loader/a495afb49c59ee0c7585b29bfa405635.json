{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTGR/GRTabs/info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTGR/GRTabs/info.vue","mtime":1597995949003},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nimport gatewaySelect from \"../../../components/gatewaySelect\"\nimport * as api from \"@/api/project/iot/IOT/ga\"\nexport default {\n    name: \"info\",\n    props: ['code', 'row'],\n    data () {\n        return {\n            dialogFormVisible: false,\n            form: {\n                \"gatewayName\": undefined,\n                \"gatewaySn\": undefined,\n                \"gatewayType\": undefined,\n                \"installationAddress\": undefined,\n                \"networkingWay\": undefined,\n                \"operator\": undefined,\n                \"projectCode\": undefined,\n                \"remark\": undefined,\n                \"reportingPeriod\": undefined\n            },\n            temp: {\n\n            },\n            mqttUser: {},\n            rules: {\n                gatewayName: [\n                    {\n                        required: true,\n                        message: '网关名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' },\n                    {\n                        pattern: /^[\\u4e00-\\u9fa5]+$/,\n                        message: '只允许中文输入',\n                        trigger: 'blur'\n                    }\n                ],\n                gatewaySn: [\n                    {\n                        required: true,\n                        message: '序列号名称不能为空',\n                        trigger: ['blur', 'chnage']\n                    },\n                ],\n                gatewayType: [\n                    {\n                        required: true,\n                        message: '请选择产品型号',\n                        trigger: ['blur', 'chnage']\n                    },\n                ],\n                networkingWay: [\n                    {\n                        required: true,\n                        message: '请选择联网方式',\n                        trigger: ['blur', 'chnage']\n                    },\n                ],\n                operator: [\n                    {\n                        required: true,\n                        message: '请选择上报周期',\n                        trigger: ['blur', 'chnage']\n                    },\n                ],\n                reportingPeriod: [\n                    {\n                        required: true,\n                        message: '请选择产品型号',\n                        trigger: ['blur', 'chnage']\n                    },\n                ],\n            },\n        }\n    },\n    computed: {\n        ...mapState({\n            iot_operator: state => state.iotDict.iot_operator,\n            iot_networking_way: state => state.iotDict.iot_networking_way,\n            iot_reporting_period: state => state.iotDict.iot_reporting_period\n        })\n    },\n    components: { gatewaySelect },\n    mounted () {\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryGateway(this.code, this.row.gatewayCode).then(res => {\n                this.form = res.data\n                this.temp = res.data\n                this.mqttUser = res.data.mqttUser ? res.data.mqttUser : {}\n            })\n        },\n        // 生成SN\n        getSN: throttle(\n            function () {\n                api.getGenerate(this.code).then(res => {\n                    this.temp.gatewaySn = res.data\n                })\n            },\n            3000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 获取型号\n        getGatewayType (val) {\n            this.temp.gatewayType = val\n        },\n        // 编辑\n        handleUpdate () {\n            api.queryGateway(this.code, this.row.gatewayCode).then(res => {\n                this.form = res.data\n                this.temp = res.data\n                this.dialogFormVisible = true\n            })\n        },\n        update: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        this.temp.projectCode = this.code\n                        api.updateGateway(this.code, this.row.gatewayCode, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.resTemp()\n                            this.$notify({\n                                title: '成功',\n                                message: '更改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleDownload () {\n            api.downloadModal(this.row.gatewayCode).then(res => {\n                var blob = new Blob([res.data], {\n                    type:\n                        'application/zip;charset=utf-8'\n                })\n                var contentDisposition = res.headers['content-disposition'] //从response的headers中获取filename,  设置的文件名;\n                let filename = contentDisposition.substring(\n                    contentDisposition.indexOf('=') + 1\n                )\n                var downloadElement = document.createElement('a')\n                var href = window.URL.createObjectURL(blob) //创建下载的链接\n                downloadElement.style.display = 'none'\n                downloadElement.href = href\n                downloadElement.download = filename //下载后文件名\n                document.body.appendChild(downloadElement)\n                downloadElement.click() //点击下载\n                document.body.removeChild(downloadElement) //下载完成移除元素\n                window.URL.revokeObjectURL(href) //释放掉blob对象\n            })\n        },\n        resTemp () {\n            this.temp = {}\n        }\n    }\n};\n",null]}