{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/customer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/customer/index.vue","mtime":1600927611444},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/customer'\nimport Pagination from '@/components/Pagination'\nimport { TWO_STATE_OPTIONS } from '@/utils/constant'\nimport { validatorContactNumber, validatorEmail } from '@/utils/validate'\nimport { mapState } from 'vuex'\nimport ImportFile from \"@/components/ImportFile\"\n\n\nexport default {\n    name: 'customer',\n    components: { Pagination, ImportFile },\n    data () {\n        let validatePassword = (rule, value, callback) => {\n            const reg = /^[A-Z0-9][A-Z0-9-\\w]{0,49}$/\n            if (value == '' || value == undefined || value == null) {\n                callback()\n            } else {\n                if ((!reg.test(value)) && value != '') {\n                    callback(new Error('请输入正确的编码'))\n                } else {\n                    callback()\n                }\n            }\n        }\n        return {\n            list: null,\n            total: 0,\n            theight: 0,//表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                customerCode: undefined,\n                customerName: undefined,\n                customerType: undefined\n            },\n            temp: {\n                customerCode: undefined,\n                customerName: undefined,\n                customerType: undefined,\n                customerProperty: undefined,\n                isRetailer: 0,\n                address: undefined,\n                contact: undefined,\n                contactNumber: undefined,\n                email: undefined,\n                remark: undefined\n            },\n            customerCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogFormVisible2: false,\n            importDialogVisible: false,//导入弹框\n            modalNo: 'EXTP-BAS-0001',//导入模板编号\n            dialogStatus: '',\n            tableKey: 0,\n            isRetailerOptions: TWO_STATE_OPTIONS,\n            rules: {\n                customerCode: [\n\n                    { required: true, validator: validatePassword, trigger: \"blur\", message: \"首位为字母或数字，只能输入字母,数字,_和-长度不能超过50\", }\n                ],\n                customerName: [\n                    { required: true, message: '客户名称不能为空', trigger: 'blur' },\n                    { max: 100, message: this.$t('validate.max32'), trigger: 'blur' }\n                ],\n                contact: [\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                contactNumber: [\n                    { validator: validatorContactNumber, trigger: 'blur' }\n                ],\n                email: [\n                    { validator: validatorEmail, trigger: 'blur' }\n                ],\n                address: [\n                    { max: 512, message: '长度不能超过512', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 512, message: '描述长度为512内', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_customer_type: state => state.dict.dt_customer_type,\n            dt_customer_property: state => state.dict.dt_customer_property\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_customer_type', 'dt_customer_property'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        changeCase (val) {\n            this.temp.customerCode = val.toUpperCase()\n        },\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        handleImport () {\n            this.importDialogVisible = true\n            this.$nextTick(() => {\n                this.$refs.importDialog.getList()\n            })\n        },\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true//组织编码不可以编写\n                this.temp = this.selectlistRow[0] // copy obj\n                api.getRecord(this.temp.customerCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                    this.$nextTick(() => {\n                        this.$refs['temp'].clearValidate()\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            this.$refs['temp'].validate((valid) => {\n                if (valid) {\n                    api.updateRecord(this.temp.customerCode, this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        handleDelete () {//删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                }).then(() => {\n                    let ids = []\n                    this.selectlistRow.forEach((val, index) => {\n                        ids[index] = val.customerCode\n                    })\n                    api.deleteRecord(ids).then(() => {\n                        this.getList(),\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create () {\n            this.$refs.temp.validate((valid) => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                customerCode: undefined,\n                customerName: undefined,\n                customerType: undefined,\n                customerProperty: undefined,\n                isRetailer: 0,\n                address: undefined,\n                contact: undefined,\n                contactNumber: undefined,\n                email: undefined,\n                remark: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        }\n    }\n}\n",null]}