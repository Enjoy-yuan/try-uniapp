{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/equipmentMaintenance/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/equipmentMaintenance/index.vue","mtime":1596610933395},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport faultTypeSelect from '../../components/faultTypeSelect'\nimport deviceTypeSelect from '../../components/deviceTypeSelect'\nimport *  as api from '@/api/project/eas/er/equipmentMaintenance'\nimport { queryRecords } from '@/api/project/eas/database/groups'//班组\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport suppierSelect from \"@/components/Select/suppierSelect.vue\" //供应商\nimport employeesSelect from \"@/components/Select/employeesSelect.vue\" //操作人\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from \"vuex\"\nimport { parseTime } from '@/utils'\nimport tab1 from \"./tab1\"\nimport tab2 from \"./tab2\"\nimport { getName, getDomainCode } from '@/utils/auth'\nimport expBaseSelect from \"./expBaseSelect\"\nimport imgUpload from '../../components/imgUpload'\nimport fileUpload from '../../components/fileUpload'\n\n\nexport default {\n    name: 'equipmentMaintenance',\n    components: {        Pagination, tab1, tab2, caiGou,\n        suppierSelect, employeesSelect, faultTypeSelect, deviceTypeSelect, expBaseSelect, imgUpload, fileUpload    },\n    data () {\n        return {\n            domainCode: getDomainCode(),\n            pickerStart: {\n                disabledDate: (time) => {\n                    let beginDateVal = this.fixTemp.maintainEndTime\n                    if (beginDateVal) {\n                        return time.getTime() > new Date(beginDateVal).getTime()\n                    }\n                }\n            },\n            pickerEnd: {\n                disabledDate: (time) => {\n                    let beginDateVal = this.fixTemp.maintainStartTime\n                    if (beginDateVal) {\n                        return time.getTime() < new Date(beginDateVal).getTime()\n                    }\n                }\n            },\n            value: '',\n            list: null,\n            ids: [],\n            employRow: [],\n            bjData: [],\n            timeData: [],\n            options: [],\n            deletId: [],\n            personId: [],\n            expBaseRow: [],\n            groupList: [],\n            dataList: [],\n            dialogStatus: '',\n            expBaseDialogVisible: false,\n            employeeDialogVisible: false,\n            waitFormVisible: false,\n            refuseFormVisible: false,\n            fixDialogFormVisible: false,\n            importDialogVisible: false,\n            suppierDialogVisible: false,\n            technologyFormVisible: false,\n            workOrderNumberA: undefined,\n            deviceCodeA: undefined,\n            selectlistRowA: undefined,\n            organizationCodeA: undefined,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            printData: {},\n            theight: 0, //表格高度\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            isTime: true,\n            isEdit: true,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                organizationCode: undefined,\n                classCode: undefined,\n                deviceCode: undefined,\n                urgencyDegree: undefined,\n                maintainType: undefined,\n                states: undefined,\n                createTimeStart: undefined,\n                createTimeEnd: undefined,\n                deviceName: undefined,\n                mainMaintainerCode: getName(),\n                useDeptName: undefined,\n                faultGrade: undefined,\n                faultTypeCode: undefined,\n                deviceType: undefined\n            },\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                workOrderNumber: undefined\n            },\n            temp: {\n                refuseReason: undefined,\n            },\n            moreTemp: {\n                deviceName: undefined,\n                classCode: undefined,\n                mainMaintainerCode: undefined,\n                useDeptName: undefined,\n                faultGrade: undefined,\n                faultTypeCode: undefined,\n                urgencyDegree: undefined,\n                deviceType: undefined\n            },\n            timeRow: null,\n            techTemp: {\n\n            },\n            techTempRules: {\n                technologyRequestContent: [{\n                    required: true,\n                    message: '请求说明不能为空',\n                    trigger: 'blur'\n                }]\n            },\n            waitTemp: {\n                waitPartExplain: undefined\n            },\n            waitTempRules: {\n                waitPartExplain: [{\n                    required: true,\n                    message: '待件说明不能为空',\n                    trigger: 'blur'\n                }]\n            },\n            fixTemp: {\n                ifMachineHalt: 0,\n                entrustOuterCompanyCode: undefined,\n                entrustOuterCompanyName: undefined,\n                faultCode: undefined,\n                experienceCode: undefined\n            },\n            tempCheckUpon: {\n                checkDate: undefined,\n                deviceCode: undefined\n            },\n            gw: undefined,\n            tabName: 'sbtp',\n            tabConfig: [\n                { label: '维修人员', name: 'sbtp', prop: 'sbtp' },\n                { label: '维修备件', name: 'sbfj', prop: 'sbfj' },\n                { label: '维修附件', name: 'bjqd', prop: 'bjqd' },\n                { label: '故障图片', name: 'glzsb', prop: 'glzsb' },\n            ],\n            tableKey: [0, 1, 2],\n            refuseReasonRules: {\n                refuseReason: [\n                    {\n                        required: true,\n                        message: '拒单说明不能为空',\n                        trigger: 'blur'\n                    },\n                ]\n            },\n            rules: {\n                disposeDescribe: [\n                    {\n                        required: true,\n                        message: '处理描述不能为空',\n                        trigger: 'blur'\n                    },\n                ],\n                faultDescription: [\n                    {\n                        required: true,\n                        message: '故障描述不能为空',\n                        trigger: 'blur'\n                    },\n                ],\n                maintainCost: [\n                    {\n                        pattern: /^[0-9]{0,10}(\\.\\d{1,1})?$/,\n                        message: '保留2位小数，长度不能超过11',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            pickerOptionsStart: {\n                // disabledDate: time => {\n                //     let endDateVal = this.endTime;\n                //     if (endDateVal) {\n                //         return time.getTime() > new Date(endDateVal).getTime();\n                //     }\n                // }\n            },\n            pickerOptionsEnd: {\n                disabledDate: time => {\n                    let beginDateVal = this.startTime\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                }\n            },\n        }\n    },\n    created () {\n        this.getList()\n    },\n    computed: {\n        ...mapState({\n            dt_urgency_degree: state => state.eamDict.dt_urgency_degree,\n            dt_maintain_type: state => state.eamDict.dt_maintain_type,\n            dt_maintain_worder_state: state => state.eamDict.dt_maintain_worder_state,\n            dt_fault_cause: state => state.eamDict.dt_fault_cause,\n            dt_maintain_grade: state => state.eamDict.dt_maintain_grade,\n            dt_yes_or_no: state => state.eamDict.dt_yes_or_no,\n            dt_fault_grade: state => state.eamDict.dt_fault_grade,\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n        })\n    },\n    watch: {\n        'dt_maintain_worder_state' (val) {\n            if (val.length != 0) {\n                this.dataList = val.filter(v => {\n                    return v.dictItemKey != 'mwos10'\n                })\n                this.list = this.$myFun.srmCodeToName(\n                    this.list,\n                    [this.dt_maintain_worder_state, this.dt_maintain_type],\n                    ['state', 'maintainType']\n                )\n            }\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getGroup()\n        this.getList()\n        this.$store.dispatch(\"eamDict/getDicData\", [\n            \"dt_urgency_degree\", \"dt_maintain_type\", \"dt_maintain_worder_state\",\n            \"dt_fault_cause\", \"dt_maintain_grade\", \"dt_yes_or_no\", \"dt_fault_grade\", 'dt_file_equipment'\n        ])\n    },\n    methods: {\n        checked () {\n            this.$refs.mainList.toggleRowSelection(this.list[0], true)\n        },\n        //查询主表\n        getList () {\n            if (this.value) {\n                var d1 = this.value[0]\n                var d2 = this.value[1]\n                this.listQuery.createTimeStart = d1\n                this.listQuery.createTimeEnd = d2\n            } else {\n                this.listQuery.createTimeStart = \"\"\n                this.listQuery.createTimeEnd = \"\"\n            }\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = this.$myFun.codeToName(\n                    res.data,\n                    [\n                        this.dt_maintain_worder_state\n                    ],\n                    ['state']\n                ).list\n                this.list = res.data.list.filter(v => {\n                    if (v.maintainSpendTimeHour && v.maintainSpendTimeMinute) {\n                        v.maintenanceTime = v.maintainSpendTimeHour + '小时' + v.maintainSpendTimeMinute + '分钟'\n                    } else if (v.maintainSpendTimeHour && !v.maintainSpendTimeMinute) {\n                        v.maintenanceTime = v.maintainSpendTimeHour + '小时'\n                    } else if (!v.maintainSpendTimeHour && v.maintainSpendTimeMinute) {\n                        v.maintenanceTime = v.maintainSpendTimeMinute + '分钟'\n                    }\n                    return v.state != \"mwos10\"\n                })\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        //获取班组\n        getGroup () {\n            queryRecords(this.listQuery1).then(res => {\n                this.groupList = res.data.list\n            })\n        },\n        //主修人弹窗\n        handleClickMain () {\n            this.employeeDialogVisible = true\n            this.dialogStatus = \"employeeUpdate\"\n        },\n        //主修人确认\n        employeeUpdate () {\n            this.listQuery.mainMaintainerCode = this.employRow[0].employeeCode\n            this.employeeDialogVisible = false\n        },\n        //刷新\n        refreshUpdate () {\n            this.listQuery.deviceName = undefined\n            this.listQuery.classCode = undefined\n            this.listQuery.mainMaintainerCode = undefined\n            this.listQuery.useDeptName = undefined\n            this.listQuery.faultGrade = undefined\n            this.listQuery.address = undefined\n            this.$nextTick(() => {\n                this.$refs.deviceType.valueTitle = undefined\n                this.$refs.faultType.valueTitle = undefined\n            })\n\n        },\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        //查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //打开委外弹窗\n        handleClickEntrust () {\n            this.suppierDialogVisible = true\n        },\n        //委外父子传值\n        handleSuppier (row) {\n            this.suppierRow = row\n        },\n        //委外获取值\n        suppierCreate () {\n            this.fixTemp.entrustOuterCompanyName = this.suppierRow.supplierTypeName\n            this.fixTemp.entrustOuterCompanyCode = this.suppierRow.supplierType\n            this.suppierDialogVisible = false\n        },\n        resetTemp () {\n            this.temp = {\n                refuseReason: undefined\n            }\n        },\n        //拒单\n        handleRefuse () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos20\") {\n                    this.resetTemp()\n                    this.refuseFormVisible = true\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择“派工状态的工单”进行拒单',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //拒单确认\n        create () {\n            this.$refs.refuseReason.validate(valid => {\n                if (valid) {\n                    api.refuseRecords(this.selectlistRow.workOrderNumber, this.temp).then(() => {\n                        this.getList()\n                        this.refuseFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '拒单成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n\n        },\n        //登到\n        handleAscend () {\n            if (this.selectlistRow) {\n                this.$confirm('确定已到达现场，并对此维修工单进行登到吗', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.arriveRecords(this.selectlistRow.workOrderNumber).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '登到成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消登到'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //维修开始\n        handleStart () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos20\") {\n                    this.$confirm('确定并对此设备下维修工单进行维修开始吗', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    })\n                        .then(() => {\n                            api.startRecords(this.selectlistRow.workOrderNumber).then(() => {\n                                this.getList(),\n                                    this.$message({\n                                        title: '成功',\n                                        message: '维修开始成功',\n                                        type: 'success',\n                                        duration: 2000\n                                    })\n                            })\n                        })\n                        .catch(() => {\n                            this.$message({\n                                type: 'info',\n                                message: '已取消维修开始'\n                            })\n                        })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择“派工状态的工单”进行维修开始操作',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //维修完成\n        handleEnd () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos110\" || this.selectlistRow.state == \"mwos80\" || this.selectlistRow.state == \"mwos20\" || this.selectlistRow.state == \"mwos40\") {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对拒单、派工、待件开始、完工状态的工单进行维修完成操作',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.$confirm('确定并对此设备下维修工单进行维修完成吗？完工内容、工时、备件信息是否填写', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.finishRecords(this.selectlistRow.workOrderNumber).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '维修完成',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消维修完成'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //查询维修工单人员\n        getPerson () {\n            if (this.selectlistRow) {\n                this.listQuery1.workOrderNumber = this.selectlistRow.workOrderNumber\n                api.personRecords(this.listQuery1).then(re => {\n                    this.timeData = re.data.list\n                    this.total1 = re.data.pages.count\n                })\n            }\n        },\n        //查询备件\n        getSp () {\n            if (this.selectlistRow) {\n                this.listQuery1.workOrderNumber = this.selectlistRow.workOrderNumber\n                api.spRecords(this.listQuery1).then(respone => {\n                    this.bjData = respone.data.list\n                    this.total2 = respone.data.pages.count\n                })\n            }\n        },\n        //新增经验\n        experienceCreate () {\n            let dto = {\n                faultCode: this.fixTemp.faultCode,\n                experienceType: \"et10\",\n                disposeDescription: this.fixTemp.disposeDescribe,\n                faultDescription: this.fixTemp.faultDescription,\n                deviceCode: this.fixTemp.deviceCode,\n                deviceName: this.fixTemp.deviceName,\n                deviceType: this.fixTemp.deviceType,\n                faultTypeName: this.fixTemp.faultTypeName,\n                faultTypeCode: this.fixTemp.faultTypeCode,\n                workOrderNumber: this.fixTemp.workOrderNumber\n            }\n            this.$refs['fixTemp'].validate(valid => {\n                if (valid) {\n                    api.addExperience(dto).then(res => {\n                        this.$set(this.fixTemp, 'experienceCode', res.data)\n                        this.$message({\n                            title: '成功',\n                            message: '新增经验成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //打开经验代码弹窗\n        handleExperience () {\n            this.expBaseDialogVisible = true\n        },\n        //经验父子传值\n        handleExpBase (row) {\n            this.expBaseRow = row\n        },\n        //经验代码确认\n        expBaseCreate () {\n            this.fixTemp.experienceCode = this.expBaseRow.experienceCode\n            this.fixTemp.disposeDescribe = this.expBaseRow.disposeDescription\n            this.expBaseDialogVisible = false\n        },\n        // 时间开始选择器\n        startTimeStatus (value) {\n            //maintainLaborHour\n            this.startTime = value\n        },\n        // 时间结束选择器\n        endTimeStatus (value) {\n            this.endTime = value\n            //maintainLaborHour\n        },\n        //是否停机\n        timeWhether (val) {\n            if (val == \"Y\") {\n                this.isTime = false\n            } else if (val === \"N\") {\n                this.isTime = true\n            }\n        },\n        //维修内容\n        handleContent () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos20\" || this.selectlistRow.state == \"mwos110\" || this.selectlistRow.state == \"mwos80\" || this.selectlistRow.state == \"mwos60\") {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对拒单、派工、完工、已检状态的工单进行填写',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.fixDialogFormVisible = true\n                this.timeWhether()\n                this.getPerson()\n                this.getSp()\n                api.detailsRecords(this.selectlistRow.workOrderNumber).then(res => {\n                    this.fixTemp = res.data\n                    if (res.data.ifEntrustOuter == \"N\") {\n                        this.isEdit = true\n                    } else {\n                        this.isEdit = false\n                    }\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //维修内容确认\n        fixCreate () {\n            let contentDTO = {\n                disposeDescribe: this.fixTemp.disposeDescribe,\n                entrustOuterCompanyCode: this.fixTemp.entrustOuterCompanyCode,\n                experienceCode: this.fixTemp.experienceCode,\n                faultCause: this.fixTemp.faultCause,\n                ifMachineHalt: this.fixTemp.ifMachineHalt,\n                machineHaltTime: this.fixTemp.machineHaltTime,\n                maintainCost: this.fixTemp.maintainCost,\n                maintainEndTime: this.fixTemp.maintainEndTime,\n                maintainGrade: this.fixTemp.maintainGrade,\n                maintainSpendTimeHour: this.fixTemp.maintainSpendTimeHour,\n                maintainSpendTimeMinute: this.fixTemp.maintainSpendTimeMinute,\n                maintainStartTime: this.fixTemp.maintainStartTime,\n                maintainType: this.fixTemp.maintainType\n            }\n            api.contentRecords(this.selectlistRow.workOrderNumber, contentDTO).then(() => {\n                this.getList()\n                this.fixDialogFormVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '修改维修内容成功',\n                    type: 'success',\n                    duration: 2000\n                })\n\n            })\n\n        },\n        //员工管理父子传值\n        handleEmployee (row) {\n            row.map(i => {\n                i.maintainType = 'mpt10'\n            })\n            this.employRow = row\n        },\n        //新增\n        handleCreateFrom () {\n            this.employeeDialogVisible = true\n            this.dialogStatus = \"employeeCreate\"\n        },\n        //员工管理确认\n        employeeCreate () {\n            let a = []\n            a = this.employRow.map(v => {\n                v.maintainerCode = v.employeeCode\n                v.maintainerName = v.employeeName\n                return v\n            })\n            a.forEach(v => {\n                this.timeData.push(v)\n            })\n            this.employeeDialogVisible = false\n        },\n        //保存\n        handleUpdateFrom () {\n            let result = true\n            let saveList = []\n            this.timeData.forEach(v => {\n                if (v.startTime || v.endTime || v.realitySpendTime || v.remark) {\n                    result = false\n                    saveList.push(v)\n                }\n            })\n            if (result) {\n                this.$message({\n                    title: \"警告\",\n                    message: \"开始时间或结束时间或实际用时或工作描述不能为空\",\n                    type: \"warning\"\n                })\n            } else {\n                let workOrderNumber = this.selectlistRow.workOrderNumber\n                let method = 'MAINTAIN'\n                api.savePerson(workOrderNumber, method, saveList).then(() => {\n                    this.getPerson()\n                    this.$message({\n                        title: '成功',\n                        message: '保存成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            }\n        },\n        selectRowTime (val) {\n            this.timeRow = val\n        },\n        //删除\n        handleDeleteFrom () {\n            let arr = this.timeRow.filter(i => {\n                return i.employeeCode == this.mainMaintainerCode\n            })\n            if (arr && arr.length) {\n                this.$message({\n                    title: '警告',\n                    message: '主维修人不可删除',\n                    type: 'warning'\n                })\n                return\n            }\n            if (this.timeRow && this.timeRow.length > 0) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        this.timeData = this.$myFun.getArrDifference(this.timeData, this.timeRow)\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        //备件保存\n        handleSave () {\n            let result = true\n            let saveList = []\n            this.bjData.forEach(v => {\n                if (v.returnQuantity || v.useQuantity) {\n                    result = false\n                    saveList.push(v)\n                }\n            })\n            if (result) {\n                this.$message({\n                    title: \"警告\",\n                    message: \"退回数量或使用数量不能为空\",\n                    type: \"warning\"\n                })\n            } else {\n                api.updateSp(saveList).then(() => {\n                    this.getSp()\n                    this.$nextTick(() => {\n                        this.$ref.tab2.getList()\n                    })\n                    this.$message({\n                        title: '成功',\n                        message: '保存成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            }\n        },\n        resetTechTemp () {\n            this.techTemp = {\n                technologyRequestContent: undefined\n            }\n        },\n        //技术请求\n        handleTechnical () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos110\" || this.selectlistRow.state == \"mwos80\") {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对拒单、完工状态的工单进行技术请求',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.resetTechTemp()\n                this.technologyFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //技术请求确认\n        techCreate () {\n            this.$refs.techTemp.validate(valid => {\n                if (valid) {\n                    // let aa = JSON.stringify(this.techTemp.technologyRequestContent)\n                    api.detailsRecords(this.selectlistRow.workOrderNumber).then(res => {\n                        if (res.data.technologyRequestQuantity > \"0\") {\n                            api.techRecords(this.selectlistRow.workOrderNumber, this.techTemp.technologyRequestContent).then(() => {\n                                this.getList()\n                                this.technologyFormVisible = false\n                                this.$message({\n                                    title: '成功',\n                                    message: '技术请求成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                            })\n                        } else {\n                            this.$message({\n                                title: '警告',\n                                message: '技术请求人员必须大于0',\n                                type: 'warning'\n                            })\n                        }\n\n                    })\n                } else {\n                    return\n                }\n            })\n\n\n        },\n        resetWaitTemp () {\n            this.waitTemp = {\n                waitPartExplain: undefined\n            }\n        },\n        //待件开始弹窗\n        handleWaitStart () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos110\" || this.selectlistRow.state == \"mwos80\" || this.selectlistRow.state == \"mwos40\") {\n                    this.$message({\n                        title: '警告',\n                        message: '无法对拒单、待件开始、完工状态的工单进行待件开始',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.resetWaitTemp()\n                this.waitFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //待件开始确认\n        waitCreate () {\n            this.$refs.waitTempref.validate(valid => {\n                if (valid) {\n                    let aa = JSON.stringify(this.waitTemp.waitPartExplain)\n                    api.waitStartRecords(this.selectlistRow.workOrderNumber, aa).then(() => {\n                        this.getList()\n                        this.waitFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '待件开始',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n\n        },\n        //待件结束弹窗\n        handleWaitEnd () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == \"mwos40\") {\n                    this.$confirm('确定并对此设备下维修工单进行待件结束吗？', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    })\n                        .then(() => {\n                            api.waitEndRecords(this.selectlistRow.workOrderNumber).then(() => {\n                                this.getList(),\n                                    this.$message({\n                                        title: '成功',\n                                        message: '待件结束',\n                                        type: 'success',\n                                        duration: 2000\n                                    })\n                            })\n                        })\n                        .catch(() => {\n                            this.$message({\n                                type: 'info',\n                                message: '已取待件结束'\n                            })\n                        })\n\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只能对待件开始的工单进行结束',\n                        type: 'warning'\n                    })\n\n                }\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '状态', '工单号', '组织编码', '维修组',\n                    '主修人', '维修开始时间', '维修结束时间',\n                    '设备编码', '设备名称', '设备类型',\n                    '使用部门', '设备地址', '故障描述',\n                    '报修人', '停机时间', '报修时间',\n                    '维修级别', '维修类别', '维修用时'\n                ]\n                const filterVal = [\n                    'state', 'workOrderNumber', 'organizationCode',\n                    'classCode', 'mainMaintainerName', 'maintainStartTime',\n                    'maintainEndTime', 'deviceCode', 'deviceName',\n                    'deviceType', 'useDeptName', 'address',\n                    'faultDescription', 'repairsName', 'machineHaltTime',\n                    'repairsTime', 'maintainGrade', 'maintainType', 'maintainSpendTimeHour'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === 'timestamp') {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        },\n        handleClick () {\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(val.pop())\n            }\n            this.$refs.mainList.setCurrentRow(this.selectlistRow)\n            if (this.selectlistRow) {\n                this.selectlistRowA = this.selectlistRow\n                this.workOrderNumberA = this.selectlistRow.workOrderNumber\n                this.deviceCodeA = this.selectlistRow.deviceCode\n                this.organizationCodeA = this.selectlistRow.organizationCode\n                setTimeout(() => {\n                    this.$refs.tab4[0].getList()\n                    this.$refs.tab2[0].getList()\n                    this.$refs.tab1[0].getList()\n                    this.$refs.tab3[0].getList()\n                }, 1000)\n\n            }\n        },\n        //主表行点击\n        showSubTable (val) {\n            this.$refs.mainList.clearSelection()\n            this.$refs.mainList.toggleRowSelection(val)\n        },\n\n    }\n}\n",null]}