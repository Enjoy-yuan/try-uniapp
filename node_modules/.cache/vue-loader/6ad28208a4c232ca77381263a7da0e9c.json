{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/manage.vue","mtime":1597628790262},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/contractManage/evaluationFormat\"\nimport { queryRecords } from \"@/api/project/srm/dataBase/dictMaintenance\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport Pagination from \"@/components/Pagination\"\nimport { mapState } from \"vuex\"\nimport search from '../dialog/search'//下拉组件\n// import resume from \"../dialog/resume\"\nexport default {\n    name: \"evaluationFormat\",\n    components: { Pagination, caiGou, search },\n    data () {\n        return {\n            modalnum: null,//模板编号\n            theight: 0,\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            list: null,\n            listSub: null,\n            phaseList: [],\n            total: 0,\n            selectedrow: null,//主表选中行\n            DICT_CODE: DICT_CODE,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                phase: undefined,\n            },\n            sublistQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            tableKey: [0, 1]//表格索引，虚拟dom渲染表格时使用\n\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pak: state => state.dict.dt_srm_pak,\n            dt_srm_pb3: state => state.dict.dt_srm_pb3,\n            dt_srm_pb2: state => state.dict.dt_srm_pb2,\n\n        })\n    },\n    watch: {\n        'listQuery.type' (val) {\n            if (!val) {\n                this.listQuery.phase = undefined\n                this.phaseList = []\n            } else {\n                this.listQuery.phase = undefined\n                this.getPhaseData(val)\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", ['dt_srm_p0', 'dt_srm_pak', 'dt_srm_pb3', 'dt_srm_pb2'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 200\n        },\n        //评价类别评价阶段联动\n        getPhaseData (val) {\n            if (val) {\n                let dto = {\n                    currentPage: 1,\n                    pageSize: 15,\n                    parentCode: val\n                }\n                queryRecords(dto).then(res => {\n                    let options = [this.dt_srm_p0]\n                    res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state'])\n                    this.phaseList = res.data.list\n                })\n            }\n        },\n        checked () {\n            this.$refs.tb.toggleRowSelection(this.list[0], true)//官网方法，重点\n        },\n        //显示主表\n        getList () {\n            api.queryRecord(this.listQuery).then(res => {\n                console.log(res, 'res')\n                this.list = res.data.list\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        //显示从表\n        getSubList () {\n            console.log(this.selectlistRow.rowId)\n            api.queryRecordItems(this.selectlistRow.rowId).then(res => {\n                this.listSub = res.data.list\n            })\n        },\n        handleResume () {\n            this.$refs.resume.dialogVisible = true\n        },\n        handleCreate () {\n            this.$emit('setState', 'create', '')\n        },\n        handlePlan () {\n            this.$emit('setState', 'create', '')\n        },\n        //附件清单\n        handleEnclosure () {\n            this.$message({ type: 'error', message: '开发中，暂无法使用' })\n        },\n        //行内删除按钮单击事件\n        handleDelete (index, val) {\n            this.$confirm(\"是否删除该信息\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                api.deleteRecord(val.rowId).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n        },\n        handleUpdate (index, val) {\n            this.$refs.search.dialogStatus = 'update'\n            this.$refs.search.dialogVisible = true\n            this.$refs.search.temp = { ...val }\n        },\n        handleSee (index, val) {\n            this.$refs.search.dialogStatus = 'update'\n            this.$refs.search.dialogVisible = true\n            this.$refs.search.temp = { ...val }\n        },\n        //查询\n        handleQuery () {\n            this.listSub = []\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //从表查询按钮单击事件\n        handleSearch () {\n\n        },\n        //从表提交按钮单击事件\n        handleSubmit () {\n            if (this.selectlistRow) {\n                this.$confirm(`是否提交 处理方案？处理单号：${this.selectlistRow.handleCode}`, \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    // api.deleteRecord(val.rowId).then(() => {\n                    //     this.$message({\n                    //         title: '成功',\n                    //         message: '删除成功',\n                    //         type: 'success',\n                    //         duration: 2000\n                    //     })\n                    //     this.getList()\n                    // })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        //从表复检按钮单击事件\n        handleExamin () {\n            // this.$refs.addMain.dialogVisible = true\n            if (this.selectlistRow) {\n                this.$confirm(`确认已按处理方案解决问题？确认后将由相关负责人进行复检,处理单号：${this.selectlistRow.handleCode}`, \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    // api.deleteRecord(val.rowId).then(() => {\n                    //     this.$message({\n                    //         title: '成功',\n                    //         message: '删除成功',\n                    //         type: 'success',\n                    //         duration: 2000\n                    //     })\n                    //     this.getList()\n                    // })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        //从表答按钮单击事件\n        handleAnswer (index, val) {\n            console.log(index, val)\n            // this.$refs.addMain.dialogVisible = true\n        },\n        //从表删除按钮单击事件\n        handleDeleteSub (index, val) {\n            console.log(index, val)\n            this.$confirm(\"是否删除该信息\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                // api.deleteRecord(val.rowId).then(() => {\n                //     this.$message({\n                //         title: '成功',\n                //         message: '删除成功',\n                //         type: 'success',\n                //         duration: 2000\n                //     })\n                //     this.getList()\n                // })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n        },\n        //每页大小变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                this.selectlistRow = val[val.length - 1]\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection()\n                    this.$refs.tb.toggleRowSelection(val.pop())\n                }\n                if (this.selectlistRow) {\n                    this.getSubList()\n                }\n                this.$refs.tb.setCurrentRow(this.selectlistRow)\n            } else {\n                this.selectlistRow = val\n            }\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, \"selected\") //单击行绑定点击事件\n        },\n        selectChangeSub (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbSub.clearSelection()\n                this.$refs.tbSub.toggleRowSelection(val.pop())\n            }\n            this.$refs.tbSub.setCurrentRow(this.selectlistRow)\n        },\n        rowClickSub (val) {\n            this.$refs.tbSub.clearSelection()\n            this.$refs.tbSub.toggleRowSelection(val)\n        },\n        //加载时默认选中第一行\n        setFirstLine () {\n            this.$nextTick(() => {\n                this.$refs.tbmain.setCurrentRow(this.list[0])\n            })\n        }\n    }\n};\n",null]}