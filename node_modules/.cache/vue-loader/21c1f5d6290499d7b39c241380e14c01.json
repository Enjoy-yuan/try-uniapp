{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/knProcessing/knjgPlan/Dialog/DialogAddMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/knProcessing/knjgPlan/Dialog/DialogAddMain.vue","mtime":1596610934128},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport * as api from \"@/api/project/wms/knProcessing/knjgplan.js\";\nimport AuthoType from \"@/components/Select/AuthoType.vue\"; //权限类型下拉组件\nimport { DT_ORG_TYPE, DT_ORG_FUNCTION } from '@/utils/constant'\n// import warehouseSelect from '@/components/Select/warehouse-select.vue'//下拉组件\n// import caiGou from '@/components/select/caigou.vue'//下拉组件\n// import orgSelect from \"@/components/select/orgSelect.vue\"\n\nexport default {\n    name: 'addMain',\n    //   warehouseSelect , caiGou, orgSelect,\n    components: { AuthoType },\n    data () {\n        return {\n            dicType: '',\n            AddMainlist: {\n                dicType: '',\n                orgCode: \"\",\n                warehouseCode: \"\",\n                planDate: \"\",\n                remark: \"\",\n                planDetailCreateDTOList: []\n            },\n            planDetailCreateDTOList: [],\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            DT_ORG_FUNCTION: DT_ORG_FUNCTION,\n            curdialogStatus: 0,\n            dialogFormVisible: false,\n            rules: {\n                orgCode: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                warehouseCode: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                planDate: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ]\n            },\n            selectRows: [],\n            isEdit: false\n        }\n    },\n    created () {\n\n    },\n    methods: {\n        checkNum () {\n            let res = true\n            this.planDetailCreateDTOList.forEach(item => {\n                if (!item.planNum) {\n                    res = false\n                }\n            })\n            if (!res) {\n                this.$message({\n                    type: 'warning',\n                    message: '数量不能为空或0'\n                });\n            }\n            return res\n        },\n        addMainConfirm () {\n            this.$refs.dialogMain.validate((valid) => {\n                if (valid) {\n                    if (this.checkNum(this.AddMainlist))\n                        this.$confirm('确认保存吗?', '提示', {\n                            confirmButtonText: '确定',\n                            cancelButtonText: '取消',\n                            type: 'warning'\n                        }).then(() => {\n                            this.AddMainlist.dicType = this.dicType;\n                            this.AddMainlist.planDetailCreateDTOList = this.planDetailCreateDTOList;\n                            api.createRecords(this.AddMainlist).then(() => {\n                                this.$emit('refresh');\n                                this.dialogFormVisible = false;\n                                this.$message({\n                                    type: 'success',\n                                    message: '保存成功'\n                                });\n                            });\n                        })\n                }\n            });\n        },\n        updateMainConfirm () {\n            this.$refs.dialogMain.validate((valid) => {\n                if (valid) {\n                    if (this.checkNum(this.AddMainlist))\n                        this.$confirm('确认保存吗?', '提示', {\n                            confirmButtonText: '确定',\n                            cancelButtonText: '取消',\n                            type: 'warning'\n                        }).then(() => {\n                            this.AddMainlist.dicType = this.dicType;\n                            this.AddMainlist.planDetailCreateDTOList = this.planDetailCreateDTOList;\n                            api.updateRecords(this.AddMainlist.planNo, this.AddMainlist).then(() => {\n                                this.$emit('refresh');\n                                this.dialogFormVisible = false;\n                                this.$message({\n                                    type: 'success',\n                                    message: '保存成功'\n                                });\n                            });\n                        })\n                }\n            });\n\n        },\n        titleShow (val) {\n            this.curdialogStatus = val;\n        },\n        //添加项\n        addSub () {\n            if (this.AddMainlist.orgCode && this.AddMainlist.warehouseCode) {\n                this.$emit('showbomwl', this.AddMainlist.orgCode);\n                this.isEdit = true\n            } else {\n                this.$message.warning(\"请先选择组织编码和仓库编码！\");\n            }\n        },\n        //删除内容某一行\n        deleteContent () {\n            if (this.selectRows.length !== 0) {\n                this.$confirm('确认要删除该数据项吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.planDetailCreateDTOList = this.planDetailCreateDTOList.filter(item => {\n                        let isD = true;\n                        console.log(this.selectRows, 'deleteContent')\n                        this.selectRows.forEach((itemr) => {\n                            if (itemr.materielCode === item.materielCode) {\n                                isD = false;\n                            }\n                        });\n                        return isD;\n                    })\n\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    });\n                })\n            } else {\n                this.$message.warning(\"请勾选记录！\");\n                return;\n            }\n        },\n        addSelectChange (val) {\n            this.selectRows = val;\n        },\n        //刷新\n        refresh () {\n            this.isEdit = false\n            this.planDetailCreateDTOList = []\n        },\n        setBomM (val) {\n            let arrSave = JSON.parse(JSON.stringify(this.planDetailCreateDTOList))\n            val.forEach((item) => {\n                let addAble = true\n                arrSave.forEach(ip => {\n                    console.log(ip.materielCode, item.materielCode, ip.materielCode === item.materielCode)\n                    if (ip.materielCode === item.materielCode || !ip.materielCode || !item.materielCode) {\n                        addAble = false\n                    }\n                })\n                if (addAble) {\n                    this.planDetailCreateDTOList.push({\n                        materielCode: \"\",\n                        materielName: \"\",\n                        measuringUnit: \"\",\n                        planNum: 0,\n                        specification: \"\",\n                        versions: \"\"\n                    });\n                    for (let itemp in item) {\n                        let indexp = this.planDetailCreateDTOList.length - 1\n                        if (itemp === 'versions' || itemp === 'materielCode' || itemp === 'materielName' || itemp === 'specification' || itemp === 'measuringUnit') {\n                            this.planDetailCreateDTOList[indexp][itemp] = item[itemp];\n                        }\n                    }\n                }\n\n\n            });\n        },\n        setDictype (val) {\n            this.dicType = val;\n        }\n    }\n}\n",null]}