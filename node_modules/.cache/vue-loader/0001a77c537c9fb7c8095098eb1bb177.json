{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/components/attributeFrom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/components/attributeFrom.vue","mtime":1600927611522},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\"\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nexport default {\n    props: ['dialogFormVisible', 'dialogFormType', 'temp', 'title'],\n    name: \"attributeFrom\",\n    watch: {\n        dialogFormVisible (val) {\n            this.dialogFormVisibleM = val\n        }\n    },\n    data () {\n        return {\n            dialogFormVisibleM: false,\n            rules: {\n                attributeCode: [\n                    {\n                        required: true,\n                        message: '属性编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[a-zA-Z0-9]{0,32}$/,\n                        message: '由大写字母、数字组成，长度为32',\n                        trigger: 'blur'\n                    }\n                ],\n                attributeName: [\n                    {\n                        required: true,\n                        message: '属性名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' },\n                    {\n                        pattern: /^[a-zA-Z0-9\\u4e00-\\u9fa5]+$/,\n                        message: '只允许中英文及数字输入',\n                        trigger: 'blur'\n                    }\n                ],\n                attributeType: [\n                    {\n                        required: true,\n                        message: '请选择属性类型',\n                        trigger: 'change'\n                    }\n                ],\n                company: [\n                    {\n                        required: true,\n                        message: '请选择单位',\n                        trigger: 'change'\n                    }\n                ],\n                dataType: [\n                    {\n                        required: true,\n                        message: '请选择数据类型',\n                        trigger: 'change'\n                    }\n                ],\n                readType: [\n                    {\n                        required: true,\n                        message: '请选择读写类型',\n                        trigger: 'change'\n                    }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            iot_attribute_type: state => state.iotDict.iot_attribute_type,\n            iot_attribute_company: state => state.iotDict.iot_attribute_company,\n            iot_data_type: state => state.iotDict.iot_data_type,\n            iot_read_type: state => state.iotDict.iot_read_type\n        })\n    },\n    methods: {\n        getAttributeType (val) {\n            let arr = this.iot_attribute_type.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.attributeTypeName = arr[0].dictItemValue\n        },\n        getCompany (val) {\n            let arr = this.iot_attribute_company.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.companyName = arr[0].dictItemValue\n        },\n        getDataType (val) {\n            let arr = this.iot_data_type.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.dataTypeName = arr[0].dictItemValue\n        },\n        getReadType (val) {\n            let arr = this.iot_read_type.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.readTypeName = arr[0].dictItemValue\n        },\n        create: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        this.$emit('create', this.temp)\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //编辑按钮单击事件方法\n        handleUpdate (attributeCode) {\n            api.queryAttribute(this.code, attributeCode).then(res => {\n                this.temp = res.data\n                this.temp.min = parseInt(res.data.min)\n                this.temp.max = parseInt(res.data.max)\n                this.dialogFormType = 'update'\n                this.dialogFormVisible = true\n            })\n        },\n        update: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        this.$emit('update', this.temp)\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        off () {\n            this.$emit('off', false)\n        }\n    }\n};\n",null]}