{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/EI/inventoryMain/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/EI/inventoryMain/index.vue","mtime":1596610933369},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/el/inventoryPlanning'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou' //下拉组件\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex' // 基本数据引入\nimport { getName } from '@/utils/auth'\n\nexport default {\n    name: 'inventoryMain',\n    components: { Pagination, caiGou },\n    data () {\n        return {\n            activeName: 'stayPlate',\n            checkList: [],\n            theight: 0, //表格高度\n            list: [],\n            list2: [],\n            fromList: [],\n            total: 0,\n            tableKey: [0, 1], //表格索引\n            tmpState:['cps20','cps30'],\n            listQuery: {\n                organizationCode: undefined,\n                states: 'cps20,cps30',\n                checker:getName(),\n                startTime: undefined,\n                endTime: undefined,\n                //查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            listQuery1: {\n                //从表查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                // bomId: undefined,\n            },\n            tempFrom: {},\n            notDetail: true,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogStatus: '',\n            dialogFormVisible: false,\n            fromDialogStatus: '',\n            fromDialogFormVisible: false,\n            currentSelectedRow: null, //当前选中的行\n            selectedRows: null, //多选时选中的所有行\n            selectFromList: null, //从表选中\n            addressData: [],\n            workCenterData: [],\n            supplierData: [],\n            manufacturerData: []\n        }\n    },\n    created () {\n        this.getList()\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_check_plan_state: state => state.eamDict.dt_check_plan_state,\n            dt_check_content: state => state.eamDict.dt_check_content,\n            dt_device_state: state => state.eamDict.dt_device_state\n        })\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        'temp.timeRange' (value) {\n            if (value) {\n                this.temp.startDate = value[0]\n                this.temp.endDate = value[1]\n            }\n        },\n        'tempFrom.timeRange' (value) {\n            if (value) {\n                this.tempFrom.startDate = value[0]\n                this.tempFrom.endDate = value[1]\n            }\n        },\n        'tempFrom.useDept' () {\n            this.getStation()\n        },\n        tmpState(val){\n            if(val){\n                this.listQuery.states=val.join(',')\n            }else{\n                this.listQuery.states=undefined\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_check_plan_state',\n            'dt_check_content',\n            'dt_device_state'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getStation()\n        this.contentPosition()\n    },\n    methods: {\n        contentPosition () {\n            setTimeout(() => {\n                this.dt_check_content.forEach((item, index) => {\n                    if (item.dictItemKey == 'useDept') {\n                        this.dt_check_content.splice(index, 1)\n                        this.dt_check_content.splice(0, 0, item)\n                    }\n                })\n                this.dt_check_content.forEach((item, index) => {\n                    if (item.dictItemKey == 'address') {\n                        this.dt_check_content.splice(index, 1)\n                        this.dt_check_content.splice(1, 0, item)\n                    }\n                })\n            }, 1000)\n        },\n        getStation () {\n            if (this.tempFrom.useDept) {\n                api.getStationList({\n                    workCenterCode: this.tempFrom.useDept\n                }).then(res => {\n                    this.addressData = res.data\n                    if (this.addressData.length == 0) {\n                        this.$message({\n                            title: '警告',\n                            message: '当前产线下暂无工位',\n                            type: 'warning',\n                            duration: 1000\n                        })\n                    }\n                })\n            }\n            api.getWorkCenter().then(res => {\n                this.workCenterData = res.data\n            })\n            api.getSuppliers({\n                currentPage: 1,\n                pageSize: 1000\n            }).then(res => {\n                this.supplierData = res.data.list\n            })\n            api.getManufacturers({\n                currentPage: 1,\n                pageSize: 1000\n            }).then(res => {\n                this.manufacturerData = res.data.list\n            })\n        },\n        useDeptChange () { },\n        inventory (row) {\n            this.tempFrom = {}\n            setTimeout(() => {\n                this.getList2(1, row)\n            }, 0)\n        },\n        inventoryDetail (row) {\n            var tmp = Object.assign(this.temp, row)\n            this.tempFrom = Object.assign({}, tmp)\n        },\n        inventoryDetail2 (row) {\n            this.fromDialogFormVisible = true\n            var tmp = Object.assign(this.temp, row)\n            this.tempFrom = Object.assign({}, tmp)\n        },\n        inventoryCheck () {\n            if (JSON.stringify(this.tempFrom) == '{}') {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备',\n                    type: 'warning'\n                })\n                return false\n            }\n            var tmp = this.tempFrom\n            this.tempFrom = {\n                checkOrderNumber: this.list2.checkOrderNumber,\n                deviceDTO: tmp,\n                ifUpdate: 'Y',\n                remark: this.list2.remark,\n                rowId: this.list2.rowId\n            }\n            api.inventoryCheck(this.tempFrom).then(res => {\n                if (res.status == 201) {\n                    this.$message({\n                        title: '成功',\n                        message: '盘点成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.fromDialogFormVisible = false\n                    this.tempFrom = {}\n                    this.freshEqmt()\n                }\n            })\n        },\n        detail (row) {\n            api.inventoryDetail(row.deviceCode).then(res => {\n                this.tempFrom = res.data\n            })\n        },\n        freshEqmt () {\n            api.queryRecord2(this.temp.checkOrderNumber, this.listQuery2).then(\n                res => {\n                    this.fromList = res.data.checkDetail\n                }\n            )\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        tabClick (tab) {\n            this.tempFrom = {}\n            if (tab.paneName == 'stayPlate') {\n                this.notDetail = true\n            } else {\n                this.notDetail = false\n            }\n        },\n        getList () {\n            //获取表格数据\n            api.queryRecord(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getList2 (num, value) {\n            //获取子表格数据\n            api.queryRecord2(value.checkOrderNumber, this.listQuery2).then(\n                res => {\n                    this.list2 = res.data\n                    this.fromList = res.data.checkDetail\n                    this.temp = res.data\n                    var tmp = []\n                    this.temp.contents.forEach(item => {\n                        tmp.push(item.content)\n                    })\n                    this.dt_check_content.forEach((item2, index) => {\n                        this.dt_check_content[index].check = false\n                        this.temp.contents.forEach(item => {\n                            if (item2.dictItemKey == item.content) {\n                                this.dt_check_content[index].check = true\n                                return false\n                            }\n                        })\n                    })\n                    this.temp.contents = tmp\n                    if (num == 1) {\n                        setTimeout(() => {\n                            this.dialogFormVisible = true\n                        }, 100)\n                    }\n                }\n            )\n        },\n        resetTemp () {\n            this.temp = {}\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n            this.fromList = []\n        },\n        confirm () { },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected')\n        },\n        rowClick (val) {\n            this.selectedRows = val\n            if (val.length == 0) {\n                this.selectedRows = []\n                // this.list2 = []\n                return false\n            }\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows[0])\n            if (this.selectedRows.length) {\n                this.getList2(0, val[0])\n            }\n        },\n        // 全选\n        selectAll (val) {\n            if (val.length == 0) {\n                this.selectedRows = []\n                this.$refs.tb.clearSelection()\n                return false\n            }\n            val.forEach((items, indexv) => {\n                let isSelected = false\n                this.selectedRows.forEach(item => {\n                    if (item.checkOrderNumber === items.checkOrderNumber) {\n                        isSelected = true\n                    }\n                })\n                if (!isSelected) {\n                    this.selectedRows.push(val[indexv])\n                }\n            })\n        },\n        closeMain () {\n            this.$refs.tb.clearSelection()\n        }\n    }\n}\n",null]}