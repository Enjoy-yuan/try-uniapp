{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processConfiguration/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processConfiguration/index.vue","mtime":1596610934248},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/system/process/processConfiguration'\nimport tabSelect from '@/components/Select/tabSelect'\nimport dialog1 from './diaLog/dialog1'\nimport dialog2 from './diaLog/dialog2'\nimport dialog3 from './diaLog/dialog3'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\n\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'processDesign',\n    components: { Pagination, dialog1, dialog2, dialog3, tabSelect },\n    data () {\n        return {\n            theight: 0, //表格高度\n            unMutiple: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null, //当前选中的行\n            selectedRows: null, //多选时选中的所有行\n            //树高度样式\n            contentStyleObj: {\n                height: ''\n            },\n            mainList: {},\n            treeData: [],\n            defaultProps: {\n                children: 'children',\n                label: 'name'\n            },\n            tableKey: 0, //表格索引，虚拟dom渲染表格时使用\n            list: [],\n            total: 0,\n            orgName: [],\n            dialogStatus: '',\n            listLoading: true,\n            dialogVisible: false,\n            dialogVisiblethree: false,\n            listQuery: {\n                key: undefined,\n                currentPage: 1,\n                pageSize: 10\n            },\n            dialogIndex: 0,\n            nodeData: null\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_org_type: state => state.dict.dt_org_type,\n            dt_org_function: state => state.dict.dt_org_function\n        })\n    },\n    mounted () {\n        window.addEventListener('message', this.handleMessage)\n        this.$store.dispatch('dict/getDicData', ['dt_org_type', 'dt_org_function'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n            this.setTreeHeight()\n        }\n        this.getTreeList()\n        this.setTreeHeight()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        getTreeList () {\n            api.getModelTree('tree').then(rest => {\n                rest = rest.data\n                this.treeData = this.$myFun.reDataToWorkTree(rest, 'category')\n            })\n        },\n        getList () {\n            //查询组织列表\n            setTimeout(() => {\n                api.getRecords(this.listQuery).then(res => {\n                    res = res.data.list\n                    this.list = res\n                })\n            }, 1.5 * 100)\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.page = 1\n        },\n        //流程信息配置\n        handleInformation (index, row) {\n            this.dialogIndex = 1\n            this.$refs.refConfig.initForm(row)\n            this.$refs.refConfig.src = `/workflow/diagram-viewer/index.html?processDefinitionId=${row.id}`\n            this.$refs.refConfig.dialogVisible = true\n        },\n        //流程节点配置\n        handleNode (index, row) {\n            console.log(row)\n            this.dialogIndex = 2\n            this.$refs.refNode.dialogVisible = true\n            this.$refs.refNode.initData()\n            this.$refs.refNode.src = `/workflow/diagram-viewer/index.html?processDefinitionId=${row.id}`\n            this.$refs.refNode.initTab(row)\n        },\n        //流程国际化配置\n        handleInternational () {\n            this.dialogIndex = 3\n            this.dialogVisiblethree = true\n        },\n        handleImitate () {\n            //流程模拟\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight()\n        },\n        handleNodeClick (data) {\n            //点击树查询\n            this.listQuery.key = data.key\n            this.getList()\n        },\n        resetTemp () {\n            this.mainList = {}\n        },\n        handlesaveC () { },\n        async handleMessage (event) {\n            this.nodeData = event.data\n            if (this.nodeData.cmd === 'getModelData') {\n                if (this.nodeData.params.success) {\n                    console.log(this.nodeData.params, 'test iframe main')\n                    this.initDialog()\n                }\n            }\n        },\n        initDialogIndex () {\n            this.dialogIndex = 0\n        },\n        //初始化弹框数据\n        initDialog () {\n            switch (this.dialogIndex) {\n                case 1: {\n                    this.$refs.refConfig.nodeClick(this.nodeData)\n                    break\n                }\n                case 2: {\n                    this.$refs.refNode.nodeClick(this.nodeData)\n                    break\n                }\n                case 3: {\n                    break\n                }\n            }\n        },\n        selectClick (i) {\n            this.$refs['orgRef' + i].dialogVisible = true\n        },\n        handleTabConfirm (val) {\n            this.$refs.refNode.setPerson(val)\n        },\n        handleChangeStatus (index, row) {\n            let data = {\n                available: \"1\",\n            }\n            let id = row.id\n            api.infoConfig(id, data).then(res => {\n                console.log(res)\n            })\n        },\n        //控制tab的单多选\n        setTabSelect (val) {\n            console.log(val, 999999)\n            if (val === \"1\") {\n                this.unMutiple = false\n            } else {\n                this.unMutiple = true\n            }\n        }\n    }\n}\n",null]}