{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/PM/equipmentProducts/tabs/attributeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/PM/equipmentProducts/tabs/attributeInfo.vue","mtime":1600927611518},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\"\nimport { mapState } from 'vuex'\nimport attributeFrom from '../../../components/attributeFrom'\nimport throttle from 'lodash/throttle'\nexport default {\n    name: \"attributeInfo\",\n    props: ['code'],\n    data () {\n        return {\n            theight: 0,//表格高度\n            listLoading: false,\n            list: [],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                attributeName: undefined\n            },\n            dialogFormVisible: false,\n            dialogFormType: undefined,\n            temp: {\n                attributeCode: undefined,\n                attributeName: undefined,\n                attributeType: undefined,\n                attributeTypeName: undefined,\n                company: undefined,\n                companyName: undefined,\n                dataType: undefined,\n                dataTypeName: undefined,\n                enumValue: undefined, // 暂不需要\n                max: undefined,\n                min: undefined,\n                readType: undefined,\n                readTypeName: undefined,\n                remark: undefined\n            },\n            fileList: [],\n            tableKey: 0,//表格索引\n        }\n    },\n    components: { attributeFrom },\n    computed: {\n        ...mapState({\n            iot_attribute_type: state => state.iotDict.iot_attribute_type,\n            iot_attribute_company: state => state.iotDict.iot_attribute_company,\n            iot_data_type: state => state.iotDict.iot_data_type,\n            iot_read_type: state => state.iotDict.iot_read_type\n        }),\n        myHeader () {\n            return {\n                authToken: window.sessionStorage.getItem('authToken')\n            }\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getAttributeType (val) {\n            let arr = this.iot_attribute_type.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.attributeTypeName = arr[0].dictItemValue\n        },\n        getCompany (val) {\n            let arr = this.iot_attribute_company.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.companyName = arr[0].dictItemValue\n        },\n        getDataType (val) {\n            let arr = this.iot_data_type.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.dataTypeName = arr[0].dictItemValue\n        },\n        getReadType (val) {\n            let arr = this.iot_read_type.filter(i => {\n                return i.dictItemKey == val\n            })\n            this.temp.readTypeName = arr[0].dictItemValue\n        },\n        //获取表格数据\n        getList () {\n            this.listLoading = true\n            api.queryAttributes(this.code, this.listQuery).then(res => {\n                this.list = res.data\n                this.list = this.$myFun.srmCodeToName(res.data, [this.iot_attribute_type, this.iot_data_type, this.iot_read_type, this.iot_attribute_company,], ['attributeType', 'dataType', 'readType', 'company'])\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        //表格查询\n        handleQuery: throttle(\n            function () {\n                this.listQuery.currentPage = 1\n                this.getList()\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.dialogFormType = 'create'\n            this.dialogFormVisible = true\n        },\n        create (val) {\n            api.addAttribute(this.code, val).then(() => {\n                this.getList()\n                this.dialogFormVisible = false\n                this.resTemp()\n                this.$notify({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n\n            })\n        },\n        //编辑按钮单击事件方法\n        handleUpdate (attributeCode) {\n            api.queryAttribute(this.code, attributeCode).then(res => {\n                this.temp = res.data\n                this.temp.min = parseInt(res.data.min)\n                this.temp.max = parseInt(res.data.max)\n                this.dialogFormType = 'update'\n                this.dialogFormVisible = true\n            })\n        },\n        update (val) {\n            api.updateAttribute(this.code, this.temp.attributeCode, val).then(() => {\n                this.getList()\n                this.dialogFormVisible = false\n                this.resTemp()\n                this.$notify({\n                    title: '成功',\n                    message: '修改成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        //删除按钮单击事件方法\n        handleDelete (attributeCode) {\n            this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    api.deleteAttribute(this.code, attributeCode).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    }).catch(() => {\n                        this.getList()\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n        },\n        //导出属性\n        handleExport () {\n            let params = {\n                nativeRequest: {},\n                nativeResponse: {}\n            }\n            let data = {}\n            api.downloadModal('EXTP-IOT-0001', params, data).then(res => {\n                let filename = decodeURI(res.headers['content-disposition'].split(';')[1].split('=')[1]) || 'excel.xlsx'\n                this.download(res.data, filename)\n            })\n        },\n        //导入属性\n        handleImport () {\n            let params = {\n                nativeRequest: {},\n                nativeResponse: {},\n                params: {}\n            }\n            if (!this.fileList) {\n                this.$message.warning('请选择要上传的文件！')\n                return false\n            }\n            let fileFormData = new FormData()\n            fileFormData.append('file', this.fileList[0])//filename是键，file是值，就是要传的文件，test.zip是要传的文件名\n            api.uploadExcel('EXTP-IOT-0001', this.fileList[0], params).then(res => {\n                if (res.status === 200) {\n                    this.$message.success('上传成功')\n                }\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 30\n        },\n        resTemp () {\n            this.temp = {\n                attributeCode: undefined,\n                attributeName: undefined,\n                attributeType: undefined,\n                attributeTypeName: undefined,\n                company: undefined,\n                companyName: undefined,\n                dataType: undefined,\n                dataTypeName: undefined,\n                enumValue: undefined, // 暂不需要\n                max: 100,\n                min: 0,\n                readType: undefined,\n                readTypeName: undefined,\n                remark: undefined\n            }\n        },\n        // 下载文件\n        download (data, filename) {\n            if (!data) {\n                return\n            }\n            let url = window.URL.createObjectURL(new Blob([data]))\n            let link = document.createElement('a')\n            link.style.display = 'none'\n            link.href = url\n            link.setAttribute('download', filename)\n\n            document.body.appendChild(link)\n            link.click()\n        },\n        //自定义上传\n        uploadFile (item) {\n            if (!item) {\n                this.$message.warning('请选择要上传的文件！')\n                return false\n            }\n            let timestamp = (new Date()).getTime()\n            let params = {\n                nativeRequest: {},\n                nativeResponse: {},\n                params: {},\n                timestamp: timestamp,\n            }\n\n            let fileFormData = new FormData()\n            fileFormData.append('file', item.file)//filename是键，file是值，就是要传的文件，test.zip是要传的文件名\n            api.uploadExcel('EXTP-IOT-0001', fileFormData, params).then(res => {\n                if (res.status === 200) {\n                    this.$message.success('上传成功')\n                }\n            })\n        },\n    }\n};\n",null]}