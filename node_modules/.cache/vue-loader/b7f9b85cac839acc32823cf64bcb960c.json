{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/factory-modeling/workstation/rightcontent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/factory-modeling/workstation/rightcontent.vue","mtime":1596610933357},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/data-base/work-center\";\nimport Pagination from \"@/components/Pagination\";\nimport tkqy from \"./tkqy\";\nimport { mapState } from \"vuex\";\n\n\nexport default {\n    components: { Pagination, tkqy },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            theight: 0,//表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                workCenterCode: undefined,\n                stationCode: undefined,\n                stationName: undefined,\n                lineCode: undefined,\n                stationNo: undefined,\n                stationType: undefined,\n                feedArea: undefined\n            },\n            parentsRows: null,\n            isEdit: true,\n            temp: {\n                workCenterCode: undefined,\n                stationCode: undefined,\n                stationName: undefined,\n                lineCode: undefined,\n                stationNo: undefined,\n                stationType: undefined,\n                feedArea: undefined\n            },\n            feedArea: undefined,\n            stationCode: undefined,\n            warehouseCode: undefined,\n            workCenterCode: undefined,\n            feedAreaDialogFormVisible: undefined,\n            dialogFormVisible: false,\n            dialogStatus: \"\",\n            tableKey: 0,\n            rules: {\n                stationCode: [\n                    {\n                        required: true,\n                        message: \"工位编码不能为空\",\n                        trigger: \"blur\"\n                    }\n                ],\n                stationName: [\n                    {\n                        required: true,\n                        message: \"工位名称不能为空\",\n                        trigger: \"blur\"\n                    }\n                ]\n            }\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_station_type: state => state.dict.dt_station_type,\n            dt_workcenter_type: state => state.dict.dt_workcenter_type,\n            dt_workcenter_class: state => state.dict.dt_workcenter_class,\n            dt_workcenter_group: state => state.dict.dt_workcenter_group,\n            dt_workcenter_model: state => state.dict.dt_workcenter_model,\n            dt_timeunit: state => state.dict.dt_timeunit\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\n            \"dt_workcenter_type\",\n            \"dt_workcenter_class\",\n            \"dt_workcenter_group\",\n            \"dt_workcenter_model\",\n            \"dt_timeunit\",\n            \"dt_station_type\"\n        ]);\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight();\n        };\n        this.getList();\n\n    },\n    methods: {\n        getList (node) {\n            if (node) {\n                const workCenterCode = node.workCenterCode;\n                this.workCenterCode = node.workCenterCode;\n                this.feedArea = node.feedArea;\n                this.lineCode = node.label;\n                api.queryList(workCenterCode, this.listQuery).then(res => {\n                    this.list = res.data.list;\n                    this.total = res.data.pages.count;\n                });\n            }\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        getList1 () {\n            api.queryList(this.workCenterCode, this.listQuery).then(res => {\n                this.list = res.data.list;\n                this.total = res.data.pages.count;\n            });\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1;\n            api.queryList(this.workCenterCode, this.listQuery).then(res => {\n                this.list = res.data.list;\n                this.total = res.data.pages.count;\n            });\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val;\n            this.getList();\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val;\n            this.getList();\n        },\n        handleCreate () {\n            if (!this.workCenterCode) {\n                this.$message.warning(\"请选择对应工厂或者上级工作中心！\");\n                return;\n            }\n            this.resetTemp();\n            this.temp.workCenterCode = this.workCenterCode;\n            this.temp.lineCode = this.lineCode;\n            this.dialogStatus = \"create\";\n            this.dialogFormVisible = true;\n        },\n        selectRow (val) {\n            this.selectlistRow = val;\n        },\n        handleUpdate () {\n            //编辑弹窗\n            if (!this.workCenterCode) {\n                this.$message.warning(\"请选择对应工厂或者上级工作中心！\");\n                return;\n            }\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.lineCode = true; //生产线不可以编写\n                this.temp = this.selectlistRow[0];\n                api.queryJob(\n                    this.temp.workCenterCode,\n                    this.temp.stationCode\n                ).then(res => {\n                    this.temp = res.data;\n                    this.dialogStatus = \"update\";\n                    this.dialogFormVisible = true;\n                    this.$nextTick(() => {\n                        this.$refs[\"temp\"].clearValidate();\n                    });\n                });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        update () {\n            //编辑\n            this.$refs[\"temp\"].validate(valid => {\n                if (valid) {\n                    api.updateJob(\n                        this.workCenterCode,\n                        this.temp.stationCode,\n                        this.temp\n                    ).then(() => {\n                        this.getList1();\n                        this.dialogFormVisible = false;\n                        this.$message({\n                            title: \"成功\",\n                            message: \"更新成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    });\n                }\n            });\n        },\n        update3 () {\n            //投控区域\n            if (this.parentsRows.length && this.parentsRows.length == 1) {\n                this.temp.feedArea = this.parentsRows[0].locationCode;\n                this.feedAreaDialogFormVisible = false;\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        feedAreas (row) {\n            this.parentsRows = row;\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm(\"此操作将删除所选中数据, 是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        let ids = [];\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.stationCode;\n                        });\n                        api.deleteJob(this.workCenterCode, ids).then(\n                            () => {\n                                this.getList1(),\n                                    this.$message({\n                                        title: \"成功\",\n                                        message: \"删除成功\",\n                                        type: \"success\",\n                                        duration: 2000\n                                    });\n                            }\n                        );\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: \"info\",\n                            message: \"已取消删除\"\n                        });\n                    });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.creatJob(this.temp.workCenterCode, this.temp).then(\n                        () => {\n                            this.getList1();\n                            this.dialogFormVisible = false;\n                            this.$notify({\n                                title: \"成功\",\n                                message: \"新增成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        }\n                    );\n                } else {\n                    return false;\n                }\n            });\n        },\n        cancel () {\n            this.dialogFormVisible = false;\n        },\n        resetTemp () {\n            this.temp = {\n                workCenterCode: undefined,\n                stationCode: undefined,\n                stationName: undefined,\n                lineCode: undefined,\n                stationNo: undefined,\n                stationType: undefined,\n                parentCode: undefined,\n                feedArea: undefined\n            };\n        },\n        handleClose () {\n            this.resetTemp();\n            this.$refs.temp.resetFields();\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.workCenterCode);\n        },\n        handleChange () {\n            this.$emit(\"fresh\", true);\n        },\n        handlefeed () {\n            this.feedAreaDialogFormVisible = true;\n        }\n    }\n};\n",null]}