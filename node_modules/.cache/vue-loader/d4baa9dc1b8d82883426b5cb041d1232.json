{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/color/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/color/index.vue","mtime":1596610933323},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/color'\nimport Pagination from '@/components/Pagination'\nimport { parseTime } from '@/utils'\n\nexport default {\n    name: 'color',\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                colorCode: undefined,\n                colorName: undefined\n            },\n            temp: {\n                colorCode: undefined,\n                colorName: undefined,\n                colorAbbreviation: undefined,\n                state: 1,\n                remark: undefined\n            },\n            colorCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            rules: {\n                colorCode: [\n                    {\n                        required: true,\n                        message: '颜色编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[A-Z-_0-9]{0,32}$/,\n                        message: '由大写字母、数字、-和_组成，长度为32',\n                        trigger: 'blur'\n                    }\n                ],\n                colorName: [\n                    {\n                        required: true,\n                        message: '编码名称不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 100,\n                        message: '颜色名称长度不能超过100',\n                        trigger: 'blur'\n                    }\n                ],\n                colorAbbreviation: [\n                    {\n                        max: 50,\n                        message: '颜色简称长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: [\n                    { max: 512, message: '备注长度为512内', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    created () {\n        this.getList()\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            //新增\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n\n        handleUpdate () {\n            //编辑弹窗\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true //组织编码不可以编写\n                this.temp = this.selectlistRow[0] // copy obj\n                api.getRecord(this.temp.colorCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                    // this.$nextTick(() => {\n                    //     this.$refs[\"temp\"].clearValidate();\n                    // });\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            //编辑提交\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(this.temp.colorCode, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.colorCode\n                        })\n                        api.deleteRecord(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create () {\n            //新增确认按钮\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        cancel () {\n            //取消弹窗按钮\n            this.dialogFormVisible = false\n        },\n        resetTemp () {\n            this.temp = {\n                colorCode: undefined,\n                colorName: undefined,\n                colorAbbreviation: undefined,\n                state: 1,\n                remark: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.colorCode)\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '颜色编码',\n                    '颜色名称',\n                    '颜色简称',\n                    '状态',\n                    '备注'\n                ]\n                const filterVal = [\n                    'colorCode',\n                    'colorName',\n                    'colorAbbreviation',\n                    'state',\n                    'remark'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === 'timestamp') {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        }\n    }\n}\n",null]}