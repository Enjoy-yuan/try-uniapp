{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/quotaManagement/quotaAdjustment/dialog/addMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/quotaManagement/quotaAdjustment/dialog/addMain.vue","mtime":1603329739766},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/quotaManagement/quotaAdjustment\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\nimport { mapState } from \"vuex\"\nimport dialogOrgSelect from '@/components/Dialog/dialogOrgSelect'\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\nimport dialogWlxzbycglx from '@/components/Dialog/dialogWlxzbycglx.vue'//物料选择\nimport search from './search'\nexport default {\n    components: { caiGou, dialogGysxz, dialogOrgSelect, dialogPersonSelect, dialogWlxzbycglx, search },\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            dialogVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            list: [],\n            temp: {\n                rowId: undefined,\n                adjustNo: undefined,\n                orgCode: undefined,\n                firstExecuteTime: undefined,\n                applicationCompanyName: undefined,\n                applicant: undefined,\n                endExecuteTime: undefined,\n                mainContent: undefined,\n                adjustType: undefined,\n                changeCause: undefined\n            },\n            status: false,\n            statusList: [],\n            radio: {\n                value: '1',\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pc2: state => state.dict.dt_srm_pc2,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pc2\"])\n        this.getList()\n    },\n    methods: {\n        handleClose () {\n            this.$refs.dataForm.resetFields()\n            this.list = []\n        },\n        initForm () {\n            this.temp = {\n                adjustNo: undefined,\n                orgCode: undefined,\n                firstExecuteTime: undefined,\n                applicationCompanyName: undefined,\n                applicant: undefined,\n                endExecuteTime: undefined,\n                mainContent: undefined,\n                adjustType: undefined,\n                changeCause: undefined\n            }\n        },\n        //获取采购组织名称\n        selectName (val) {\n            this.temp.orgName = val\n        },\n        //申请单位\n        showOrg () {\n            this.$refs.refOrg.dialogVisible = true\n        },\n        //申请单位确定\n        confirmOrg (data) {\n            console.log(data)\n            if (data) {\n                this.$set(this.temp, 'applicationCompanyCode', data[0].organizationCode)\n                this.$set(this.temp, 'applicationCompanyName', data[0].organizationName)\n            }\n        },\n        //人员选择\n        showPerson () {\n            this.$refs.person.dialogVisible = true\n        },\n        //人员选择确定\n        personConfirm (val) {\n            this.$set(this.temp, 'applicantCode', val[0].employeeCode)\n            this.$set(this.temp, 'applicant', val[0].employeeName)\n        },\n        //供应商\n        showGys () {\n            this.$refs.refGys.dialogVisible = true\n            this.$refs.refGys.getList()\n        },\n        //供应商确定\n        handleGysClick (val) {\n            this.$set(this.temp, 'supplierCode', val[0].supplierCode)\n            this.$set(this.temp, 'supplierName', val[0].supplierName)\n        },\n        getList () {\n            // this.list = [\n            //     { params1: '1', params2: 'LL_X7-98880', params3: 'LL_X7-98880', params4: '01', params5: '', params6: '', params7: '', params8: '', params9: '', params10: '', }\n            // ]\n        },\n        handleCreate () {\n            if (this.radio.value == '1') {\n                this.$nextTick(() => {\n                    // this.$refs.search.listSelected = [...this.list]\n                    this.$refs.search.getList()\n                })\n                this.$refs.search.dialogVisible = true\n            } else {\n                this.$nextTick(() => {\n                    this.$refs.wlxz.listSelected = [...this.list]\n                    this.$refs.wlxz.getList()\n                })\n                this.$refs.wlxz.dialogVisible = true\n            }\n\n        },\n        //物料选择确定\n        confirmWlxz (val) {\n            console.log(val)\n            val = val.map(v => {\n                v.source = '供货路线'\n                return v\n            })\n            let newChoice = []\n            val.forEach(item => {\n                let returnable = false\n                this.list.forEach(itemd => {\n                    if ((item.supplierCode.toString() + item.materialCode.toString()) === (itemd.supplierCode.toString() + itemd.materialCode.toString())) {\n                        returnable = true\n                    }\n                })\n                if (returnable) {\n                    return\n                } else {\n                    newChoice.push(item)\n                }\n            })\n            newChoice.forEach(val => {\n                this.list.push(JSON.parse(JSON.stringify(val)))\n                this.$refs.wlxz.dialogVisible = false\n            })\n        },\n        confirmList (val) {\n            val = val.map(v => {\n                v.source = '申请单'\n                return v\n            })\n            // this.list = [...val]\n\n            let newChoice = []\n            val.forEach(item => {\n                let returnable = false\n                this.list.forEach(itemd => {\n                    if ((item.supplierCode.toString() + item.materialCode.toString()) === (itemd.supplierCode.toString() + itemd.materialCode.toString())) {\n                        returnable = true\n                    }\n                })\n                if (returnable) {\n                    return\n                } else {\n                    newChoice.push(item)\n                }\n            })\n            this.$refs.search.dialogVisible = false\n\n            newChoice.forEach(val => {\n                this.list.push(JSON.parse(JSON.stringify(val)))\n                this.$refs.search.dialogVisible = false\n\n            })\n        },\n        handleDelete (index) {\n            this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                this.list.splice(index, 1)\n                this.$message({\n                    type: \"success\",\n                    message: \"删除成功\"\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n        },\n        createData () {\n            let temp = {}\n            this.list.forEach(res => {\n                if (res.groupNo) {\n                    temp[res.groupNo] = []\n                } else if (res.materialCode)\n                    temp[res.materialCode] = []\n            })\n            for (let i in temp) {\n                this.list.forEach(item => {\n                    if (item.groupNo == i) {\n                        temp[i].push(item)\n                    } else if (item.materialCode == i) {\n                        temp[i].push(item)\n                    }\n                })\n            }\n            for (let i in temp) {\n                let sum = 0\n                temp[i].forEach(v => {\n                    sum += parseFloat(v.adjustRatio)\n                })\n                this.statusList[i] = sum\n            }\n            console.log(this.statusList, ' this.statusList')\n            this.status = Object.keys(this.statusList).every((key) => {\n                return this.statusList[key] == 1\n            })\n            if (!this.status) {\n                this.$message({\n                    title: \"警告\",\n                    message: \"相同分组号或物料编码比例必须为百分百\",\n                    type: \"warning\"\n                })\n            } else {\n                this.$refs.dataForm.validate(valid => {\n                    if (valid) {\n                        this.temp.quotaAdjustDetailDTO = this.list\n                        api.addRecord(this.temp).then(() => {\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.dialogVisible = false\n                            this.$emit('refresh')\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            }\n        },\n        updateData () {\n            let temp = {}\n            this.list.forEach(res => {\n                if (res.groupNo) {\n                    temp[res.groupNo] = []\n                } else if (res.materialCode)\n                    temp[res.materialCode] = []\n            })\n            for (let i in temp) {\n                this.list.forEach(item => {\n                    if (item.groupNo == i) {\n                        temp[i].push(item)\n                    } else if (item.materialCode == i) {\n                        temp[i].push(item)\n                    }\n                })\n            }\n            for (let i in temp) {\n                let sum = 0\n                temp[i].forEach(v => {\n                    sum += parseFloat(v.adjustRatio)\n                })\n                this.statusList[i] = sum\n            }\n            console.log(this.statusList, ' this.statusList')\n            this.status = Object.keys(this.statusList).every((key) => {\n                return this.statusList[key] == 1\n            })\n            if (!this.status) {\n                this.$message({\n                    title: \"警告\",\n                    message: \"相同分组号或物料编码比例必须为百分百\",\n                    type: \"warning\"\n                })\n            } else {\n                this.temp.quotaAdjustDetailDTO = this.list\n                api.updateRecord(this.temp.rowId, this.temp).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '编辑成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogVisible = false\n                    this.$emit('refresh')\n                })\n            }\n        }\n    }\n}\n",null]}