{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/bidEvaluation/priceReview/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/bidEvaluation/priceReview/index.vue","mtime":1596610933979},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/supplierSelect/priceReview\"\nimport Pagination from \"@/components/Pagination\"\nimport { mapState } from \"vuex\"\nimport twoOffer from \"./dialog/twoOffer\"\nimport priceCompare from \"./dialog/priceCompare\"\nimport manyCompare from \"./dialog/manyCompare\"\nexport default {\n    name: \"priceReview\",\n    components: { Pagination, twoOffer, priceCompare, manyCompare },\n    data () {\n        return {\n            theight: 0,\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            list: null,\n            listSub: null,\n            total: 0,\n            selectedrow: null,//主表选中行\n            radio: 3,\n            competitionState: '',\n            selectedState: '',\n            selectlistRowSub: [],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                isBusinessOpening: 1,\n                state: 'PDJ3'\n            },\n            sublistQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            tableKey: [0, 1]//表格索引，虚拟dom渲染表格时使用\n\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pdj: state => state.dict.dt_srm_pdj,\n            dt_srm_pdf: state => state.dict.dt_srm_pdf,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pdj\", 'dt_srm_pdf'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    filters: {\n        statusFilterA: function (a) {\n            if (a === '1') {\n                return \"入选\"\n            } else if (a == '0') {\n                return \"未入选\"\n            }\n        },\n        statusFilterB: function (a) {\n            if (a === '1') {\n                return \"入围\"\n            } else if (a == '0') {\n                return \"未入围\"\n            }\n        },\n    },\n    methods: {\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        //入围状态控制\n        changeValueA (val) {\n            console.log(val)\n        },\n        //入选状态控制\n        changeValueB (val) {\n            if (val == 1) {\n                this.competitionState = 1\n            }\n        },\n        checked () {\n            this.$refs.tb.toggleRowSelection(this.list[0], true)//官网方法，重点\n        },\n        refresh () {\n            this.getList()\n        },\n        //显示主表\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_pdj, this.dt_srm_pdf]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['priceEvaluationState', 'choiceMethod'])\n                this.list = res.data.list\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        //显示从表\n        getSubList () {\n            let dto = {\n                materielCode: this.selectlistRow.materielCode,\n                planNo: this.selectlistRow.planNo,\n                quoteRounds: this.selectlistRow.quoteRounds\n            }\n            api.queryRecordItems(dto).then(res => {\n                this.listSub = res.data\n            })\n        },\n        //终止选择\n        handleEndSelect () {\n            if (this.selectlistRow) {\n                let dto = {\n                    planNo: this.selectlistRow.planNo,\n                    materielCode: this.selectlistRow.materielCode,\n                    method: 'stop'\n                }\n                api.endSelect(dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '终止选择成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.listSub = []\n                    this.getList()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //确认选择\n        handleConfirmSelect () {\n            if (this.selectlistRow) {\n                let dto = {\n                    planNo: this.selectlistRow.planNo,\n                    materielCode: this.selectlistRow.materielCode,\n                    method: 'confirm'\n                }\n                api.endSelect(dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '选择确认成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.listSub = []\n                    this.getList()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        //选择按钮单击事件\n        handleSelect () {\n            if (this.selectlistRowSub && this.selectlistRowSub.length > 0) {\n                if (this.competitionState !== '' || this.selectedState !== '') {\n                    if (this.competitionState == '0' && this.selectedState == '1') {\n                        this.$message({\n                            title: '警告',\n                            message: '未入围不能入选',\n                            type: 'warning'\n                        })\n                    } else {\n                        let dto = {\n                            competitionState: this.competitionState,\n                            selectedState: this.selectedState,\n                            rowIds: []\n                        }\n                        this.selectlistRowSub.forEach((val, index) => {\n                            dto.rowIds[index] = val.rowId\n                        })\n                        api.select(dto).then(() => {\n                            this.$message({\n                                title: '成功',\n                                message: '选择成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                        })\n                    }\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择入围或入选',\n                        type: 'warning'\n                    })\n                }\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请先勾选记录',\n                    type: 'warning'\n                })\n            }\n        },\n        //二次报价单击事件\n        handleTwoOffer () {\n            if (this.selectlistRow) {\n                if (this.selectlistRowSub && this.selectlistRowSub.length > 0) {\n                    this.$refs.twoOffer.dialogVisible = true\n                    this.$refs.twoOffer.list = [this.selectlistRow]\n                    this.$refs.twoOffer.subList = this.selectlistRowSub\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请先勾选记录',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        //价格构成对比按钮单击事件\n        priceCompare () {\n            if (this.selectlistRowSub && this.selectlistRowSub.length > 0) {\n                this.$refs.priceCompare.dialogVisible = true\n                let dto = {\n                    materielCode: this.selectlistRow.materielCode,\n                    planNo: this.selectlistRow.planNo,\n                    quoteRounds: this.selectlistRow.quoteRounds,\n                    quotationMethod: this.selectlistRowSub[0].quotationMethod,\n                    supplierCode: []\n                }\n                this.selectlistRowSub.forEach((val, index) => {\n                    dto.supplierCode[index] = val.supplierCode\n                })\n                dto.supplierCode = dto.supplierCode.join(',')\n                this.$nextTick(() => {\n                    this.$refs.priceCompare.getList(dto)\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请勾选信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        manyCompare () {\n            if (this.selectlistRowSub.length == 1) {\n                let dto = {\n                    materielCode: this.selectlistRow.materielCode,\n                    planNo: this.selectlistRow.planNo,\n                    supplierCode: this.selectlistRowSub[0].supplierCode,\n                    quotationMethod: this.selectlistRowSub[0].quotationMethod\n                }\n                // this.selectlistRowSub.forEach((val, index) => {\n                //     dto.supplierCode[index] = val.supplierCode\n                // })\n                this.$refs.manyCompare.dialogVisible = true\n                this.$refs.manyCompare.listSub = []\n\n                this.$refs.manyCompare.getList(dto)\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请勾选一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        //发布\n        handlePublish () {\n\n        },\n        //删除\n        handleDelete () {\n\n        },\n        //查询\n        handleQuery () {\n            this.listSub = []\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            if (this.selectlistRow) {\n                this.getSubList()\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)\n        },\n        // 获取表格选中时的数据\n        selectRowSub (val) {\n            this.selectlistRowSub = val\n        },\n        rowClickSub (val) {\n            this.$refs.tbSub.toggleRowSelection(val)\n        },\n        //加载时默认选中第一行\n        setFirstLine () {\n            this.$nextTick(() => {\n                this.$refs.tbmain.setCurrentRow(this.list[0])\n            })\n        }\n    }\n};\n",null]}