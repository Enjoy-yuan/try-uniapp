{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processDesign/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processDesign/index.vue","mtime":1601003902563},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport upload from './upload'\nimport Pagination from \"@/components/Pagination\" // Secondary package based on el-pagination\nimport * as api from \"@/api/system/process/processDesign\"\n\nexport default {\n    name: \"processDesign\",\n    components: { Pagination, upload },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            //树高度样式\n            contentStyleObj: {\n                height: \"\"\n            },\n            mainList: {\n                category: '',\n                code: '',\n                descrintior: '',\n                engname: '',\n                key: '',\n                name: '',\n                nodetype: ''\n            },\n            treeData: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"name\"\n            },\n            tableKey: 0,//表格索引，虚拟dom渲染表格时使用\n            list: [],\n            total: 0,\n            orgName: [],\n            dialogStatus: \"\",\n            activeCollNames: ['1'],\n            listLoading: true,\n            dialogVisible: false,\n            dialogVisibleupload: false,\n            dialogVisiblesearch: false,\n            listQuery: {\n                category: undefined,\n                engname: undefined,\n                key: undefined,\n                name: undefined,\n                queryType: undefined,\n                currentPage: 1,\n                pageSize: 10\n            },\n            categoryName: '',\n            viewpicsrc: \"\"\n        }\n    },\n    computed: {\n\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n            this.setTreeHeight()\n        }\n        this.getTreeList()\n        this.getList()\n        this.setTreeHeight()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        getTreeList () {\n            api.getModelTree('tree').then(rest => {\n                rest = rest.data\n                this.treeData = this.$myFun.reDataToWorkTree(rest, 'category')\n            })\n        },\n        getList () {\n            setTimeout(() => {\n                api.getExtModel(this.listQuery).then(res => {\n                    res = res.data\n                    this.list = res.list\n                    this.total = res.pages.count\n                })\n            }, 1.5 * 100)\n        },\n        //新增\n        handleCreate () {\n            this.resetTemp()\n            if (this.listQuery.category) {\n                this.mainList.category = this.listQuery.category\n                this.dialogVisible = true\n                this.dialogStatus = 'create'\n            } else {\n                this.$message({\n                    title: \"提示\",\n                    message: \"请先选择节点\",\n                    type: \"warning\",\n                    duration: 2000\n                })\n            }\n        },\n        //编辑\n        handleUpdate (index, row) {\n            this.dialogVisible = true\n            this.mainList = row\n            this.dialogStatus = 'update'\n        },\n        handleDelete (index, row) { //删除\n            this.$confirm(\"此操作将删除所选中数据, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                this.listLoading = true\n                api.deleteList(row.id).then(() => {\n                    this.getList()\n                    this.$message({\n                        title: \"成功\",\n                        message: \"删除成功\",\n                        type: \"success\",\n                        duration: 2000\n                    })\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消删除\"\n                })\n            })\n        },\n        handleupload (index, row) { //上传\n            console.log(index, row)\n            this.$refs.uploadRef.dialogVisibleupload = true\n            this.$refs.uploadRef.action = `http://172.30.251.16:2020/workflow/v1/actExtModel/uploadmodeler/${row.modelLinkId}`\n        },\n        handleDownload (index, row) { //下载\n            window.open(`http://172.30.251.16:2020/workflow/v1/actExtModel/expworklfow/${row.modelLinkId}`, '_self')\n        },\n        handleViewer (index, row) { //流程图查看\n            this.dialogVisiblesearch = true\n            this.viewpicsrc = `http://172.30.251.16:2020/workflow/v1/actExtModel/viewProcessImage/${row.modelLinkId}`\n        },\n        handlepublish (index, row) { //流程图发布\n            api.publishWorkflow(row.id, row.modelLinkId).then(res => {\n                if (res.status === 200) {\n                    this.$message({\n                        type: \"success\",\n                        message: \"发布成功\"\n                    })\n                } else {\n                    this.$message({\n                        type: \"warning\",\n                        messfage: \"发布未成功,请重试\"\n                    })\n                }\n            })\n        },\n        handlereturn (index, row) { //还原版本\n            api.revertWorkflow(row.modelLinkId).then(res => {\n                if (res.status === 200 || res.status === 201) {\n                    this.$message({\n                        type: \"success\",\n                        message: \"还原成功\"\n                    })\n                }\n            })\n        },\n        handleAdd () { //添加保存\n            this.mainList.category = this.listQuery.category\n            api.addList(this.mainList).then(res => {\n                if (res.status === 200 || res.status === 201) {\n                    this.$message({\n                        type: \"success\",\n                        message: \"保存成功\"\n                    })\n                }\n                this.dialogVisible = false\n            })\n        },\n        handleEdit () { //编辑保存\n\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击某行时执行\n        rowClick (val) {\n            if (this.isSingle) {\n                this.$refs.tb.clearSelection() //清除其他行的选中\n            }\n            this.$refs.tb.toggleRowSelection(val) //单击行绑定点击事件\n        },\n\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight()\n        },\n        handleNodeClick (data) {\n            //点击树查询\n            this.categoryName = data.name\n            this.listQuery.category = data.id\n            this.listQuery.queryType = data.nodetype\n            this.getList()\n        },\n        resetTemp () {\n            this.mainList = {}\n        },\n        handleDesign (index, data) {\n            window.open(`/workflow/modeler.html?modelId=${data.modelLinkId}`, \"newwindow\")\n        }\n    }\n};\n",null]}