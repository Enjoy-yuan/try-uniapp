{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/Interfacemonitor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/Interfacemonitor/index.vue","mtime":1600927611527},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/system/Interfacemonitor\";\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from 'vuex';\nimport { getDomainId } from \"@/utils/auth\";\nimport { TWO_isAsync_OPTIONS } from \"@/utils/constant\";\n\n\nexport default {\n    name: \"Interfacemonitor\",\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            listdata: null,\n            total: 0,\n            totaldata: 0,\n            theight: 0,//表格高度\n            flag: false,\n            value3: \"\",\n            valuedata: \"\",\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n            },\n            listQuerydata: {\n                currentPage: 1,\n                pageSize: 10,\n            },\n            taskUpdateStatusDTO: {\n                jobGroup: undefined,\n                jobName: undefined,\n                rowId: undefined,\n                status: undefined\n            },\n            TWO_isAsync_OPTIONS: TWO_isAsync_OPTIONS,\n            temp: {\n                status: 1,\n                remark: undefined,\n                creator: getDomainId()\n            },\n            colorCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            explainDialogFormVisible: false,\n            logDialogFormVisible: false,\n            dialogFormVisiblelog: false,\n            log: undefined,\n            dialogStatus: \"\",\n            tableKey: 0,\n            rules: {\n\n            }\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_implement_type: state => state.dict.dt_implement_type,\n            dt_monitor_state: state => state.dict.dt_monitor_state\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\n            \"dt_implement_type\",\n            \"dt_monitor_state\"\n        ]);\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n    },\n    created () {\n        this.getList();\n    },\n    filters: {\n        statusFilter: function (a) {\n            if (a === 1) {\n                return \"有效\"\n            } else {\n                return \"无效\"\n            }\n        },\n        isAsyncFilter: function (b) {\n            if (b === 1) {\n                return \"同步\"\n            } else {\n                return \"异步\"\n            }\n        },\n        typeFilter: function (c) {\n            if (c === \"it1\") {\n                return \"Spring服务\"\n            }\n        }\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list;\n                this.total = res.data.pages.count;\n            });\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        handlesynchro () { //同步\n            if (this.selectlistRow) {\n                api.updateRecord(this.selectlistRow.transactionNumber).then(() => {\n                    this.getList()\n                    this.$message({\n                        title: \"成功\",\n                        message: \"同步成功\",\n                        type: \"success\",\n                        duration: 2000\n                    });\n\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        handlemonitor () { //发送或更新\n            if (this.selectlistRow) {\n                api.updatemonitor(this.selectlistRow.transactionNumber).then(() => {\n                    this.getList()\n                    this.$message({\n                        title: \"成功\",\n                        message: \"发送/更新成功\",\n                        type: \"success\",\n                        duration: 2000\n                    });\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        handleExplain () {\n            this.explainDialogFormVisible = true\n        },\n        handleQuery () {//查询\n            this.listQuery.currentPage = 1;\n            this.getList();\n        },\n        handleQuerydata () {\n            this.listQuery.currentPage = 1;\n            this.getlistData();\n        },\n        handlelog () {\n            if (this.selectlistRow) {\n                this.dialogStatus = \"log\";\n                api.queryRecordlog(this.selectlistRow.transactionNumber).then(res => {\n                    this.log = res.info\n                })\n                this.dialogFormVisiblelog = true;\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n\n        },\n        getlistData () {\n            let transdata = {\n                transactionNumber: this.selectlistRow.transactionNumber,\n                currentPage: 1,\n                pageSize: 10,\n                time: undefined\n\n            }\n            if (this.valuedata) {\n                transdata.time = this.valuedata\n            } else {\n                transdata.time = \"\"\n            }\n            api.queryRecorddata(transdata).then(res => {\n                this.listdata = res.list\n                this.totaldata = res.pages.count\n            })\n        },\n        handledata () {//新增\n            if (this.selectlistRow) {\n                this.resetTemp();\n                this.flag = false\n                this.dialogStatus = \"create\";\n                this.getlistData()\n                this.dialogFormVisible = true;\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        create () {//新增确认按钮\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList();\n                        this.dialogFormVisible = false;\n                        this.$message({\n                            title: \"成功\",\n                            message: \"新增成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    });\n                } else {\n                    return false;\n                }\n            });\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1];\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection();\n                this.$refs.tb.toggleRowSelection(val.pop());\n            }\n\n        },\n\n        handleUpdate () {//编辑弹窗\n            if (this.selectlistRow) {\n                this.temp = this.selectlistRow\n                this.flag = true\n                this.dialogStatus = \"update\";\n                this.dialogFormVisible = true;\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        update () {//编辑提交\n            this.$refs[\"temp\"].validate(valid => {\n                if (valid) {\n                    this.temp.updator = getDomainId()\n                    api.updateRecord(this.temp).then(\n                        () => {\n                            this.getList();\n                            this.dialogFormVisible = false;\n                            this.$message({\n                                title: \"成功\",\n                                message: \"更新成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        }\n                    );\n                }\n            });\n        },\n        cancel () {//取消弹窗按钮\n            this.dialogFormVisible = false;\n        },\n        resetTemp () {\n            this.temp = {\n                status: 1,\n                remark: undefined,\n                flag: false,\n                creator: getDomainId()\n            };\n        },\n        handleClose () {\n            this.resetTemp();\n\n        },\n\n    }\n};\n",null]}