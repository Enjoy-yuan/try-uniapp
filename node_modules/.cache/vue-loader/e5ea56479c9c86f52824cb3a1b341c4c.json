{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/srmSupplierTab/Tab/tab2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/srmSupplierTab/Tab/tab2.vue","mtime":1603420637324},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\"\nimport dialogFactory from \"./dialog/dialogFactory\"\nimport * as api from \"@/api/project/srm/supplierManagement/supplierRegister\"\nimport { mapState } from \"vuex\"\nimport ImportFile from \"@/components/srmImportFile\"\n\nexport default {\n    name: \"jsgl\",\n    components: { Pagination, dialogFactory, ImportFile },\n    props: ['rowData'],\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            total: 0,\n            rowId: null,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 15\n            },\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            tableKey: 0, //表格索引\n            importDialogVisible: false,\n            modalNo: 'EXTP-BAS-0011'  // 导入模板编号\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pa7: state => state.dict.dt_srm_pa7,\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pa7\"])\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 50\n        },\n        setTabData (val) {\n            this.list = val\n        },\n        //新增编辑删除成功之后刷新表格数据\n        getFreshList () {\n            let b = {\n                rowId: this.rowId\n            }\n            api.updateRecords(b).then(res => {\n                let options = [this.dt_srm_pa7]\n                res.data.factoryInfoDTOList = this.$myFun.srmCodeToName(res.data.factoryInfoDTOList, options, ['type'])\n                this.list = res.data.factoryInfoDTOList\n                // this.list.forEach((item)=>{\n                //     if(!item.typeCN && !item.creatorName){\n                //         item.typeCN = item.type\n                //         item.creatorName = item.creator\n                //     }\n                // })\n                 this.list.forEach((item)=>{\n                    if(!item.creatorName){\n                        item.creatorName = item.creator\n                    }\n                })\n            })\n        },\n        //获取表格数据\n        getList (row) {\n            this.$refs.factory.temp.supplierId = row.rowId\n            this.rowId = row.rowId\n            let a = {\n                rowId: row.rowId\n            }\n            api.updateRecords(a).then(res => {\n                console.log(res)\n                let options = [this.dt_srm_pa7]\n                res.data.factoryInfoDTOList = this.$myFun.srmCodeToName(res.data.factoryInfoDTOList, options, ['type'])\n                \n                this.list = res.data.factoryInfoDTOList\n                // 由于导入的时候类型并不是code形式，所以按以往的根据数据字典转换失效，这里直接将值赋予typeCN\n                // this.list.forEach((item)=>{\n                //     if(!item.typeCN && !item.creatorName){\n                //         item.typeCN = item.type\n                //         item.creatorName = item.creator\n                //     }\n                // })\n                this.list.forEach((item)=>{\n                    if(!item.creatorName){\n                        item.creatorName = item.creator\n                    }\n                })\n            })\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.$refs.factory.resetTemp()\n            this.$nextTick(() => {\n                this.$refs.factory.$refs['dataForm'].clearValidate()\n            })\n            this.$refs.factory.list = this.list\n            this.$refs.factory.dialogStatus = 'create'\n            this.$refs.factory.dialogVisible = true\n        },\n        handleUpdate (index, val) {\n            //编辑按钮单击事件方法\n            this.$refs.factory.dialogStatus = 'update'\n            this.$refs.factory.dialogVisible = true\n            this.$refs.factory.list = this.list\n            this.$refs.factory.temp = val\n        },\n        handleDelete (index, val) {\n            //删除按钮单击事件方法\n            api.deleteRecordfactory(this.$refs.factory.temp.supplierId, val.rowId).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '删除成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getFreshList()\n            })\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, \"selected\") //单击行绑定点击事件\n        },\n        // 导入\n        handleImport () {\n            this.importDialogVisible = true\n            this.$nextTick(() => {\n                // 将rowId传给 srmImportFile\n                this.$refs.importDialog.supplierId = this.rowData.rowId\n                this.$refs.importDialog.creator = this.rowData.creatorName\n                // 传递模板下载文件名称\n                this.$refs.importDialog.excelName = '工厂信息.xlsx'\n                this.$refs.importDialog.getList()\n            })\n        },\n        // // 导出\n        // handleExport () {\n        //     this.downloadLoading = true\n        //     import('@/vendor/Export2Excel').then(excel => {\n        //         const tHeader = ['类型', '工厂名称', '工厂地址', '联系人', '联系电话', '联系地址', '邮箱', '传真', '占地面积', '创建人', '创建时间', '修改人', '修改时间']\n        //         const filterVal = ['type', 'name', 'address', 'contacts', 'telephone', 'contactAddress', 'email', 'fax', 'area', 'creatorName', 'createTime', 'updatorName', 'updateTime']\n        //         const data = this.formatJson(filterVal, this.list)\n        //         excel.export_json_to_excel({\n        //             header: tHeader,\n        //             data,\n        //             filename: '工厂信息导出'\n        //         })\n        //         this.downloadLoading = true\n        //     })\n        // },\n        // formatJson (filterVal, jsonData) {\n        //     return jsonData.map(v => filterVal.map(j => {\n        //         if (j === 'timestamp') {\n        //             return\n        //         } else {\n        //             return v[j]\n        //         }\n        //     }))\n        // },\n        // 弹框右上角关闭\n        handleClose () {\n            this.importDialogVisible = false\n            // 清空已选文件列表\n            this.$refs.importDialog.fileList = []\n            this.getFreshList()\n        }\n    }\n};\n",null]}