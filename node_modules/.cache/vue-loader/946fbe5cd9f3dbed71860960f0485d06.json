{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/processRoute/processRouteMaintain/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/processRoute/processRouteMaintain/index.vue","mtime":1596610933510},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/dataBase/processMaintain'\nimport Pagination from '@/components/Pagination'\nimport caigou from '@/components/Select/caigou'\nimport { mapState } from 'vuex' // 基本数据引入\nimport throttle from 'lodash/throttle'\nexport default {\n    name: 'pricessRouteMaintain',\n    components: { Pagination, caigou },\n    data () {\n        return {\n            list: null,\n            unitsList: null,\n            linesList: null,\n            relationList: null,\n            unRelationList: null,\n            total: 0,\n            relationTotal: 0,\n            unRelationTotal: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                createTime: undefined,\n                updateTime: undefined,\n                creator: undefined,\n                routeCode: undefined,\n                routeName: undefined,\n                updator: undefined,\n                factoryCode: undefined,\n                productCode: undefined\n            },\n            relationListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                routeCode: undefined\n            },\n            unRelationListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                processType: undefined,\n                routeCode: undefined\n            },\n            routeCode: undefined,\n            temp: {\n                remark: undefined,\n                productCode: undefined,\n                routeCode: undefined,\n                routeName: undefined,\n                factoryCode: undefined,\n                factoryName: undefined,\n                workShopCode: undefined,\n                productLineCode: undefined\n            },\n            dialogFormVisible: false,\n            dialogRelationFormVisible: false,\n            dialogStatus: '',\n            selectlistRow: null, //主表选择的数据\n            selectlistRelationRow: null, //从表选择的数据\n            selecListtUnRelationRow: null, //弹窗选择的数据\n            tableKey: [0, 1, 2],\n            rules: {\n                routeCode: [\n                    {\n                        required: true,\n                        message: '工艺编码不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                routeName: [\n                    {\n                        required: true,\n                        message: '工艺名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                productCode: [\n                    {\n                        required: true,\n                        message: '请选择产品名称',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                workShopCode: [\n                    {\n                        required: true,\n                        message: '请选择车间名称',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                productLineCode: [\n                    {\n                        required: true,\n                        message: '请选择产线名称',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                factoryCode: [\n                    {\n                        required: true,\n                        message: '请选择工厂名称',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_process_step_type: state => state.emsDict.dt_process_step_type,\n            dt_cp_product_list: state =>\n                state.businessComponent.dt_cp_product_list\n        })\n    },\n    mounted () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_process_step_type'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_cp_product_list',\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    destroyed () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_process_step_type'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_cp_product_list',\n        ])\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        getName (name) {\n            this.temp.factoryName = name\n        },\n        bug () {\n            this.$forceUpdate()\n        },\n        factoryChange (val) {\n            api.queryUnits(val).then(res => {\n                this.$set(this.temp, 'workShopCode', null)\n                this.$set(this.temp, 'productLineCode', null)\n                this.unitsList = res.data\n            })\n        },\n        workShopChange (val) {\n            api.queryLines(val).then(res => {\n                this.$set(this.temp, 'productLineCode', null)\n                this.linesList = res.data\n            })\n        },\n        getList () {\n            api.queryRoute(this.listQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        // 查询已关联工序\n        getRelationList () {\n            this.relationListQuery.routeCode = this.selectlistRow.routeCode\n            api.queryRelation(this.relationListQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.relationList = res.data.list\n                this.relationTotal = res.data.pages.count\n            })\n        },\n        // 查询未关联工序\n        getUnRelationList () {\n            this.unRelationListQuery.routeCode = this.selectlistRow.routeCode\n            api.queryUnRelation(this.unRelationListQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.unRelationList = res.data.list\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        deleteQuery () {\n            this.listQuery.currentPage = 1\n            this.listQuery.routeCode = undefined\n            this.listQuery.routeName = undefined\n            this.listQuery.factoryCode = undefined\n            this.listQuery.productCode = undefined\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n            if (this.selectlistRow) {\n                this.getRelationList()\n            }\n        },\n        selectRelationRow (val) {\n            let data = []\n            val.forEach(i => {\n                data.push(i.rowId)\n            })\n            this.selectlistRelationRow = data\n        },\n        selectUnRelationRow (val) {\n            this.selecListtUnRelationRow = val.map(res => {\n                return {\n                    stepCode: res.stepCode,\n                    routeCode: this.relationListQuery.routeCode\n                }\n            })\n        },\n        handleUpdate () {\n            if (this.selectlistRow) {\n                this.temp = JSON.parse(JSON.stringify(this.selectlistRow))\n                this.routeCode = this.selectlistRow.routeCode\n                api.getRouteCode(this.temp.routeCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                })\n                api.queryUnits(this.temp.factoryCode).then(res => {\n                    this.unitsList = res.data\n                })\n                api.queryLines(this.temp.workShopCode).then(res => {\n                    this.linesList = res.data\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update: throttle(\n            function () {\n                //编辑\n                this.$refs['addref'].validate(valid => {\n                    if (valid) {\n                        api.updateRoute(this.routeCode, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        create: throttle(\n            function () {\n                // 新增\n                this.$refs.addref.validate(valid => {\n                    if (valid) {\n                        api.createRoute(this.temp).then(() => {\n                            // this.handleChange();\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //删除列表\n        handleDelete () {\n            if (this.selectlistRow) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        ids[0] = this.selectlistRow.routeCode\n                        api.deleteRoute(ids).then(() => {\n                            this.getList()\n                            this.relationList = []\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        resetTemp () {\n            this.temp = {}\n        },\n        handleClose (val) {\n            if (!val) {\n                this.$refs.addref.resetFields()\n            }\n            this.resetTemp()\n        },\n        // 根据工序分类查询未关联数据\n        handleUnRelationQuery () {\n            this.unRelationListQuery.currentPage = 1\n            this.getUnRelationList()\n        },\n        deleteUnRelationQuery () {\n            this.unRelationListQuery.currentPage = 1 //processType\n            this.unRelationListQuery.processType = undefined //\n            this.getUnRelationList()\n        },\n        // 关联\n        handleRelation () {\n            if (this.selectlistRow) {\n                this.unRelationListQuery.processType = undefined\n                this.unRelationListQuery.routeCode = this.selectlistRow.routeCode\n                this.getUnRelationList()\n                this.dialogRelationFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // 保存关联\n        addRelation: throttle(\n            function () {\n                if (this.selecListtUnRelationRow.length) {\n                    api.updateRelate(this.selecListtUnRelationRow)\n                        .then(() => {\n                            this.getRelationList()\n                            this.getUnRelationList()\n                            this.$message({\n                                title: '成功',\n                                message: '关联成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.dialogRelationFormVisible = false\n                        })\n                        .catch(error => {\n                            this.$message({\n                                type: 'info',\n                                message: error\n                            })\n                        })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择一条信息',\n                        type: 'warning'\n                    })\n                }\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 删除关联\n        deleteRelate: throttle(\n            function () {\n                if (this.relationListQuery.routeCode) {\n                    if (this.selectlistRelationRow.length) {\n                        api.deleteRelate(\n                            this.relationListQuery.routeCode,\n                            this.selectlistRelationRow\n                        ).then(() => {\n                            this.getRelationList()\n                            this.$message({\n                                title: '成功',\n                                message: '成功取消关联',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        this.$message({\n                            title: '警告',\n                            message: '请选择一条已关联信息',\n                            type: 'warning'\n                        })\n                    }\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择一条工艺',\n                        type: 'warning'\n                    })\n                }\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        )\n    }\n}\n",null]}