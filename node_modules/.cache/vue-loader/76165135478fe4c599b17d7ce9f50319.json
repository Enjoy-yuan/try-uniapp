{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/modelLedger/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/modelLedger/index.vue","mtime":1596610933519},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/deviceManagement/modelLedger'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\n\nexport default {\n    name: 'equipmentModel',\n    components: { Pagination },\n    computed: {\n        ...mapState({\n            dt_work_workCenterLevel: state =>\n                state.businessComponent.dt_work_workCenterLevel,\n            dt_nh_energyType_list: state =>\n                state.businessComponent.dt_nh_energyType_list,\n            dt_sb_modelDetail_list: state =>\n                state.businessComponent.dt_sb_modelDetail_list,\n            dt_sb_meterType_list: state =>\n                state.businessComponent.dt_sb_meterType_list,\n            dt_sb_meterKind_list: state =>\n                state.businessComponent.dt_sb_meterKind_list,\n            dt_equip_type: state => state.emsDict.dt_equip_type\n        })\n    },\n    data () {\n        var energyItemCode = (rule, value, callback) => {\n            if (!value && Boolean(this.temp.equipTypeCode == 'meter')) {\n                callback(new Error('请选择能源分项名称'))\n            } else {\n                callback()\n            }\n        }\n        var energyTypeCode = (rule, value, callback) => {\n            if (!value && Boolean(this.temp.equipTypeCode == 'meter')) {\n                callback(new Error('请选择能源分类名称'))\n            } else {\n                callback()\n            }\n        }\n        var meterKindCode = (rule, value, callback) => {\n            if (!value && Boolean(this.temp.equipTypeCode == 'meter')) {\n                callback(new Error('请选择仪表类别'))\n            } else {\n                callback()\n            }\n        }\n        var meterTypeCode = (rule, value, callback) => {\n            if (!value && Boolean(this.temp.equipTypeCode == 'meter')) {\n                callback(new Error('请选择仪表型号'))\n            } else {\n                callback()\n            }\n        }\n        return {\n            list: null,\n            subList: null,\n            unRelationData: null,\n            energyItemList: null,\n            workCenterList: null,\n            meterTypeList: null,\n            selectQuipTypeCode: undefined,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                equipTypeCode: undefined,\n                modelName: undefined,\n                energyTypeCode: undefined\n            },\n            subListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                modelCode: undefined\n            },\n            temp: {\n                modelCode: undefined,\n                modelName: undefined,\n                factoryAddress: undefined,\n                meterAddr: undefined,\n                meterRatio: undefined,\n                meterTypeCode: undefined, //仪表型号名称 dt_sb_meterType_list\n                meterKindCode: undefined,\n                useInstructions: undefined,\n                instructions: undefined,\n                gatherPeriod: undefined,\n                equipTypeCode: undefined, // 设备类型 equipType\n                remark: undefined,\n                energyItemCode: undefined,\n                energyTypeCode: undefined,\n                stepCode: undefined, //设备台账名称\n                belongEquipCode: undefined,\n                workCenterCode: undefined,\n                workCenterLevel: undefined\n            },\n            dialogFormVisible: false,\n            dialogRelation: false,\n            dialogStatus: '',\n            tableKey: [0, 1, 2],\n            total: 0,\n            subTotal: 0,\n            theight: 0, //表格高度\n            rules: {\n                modelCode: [\n                    {\n                        required: true,\n                        message: '编码不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                modelName: [\n                    {\n                        required: true,\n                        message: '名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                equipTypeCode: [\n                    {\n                        required: true,\n                        message: '请选择设备类型',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: [\n                    { max: 100, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                energyItemCode: [\n                    {\n                        massage: '请选择能源分项名称',\n\n                        trigger: 'blur'\n                    },\n                    {\n                        validator: energyItemCode,\n                    }\n                ],\n                energyTypeCode: [\n                    {\n                        message: '请选择能源分类名称',\n                        trigger: 'blur'\n                    },\n                    {\n                        validator: energyTypeCode,\n                    }\n                ],\n                meterKindCode: [\n                    {\n                        message: '请选择仪表类别',\n                        trigger: 'blur'\n                    },\n                    {\n                        validator: meterKindCode,\n                    }\n                ],\n                meterTypeCode: [\n                    {\n                        message: '请选择仪表型号',\n                        trigger: 'blur'\n                    },\n                    {\n                        validator: meterTypeCode,\n                    }\n                ],\n                workCenterLevel: [\n                    {\n                        required: true,\n                        message: '请选择工作中心等级',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                workCenterCode: [\n                    {\n                        required: true,\n                        message: '请选择工作中心',\n                        trigger: ['blur', 'change']\n                    }\n                ]\n            }\n        }\n    },\n    watch: {\n        dt_equip_type: function () {\n            this.list.map((v, i) => {\n                v.serial = i + 1\n                this.dt_equip_type.forEach(item => {\n                    if (item.dictItemKey == v.equipTypeCode) {\n                        v.equipTypeName = item.dictItemValue\n                    }\n                })\n            })\n        },\n        'temp.equipTypeCode' (val) {\n            if (val == 'product') {\n                this.$set(\n                    this.temp,\n                    'workCenterLevel',\n                    'dt_workcenter_class_line'\n                )\n                // this.temp.workCenterLevel = 'dt_workcenter_class_line'\n                let par = {\n                    workCenterLevel: 'dt_workcenter_class_line'\n                }\n                // this.temp.workCenterCode = undefined\n                api.queryWorkCenter(par).then(res => {\n                    this.workCenterList = JSON.parse(JSON.stringify(res.data))\n                    let arr = this.workCenterList.map(i => {\n                        return i.unitCode == this.temp.workCenterCode\n                    })\n                    if (!arr.includes(true)) {\n                        this.temp.workCenterCode = undefined\n                    }\n                })\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_work_workCenterLevel',\n            'dt_nh_energyType_list',\n            'dt_sb_modelDetail_list',\n            'dt_sb_meterType_list',\n            'dt_sb_meterKind_list'\n        ])\n        this.$store.dispatch('emsDict/getDicData', ['dt_equip_type'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n\n    },\n    destroyed () {\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_work_workCenterLevel',\n            'dt_nh_energyType_list',\n            'dt_sb_modelDetail_list',\n            'dt_sb_meterType_list',\n            'dt_sb_meterKind_list'\n        ])\n        this.$store.dispatch('emsDict/getDicData', ['dt_equip_type'])\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        bug () {\n            this.$forceUpdate()\n        },\n        getList () {\n            api.queryModelDetail(this.listQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                    this.dt_equip_type.forEach(item => {\n                        if (item.dictItemKey == v.equipTypeCode) {\n                            v.equipTypeName = item.dictItemValue\n                        }\n                    })\n                })\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getSubList () {\n            api.queryModelDataItem(this.subListQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.subList = res.data.list\n                this.subTotal = res.data.pages.count\n            })\n        },\n        getUnRelationList () {\n            let query = {\n                modelCode: this.selectlistRow.modelCode\n            }\n            api.queryUnModelData(query).then(res => {\n                res.data.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.unRelationData = res.data\n            })\n        },\n        getEnergyItem () {\n            // 查询能耗分类\n            let par = {\n                energyTypeCode: this.temp.energyTypeCode\n            }\n            api.queryEnergyItem(par).then(res => {\n                this.energyItemList = res.data\n                let arr = this.energyItemList.map(i => {\n                    return i.energyItemCode == this.temp.energyItemCode\n                })\n                if (!arr.includes(true)) {\n                    this.temp.energyItemCode = undefined\n                }\n            })\n        },\n        getMeterType () {\n            // 查询型号queryMeterType\n            let par = {\n                meterCode: this.temp.meterKindCode\n            }\n            api.queryMeterType(par).then(res => {\n                this.meterTypeList = res.data\n                let arr = this.meterTypeList.map(i => {\n                    return i.meterTypeCode == this.temp.meterTypeCode\n                })\n                if (!arr.includes(true)) {\n                    this.temp.meterTypeCode = undefined\n                }\n            })\n        },\n        getWorkCenter () {\n            // 查询工作中心\n            let par = {\n                workCenterLevel: this.temp.workCenterLevel\n            }\n            api.queryWorkCenter(par).then(res => {\n                this.workCenterList = res.data\n                let arr = this.workCenterList.map(i => {\n                    return i.unitCode == this.temp.workCenterCode\n                })\n                if (!arr.includes(true)) {\n                    this.temp.workCenterCode = undefined\n                }\n            })\n            this.$forceUpdate()\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        deleteQuery () {\n            // 清除查询条件\n            this.listQuery.currentPage = 1\n            this.listQuery.equipTypeCode = undefined\n            this.listQuery.modelName = undefined\n            this.listQuery.energyTypeCode = undefined\n            this.getList()\n        },\n        handleCreate () {\n            //新增弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create: throttle(\n            function () {\n                this.$forceUpdate()\n                this.$nextTick(() => {\n                    this.$refs.temp.validate(valid => {\n                        if (valid) {\n                            api.createModelDetail(this.temp).then(() => {\n                                this.getList()\n                                this.dialogFormVisible = false\n                                this.$refs.temp.resetFields() //清空表单\n                                this.$notify({\n                                    title: '成功',\n                                    message: '新增成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                            })\n                        } else {\n                            return false\n                        }\n                    })\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        ids[0] = this.selectlistRow.modelCode\n                        api.deleteModelDetail(ids).then(() => {\n                            this.getList()\n                            this.getSubList()\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleUpdate () {\n            //编辑弹窗\n            if (this.selectlistRow) {\n                this.temp = JSON.parse(JSON.stringify(this.selectlistRow))\n                if (this.temp.equipTypeCode == 'meter') {\n                    this.getMeterType()\n                    this.getEnergyItem()\n                }\n                this.getWorkCenter()\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update: throttle(\n            function () {\n                //编辑\n                this.$refs['temp'].clearValidate()\n                this.$refs['temp'].validate(valid => {\n                    if (valid) {\n                        api.updateModelDetail(\n                            this.selectlistRow.modelCode,\n                            this.temp\n                        ).then(() => {\n                            this.getList()\n                            this.getSubList()\n                            this.dialogFormVisible = false\n                            this.$refs.temp.resetFields() //清空表单\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleRelationData () {\n            //关联数据采集项\n            if (this.selectlistRow) {\n                this.getUnRelationList()\n                this.dialogRelation = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleUnRelationData () {\n            //取消关联\n            if (this.selectlistRow) {\n                if (this.subSelectRow && this.subSelectRow.length >= 1) {\n                    let ids = []\n                    this.subSelectRow.forEach(i => {\n                        ids.push(i.modelDataItemId)\n                    })\n                    api.deleteModelDataItem(ids).then(() => {\n                        this.getSubList()\n                        this.$notify({\n                            title: '成功',\n                            message: '成功取消关联',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        resetTemp () {\n            this.temp = {}\n        },\n        setTableHeight () {\n            //表格高度计算\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        // 获取主表选中时的数据\n        handleSelectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n            if (this.selectlistRow) {\n                this.selectQuipTypeCode = this.selectlistRow.equipTypeCode\n                this.subListQuery.modelCode = this.selectlistRow.modelCode\n                this.getSubList()\n            }\n        },\n        // 获取从表选中时的数据\n        handleSubSelectRow (val) {\n            this.subSelectRow = val\n        },\n        // 未关联数据中选取的数据\n        handleRelationRow (val) {\n            this.unRelationListRow = val\n        },\n        // 添加关联\n        Relation () {\n            if (this.unRelationListRow && this.unRelationListRow.length >= 1) {\n                let ids = []\n                this.unRelationListRow.forEach(i => {\n                    ids.push(i.dataItemCode)\n                })\n                api.relateSave(this.selectlistRow.modelCode, ids).then(() => {\n                    this.getUnRelationList()\n                    this.getSubList()\n                    this.dialogRelation = false\n                    this.$notify({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            }\n            //\n        },\n        handleClose (val) {\n            if (!val) {\n                this.$refs.temp.resetFields()\n            }\n            this.resetTemp()\n        }\n    }\n}\n",null]}