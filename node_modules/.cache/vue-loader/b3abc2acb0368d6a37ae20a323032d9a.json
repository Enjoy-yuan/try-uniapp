{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/reviewFeedback/dialog/dialogFeedback.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/reviewFeedback/dialog/dialogFeedback.vue","mtime":1596610933946},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import { createRecords, updateRecords } from \"@/api/productionMaterial/hand_pull_material\";\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport { mapState, mapGetters } from \"vuex\"\n\n\nexport default {\n    name: 'dialogAdd',\n    components: { caiGou },\n    props: ['title'],\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            isEdit: false,\n            iscgEdit: false,//采购是否可编辑\n            formData: {\n                rowId: null,\n                supplierName: null,\n                evaluateUser: null,\n                evaluateUserName: null,\n                investigateUser: null,\n                taskUser: null,\n                taskUserName: null,\n                investigate: false,\n                feedback: false,\n                investigateNo: null,\n                platformSeries: null,\n                orgCode: null,\n                orgName: null,\n                proposalNo: null,\n                materielClass: null,\n                materielClassName: null,\n                department: null,\n                kcreason: null,\n                purpose: null,\n                reason: null\n            },\n            // proposalItemDTOs: [],\n            listSelected: null,//已选项\n            selectRowData: null,\n            dialogVisible: false,\n            rules: {\n                investigateUser: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                reason: [\n                    { max: 128, message: '长度应小于128个字符', trigger: 'blur' }\n                ]\n            },\n            formConfig:\n                [\n                    { type: 'checkbox', label: '是否考察', prop: 'investigate', width: '0' },\n                    { type: 'checkbox', label: '是否反馈', prop: 'feedback', width: '0' },\n                    { type: 'commonInput', label: '考察计划号', prop: 'investigateNo', width: '' },\n                    { type: 'commonInput', label: '采购组织', prop: 'orgName', width: '', copmNum: 0 },\n                    { type: 'commonInput', label: '变更/提案号', prop: 'proposalNo', width: '' },\n                    { type: 'commonInput', label: '供应商名称', prop: 'supplierName', width: '' },\n                    { type: 'commonInput', label: '物料分类', prop: 'materielClassName', width: '' },\n                    { type: 'commonInput', label: '考察部门', prop: 'department', width: '' },\n                    { type: 'commonInput', label: '考察人', prop: 'investigateUser', width: '' },\n                    { type: 'inputBtnPerson', code: 'evaluateUser', name: 'evaluateUserName', title: '评价人选择', label: '评价人', prop: 'evaluateUserName', width: '' },\n                    { type: 'textarea', label: '考察原因', prop: 'kcreason', width: '800px', rows: \"2\" },\n                    { type: 'textarea', label: '考察目的', prop: 'purpose', width: '800px', rows: \"2\" },\n                    { type: 'textarea', label: '考察理由', prop: 'reason', width: '800px', rows: \"2\" }\n                ]\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pad: state => state.dict.dt_srm_pad,//平台定位\n        }),\n        ...mapGetters([\n            'domainCode',\n            'domainCodeName'\n        ])\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pad\"])\n    },\n    watch: {\n        'rangeDate' (value) {\n            if (value) {\n                this.listQuery.startDate = value[0]\n                this.listQuery.endDate = value[1]\n            }\n        }\n    },\n    methods: {\n        handleConfirm () {\n            this.$refs.refForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存反馈吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let cdata = {\n                            feedbackItemDTO: {\n                                rowId: this.formData.rowId,\n                                investigateNo: this.formData.investigateNo,\n                                investigateUser: this.formData.investigateUser,\n                                evaluateUser: this.formData.evaluateUser,\n                                evaluateUserName: this.formData.evaluateUserName,\n                                investigate: this.formData.investigate,\n                                feedback: this.formData.feedback,\n                                reason: this.formData.reason\n                            },\n                            method: \"FEEDBACK\",\n                        }\n                        this.$emit('handleDialogClick', cdata)\n                        this.dialogVisible = false\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n                }\n            })\n        },\n        // setInvestigateUser (code, name, val) {\n        //     this.$set(this.formData, code, val[0])\n        //     this.$set(this.formData, name, val[1])\n        // },\n        initForm (row) {\n            for (let key in this.formData) {\n                for (let par in row) {\n                    if (key === par) {\n                        console.log(key, row[key])\n                        if (row[key]) {\n                            this.$set(this.formData, key, row[key])\n                        }\n                    }\n                }\n            }\n        },\n        showPerson (code, name, title) {\n            this.$emit('showPerson', code, name, title)\n        }\n    }\n}\n",null]}