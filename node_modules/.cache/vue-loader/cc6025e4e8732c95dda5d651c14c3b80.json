{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/interfaceDefinition/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/interfaceDefinition/index.vue","mtime":1596610934242},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/system/interfaceDefinition\";\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from 'vuex';\nimport {  getDomainId } from \"@/utils/auth\";\n\n    export default {\n        name: \"interfaceDefinition\",\n        components: { Pagination},\n        data() {\n            return {\n                list: null,\n                total: 0,\n                theight: 0,//表格高度\n                listMQ: [],\n                listRFC:[],\n                listWeb:[],\n                listFTP:[],\n                totalMQ: 0,\n                totalRFC:0,\n                totalWeb:0,\n                flag:false,\n                tableA:'',\n                dialogFormVisiblepz:false,\n                listQuery: {         \n                    currentPage: 1,\n                    pageSize: 15,          \n                },\n                listQueryMQ: {         \n                    currentPage: 1,\n                    pageSize: 10,          \n                },\n                listQueryRFC: {         \n                    currentPage: 1,\n                    pageSize: 10,          \n                },\n                listQueryWeb: {         \n                    currentPage: 1,\n                    pageSize: 10,          \n                },\n                listQueryFTP: {         \n                    currentPage: 1,\n                    pageSize: 10,          \n                },\n                taskUpdateStatusDTO :{\n                    jobGroup:undefined,\n                    jobName:undefined,\n                    rowId:undefined,\n                    status:undefined\n                },\n                temp: {\n                    isEffective:1,\n                    remark: undefined,\n                    creator:getDomainId(),\n                    updator:getDomainId(),\n                    rowId:undefined\n                },\n                dto:{\n                    configurationTableFields:null,\n                    businessProgress:undefined,\n                    interfaceObject:undefined,\n                    interfaceProgram:undefined,\n                    interfaceDefinitionId:undefined\n                },\n                dtf:{\n                    configurationTableFields:null,\n                    businessProgress:undefined,\n                    interfaceObject:undefined,\n                    interfaceProgram:undefined,\n                    interfaceDefinitionId:undefined,\n                    creator:getDomainId(),\n                    updator:getDomainId(),\n                    bak:undefined,\n                    folder:undefined,\n                    ftpAddress:undefined,\n                    separators:undefined,\n                },\n                dta:{\n                    // configurationTables:undefined,\n                    businessProgress:undefined,\n                    creator:getDomainId(),\n                    updator:getDomainId(),\n                    function:undefined,\n                    interfaceDefinitionId:undefined,\n                    interfaceObject:undefined,\n                    interfaceProgram:undefined,\n                    password:undefined,\n                    server:undefined,\n                    rowId:undefined\n                },\n                dtz:{\n                    businessProgress:undefined,\n                    creator:getDomainId(),\n                    updator:getDomainId(),\n                    function:undefined,\n                    interfaceDefinitionId:undefined,\n                    interfaceObject:undefined,\n                    interfaceProgram:undefined,\n                    password:undefined,\n                    server:undefined,\n                    rowId:undefined\n                },\n                colorCode: undefined,\n                selectCode: [],\n                dialogFormVisible: false,\n                explainDialogFormVisible:false,\n                logDialogFormVisible:false,\n                dialogFormVisibleFTP:false,\n                dialogFormVisibleRFC:false,\n                dialogStatus: \"\",\n                tableKey: 0,\n                rules: {\n                \n                }\n            };\n        },\n        computed:{\n            ...mapState({\n                dt_Interface_mode:state=>state.dict.dt_Interface_mode,\n                dt_data_type:state=>state.dict.dt_data_type,\n                dt_Interface_type:state=>state.dict.dt_Interface_type,\n                dt_Interface_direction:state=>state.dict.dt_Interface_direction,\n                dt_separator_symbol:state=>state.dict.dt_separator_symbol\n            })\n        },\n        mounted(){\n            this.$store.dispatch(\"dict/getDicData\", [\n               \n                \"dt_Interface_mode\",\n                \"dt_data_type\",\n                \"dt_Interface_type\",\n                \"dt_Interface_direction\",\n                \"dt_separator_symbol\"\n            ]);\n            this.setTableHeight();\n            //表格高度自适应\n            window.onresize = () => {\n                this.setTableHeight()\n            };\n            this.getList();\n        },\n        created() {\n            this.getList();\n        },\n        filters:{\n             statusFilter:function(a){\n                if(a===1){\n                    return \"有效\"\n                }else{\n                    return \"无效\"\n                }\n             }\n        },\n        methods: {\n            getList() {\n                api.queryRecords(this.listQuery).then(res => {\n                    this.list = res.data.list;\n                    this.total = res.data.pages.count;\n                });\n            },\n            //表格高度计算\n            setTableHeight () {\n                this.theight = this.$myFun.getSingleTbHeight();\n            },\n            handleQuery() {//查询\n                this.listQuery.currentPage = 1;\n                this.getList();\n            },\n            checked(){\n                this.$refs.tb.toggleRowSelection(this.listRFC[0],true);//官网方法，重点\n            },\n            handleconfigure(){ //配置\n                if(this.selectlistRow){\n                    if(this.selectlistRow.interfaceMode=='MQ'){\n                        this.dialogFormVisiblepz = true;\n                        api.queryRecordpz(this.selectlistRow.rowId,this.selectlistRow.interfaceMode).then(res=>{\n                            res.interfaceCode=this.selectlistRow.interfaceCode\n                            res.interfaceName=this.selectlistRow.interfaceName\n                            res.dataType=this.selectlistRow.dataType\n                            res.interfaceMode=this.selectlistRow.interfaceMode\n                            this.temp=res.data\n                            this.listMQ=[]\n                            if(res.data.configurationTableFields){\n                                this.listMQ=res.data.configurationTableFields\n                            }\n                            this.listMQ.forEach((item,index)=>{\n                                item.number = (this.listQueryRFC.currentPage-1)*this.listQueryRFC.pageSize+index+1\n                            })   \n                        })      \n                    }else if(this.selectlistRow.interfaceMode=='FTP'){\n                        api.queryRecordpz(this.selectlistRow.rowId,this.selectlistRow.interfaceMode).then(res=>{\n                            res.interfaceCode=this.selectlistRow.interfaceCode\n                            res.interfaceName=this.selectlistRow.interfaceName\n                            res.dataType=this.selectlistRow.dataType\n                            res.interfaceMode=this.selectlistRow.interfaceMode\n                            this.temp=res.data\n                            // this.temp.rowId=res.rowId \n                            this.listFTP=[]\n                            if(res.data.configurationTableFields){\n                                this.listFTP=res.data.configurationTableFields\n                            }\n                            if(this.listFTP){\n                                this.listFTP.forEach((item,index)=>{\n                                    item.number = (this.listQueryFTP.currentPage-1)*this.listQueryFTP.pageSize+index+1\n                                })\n                            }\n                            \n                        })\n                        this.dialogFormVisibleFTP=true\n                    }else if(this.selectlistRow.interfaceMode=='RFC'||this.selectlistRow.interfaceMode=='WebService'){\n                        this.dialogStatus=\"RFC\"\n                        api.queryRecordpz(this.selectlistRow.rowId,this.selectlistRow.interfaceMode).then(res=>{\n                            res.interfaceCode=this.selectlistRow.interfaceCode\n                            res.interfaceName=this.selectlistRow.interfaceName\n                            res.dataType=this.selectlistRow.dataType\n                            res.interfaceMode=this.selectlistRow.interfaceMode\n                            this.temp=res.data\n                            if(res.data.configurationTables){\n                                this.listRFC=res.data.configurationTables\n                            }else{\n                                this.listRFC=[]\n                            }\n                            if(this.listRFC){\n                                this.listRFC.forEach((item,index)=>{\n                                item.number = (this.listQueryRFC.currentPage-1)*this.listQueryRFC.pageSize+index+1\n                            })\n                            this.$nextTick(function(){\n                                this.checked()\n                            })\n                            }\n                            if(this.listWeb){\n                                 this.listWeb.forEach((item,index)=>{\n                                item.number = (this.listQueryRFC.currentPage-1)*this.listQueryRFC.pageSize+index+1\n                            })\n                            }    \n                        })\n                        this.dialogFormVisibleRFC = true;\n                    }\n                    }else{\n                        this.$message({\n                            title: \"警告\",\n                            message: \"请选择一条信息\",\n                            type: \"warning\"\n                        });\n                } \n            },\n            handleAttributeFTP(){ //FTP配置新增\n                let newValue = {\n                    number:'',\n                    attributeName: '',\n                    attributeDesc:'',\n                    tableField: '',\n                    seq: '',\n                };\n                this.listFTP.push(newValue);\n                this.listFTP.forEach((item,index)=>{\n                    item.number = (this.listQueryFTP.currentPage-1)*this.listQueryFTP.pageSize+index+1\n                })\n            },\n            handleAttribute(){ //MQ配置新增\n                let newValue = {\n                    number:'',\n                    attributeName: '',\n                    attributeDesc:'',\n                    tableField: '',\n                    filedDesc: '',\n                };\n                this.listMQ.push(newValue);\n                this.listMQ.forEach((item,index)=>{\n                 item.number = (this.listQueryMQ.currentPage-1)*this.listQueryMQ.pageSize+index+1\n                })\n            },\n            handledel(){ //MQ配置删除\n                if (this.selectlistRowMQ) {\n                        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }).then(() => {\n                        this.listMQ = this.listMQ.filter(item => {\n                        let isD = true;\n                        this.selectlistRowMQ.forEach((itemr) => {\n                            if (itemr.rowId === item.rowId) {\n                            isD = false;\n                            }\n                        });\n                        return isD;\n                        });\n                        this.$message({\n                        type: \"success\",\n                        message: \"删除成功\"\n                        });\n                    }).catch(() => {\n                        this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                        });\n                    });\n                } else {\n                    this.$message.warning(\"请勾选记录！\");\n                    return;\n                }\n            },\n            handledelFTP(){ //FTP配置删除\n                if (this.selectlistRowFTP) {\n                        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }).then(() => {\n                        this.listFTP = this.listFTP.filter(item => {\n                        let isD = true;\n                        this.selectlistRowFTP.forEach((itemr) => {\n                            if (itemr.rowId === item.rowId) {\n                            isD = false;\n                            }\n                        });\n                        return isD;\n                        });\n                        this.$message({\n                        type: \"success\",\n                        message: \"删除成功\"\n                        });\n                    }).catch(() => {\n                        this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                        });\n                    });\n                } else {\n                    this.$message.warning(\"请勾选记录！\");\n                    return;\n                }\n            },\n            updateFTP(){ //配置FTP确定按钮方法\n                this.listFTP.map(v=>{\n                    v.interfaceDefinitionId=this.selectlistRow.rowId\n                    return v\n                })\n                this.dtf=this.temp\n                this.dtf.configurationTableFields=this.listFTP\n                this.dtf.interfaceDefinitionId=this.selectlistRow.rowId\n                api.addRecordFTP(this.dtf).then(()=>{\n                    this.dialogFormVisibleFTP = false\n                    this.$message({\n                        title: \"成功\",\n                        message: \"配置成功\",\n                        type: \"success\",\n                        duration: 2000\n                    });\n                })\n            },\n            updateMQ(){ //配置MQ确定按钮方法\n                this.dto=this.temp\n                this.dto.configurationTableFields=this.listMQ\n                this.dto.interfaceDefinitionId=this.selectlistRow.rowId\n                api.addRecordMQ(this.dto).then(()=>{\n                    this.dialogFormVisiblepz = false\n                    this.$message({\n                        title: \"成功\",\n                        message: \"配置成功\",\n                        type: \"success\",\n                        duration: 2000\n                    });\n                })\n            },\n            handleCreateTabA(){ //RFC或web新增\n               let newValue = {\n                    rowId:'',\n                    tableName: '',\n                };\n                this.listRFC.push(newValue);\n                this.listRFC.forEach((item,index)=>{\n                    item.number = (this.listQueryRFC.currentPage-1)*this.listQueryRFC.pageSize+index+1\n                })\n                \n            },\n            handleCreateTabB(){ //RFC或web新增\n                if(this.selectlistRowRFC){\n                    let newValue = {\n                        number:'',\n                        attributeName: '',\n                        attributeDesc:'',\n                        tableField: '',\n                        filedDesc: '',\n                        num:this.selectlistRowRFC.number\n                };\n                    this.listWeb.push(newValue);\n                    this.listWeb.forEach((item,index)=>{\n                        item.number = (this.listQueryWeb.currentPage-1)*this.listQueryWeb.pageSize+index+1\n                    })\n                    this.selectlistRowRFC.configurationTableFields=this.listWeb\n\n                }else{\n                    this.$message({\n                        title: \"警告\",\n                        message: \"请选择一条信息\",\n                        type: \"warning\"\n                    }); \n                }\n            },\n            handledelA(){ //RFC或web删除\n                if (this.selectlistRowRFC) {\n                        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }).then(() => {\n                        this.listRFC = this.listRFC.filter(item => {\n                        let isD = true;\n                        if (this.selectlistRowRFC.number === item.number) {\n                            isD = false;\n                        }\n                        return isD;\n                        });\n                        this.$message({\n                        type: \"success\",\n                        message: \"删除成功\",\n                        duration: 2000\n                        });\n                        this.listWeb=[]\n                    }).catch(() => {\n                        this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                        });\n                    });\n                } else {\n                    this.$message.warning(\"请勾选记录！\");\n                    return;\n                }\n            },\n            handledelB(){ //RFC或web删除\n            if (this.selectlistRowWeb) {\n                    this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    this.listWeb = this.listWeb.filter(item => {\n                    let isD = true;\n                    this.selectlistRowWeb.forEach((itemr) => {\n                        if (itemr.rowId === item.rowId) {\n                        isD = false;\n                        }\n                    });\n                    return isD;\n                    });\n                    this.$message({\n                    type: \"success\",\n                    message: \"删除成功\",\n                    duration: 2000\n                    });\n                }).catch(() => {\n                    this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                    });\n                });\n            } else {\n                this.$message.warning(\"请勾选记录！\");\n                return;\n            }\n        },\n            handleCreate() {//新增\n                this.resetTemp();\n                this.dialogStatus = \"create\";\n                this.dialogFormVisible = true;\n            },\n            create() {//新增确认按钮\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        api.addRecord(this.temp).then(() => {\n                            this.getList();\n                            this.dialogFormVisible = false;\n                            this.$message({\n                                title: \"成功\",\n                                message: \"新增成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        });\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            // 获取表格选中时的数据\n            selectRow(val) {\n                this.selectlistRow = val[val.length - 1];\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection();\n                    this.$refs.tb.toggleRowSelection(val.pop());\n                }\n            },\n            selectRowMQ(val){\n                this.selectlistRowMQ = val\n            },\n            selectRowFTP(val){\n                this.selectlistRowFTP = val\n            },\n            selectRowRFC(val){\n                this.selectlistRowRFC = val[val.length - 1];\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection();\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1]);\n                    \n                }\n                if(this.selectlistRowRFC){\n                    if(this.selectlistRowRFC.configurationTableFields){\n                        this.listWeb=this.selectlistRowRFC.configurationTableFields\n                    }else{\n                        this.listWeb=[]\n                    }\n                    if(this.selectlistRowRFC.configurationTableFields!==undefined){\n                      this.selectlistRowRFC.configurationTableFields.forEach((v,index)=>{\n                          v.number=(this.listQueryWeb.currentPage-1)*this.listQueryWeb.pageSize+index+1\n                      })\n                        // this.listWeb=this.selectlistRowRFC.configurationTableFields\n                    }       \n                }\n            },\n            RFC(){  //RFC或Web配置确定按钮方法\n            this.dta=this.temp\n            this.dta.configurationTables=this.listRFC\n            this.dta.interfaceDefinitionId=this.selectlistRow.rowId\n            api.addRecordRFC(this.dta).then(()=>{\n                this.dialogFormVisibleRFC = false;\n                this.$message({\n                    title: \"成功\",\n                    message: \"配置成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n            })\n        },\n            selectRowWeb(val){\n                this.selectlistRowWeb = val\n            },\n            handleUpdate() {//编辑弹窗\n                if (this.selectlistRow) {\n                    this.temp = this.selectlistRow\n                    this.flag=true\n                    this.dialogStatus = \"update\";\n                    this.dialogFormVisible = true;\n                } else {\n                    this.$message({\n                        title: \"警告\",\n                        message: \"请选择一条信息\",\n                        type: \"warning\"\n                    });\n                }\n            },\n            update() {//编辑提交\n                this.$refs[\"temp\"].validate(valid => {\n                    if (valid) {\n                        this.temp.updator=getDomainId()\n                        api.updateRecord(this.temp).then(\n                            () => {\n                                this.getList();\n                                this.dialogFormVisible = false;\n                                this.$message({\n                                    title: \"成功\",\n                                    message: \"更新成功\",\n                                    type: \"success\",\n                                    duration: 2000\n                                });\n                            }\n                        );\n                    }\n                });\n            },\n           \n            handleDelete() {//删除列表\n                if (this.selectlistRow) {\n                    this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }).then(() => {\n                            api.deleteRecord(this.selectlistRow.rowId).then(() => {\n                                this.getList(),\n                                    this.$message({\n                                        title: \"成功\",\n                                        message: \"删除成功\",\n                                        type: \"success\",\n                                        duration: 2000\n                                    });\n                            });\n                        }).catch(() => {\n                            this.$message({\n                                type: \"info\",\n                                message: \"已取消删除\"\n                            });\n                        });\n                } else {\n                    this.$message({\n                        title: \"警告\",\n                        message: \"请选择一条信息\",\n                        type: \"warning\"\n                    });\n                }\n            },\n            cancel() {//取消弹窗按钮\n                this.dialogFormVisible = false;\n            },\n            resetTemp() {\n                this.temp = {\n                    isEffective:1,\n                    remark: undefined,\n                    creator:getDomainId(),\n                    updator:getDomainId(),\n                };\n            },\n            handleClose() {\n                this.resetTemp();\n            },\n           \n        }\n    };\n",null]}