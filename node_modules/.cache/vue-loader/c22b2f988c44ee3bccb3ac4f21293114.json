{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/eqmtFaultCodeTable/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/eqmtFaultCodeTable/index.vue","mtime":1596610933478},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/database/eqmtError'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport ImportFile from '@/components/ImportFile'\nimport deviceType from '../../components/deviceTypeSelect'\nimport faultType from '../../components/faultTypeSelect'\n\nexport default {\n    name: 'eqmtFaultCodeTable',\n    components: { Pagination, ImportFile, deviceType, faultType },\n    data () {\n        return {\n            list: null,\n            parts: [],\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                faultCode: undefined,\n                faultTypeCode: undefined,\n                deviceTypeCode: undefined,\n                description: undefined,\n                partCode: undefined\n            },\n            temp: {\n                faultCode: undefined,\n                faultTypeCode: undefined,\n                deviceTypeCode: undefined,\n                description: undefined,\n                partCode: undefined\n            },\n            selectlistRow: [],\n            manufacturersCode: undefined,\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            modalNo: 'EXTP-BAS-0001', //导入模板编号\n            importDialogVisible: false,\n            rules: {\n                faultCode: [\n                    {\n                        required: true,\n                        message: '故障代码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                faultTypeCode: [\n                    {\n                        required: true,\n                        message: '故障类型不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                description: [\n                    {\n                        required: true,\n                        message: '故障描述不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    watch: {\n        'listQuery.deviceTypeCode' (value) {\n            this.queryParts(value)\n        },\n        'temp.deviceTypeCode' (value, value2) {\n            this.queryParts(value)\n            if (value2 && value != value2) {\n                this.temp.partCode = undefined\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_manufacturers_type: state => state.eamDict.dt_manufacturers_type,\n            dt_manufacturers_supply_classify: state =>\n                state.eamDict.dt_manufacturers_supply_classify\n        })\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_manufacturers_type',\n            'dt_manufacturers_supply_classify'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        changeCode () {\n            this.$nextTick(() => {\n                if (this.temp.faultCode !== null) {\n                    // 替换掉中文\n                    // this.temp.faultCode = this.temp.faultCode.replace(\n                    //     /[^\\w\\.\\/]/gi,\n                    //     ''\n                    // )\n                }\n            })\n        },\n        queryParts (typeCode) {\n            api.queryParts(typeCode).then(res => {\n                this.parts = res.data\n            })\n        },\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        handleImport () {\n            // this.importDialogVisible = true\n            // this.$nextTick(() => {\n            //     this.$refs.importDialog.getList()\n            // })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        rowClick (val) {\n            this.$refs.tb_a.toggleRowSelection(val)\n        },\n        handleUpdate (row) {\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.$nextTick(() => {\n                if (row.deviceTypeCode) {\n                    this.queryParts(row.deviceTypeCode)\n                }\n                this.temp = row\n                this.$refs.faultType.valueTitle = this.temp.faultTypeName\n                this.$refs.deviceType.valueTitle = this.temp.deviceTypeName\n            })\n        },\n        update () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(this.temp.faultCode, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        var tmp = this.selectlistRow.map(item => {\n                            return item.faultCode\n                        })\n                        api.deleteRecord(tmp).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                faultCode: undefined,\n                faultTypeCode: undefined,\n                deviceTypeCode: undefined,\n                description: undefined,\n                partCode: undefined\n            }\n            if (this.$refs.faultType != undefined) {\n                this.$refs.faultType.valueTitle = ''\n                this.$refs.deviceType.valueTitle = ''\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n            this.getList()\n        }\n    }\n}\n",null]}