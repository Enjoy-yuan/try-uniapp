{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/dataPermissioncategory/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/dataPermissioncategory/index.vue","mtime":1600927611527},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\n// import waves from \"@/directive/waves\"; // Waves directive\nimport { DICT_CODE } from \"@/utils/constant\";\nimport * as api from \"@/api/system/dataPermissioncategory\";\nimport { mapState } from \"vuex\";\n\nexport default {\n    name: \"dataPermissioncategory\",\n    components: { Pagination },\n    // directives: { waves },\n    data () {\n        return {\n            tableKey: 0,\n            DICT_CODE: DICT_CODE,\n            list: [],\n            theight: 0,//表格高度\n            total: 0,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n                page: 1\n            },\n            readonly: false,\n            temp: {\n                endpointCode: undefined,\n                endpointName: undefined,\n                url: undefined,\n                method: undefined,\n                remark: undefined,\n                state: 1\n            },\n            dialogFormVisible: false,\n            dialogFormUser: false,\n            dialogStatus: \"\",\n            rules: {\n                endpointCode: [\n                    { required: true, message: \"资源编码不能为空\", trigger: \"blur\" },\n                    { max: 100, message: \"组织编码长度不能超过100\", trigger: \"blur\" }\n                ],\n                endpointName: [\n                    { required: true, message: \"资源名称不能为空\", trigger: \"blur\" },\n                    { max: 100, message: \"编码名称长度不能超过100\", trigger: \"blur\" }\n                ],\n                method: [\n                    { required: true, message: this.$t(\"validate.required\"), trigger: \"blur\" }\n                ],\n                url: [\n                    { required: true, message: this.$t(\"validate.required\"), trigger: \"blur\" }\n                ]\n            },\n            dialogPvVisible: false,\n            pvData: []\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_datarights_type: state => state.dict.dt_datarights_type\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_datarights_type\"]);\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n        this.getList();\n    },\n    created () {\n        this.getList();\n    },\n    methods: {\n        getList () {//查询数据\n            api.selectlists(this.listQuery).then(res => {\n                this.list = res.data.list;\n                this.total = res.data.pages.count;\n            });\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        handleFilter () {//查询按钮\n            this.getList();\n        },\n        resetTemp () {//重置\n            this.temp = {\n                endpointCode: undefined,\n                endpointName: undefined,\n                url: undefined,\n                method: undefined,\n                remark: undefined,\n                state: 1\n            };\n        },\n        handleCreate () {//新增\n            this.resetTemp();\n            this.dialogStatus = \"create\";\n            this.dialogFormVisible = true;\n        },\n        createData () {//新增\n            api.addRecord(this.temp).then(() => {\n                this.dialogFormVisible = false;\n                this.getList();\n                this.$message({\n                    title: \"成功\",\n                    message: \"新增成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n            });\n        },\n        handleUpdate () {//编辑\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.temp = this.selectlistRow[0]; // copy obj\n                this.dialogStatus = \"update\";\n                this.dialogFormVisible = true;\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        updateData () {//编辑\n            api.updateRecord(this.temp).then(() => {\n                this.dialogFormVisible = false;\n                this.getList();\n                this.$message({\n                    title: \"成功\",\n                    message: \"更新成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n            });\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val;\n        },\n        handleDelete () {//删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                let ids = [];\n                this.selectlistRow.forEach((val, index) => {\n                    ids[index] = val.rowId;\n                });\n                api.deleteRecord(ids).then(() => {\n                    this.getList(),\n                        this.$message({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        }\n    }\n};\n",null]}