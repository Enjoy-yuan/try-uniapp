{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/tab/tabNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/tab/tabNote.vue","mtime":1596610933944},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\"\nimport * as api from \"@/api/project/srm/supplierManage/supplierAccess/platformNote\"\nimport Pagination from \"@/components/Pagination\" // 分页组件\nexport default {\n    name: 'tabNote',\n    components: { Pagination },\n    data () {\n        return {\n            theight: 0,\n            total: 0,\n            totalSub: 0,\n            listQuery: {\n                pageSize: 10,\n                currentPage: 1\n            },\n            itemQuery: {\n                pageSize: 10,\n                currentPage: 1\n            },\n            tableData: [],\n            tableDataSub: [],\n            selectedRows: [],\n            currentSelectedRow: [],\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'handleAdd', name: '新增' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handlePublish', name: '发布' },\n                { id: 2, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleWorkflow', name: '审批流程示意' },\n            ],\n            tableConfig: [\n                { label: '通知单号', prop: 'noticeNo', align: 'center', width: '150' },\n                { label: '引入类型', prop: 'introduceTypeCN', align: 'center', width: 'auto' },\n                { label: '供应商名称', prop: 'supplierName', align: 'center', width: '180' },\n                { label: '供应商编码', prop: 'supplierCode', align: 'center', width: 'auto' },\n                { dType: 'dt_srm_paf', label: '审核状态', prop: 'auditStateCN', align: 'center', width: 'auto' },\n                { label: '当前审核人', prop: 'taskUser', align: 'center', width: '120' },//wu\n                { label: '审核时间', prop: 'auditTime', align: 'center', width: '120' },//wu\n                { label: '审核备注', prop: 'remark', align: 'center', width: '120' },//wu\n                { label: '类型', prop: 'qualifiedTypeCN', align: 'center', width: 'auto' },//资质类型\n                { label: '创建人', prop: 'creator', align: 'center', width: 'auto' },\n                { label: '创建时间', prop: 'createTime', align: 'center', width: '150' },\n                { label: '修改人', prop: 'updator', align: 'center', width: 'auto' },\n                { label: '修改时间', prop: 'updateTime', align: 'center', width: '150' }\n            ],\n            tableSubConfig: [\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: 'auto' },\n                { label: '资质是否合格', prop: 'qualification', align: 'center', width: 'auto' },//boolean\n                { label: '是否引入', prop: 'introduction', align: 'center', width: 'auto' },\n                { label: '创建人', prop: 'creator', align: 'center', width: 'auto' },\n                { label: '创建时间', prop: 'createTime', align: 'center', width: '150' },\n                { label: '修改人', prop: 'updator', align: 'center', width: 'auto' },\n                { label: '修改时间', prop: 'updateTime', align: 'center', width: '150' }\n            ]\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_paf: state => state.dict.dt_srm_paf,//审核状态\n            dt_srm_pao: state => state.dict.dt_srm_pao,//引入类型\n            dt_srm_pae: state => state.dict.dt_srm_pae,//资质类型\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_paf\", \"dt_srm_pao\", \"dt_srm_pae\"])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 105\n        },\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_paf, this.dt_srm_pao, this.dt_srm_pae]\n                res.data = this.$myFun.codeToName(res.data, options, ['auditState', 'introduceType', 'qualifiedType'])\n                this.tableData = res.data.list\n                this.total = res.data.pages.count\n                this.setFirstLine()\n            })\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.handleAdd()\n                    break\n                }\n                case 1: {\n                    this.handlePublish()\n                    break\n                }\n                case 2: {\n                    this.handleWorkflow()\n                    break\n                }\n\n            }\n        },\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                    this.getRow()\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n                this.getRow(this.currentSelectedRow)\n            }\n\n        },\n        //获取单条数据\n        getRow (row) {\n            if (row) {\n                api.queryItems(row.noticeNo, this.itemQuery).then(res => {\n                    this.totalSub = res.data.pages.count\n                    this.tableDataSub = res.data.list\n                })\n            }\n        },\n        handleAdd () {\n            this.$emit('handleAdd', 'add', null)\n        },\n        //发布按钮\n        handlePublish () {\n            if (this.currentSelectedRow) {\n                console.log('发布')\n                this.$confirm(`您确定发布：${this.currentSelectedRow.noticeNo} 吗？`, '消息提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    api.updateRecords(this.currentSelectedRow.noticeNo, { method: \"RELEASE\" }).then(() => {\n                        this.$message({\n                            type: 'success',\n                            message: '发布成功'\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择一条信息'\n                })\n            }\n        },\n        handleWorkflow () {\n            this.$message({ type: 'error', message: '开发中，暂无法使用' })\n        },\n        handleUpdate (row) {\n            api.queryRow(row.noticeNo).then(res => {\n                this.$emit('handleAdd', 'edit', res.data)\n            })\n        },\n        handleDelete (index, row) {\n            console.log(index, row, '删除通知')\n            this.$confirm(`确定删除${row.noticeNo} 吗？`, '消息提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                api.deleteRecords(row.noticeNo).then(() => {\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        showPerson (propName, index) {\n            let title = ''\n            switch (propName) {\n                case 'taskUser': {\n                    title = '任务接收人选择'\n                    break\n                }\n                case 'evaluateUser': {\n                    title = '评价人选择'\n                    break\n                }\n            }\n            this.dataIndex = index\n            this.$emit('showPerson', title, propName)\n        },\n        personConfirm (propName, val) {\n            this.$set(this.tableData[this.dataIndex], propName, val[0].employeeName)\n        },\n        setFirstLine () {\n            this.$nextTick(() => {\n                this.$refs.tb.toggleRowSelection(this.tableData[0], \"selected\")\n                this.$refs.tb.setCurrentRow(this.tableData[0])\n            })\n        }\n    }\n}\n",null]}