{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/delivery_Publish/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/delivery_Publish/index.vue","mtime":1596610933590},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport * as api from \"@/api/project/oa/purchase/delivery_Publish\";\n\nimport {getSelectedDetail} from \"@/api/data-base/bar_code_rules\";\nimport Pagination from \"@/components/Pagination\";\nimport orgSelect from \"@/components/Select/orgSelect.vue\";\nimport qrcode from \"@/components/QRCode\";\nimport JsBarcode from 'jsbarcode';\nimport gysxz from '@/components/Select/xtpt/gysxz'//供应商选择\nimport {getRecord} from '@/api/data-base/supplier'\nimport { DICT_CODE, DT_ORG_TYPE, TWO_STATE_OPTIONS } from \"@/utils/constant\";\nimport {mapState,mapGetters} from 'vuex';\n\nexport default {\n  name: \"delivery_Publish\",\n  components: { Pagination,orgSelect,qrcode,gysxz},\n  data() {\n    return {\n        theight: 0,\n        list: null,\n        listRow: null,\n        packDataList:null,\n        packPrintList:[],\n        updatePacklist:{\n            barCode: [],\n            method: '',\n            supplierBatch: '',\n            supplierRemark: ''\n        },\n        total: 0,\n        rangeTime: \"\",\n        selectRows:[],\n        selectPackRows:[],\n        listQuery: {\n            page: true,\n            currentPage: 1,\n            pageSize: 10,\n            supplierCode: '',//供应商编号,\n            arrivalCompany:'',\n            orderNumber: undefined,//订单号\n            releaseDateStart: undefined,//订单状态\n            releaseDateEnd: undefined,\n            state: undefined//订单状态\n        },\n        sublistQuery: {\n            page: true,\n            currentPage: 1,\n            pageSize: 10,\n            supplierCode: '',//供应商编号\n            orderNumber: undefined//订单号\n        },\n        listQueryPack:{\n            orderNumber:'',\n            materielCode:'',\n            orderNumbers: [],\n            barcodeRuleDetails:[]\n        },\n        temp: {\n            supplierCode:'',\n            orderNumber: '',\n            contact:'',\n            mobile:'',\n            plateNumber:'',\n            method:''\n        },\n        printData:{},//打印数据\n        selectCode: [],\n        dialogFormVisible: false,\n        dialogPrintVisible:false,\n        dialogPrintTagVisible:false,\n        dialogPack:false,//包装标签tag\n        dialogPackSet:false,//包装标签设置\n        dialogPackPrintVisible:false,//打印弹框显示\n        isGysRequired:false,//供应商非必选\n        gysMutiple:true,//供应商单选\n        dialogStatus: \"\",\n        tableKey: 0,\n        DICT_CODE: DICT_CODE,\n        DT_ORG_TYPE: DT_ORG_TYPE,\n        TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n        isPublish:true,\n        rules: {\n            contact: [\n            { max: 32, message: this.$t('validate.max32'), trigger: 'blur' }\n            ],\n            mobile: [\n            { max: 32, message: this.$t('validate.max32'), trigger: 'blur' }\n            ],\n            plateNumber: [\n            { max: 32, message: this.$t('validate.max32'), trigger: 'blur' }\n            ]\n        },\n        packData:{\n            detailDTOS:[],\n            dicType: \"LB01\",\n            dicTypeName: \"外购件\",\n            sourceType: \"source_type01\",\n            sourceTypeName: \"交货单\"\n        }\n    };\n  },\n  computed:{\n    ...mapState({\n      dt_delivery_state:state=>state.dict.dt_delivery_state\n    }),\n    ...mapGetters([\n      'domainName',\n      'domainId',\n    ])\n  },\n  mounted(){\n    this.setTableHeight();\n    //表格高度自适应\n    window.onresize = () => {\n        this.setTableHeight()\n    };\n    this.listQuery.state = 'CREATE';\n    if(this.domainName==='supplier'){\n      getRecord(this.domainId).then(res => {\n        this.listQuery.supplierName = res.supplierName;\n        this.listQuery.supplierCode = res.supplierCode;\n        this.$store.dispatch('dict/getDicData',['dt_delivery_state']);\n        this.getDelivery();\n      });\n    }else{\n      this.$store.dispatch('dict/getDicData',['dt_delivery_state']);\n      this.getDelivery();\n    }\n  },\n  methods: {\n      //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 194;\n        },\n    //主表数据获取\n    getDelivery(){\n      if(this.listQuery.supplierCode){\n        api.getDelivery(this.listQuery).then(res => {\n            let options = [this.dt_delivery_state];\n            res = this.$myFun.codeToName(res.data,options,['state']);\n            this.list = res.list;\n            this.total = res.pages.count;\n            this.setFirstLine();\n            if(this.list[0]){\n                this.getSubList(this.list[0])\n            }\n        });\n      }\n    },\n    //显示主表\n    getList() {\n      if (this.rangeTime) {\n        var d1 = this.rangeTime[0];\n        var d2 = this.rangeTime[1];\n        this.listQuery.releaseDateStart = d1;\n        this.listQuery.releaseDateEnd = d2;\n      }else{\n        this.listQuery.releaseDateStart = '';\n        this.listQuery.releaseDateEnd = '';\n      }\n      this.getDelivery();\n    },\n    //显示从表\n    getSubList(row) {\n      this.sublistQuery.supplierCode = row.supplierCode;\n      this.sublistQuery.orderNumber = row.orderNumber;\n      api.getDeliveryDetail(this.sublistQuery).then(res => {\n        this.listRow = res.data.deliveryOrderItemDTOList;\n      });\n    },\n    //显示供应商\n    showGys(){\n        this.$refs.dialogRefgys.dialogVisible = true;\n    },\n    //供应商确认\n    handleGysClick(gysRows){\n        this.temp.supplierCode = gysRows[0].supplierCode;\n        this.temp.supplierName = gysRows[0].supplierName;\n        this.listQuery.supplierCode= gysRows[0].supplierCode;\n        this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName)\n    },\n    //发布\n    handlePublish() {\n      if(this.selectRows){\n        if(this.selectRows.state){\n          this.$confirm(this.$t('message.isPublishOrder'), this.$t('message.prompt'), {\n            confirmButtonText: this.$t('message.yes'),\n            cancelButtonText: this.$t('message.no'),\n            type: 'warning'\n          }).then(() => {\n              this.isPublish = true;\n              this.resetTemp();\n              this.dialogFormVisible = true;\n              this.dialogStatus = \"publish\";\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: this.$t('message.canceledPublish')\n            });          \n          });\n        }else{\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      }else{\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n    },\n    //发布提交\n    publishConfirm(){\n      this.temp.supplierCode = this.selectRows.supplierCode;\n      this.temp.orderNumber = this.selectRows.orderNumber;\n      this.temp.state = 'RELEASE';\n      this.temp.method = 'RELEASE';\n      api.updateDelivery(this.temp).then(() => {\n        this.dialogFormVisible = false;\n        this.$message.success(this.$t('message.publishSuccess'));\n        this.getDelivery();\n      });\n    },\n    //发布前修改车辆信息\n    updateCar(){\n      this.isPublish = false;\n      this.dialogFormVisible = true;\n    },\n    updateCarConfirm(){\n      this.$confirm(this.$t('message.isDeleteContinue'), this.$t('message.prompt'), {\n        confirmButtonText: this.$t('message.confirm'),\n        cancelButtonText: this.$t('message.cancel'),\n        type: 'warning'\n      }).then(() => {\n        console.log('修改车辆信息');\n        this.dialogFormVisible = true;\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: this.$t('message.deleteCanceled')\n        });          \n      });\n    },\n    //删除\n    handleDelete(){\n      if(this.selectRows){\n        if(this.selectRows.state){\n          let state = this.selectRows.state;\n          if(state!=='CREATE'){\n            this.$message({\n                type: 'warning',\n                message: this.$t('message.cannotDeleteUnCreateOrder')\n            });       \n          }else{\n            this.$confirm(this.$t('message.isDeleteContinue'), this.$t('message.prompt'), {\n              confirmButtonText: this.$t('message.confirm'),\n              cancelButtonText: this.$t('message.cancel'),\n              type: 'warning'\n            }).then(() => {\n              let datas = {}\n              datas.supplierCode = this.selectRows.supplierCode;\n              datas.orderNumber = this.selectRows.orderNumber;\n              api.deleteDelivery(datas).then(() => {\n                this.getDelivery();\n                this.$message({\n                  type: 'success',\n                  message: this.$t('message.deleteSuccessed')\n                });\n              });\n            }).catch(() => {\n              this.$message({\n                type: 'info',\n                message: this.$t('message.deleteCanceled')\n              });          \n            });\n          }\n        }else{\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      }else{\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n      \n    },\n    //单据打印\n    receiptPrint(){\n      if(this.selectRows){\n        if(this.selectRows.state){\n          this.dialogPrintVisible = true;\n          this.dialogStatus = \"print\";\n          this.printData = this.selectRows;\n          this.$nextTick(()=>{\n            this.$refs.childQRcode.qrCreate(this.printData.orderNumber)\n          });\n        }else{\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      }else{\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n      \n    },\n    //单据打印执行\n    doReceiptPrint(){\n      let newWin = window.open(\"\");\n      var newstr = document.getElementById('receipt').innerHTML;\n      newWin.document.write(newstr);\n      newWin.document.close();//IE添加\n\n      setTimeout(function(){\n        newWin.print();\n        newWin.close();\n      },100);\n    },\n    //关闭交货单\n    handleClose() {\n      if(this.selectRows){\n        if(this.selectRows.state){\n          let state = this.selectRows.state;\n          if(state!=='RELEASE'){\n            this.$message({\n                type: 'warning',\n                message: this.$t('message.cannotCloseUnPublishOrder')\n            });       \n          }else{\n            this.$confirm(this.$t('message.isCloseOrderContinue'), this.$t('message.prompt'), {\n              confirmButtonText: this.$t('message.confirm'),\n              cancelButtonText: this.$t('message.cancel'),\n              type: 'warning'\n            }).then(() => {\n              let datas = {}\n              datas.supplierCode = this.selectRows.supplierCode;\n              datas.orderNumber = this.selectRows.orderNumber;\n              datas.state = 'CLOSE';\n              datas.method = 'CLOSE';\n              api.updateDelivery(datas).then(() => {\n                this.getDelivery();\n                this.$message({\n                    title: \"\",\n                    message: this.$t('message.closed'),\n                    type: \"success\"\n                });\n              });\n            }).catch(() => {\n              this.$message({\n                type: 'info',\n                message: this.$t('message.cancelClose')\n              });          \n            });\n          }\n        }else{\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      }else{\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n    },\n    //查询\n    handleQuery() {\n      this.listRow=[];\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //查询包装标签列表\n    handleQueryPack(){\n\n    },\n    //每页大小变化\n    handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //当前页变化\n    handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    //主表勾选框选中\n    selectRow(val) {\n      this.selectRows = val[val.length-1]\n      if (val.length > 1) {\n        this.$refs.tbmain.clearSelection()\n        this.$refs.tbmain.toggleRowSelection(val[val.length-1],'selected')\n      }\n      this.$refs.tbmain.setCurrentRow(this.selectRows);\n      if(val.length!==0){\n        this.getSubList(val[val.length-1]);\n      }\n    },\n    //主表点击显示从表\n    showSubTable(val) {\n      this.selectRows = val;\n      this.$refs.tbmain.clearSelection()\n      this.$refs.tbmain.toggleRowSelection(val,'selected')\n      this.getSubList(val);\n    },\n    //重置联系人输入框\n    resetTemp() {\n      this.temp = {\n        contact:'',\n        mobile:'',\n        plateNumber:''\n      };\n    },\n    \n    //加载时默认选中第一行\n    setFirstLine() {\n      this.$nextTick(()=>{\n          this.$refs.tbmain.setCurrentRow(this.list[0]);\n      });\n    },\n    //包装标签点击事件\n    packTag(){\n      if(this.selectRows){\n        if(this.selectRows.state==='RELEASE'){\n          this.packData.detailDTOS = [];\n          let commonD = { \n            arrivalCompany: this.selectRows.arrivalCompany,\n            arrivalCompanyName: this.selectRows.arrivalCompanyName,\n            arrivalRepository: this.selectRows.arrivalRepository,\n            arrivalRepositoryName: this.selectRows.arrivalRepositoryName,\n            supplierCode:this.selectRows.supplierCode,\n            supplierName:this.selectRows.supplierName,\n            purchaseOrderNumber:this.selectRows.purchaseOrderNumber\n          }\n\n          this.listRow.forEach((item,index)=>{\n            let arr = Object.assign({}, commonD)\n            this.packData.detailDTOS.push(arr);\n            for(let key in item){\n              if(key===\"deliverQuantity\"){\n                this.packData.detailDTOS[index][\"receiveNum\"] = item[key]\n              }else if(key===\"rowNo\"){\n                this.packData.detailDTOS[index][\"orderRowNo\"] = item[key]\n              }else{\n                this.packData.detailDTOS[index][key] = item[key]\n              }\n            }\n          })\n\n          api.createPackTag(this.packData).then(()=>{\n            let rulesQuery = {\n              ruleType:this.packData.dicType,\n              arrivalCompany:this.selectRows.arrivalCompany\n            }\n            getSelectedDetail(rulesQuery).then(resr=>{\n              let codearr = [];\n\n              resr.data.barcodeRuleDetails.forEach((ritem)=>{\n                codearr.push(ritem.rulePrepCode);\n              });\n              let orderNumbers = [];\n              orderNumbers.push(this.selectRows.orderNumber);\n              this.listQueryPack.orderNumbers = orderNumbers;\n              this.listQueryPack.barcodeRuleDetails = codearr;\n\n              api.queryPackTag(this.listQueryPack).then(resq=>{\n                this.packDataList = resq.data;\n              });\n            });\n            \n          });\n       \n        }else{\n          this.$message.warning('无法对非发布状态的订单进行标签打印');\n          return false;\n        }\n      }else{\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n      this.dialogPack = true;\n    },\n    //选中标签列表\n    selectPackRow(val){\n      this.selectPackRows = val;\n    },\n    //标签打印设置\n    handlePackSetting(){\n      if(this.selectPackRows.length>0){\n        this.dialogPackSet = true;\n      }else{\n        this.$message({\n          title: this.$t('message.warning'),\n          message: this.$t('message.checkedoneplease'),\n          type: \"warning\"\n        });\n      }\n    },\n    //批量打印\n    handleBulkPrint(){\n      if(this.selectPackRows.length===0){\n        this.$message({\n          title: this.$t('message.warning'),\n          message: '请选择要打印的标签',\n          type: \"warning\"\n        });\n      }else{\n        let printable = true;\n        try{\n          this.selectPackRows.forEach(item=>{\n            if(item.printSign===1){\n              printable = false;\n              this.$message({\n                title: this.$t('message.warning'),\n                message: '所选项包含已打印过的标签，不能进行批量打印',\n                type: \"warning\"\n              });\n              throw ''\n            }\n          });\n          if(printable){\n            this.updateMethod = 'batchPrint';\n            this.createPrintPack();\n          }\n        }catch(e){\n          console.log(e);\n        }\n      }\n    },\n    //补打\n    handleFillPrint(){\n      if(this.selectPackRows.length===0){\n        this.$message({\n          title: this.$t('message.warning'),\n          message: '请选择要打印的标签',\n          type: \"warning\"\n        });\n      }else{\n        let printable = true;\n        try{\n          this.selectPackRows.forEach(item=>{\n            if(item.printSign===0){\n              printable = false;\n              this.$message({\n                title: this.$t('message.warning'),\n                message: '所选项包含未打印过的标签，不能进行补打',\n                type: \"warning\"\n              });\n            }\n          });\n          if(printable){\n            this.updateMethod = 'makeUpPrint';\n            this.createPrintPack();\n          }\n        }catch(e){\n          console.log(e);\n        }\n      }\n\n    },\n    initUpdatePacklist(){\n      let barcodes = new Array();\n      this.selectPackRows.forEach(item=>{\n        barcodes.push(item.barCode);\n      });\n      this.updatePacklist.barCode = barcodes;\n      this.updatePacklist.method = this.updateMethod;\n      if(this.updateMethod!=='setUp'){\n        this.updatePacklist.supplierBatch = '';\n        this.updatePacklist.supplierRemark = '';\n      }\n    },\n    //生成打印内容\n    createPrintPack(){\n        this.dialogPackPrintVisible = true;\n        this.packPrintList = this.selectPackRows;\n        this.$nextTick(()=>{\n          this.packPrintList.forEach(item=>{\n            this.$refs['childQRcode'+item.rowId][0].qrCreate(item.qrCode);\n            JsBarcode(\"#barcode\"+item.rowId, item.barCode);\n          })\n        })\n    },\n    //标签设置确认提交\n    confirmPackBatch(){\n      this.updateMethod = 'setUp';\n      this.initUpdatePacklist();\n      api.updatePackTag(this.updatePacklist).then(()=>{\n        api.queryPackTag(this.listQueryPack).then(resq=>{\n          this.packDataList = resq.data;\n        });\n        this.$message.success('设置成功');\n      })\n    },\n    //执行包装标签打印\n    doPackPrint(){\n      this.$confirm('是否进行打印操作？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n      }).then(() => {\n          this.dialogPackPrintVisible = false;\n          this.initUpdatePacklist();\n          api.updatePackTag(this.updatePacklist).then(()=>{\n            api.queryPackTag(this.listQueryPack).then(resq=>{\n              this.packDataList = resq.data;\n            });\n            this.$message.success('设置成功');\n          });\n          let newWin = window.open(\"\");\n          var newstr = document.getElementById('packprint').innerHTML;\n          newWin.document.write(newstr);\n          newWin.document.close();//IE添加\n\n          setTimeout(function(){\n            newWin.print();\n            newWin.close();\n          },100);\n      })\n      \n    }\n  }\n};\n",null]}