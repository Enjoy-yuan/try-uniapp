{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/contractTemplate/paymentMethod/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/contractTemplate/paymentMethod/index.vue","mtime":1596610933610},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/contractManage/paymentMethod\"\nimport Pagination from \"@/components/Pagination\"\nimport addMain from \"./dialog/addMain\"\nimport { mapState } from \"vuex\"\nimport throttle from 'lodash/throttle'\n\nexport default {\n    name: \"paymentMethod\",\n    components: { Pagination, addMain },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            total: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 15\n            },\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            tableKey: 0, //表格索引\n            orgCode: '',\n            year: '',\n            dialogVisiblesx: false\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pdr: state => state.dict.dt_srm_pdr,\n            dt_srm_pdt: state => state.dict.dt_srm_pdt,\n            dt_srm_pdu: state => state.dict.dt_srm_pdu,\n\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\", 'dt_srm_pdr', 'dt_srm_pdt', 'dt_srm_pdu'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    watch: {\n        'dt_srm_pdu': function () {\n            this.getList()\n        }\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        refresh () {\n            this.getList()\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_p0, this.dt_srm_pdr, this.dt_srm_pdt, this.dt_srm_pdu]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state', 'paymentType', 'settlementType', 'paymentPeriod'])\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.$refs.addMain.resetTemp()\n            this.$nextTick(() => {\n                this.$refs.addMain.$refs['dataForm'].clearValidate()\n            })\n            this.$refs.addMain.Edit = false\n            this.$refs.addMain.dialogStatus = 'create'\n            this.$refs.addMain.dialogVisible = true\n        },\n        //编辑按钮单击事件方法\n        handleUpdate (index, val) {\n            this.$refs.addMain.dialogStatus = 'update'\n            this.$refs.addMain.dialogVisible = true\n            this.$refs.addMain.temp = { ...val }\n            this.$refs.addMain.Edit = true\n        },\n        //删除按钮单击事件方法\n        handleDelete (index, val) {\n            this.$confirm(\"是否删除该信息\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                api.deleteRecord(val.rowId).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n\n        },\n        //生效按钮单击事件\n        handleEffect () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state === 'P001') {\n                    this.orgCode = this.selectlistRow.purchaseOrgName\n                    this.year = this.selectlistRow.year\n                    this.dialogVisiblesx = true\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '仅编制状态可生效',\n                        type: 'warning',\n                        duration: 2000\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning',\n                    duration: 2000\n                })\n            }\n\n        },\n        Effect: throttle(function () {\n            let dto = {\n                method: 'effect'\n            }\n            api.updateEffect(this.selectlistRow.rowId, dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '生效成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.dialogVisiblesx = false\n                this.getList()\n            })\n        }, 2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)\n        }\n    }\n};\n",null]}