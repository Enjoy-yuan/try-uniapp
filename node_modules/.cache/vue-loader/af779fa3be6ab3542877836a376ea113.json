{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/dialog/dialogAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/dialog/dialogAdd.vue","mtime":1596610933938},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { recommendSc } from \"@/api/project/srm/supplierManage/supplierAccess/platformNote\"\nimport { mapState } from \"vuex\"\n// import { createRecords, updateRecords } from \"@/api/productionMaterial/hand_pull_material\";\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\n\n\n\nexport default {\n    name: 'addMain',\n    components: { caiGou },\n    props: ['unMutiple', 'title', 'curdialogStatus'],\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            isEdit: false,\n            iscgEdit: false,//采购是否可编辑\n            formData: {\n                orgCode: null,\n                orgName: null,\n                noticeNo: null,\n                qualifiedType: null,\n                introduceType: null,\n                supplierRowId: null,\n                supplierCode: null,\n                supplierName: null,\n                // par8: null,\n                questionType: null,\n                feedbackDate: null,\n                completionDate: null,\n                questionDesc: null,\n                noticeExplain: null\n            },\n            tableData: [],\n            listSelected: null,//已选项\n            selectRowData: null,\n            dialogVisible: false,\n            rules: {\n                orgCode: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ]\n            },\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'showMC', name: '新增' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleRefresh', name: '刷新' },\n            ],\n            formConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '', copmNum: 0 },\n                { type: 'commonInput', label: '通知单号', prop: 'noticeNo', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pae', label: '资质类型', prop: 'qualifiedType', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pao', label: '引入类型', prop: 'introduceType', width: '' },\n                { type: 'inputBtnGys', label: '供应商', prop: 'supplierName', width: '', copmNum: 1 },\n                { type: 'inputBtnRecommend', label: '分配账号', prop: 'supplierCode', width: '' },//wu\n                { type: 'dictSelect', dType: 'dt_srm_pap', label: '问题类型', prop: 'questionType', width: '' },\n                { type: 'date', label: '要求反馈日期', prop: 'feedbackDate', width: '' },\n                { type: 'date', label: '要求整改完成日期', prop: 'completionDate', width: '' },\n                { type: 'textarea', label: '问题描述', prop: 'questionDesc', width: '800px', rows: \"2\" },\n                { type: 'textarea', label: '通知说明', prop: 'noticeExplain', width: '800px', rows: \"2\" }\n            ],\n            tableConfig: [\n                // { label: '行号', prop: 'number', align: 'center', width: 'auto' },\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: 'auto' },\n                { type: 'checkbox', label: '资质是否合格', prop: 'qualification', align: 'center', width: 'auto' },\n                { type: 'checkbox', label: '是否引入', prop: 'introduction', align: 'center', width: 'auto' },\n                { type: 'commonInput', label: '备注', prop: 'remark', align: 'center', width: 'auto' }\n            ],\n            dialogConfig: [\n                { title: '供应商信息', isRequired: false, unMutiple: false }\n            ]\n        }\n    },\n    created () {\n\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pae: state => state.dict.dt_srm_pae,//资质类型\n            dt_srm_pao: state => state.dict.dt_srm_pao,//引入类型\n            dt_srm_pap: state => state.dict.dt_srm_pap//问题类型\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pae\", \"dt_srm_pao\", \"dt_srm_pap\"])\n    },\n    methods: {\n        //初始化选中内容\n        initSelect (val) {\n            this.listAll = null\n            this.listSelected = null\n            this.listSelected = val\n        },\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.showMC()\n                    break\n                }\n                case 1: {\n                    this.handleRefresh()\n                    break\n                }\n            }\n        },\n        handleRefresh () {\n            this.iscgEdit = false\n            this.tableData = []\n        },\n        handleConfirm () {\n            this.$refs.refForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        this.tableData.forEach(item => {\n                            if (!item.qualification) {\n                                item.qualification = false\n                            } else {\n                                item.qualification = true\n                            }\n                            if (!item.introduction) {\n                                item.introduction = false\n                            } else {\n                                item.introduction = true\n                            }\n                        })\n                        if (this.curdialogStatus === 'edit') {\n                            this.formData.noticeItemDTOs = this.tableData\n                            let cdata = {\n                                method: \"UPDATE\",\n                                noticeDTO: this.formData\n                            }\n                            this.$emit('handleDialogClick', cdata)\n                        } else if (this.curdialogStatus === 'add') {\n                            this.formData.noticeItemDTOs = this.tableData\n                            this.$emit('handleDialogClick', this.formData)\n                        }\n                        this.dialogVisible = false\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n                }\n            })\n        },\n        //表格操作删除\n        handleDelete (index, row) {\n            console.log('删除', index, row)\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.tableData = this.tableData.filter(item => {\n                    let isD = true\n                    if (row.classCode === item.classCode) {\n                        isD = false\n                    }\n                    return isD\n                })\n                this.$message({\n                    type: 'success',\n                    message: '删除成功'\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        initForm (type, row) {\n            if (type === 'add') {\n                this.$nextTick(() => {\n                    if (this.$refs['refForm']) {\n                        this.$refs['refForm'].clearValidate()\n                    }\n                    this.tableData = null\n                })\n            } else {\n                for (let key in this.formData) {\n                    let isnull = true\n                    for (let par in row) {\n                        if (key === par) {\n                            this.$set(this.formData, key, row[key])\n                            isnull = false\n                        }\n                    }\n                    if (isnull) {\n                        this.$set(this.formData, key, null)\n                    }\n                }\n                this.tableData = row.noticeItemDTOs\n            }\n        },\n        showGys () {\n            this.$emit('showGys', null)\n        },\n        //供应商确认\n        setGys (gysRows) {\n            this.$set(this.formData, 'supplierName', gysRows[0].supplierName)\n            this.$set(this.formData, 'supplierCode', gysRows[0].supplierCode)\n            this.$set(this.formData, 'supplierRowId', gysRows[0].rowId)\n        },\n        showMC () {\n            if (this.formData.orgCode) {\n                this.iscgEdit = true\n                this.$emit('showMC', this.formData.orgCode, this.tableData)\n            } else {\n                this.$message({ type: 'warning', message: '请先选择采购组织' })\n            }\n        },\n        selectName (name) {\n            this.formData.orgName = name\n        },\n        recommendScode () {\n            if (this.formData.introduceType && this.formData.qualifiedType) {\n                let params = {\n                    introduceType: this.formData.introduceType,\n                    qualifiedType: this.formData.qualifiedType\n                }\n                recommendSc(params).then(res => {\n                    console.log('recommendScode', res)\n                    this.formData.supplierCode = res.data\n                })\n            } else {\n                this.$message({ type: 'warning', message: '请先选择资质类型和引入类型' })\n            }\n        }\n    }\n}\n",null]}