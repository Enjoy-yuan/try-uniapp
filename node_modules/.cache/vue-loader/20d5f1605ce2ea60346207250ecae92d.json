{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTIA/components/equipment.vue?vue&type=template&id=44192510&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTIA/components/equipment.vue","mtime":1598585293744},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-row\",\n    [\n      _c(\"el-col\", { staticClass: \"trees\", attrs: { span: 3 } }, [\n        _c(\n          \"div\",\n          {\n            staticClass: \"tree\",\n            staticStyle: {\n              \"border-right\": \"1px solid #d3dae0\",\n              \"border-bottom\": \"1px solid rgb(211, 218, 224)\"\n            }\n          },\n          [\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"filter-item\",\n                staticStyle: { margin: \"12px 6px\" },\n                attrs: { placeholder: \"请选择\" + _vm.$t(\"iot.projectName\") },\n                on: { change: _vm.getTreeData },\n                model: {\n                  value: _vm.projectCode,\n                  callback: function($$v) {\n                    _vm.projectCode = $$v\n                  },\n                  expression: \"projectCode\"\n                }\n              },\n              _vm._l(_vm.projectList, function(item) {\n                return _c(\"el-option\", {\n                  key: item.projectCode,\n                  attrs: { label: item.projectName, value: item.projectCode }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"el-tree\", {\n              style: _vm.contentStyleObj,\n              attrs: {\n                \"node-key\": \"rowId\",\n                \"default-expanded-keys\": _vm.treeRowId,\n                data: _vm.treeData,\n                props: _vm.defaultProps\n              },\n              on: { \"node-click\": _vm.handleNodeClick }\n            })\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"el-col\", { attrs: { span: 21 } }, [\n        _c(\"div\", { staticClass: \"filter-container\" }, [\n          _c(\"div\", { staticClass: \"filter-items\" }, [\n            _c(\n              \"div\",\n              {\n                staticStyle: {\n                  display: \"flex\",\n                  \"justify-content\": \"space-between\",\n                  \"align-items\": \"center\"\n                }\n              },\n              [\n                _vm._v(\n                  \"\\n                    \" +\n                    _vm._s(_vm.titleName) +\n                    \"\\n                    \"\n                ),\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.titleName,\n                            expression: \"titleName\"\n                          }\n                        ],\n                        staticClass: \"filter-item-btn\",\n                        attrs: {\n                          icon: \"el-icon-plus\",\n                          type: \"primary\",\n                          size: \"small\"\n                        },\n                        on: { click: _vm.openDialog }\n                      },\n                      [_vm._v(\"⾃定义指标\")]\n                    )\n                  ],\n                  1\n                )\n              ]\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"tabs-table-container\",\n            staticStyle: { \"margin-top\": \"10px\" }\n          },\n          [\n            _c(\n              \"el-table\",\n              {\n                directives: [\n                  {\n                    name: \"loading\",\n                    rawName: \"v-loading\",\n                    value: _vm.listLoading,\n                    expression: \"listLoading\"\n                  }\n                ],\n                ref: \"tb\",\n                attrs: {\n                  \"element-loading-text\": \"拼命加载中\",\n                  data: _vm.tableData,\n                  height: _vm.theight,\n                  border: \"\",\n                  fit: \"\",\n                  \"highlight-current-row\": \"\",\n                  \"cell-class-name\": \"table-cell\",\n                  \"header-cell-class-name\": \"header-cell\"\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    \"min-width\": \"50\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.normName\"),\n                    prop: \"normName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"80\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.normCode\"),\n                    prop: \"normCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"70\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.company\"),\n                    prop: \"company\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    \"min-width\": \"50\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.computingGranularity\"),\n                    prop: \"calculationGranularity\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    \"min-width\": \"50\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.formula\"),\n                    prop: \"formula\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"70\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.indicatorType\"),\n                    prop: \"isStandardCN\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    width: \"180\",\n                    align: \"center\",\n                    label: _vm.$t(\"iot.operation\")\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\n                            \"el-button\",\n                            {\n                              attrs: { type: \"text\", size: \"small\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.openDialogGranularity(\n                                    scope.$index,\n                                    scope.row\n                                  )\n                                }\n                              }\n                            },\n                            [_vm._v(\"粒度设置\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"el-button\",\n                            {\n                              attrs: { type: \"text\", size: \"small\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.openDialogFormula(\n                                    scope.$index,\n                                    scope.row\n                                  )\n                                }\n                              }\n                            },\n                            [_vm._v(\"公式编辑\")]\n                          ),\n                          _vm._v(\" \"),\n                          scope.row.isStandard === \"2\"\n                            ? _c(\n                                \"el-button\",\n                                {\n                                  attrs: { type: \"text\", size: \"small\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.deleteInfo(\n                                        scope.$index,\n                                        scope.row\n                                      )\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"删除\")]\n                              )\n                            : _vm._e()\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          attrs: {\n            \"close-on-click-modal\": false,\n            \"close-on-press-escape\": false,\n            title: \"创建指标\",\n            visible: _vm.dialogFormVisible,\n            \"custom-class\": \"dialog-custom\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"tempRef\",\n              staticClass: \"demo-form-inline\",\n              attrs: {\n                inline: true,\n                model: _vm.temp,\n                rules: _vm.rules,\n                \"label-width\": \"120px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.normName\"), prop: \"normName\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入\" + _vm.$t(\"iot.normName\") },\n                    model: {\n                      value: _vm.temp.normName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"normName\", $$v)\n                      },\n                      expression: \"temp.normName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.normCode\"), prop: \"normCode\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入\" + _vm.$t(\"iot.normCode\") },\n                    model: {\n                      value: _vm.temp.normCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"normCode\", $$v)\n                      },\n                      expression: \"temp.normCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.company\"), prop: \"company\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        filterable: \"\",\n                        \"allow-create\": \"\",\n                        placeholder: \"请选择\" + _vm.$t(\"iot.company\")\n                      },\n                      model: {\n                        value: _vm.temp.company,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"company\", $$v)\n                        },\n                        expression: \"temp.company\"\n                      }\n                    },\n                    _vm._l(_vm.iot_norm_company, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.indexDescription\") } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: \"请输入\" + _vm.$t(\"iot.indexDescription\")\n                    },\n                    model: {\n                      value: _vm.temp.indexDescription,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"indexDescription\", $$v)\n                      },\n                      expression: \"temp.indexDescription\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\"el-button\", { on: { click: _vm.closeDialog } }, [\n                _vm._v(_vm._s(_vm.$t(\"btn.cancel\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.createInfo } },\n                [_vm._v(_vm._s(_vm.$t(\"btn.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          attrs: {\n            \"close-on-click-modal\": false,\n            \"close-on-press-escape\": false,\n            width: \"40%\",\n            title: \"粒度设置\",\n            visible: _vm.dialogFormVisible2,\n            \"custom-class\": \"dialog-custom\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible2 = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              staticClass: \"demo-form-inline\",\n              attrs: { model: _vm.temp2, \"label-width\": \"120px\" }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"分钟级\" } },\n                [\n                  _c(\"el-checkbox\", {\n                    attrs: { label: \"15分钟\" },\n                    model: {\n                      value: _vm.temp2.minuteFifteen,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp2, \"minuteFifteen\", $$v)\n                      },\n                      expression: \"temp2.minuteFifteen\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-checkbox\", {\n                    attrs: { label: \"30分钟\" },\n                    model: {\n                      value: _vm.temp2.minuteThirty,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp2, \"minuteThirty\", $$v)\n                      },\n                      expression: \"temp2.minuteThirty\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"小时级\" } },\n                [\n                  _c(\n                    \"el-checkbox-group\",\n                    {\n                      model: {\n                        value: _vm.temp2.hour,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp2, \"hour\", $$v)\n                        },\n                        expression: \"temp2.hour\"\n                      }\n                    },\n                    [_c(\"el-checkbox\", { attrs: { label: \"60分钟\" } })],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"天级\" } },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      model: {\n                        value: _vm.temp2.day,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp2, \"day\", $$v)\n                        },\n                        expression: \"temp2.day\"\n                      }\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: \"自然天\" } }),\n                      _vm._v(\" \"),\n                      _c(\"el-radio\", { attrs: { label: \"自定义\" } })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.temp2.day === \"自定义\",\n                          expression: \"temp2.day === '自定义'\"\n                        }\n                      ],\n                      staticStyle: { \"margin-left\": \"6px\" }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"100px\" },\n                          attrs: { placeholder: \"请选择\" },\n                          model: {\n                            value: _vm.temp2.dayDetail,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp2, \"dayDetail\", $$v)\n                            },\n                            expression: \"temp2.dayDetail\"\n                          }\n                        },\n                        _vm._l(_vm.days, function(item) {\n                          return _c(\"el-option\", {\n                            key: item,\n                            attrs: { label: item, value: item }\n                          })\n                        }),\n                        1\n                      ),\n                      _vm._v(\"\\n                    -\\n                    \"),\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"100px\" },\n                          attrs: { placeholder: \"请选择\" },\n                          model: {\n                            value: _vm.temp2.dayDetail,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp2, \"dayDetail\", $$v)\n                            },\n                            expression: \"temp2.dayDetail\"\n                          }\n                        },\n                        _vm._l(_vm.days, function(item) {\n                          return _c(\"el-option\", {\n                            key: item,\n                            attrs: { label: item, value: item }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"月级\" } },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      model: {\n                        value: _vm.temp2.month,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp2, \"month\", $$v)\n                        },\n                        expression: \"temp2.month\"\n                      }\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: \"自然月\" } }),\n                      _vm._v(\" \"),\n                      _c(\"el-radio\", { attrs: { label: \"自定义\" } })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.temp2.month === \"自定义\",\n                          expression: \"temp2.month === '自定义'\"\n                        }\n                      ],\n                      staticStyle: { \"margin-left\": \"6px\" }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"100px\" },\n                          attrs: { placeholder: \"请选择\" },\n                          model: {\n                            value: _vm.temp2.monthDetail,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp2, \"monthDetail\", $$v)\n                            },\n                            expression: \"temp2.monthDetail\"\n                          }\n                        },\n                        _vm._l(_vm.months, function(item) {\n                          return _c(\"el-option\", {\n                            key: item,\n                            attrs: { label: item, value: item }\n                          })\n                        }),\n                        1\n                      ),\n                      _vm._v(\"\\n                    -\\n                    \"),\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"100px\" },\n                          attrs: { placeholder: \"请选择\" },\n                          model: {\n                            value: _vm.temp2.monthDetail,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp2, \"monthDetail\", $$v)\n                            },\n                            expression: \"temp2.monthDetail\"\n                          }\n                        },\n                        _vm._l(_vm.months, function(item) {\n                          return _c(\"el-option\", {\n                            key: item,\n                            attrs: { label: item, value: item }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"年级\" } },\n                [\n                  _c(\n                    \"el-checkbox-group\",\n                    {\n                      model: {\n                        value: _vm.temp2.year,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp2, \"year\", $$v)\n                        },\n                        expression: \"temp2.year\"\n                      }\n                    },\n                    [_c(\"el-checkbox\", { attrs: { label: \"年\" } })],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\"el-button\", { on: { click: _vm.closeDialogGranularity } }, [\n                _vm._v(_vm._s(_vm.$t(\"btn.cancel\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.createGranularity }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          attrs: {\n            \"close-on-click-modal\": false,\n            \"close-on-press-escape\": false,\n            width: \"40%\",\n            title: \"公式编辑\",\n            visible: _vm.dialogFormVisible3,\n            \"custom-class\": \"dialog-custom\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible3 = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              staticClass: \"demo-form-inline\",\n              attrs: { model: _vm.temp3, \"label-width\": \"120px\" }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"设备名称\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择设备名称\" },\n                      on: { change: _vm.changeName },\n                      model: {\n                        value: _vm.temp3.name,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp3, \"name\", $$v)\n                        },\n                        expression: \"temp3.name\"\n                      }\n                    },\n                    _vm._l(_vm.deviceNames, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.deviceCode,\n                        attrs: {\n                          label: item.deviceName,\n                          value: item.deviceCode\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"设备点位\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择设备点位\" },\n                      model: {\n                        value: _vm.temp3.point,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp3, \"point\", $$v)\n                        },\n                        expression: \"temp3.point\"\n                      }\n                    },\n                    _vm._l(_vm.devicePoints, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.attributeCode,\n                        attrs: {\n                          label: item.attributeName,\n                          value: item.attributeCode\n                        }\n                      })\n                    }),\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.copyPoint($event)\n                        }\n                      }\n                    },\n                    [_vm._v(\"复制此点位\")]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"设备铭牌\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择设备铭牌\" },\n                      model: {\n                        value: _vm.temp3.nameplate,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp3, \"nameplate\", $$v)\n                        },\n                        expression: \"temp3.nameplate\"\n                      }\n                    },\n                    _vm._l(_vm.deviceNameplates, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.tagValue,\n                        attrs: { label: item.value, value: item.tagValue }\n                      })\n                    }),\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.copyNameplate($event)\n                        }\n                      }\n                    },\n                    [_vm._v(\"复制此铭牌\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticStyle: { \"margin-bottom\": \"10px\" } }, [\n            _vm._v(\"公式编辑\"),\n            _c(\"i\", { staticClass: \"el-icon-question\" })\n          ]),\n          _vm._v(\" \"),\n          _c(\"el-input\", {\n            attrs: { type: \"textarea\", rows: 2 },\n            model: {\n              value: _vm.inputFormula,\n              callback: function($$v) {\n                _vm.inputFormula = $$v\n              },\n              expression: \"inputFormula\"\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.inputFormulaCode,\n                  expression: \"inputFormulaCode\"\n                }\n              ],\n              staticStyle: { \"margin-top\": \"10px\" }\n            },\n            [_vm._v(\"公式预览：\" + _vm._s(_vm.inputFormulaCode))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\"el-button\", { on: { click: _vm.closeDialogFormula } }, [\n                _vm._v(_vm._s(_vm.$t(\"btn.cancel\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.saveFormula } },\n                [_vm._v(_vm._s(_vm.$t(\"btn.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}