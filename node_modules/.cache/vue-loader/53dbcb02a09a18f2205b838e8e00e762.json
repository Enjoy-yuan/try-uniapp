{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogMaterielCategory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogMaterielCategory.vue","mtime":1596610933150},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Tree from \"@/components/Tree\"\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport { DICT_CODE } from '@/utils/constant'\nimport { queryRecords as getMaterielCateList } from \"@/api/project/srm/materialClassify/materialMaintain\"\nimport Pagination from '@/components/Pagination'\n\nexport default {\n    name: 'personSelect',\n    components: { caiGou, Pagination, Tree },\n    props: ['unMutiple', 'title', 'propName', 'propCode', 'required'],\n    data () {\n        return {\n            valueType: 'code',//code返回code name,row返回一行\n            treeType: 'materielCategory',\n            treeParams: {\n                orgCode: null\n            },\n            treeStyleObj: {\n                height: '460px',\n                overflow: 'auto'\n            },\n            activeName: 'first',\n            DICT_CODE: DICT_CODE,\n            tableKey: [0, 1, 2],\n            dialogVisible: false,\n            list: [],\n            total: 0,\n            listLoading: true,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                supplierCode: null,\n                supplierName: null,\n                orgCode: null,\n                classCode: null,\n                className: null\n            },\n            selectedRows: [],\n            currentSelectedRow: null,\n            filterConfig: [\n                { type: 'selectcaiGou', label: '组织编码', prop: 'orgCode', width: '', class: 'filter-item ml_5' },\n                { type: 'inputBtnGys', label: '供应商名称', prop: 'supplierName', width: '', class: 'ml_5' },\n                { type: 'commonInput', label: '分类编码', prop: 'classCode', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '分类名称', prop: 'className', width: '', class: 'filter-item ml_5' },\n            ],\n            mainTitle: [\n                { width: null, align: 'left', label: '分类编码', prop: 'classCode' },\n                { width: null, align: 'left', label: '分类名称', prop: 'className' },\n                { width: null, align: 'left', label: '上级分类', prop: 'parentRowId' },\n                { width: null, align: 'left', label: '采购组', prop: 'orgCode' }\n            ]//备选项主表头数据\n        }\n    },\n    watch: {\n        'listQuery.orgCode' (val) {\n            this.treeParams.orgCode = val\n        }\n    },\n    methods: {\n        //选中某一行\n        checked (i) {\n            this.$refs.tbselect.toggleRowSelection(this.list[i], true)\n        },\n        handleQuery () {\n            this.listQuery.page = 1\n            getMaterielCateList(this.listQuery).then(response => {\n                this.list = response.data.list\n                this.total = response.data.pages.count\n                if (this.selectedRows) {\n                    this.selectedRows.forEach(items => {\n                        this.list.forEach((item, index) => {\n                            if (item.classCode === items.materielClass) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        })\n                    })\n                }\n            })\n        },\n        selectChange (val) {//备选项选中行\n            if (this.unMutiple) {\n                if (val.length > 1) {\n                    this.$refs.tbselect.clearSelection() //清除其他行的选中\n                    this.$refs.tbselect.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        handleConfirm () {\n            if (this.required && this.selectedRows) {\n                if (this.selectedRows.length === 0) {\n                    this.$message({ type: 'warning', message: '请选择一条数据' })\n                } else {\n                    this.$emit('handleConfirm', this.selectedRows)\n                    this.dialogVisible = false\n                }\n            } else {\n                if (this.selectedRows) {\n                    if (this.selectedRows.length === 0) {\n                        if (this.valueType === 'code') {\n                            this.$emit('handleConfirm', [{ materielClass: null, materielClassName: null }])\n                        } else {\n                            this.$emit('handleConfirm', null)\n                        }\n                    } else {\n                        this.$emit('handleConfirm', this.selectedRows)\n                    }\n                } else {\n                    if (this.valueType === 'code') {\n                        this.$emit('handleConfirm', [{ materielClass: null, materielClassName: null }])\n                    } else {\n                        this.$emit('handleConfirm', null)\n                    }\n                }\n                this.dialogVisible = false\n            }\n        },\n        showGys () {\n            this.$emit('showGys', 'mc')\n        },\n        setGys (gysRows) {\n            this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName)\n            this.$set(this.listQuery, 'supplierCode', gysRows[0].supplierCode)\n        },\n        setTreeDatas (classCode) {\n            this.$set(this.listQuery, 'classCode', classCode)\n            this.handleQuery()\n        }\n    }\n}\n",null]}