{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/energyReport/analysisEnergyReport/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/energyReport/analysisEnergyReport/index.vue","mtime":1596610933521},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/energyReport/index.js'\nexport default {\n    name: 'analysisEnergyReport', //重点产品报表\n    data () {\n        return {\n            theight: 0, //表格高度\n            isSingle: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            yAxisData: [],\n            barData: {\n                id: 'oneBar-analysisEnergy',\n                data: null\n            },\n            pieData: {\n                id: 'pie-analysisEnergy',\n                data: null\n            },\n            barBtmData: {\n                id: 'btn-analysisEnergy',\n                data: null\n            },\n            xAxisBtm: [],\n            dataTime: undefined,\n            listQuery: {\n                //查询\n                beginTime: undefined,\n                endTime: undefined\n            },\n            color: [\n                '#fd6361',\n                '#02b7ae',\n                '#37454e',\n                '#ff9669',\n                '#05b7ab',\n                '#606b6d',\n            ] //黄 蓝 黑 灰 红 橘  绿\n        }\n    },\n    // watch: {\n    //     'barData.data' (val) {\n    //         this.getBar(\n    //             val,\n    //             '',\n    //             this.yAxisData,\n    //             '',\n    //             '日分项用能同比分析',\n    //             '',\n    //             15\n    //         )\n    //     }\n    // },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    destroyed () {\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        //获取表格数据\n        getList () {\n            api.analysisEnergy(this.listQuery).then(res => {\n                let btmList = res.data.list1\n                let pieList = res.data.pieList\n                let contrastList = res.data.list\n\n                let key = Object.getOwnPropertyNames(btmList)\n                let data = []\n                this.xAxisBtm = []\n                btmList[key[0]].forEach((item, i) => {\n                    data.push({\n                        name: item.energyItemName,\n                        type: 'bar',\n                        stack: '总量',\n                        label: {\n                            show: true,\n                            position: 'insideRight'\n                        },\n                        itemStyle: {\n                            normal: { color: this.color[i] }\n                        },\n                        data: []\n                    })\n                })\n                key.forEach(item => {\n                    btmList[item].forEach((i, index) => {\n                        i.day = i.day.split('-')[1] + '-' + i.day.split('-')[2]\n\n                        if (btmList[item].energyItemName == data.name) {\n                            data[index].data.push(\n                                btmList[item][index].meterData\n                            )\n                            // data[index].data.push(Math.ceil(Math.random() * 10))\n                        }\n                    })\n                    this.xAxisBtm.push(btmList[item][0].day)\n                })\n                let pieData = []\n                pieList.forEach(item => {\n                    pieData.push({\n                        value: item.meterData,\n                        name: item.energyItemName\n                    })\n                })\n                let yAxisData = contrastList.map(i => {\n                    return i.energyItemName\n                })\n                this.yAxisData = yAxisData\n                let topList = [\n                    {\n                        name: '昨日',\n                        type: 'bar',\n                        itemStyle: {\n                            normal: {\n                                color: '#37454e',\n                                barBorderRadius: [0, 10, 5, 0]\n                            }\n                        },\n\n                        data: []\n                    },\n                    {\n                        name: '今日',\n                        type: 'bar',\n                        itemStyle: {\n                            normal: {\n                                color: '#05b7ab', //\n                                barBorderRadius: [0, 5, 10, 0]\n                            }\n                        },\n                        data: []\n                    }\n                ]\n                contrastList.forEach(item => {\n                    topList.forEach((i, index) => {\n                        if (i.name == '昨日') {\n                            topList[index].data.push(item.yesterdayData)\n                        } else if (i.name == '今日') {\n                            topList[index].data.push(item.todayData)\n                        }\n                    })\n                })\n                this.pieData.data = pieData\n                this.barBtmData.data = data\n                this.barData.data = topList\n                this.getBar(\n                    this.barData,\n                    '',\n                    this.yAxisData,\n                    '',\n                    '日分项用能同比分析',\n                    '',\n                    15\n                )\n                this.getBar(\n                    this.barBtmData,\n                    this.xAxisBtm,\n                    '',\n                    '',\n                    '过去31天分项用能趋势图',\n                    45,\n                    ''\n                )\n                this.getPie(this.pieData, '过去31天分项用能饼图')\n            })\n        },\n        getBar (chartData, xAxis, yAxis, legend, name, xRotate, gridLeft) {\n            legend = legend ? legend : null\n            xRotate = xRotate ? xRotate : 0\n            gridLeft = gridLeft ? gridLeft : 8\n            xAxis = xAxis ? xAxis : null\n            yAxis = yAxis ? yAxis : null\n            name = name ? name : ''\n            let axisLine = {\n                lineStyle: {\n                    color: '#d9d9d9'\n                }\n            }\n            let opt = {\n                title: { text: name },\n                grid: {\n                    left: `${gridLeft}%`\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'shadow'\n                    }\n                },\n                xAxis: {\n                    data: xAxis,\n                    axisLabel: {\n                        //坐标轴刻度标签的相关设置。\n                        interval: 0,\n                        rotate: xRotate\n                    },\n                    axisLine: axisLine\n                },\n                yAxis: {\n                    data: yAxis,\n                    axisLine: { show: false, lineStyle: axisLine.lineStyle },\n                    axisTick: { show: false }\n                },\n                legend: {\n                    left: 'center',\n                    data: legend,\n                    top: '6%'\n                },\n                series: chartData.data\n            }\n            // this.$nextTick(() => {\n            //     var myChart = this.$echarts.init(this.$refs[chartData.id])\n            //     myChart.setOption(opt, true)\n            // })\n            setTimeout(() => {\n                var myChart = this.$echarts.init(this.$refs[chartData.id])\n                myChart.setOption(opt, true)\n            }, 500)\n        },\n        getPie (chartData, name, legend) {\n            name = name ? name : ''\n            legend = legend ? legend : null\n            let opt = {\n                title: { text: name },\n                tooltip: {\n                    confine: true,\n                    trigger: 'item',\n                    formatter: '{b} : {c} ({d}%)'\n                },\n                legend: {\n                    left: 'center',\n                    data: legend,\n                    top: '6%'\n                },\n                series: [\n                    {\n                        type: 'pie',\n                        radius: '60%',\n                        center: ['50%', '55%'],\n                        selectedMode: 'single',\n                        itemStyle: {\n                            normal: {\n                                color: function (params) {\n                                    //自定义颜色\n                                    var color = [\n                                        '#606b6d',\n                                        '#fd6361',\n                                        '#ff9669',\n                                        '#05b7ab',\n                                        '#fd6361',\n                                        '#02b7ae',\n                                        '#37454e'\n                                    ]\n                                    return color[params.dataIndex]\n                                }\n                            }\n                        },\n                        data: chartData.data\n                    }\n                ]\n            }\n            setTimeout(() => {\n                var myChart = this.$echarts.init(this.$refs[chartData.id])\n                myChart.setOption(opt, true)\n            }, 500)\n            // this.$nextTick(() => {\n            //     this.myChart = this.$echarts.init(this.$refs[chartData.id])\n            //     this.myChart.setOption(opt, true)\n            // })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n    }\n}\n",null]}