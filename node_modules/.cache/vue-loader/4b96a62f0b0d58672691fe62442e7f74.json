{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainOrder/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainOrder/index.vue","mtime":1596610933388},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/em/maintainOrder' // 增、删、改api引入\nimport { queryTeamEmployee } from '@/api/project/eas/database/groups'\nimport Pagination from '@/components/Pagination'\nimport caiGou from '@/components/Select/caigou'\nimport teamSelect from '../../components/teamSelect'\nimport deviceSelect from '../../components/singleDeviceSelect'\nimport employeeSelect from '@/components/Select/employeesSelect'\nimport partSelect from '../../components/maintainPartSelect'\nimport spareSelect from '../../components/spareSelect'\nimport fileUpload from '../../components/fileUpload'\nimport { mapState } from 'vuex' // 基本数据引入\nimport { DT_ORG_TYPE } from '@/utils/constant'\n\nexport default {\n    name: 'maintainOrder',\n    components: {\n        Pagination,\n        caiGou,\n        teamSelect,\n        deviceSelect,\n        employeeSelect,\n        spareSelect,\n        partSelect,\n        fileUpload\n    },\n    data () {\n        return {\n            currentTab: 'tab1',\n            transCode: undefined,\n            theight: 0, //表格高度\n            list: [],\n            teamWorker: [],\n            fromList: [{}],\n            total: 0,\n            tableKey: [0, 1, 2, 3, 4], //表格索引\n            timeRange: [],\n            listQuery: {\n                //查询\n                currentPage: 1,\n                pageSize: 15,\n                states: undefined\n            },\n            temp: {\n                positionList: [],\n                spareList: [],\n                deviceType: undefined,\n                orgCode: undefined,\n                teamCode: undefined,\n                teamName: undefined,\n                applicant: undefined,\n                applicantCode: undefined,\n                applicantName: undefined\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogStatus: '',\n            dialogVisible: false,\n            deviceVisible: false,\n            employeeVisible: false,\n            partVisible: false,\n            spareVisible: false,\n            curChange: false, //if the current row change\n            clickChange: false, //if click another row\n            currentSelectedRow: null, //当前选中行\n            selectedRows: [], //多选时选中的所有行\n            selectFromList1: [], //从表选中\n            selectFromList2: [], //从表选中\n            rules: {\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                equipmentCode: [\n                    {\n                        required: true,\n                        message: '设备编号不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                teamCode: [\n                    {\n                        required: true,\n                        message: '保养班组不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                applicant: [\n                    {\n                        required: true,\n                        message: '负责人不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                maintainLevel: [\n                    {\n                        required: true,\n                        message: '保养级别不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                timeRange: [\n                    {\n                        required: true,\n                        message: '计划保养时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                positionList: [\n                    {\n                        required: true,\n                        message: '请选择保养部位',\n                        trigger: 'blur'\n                    }\n                ],\n                spareList: [\n                    {\n                        required: true,\n                        message: '请选择使用备件',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            rules2: {\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                equipmentCode: [\n                    {\n                        required: true,\n                        message: '设备编号不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                teamCode: [\n                    {\n                        required: true,\n                        message: '保养班组不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                applicant: [\n                    {\n                        required: true,\n                        message: '负责人不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                maintainLevel: [\n                    {\n                        required: true,\n                        message: '保养级别不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                positionList: [\n                    {\n                        required: true,\n                        message: '请选择保养部位',\n                        trigger: 'blur'\n                    }\n                ],\n                spareList: [\n                    {\n                        required: true,\n                        message: '请选择使用备件',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    filters: {\n        normalFilter (val) {\n            return val == 'Y' ? '正常' : val == 'N' ? '异常' : ''\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_upkeep_worder_state: state =>\n                state.eamDict.dt_upkeep_worder_state,\n            dt_upkeep_level: state => state.eamDict.dt_upkeep_level,\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n        })\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        timeRange (value) {\n            if (value) {\n                this.listQuery.createTimeStart = value[0]\n                this.listQuery.createTimeEnd = value[1]\n            } else {\n                delete this.listQuery.createTimeStart\n                delete this.listQuery.createTimeEnd\n            }\n        },\n        'temp.timeRange' (value) {\n            if (value) {\n                this.temp.planStartTime = value[0]\n                this.temp.planEndTime = value[1]\n            }\n        },\n        'listQuery.orgCode' () {\n            this.$set(this.listQuery, 'teamCode', undefined)\n            this.$refs.teamSelectQuery.itemKey = ''\n        },\n        'temp.orgCode' (val) {\n            setTimeout(() => {\n                if (val) {\n                    // 班组组件传入orgCode即可过滤成只包含当前组织的班组\n                    this.$refs.teamSelect.getOptions(val)\n                } else {\n                    this.$refs.teamSelect.getOptions()\n                    this.$set(this.temp, 'tempCode', undefined)\n                }\n            }, 0)\n        },\n        'temp.teamCode' (val) {\n            if (val) {\n                this.getTeamWorker(val)\n\n                // this.temp.teamName = this.$refs.teamSelect.options.filter(\n                //     item => item.teamCode == val\n                // )[0].teamName\n            }\n        },\n        'temp.applicant' (val) {\n            if (val && this.teamWorker.length) {\n                this.temp.applicantName = this.teamWorker.filter(\n                    item => item.employeeCode == val\n                )[0].employeeName\n            }\n            else {\n                this.temp.applicant = undefined\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_upkeep_worder_state',\n            'dt_upkeep_level',\n            'dt_file_equipment'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        setTimeout(() => {\n            this.getList()\n            this.getTeamWorker()\n        }, 500)\n    },\n    methods: {\n        getTemp (val) {\n            if (val) {\n                this.temp.teamName = val.teamName\n            }\n        },\n        addDevice () {\n            this.temp.positionList = []\n            this.deviceVisible = false\n        },\n        getTeamWorker (teamCode) {\n            queryTeamEmployee(teamCode, {\n                currentPage: 1,\n                pageSize: 1000\n            }).then(res => {\n                this.teamWorker = res.data.list\n                if (teamCode) {\n                    let arr = res.data.list.map(i => {\n                        return i.employeeCode == this.temp.employeeCode\n                    })\n                    if (!arr.includes(true)) {\n                        this.$set(this.temp, 'applicant', undefined)\n                    }\n                }\n            })\n        },\n        createDevice () {\n            this.deviceVisible = true\n            setTimeout(() => {\n                this.$refs.deviceSelect.getList()\n            }, 0)\n        },\n        calMain () { },\n        handleAdd (num) {\n            if (num == 1) {\n                if (!this.temp.equipmentCode) {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择设备',\n                        type: 'warning'\n                    })\n                    return\n                }\n                this.partVisible = true\n                setTimeout(() => {\n                    this.$refs.partSelect.getList()\n                }, 0)\n            } else {\n                this.spareVisible = true\n                setTimeout(() => {\n                    this.$refs.spareSelect.getList()\n                }, 0)\n            }\n        },\n        getSpare () {\n            // 备件\n            var val = this.$refs.spareSelect.currentSelect\n            this.spareVisible = false\n            this.$refs.spareSelect.currentSelect = []\n            if (val) {\n                var tmp = this.temp.spareList.concat(val)\n                this.temp.spareList = tmp\n            } else {\n                return\n            }\n        },\n        getPart () {\n            // 部件\n            var val = this.$refs.partSelect.currentSelect\n            this.partVisible = false\n            this.$refs.partSelect.currentSelect = []\n            if (val) {\n                var tmp = this.temp.positionList.concat(val)\n                this.temp.positionList = tmp\n            } else {\n                return\n            }\n        },\n        getOrg (val) {\n            this.$set(this.temp, 'teamCode', '')\n            this.$set(this.temp, 'teamName', '')\n            // 组织编码\n            if (val) {\n                this.$set(this.temp, 'orgCode', val.organizationCode)\n                this.$set(this.temp, 'orgName', val.organizationName)\n            } else {\n                this.temp.teamCode = ''\n                this.temp.teamName = ''\n                this.temp.orgCode = ''\n                this.temp.orgName = ''\n                return\n            }\n        },\n        getEmployee (val) {\n            // 保养负责人\n            if (val) {\n                Object.assign(this.temp, {\n                    applicant: val[0].employeeCode,\n                    applicantName: val[0].employeeName\n                })\n            } else {\n                return\n            }\n        },\n        getDevice (val) {\n            // 获取选择设备信息\n            if (val) {\n                Object.assign(this.temp, {\n                    equipmentCode: val.deviceCode,\n                    deviceName: val.deviceName,\n                    useDeptName: val.useDeptName,\n                    useDept: val.useDept,\n                    address: val.address,\n                    addressName: val.addressName,\n                    modelNumber: val.modelNumber,\n                    deviceType: val.typeCode\n                })\n            } else {\n                return\n            }\n        },\n        changeTab () {\n            if (this.currentTab == 'tab1') {\n                this.getDetail()\n            } else if (this.currentTab == 'tab2') {\n                this.transCode = this.currentClickRow.workOrderNumber\n                // this.$refs.fileUpload.getList()\n            } else {\n                return\n            }\n        },\n        handleCheckRow (row) {\n            api.queryDetails({\n                workOrderNumber: row.workOrderNumber\n            }).then(res => {\n                api.queryParts(row.workOrderNumber).then(res2 => {\n                    this.temp.positionList = res.data\n                    this.temp.spareList = res2.data\n                    Object.assign(this.temp, row)\n                    this.dialogStatus = 'update'\n                    this.dialogVisible = true\n                    setTimeout(() => {\n                        this.$refs.caiGou.itemKey = this.temp.orgCode\n                        this.$refs.teamSelect.itemKey = this.temp.teamCode\n                        this.temp.timeRange = [\n                            this.temp.planStartTime,\n                            this.temp.planEndTime\n                        ]\n                    }, 0)\n                })\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        getList () {\n            //获取表格数据\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = this.$myFun.codeToName(\n                    res.data,\n                    [this.dt_upkeep_worder_state],\n                    ['state']\n                ).list\n                this.total = res.data.pages.count\n                this.$nextTick(() => {\n                    this.$refs.tb.toggleRowSelection(this.list[0], true)\n                })\n            })\n        },\n        resetTemp () {\n            this.temp = { positionList: [], spareList: [] }\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            delete this.listQuery.timeRange\n            this.getList()\n            this.fromList = undefined\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogVisible = true\n            setTimeout(() => {\n                this.$refs.caiGou.itemKey = ''\n            }, 0)\n        },\n        create () {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (this.temp.spareList.every(item => item.applyQuantity)) {\n                        this.temp.positionList.forEach((item, index) => {\n                            item.serialNumber = index\n                        })\n                        api.addRecord(this.temp).then(res => {\n                            if (res.status == 201) {\n                                this.dialogVisible = false\n                                this.$message({\n                                    title: '成功',\n                                    message: '创建成功',\n                                    type: 'success'\n                                })\n                                this.getList()\n                            }\n                        })\n                    } else {\n                        this.$message({\n                            title: '警告',\n                            message: '请输入备件数量',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                }\n            })\n        },\n        handleUpdate () {\n            //编辑按钮单击事件方法\n            if (this.selectedRows) {\n                this.temp = this.selectedRows\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    this.temp.positionList.forEach((item, index) => {\n                        item.serialNumber = index\n                    })\n                    api.patchRecord(this.temp.workOrderNumber, this.temp).then(\n                        res => {\n                            if (res.status == 201) {\n                                this.dialogVisible = false\n                                this.$message({\n                                    title: '成功',\n                                    message: '修改成功',\n                                    type: 'success'\n                                })\n                                this.getList()\n                                this.fromList = []\n                            }\n                        }\n                    )\n                }\n            })\n        },\n        handleDispatch () {\n            if (this.selectedRows) {\n                let newArr = this.selectedRows.filter(i => {\n                    return i.state !== 'ukwos_10'\n                })\n                if (newArr.length > 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '仅编制状态可派工',\n                        type: 'warning'\n                    })\n                    return\n                }\n                this.$confirm('此操作将派工, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        var tmp = this.selectedRows.map(item => item.workOrderNumber)\n                        api.dispatchRecord(tmp).then(res => {\n                            if (res.status == 201) {\n                                this.$message({\n                                    title: '成功',\n                                    message: '已派工',\n                                    type: 'success'\n                                })\n                                this.getList()\n                            }\n                        })\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleDelete () {\n            if (this.selectedRows.length) {\n                let newArr = this.selectedRows.filter(i => {\n                    return i.state !== 'ukwos_10'\n                })\n                if (newArr.length > 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '仅编制状态可删除',\n                        type: 'warning'\n                    })\n                    return\n                }\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning',\n                })\n                    .then(() => {\n                        var tmp = this.selectedRows.map(item => item.workOrderNumber)\n                        api.deleteRecord(tmp).then(res => {\n                            if (res.status == 204) {\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success'\n                                })\n                                this.getList()\n                                this.fromList = []\n                            }\n                        })\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除',\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择记录',\n                    type: 'warning'\n                })\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        //获取从表数据\n        getDetail () {\n            if (this.currentTab == 'tab2') {\n                this.transCode = this.currentClickRow.workOrderNumber\n                    ? this.currentClickRow.workOrderNumber\n                    : undefined\n                this.$refs.fileUpload.getList()\n                return\n            }\n            api.queryDetails({\n                workOrderNumber: this.currentClickRow.workOrderNumber\n            }).then(res => {\n                this.fromList = res.data\n                this.temp.positionList = res.data\n            })\n        },\n        handleDeleteForm (num) {\n            if (num == 1) {\n                this.selectFromList1.forEach(item => {\n                    this.temp.positionList = this.temp.positionList.filter(\n                        i => i.maintenanceCode != item.maintenanceCode\n                    )\n                })\n            } else {\n                this.selectFromList2.forEach(item => {\n                    this.temp.spareList = this.temp.spareList.filter(\n                        i => i.materielCode != item.materielCode\n                    )\n                })\n            }\n        },\n        //从表选择框选中\n        selectFromChange1 (val) {\n            this.selectFromList1 = val\n        },\n        rowClickFrom1 (val) {\n            this.$refs.sub1.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectFromChange2 (val) {\n            this.selectFromList2 = val\n        },\n        rowClickFrom2 (val) {\n            this.$refs.sub2.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        checkSelectStatus (rows, row) {\n            let checkStatus = false\n            if (rows) {\n                if (\n                    this.selectedRows.length <= rows.length &&\n                    rows.length != 0\n                ) {\n                    checkStatus = true\n                }\n            }\n            if (row) {\n                if (\n                    JSON.stringify(this.selectedRows).indexOf(\n                        JSON.stringify(row)\n                    ) == -1\n                ) {\n                    checkStatus = true\n                }\n            }\n            return checkStatus\n        },\n        //点击表格某一行\n        rowClick (row) {\n            if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n                this.clickChange = false\n            } else {\n                this.clickChange = true\n            }\n            this.currentClickRow = row\n            let selectStatus = this.checkSelectStatus(null, row)\n            if (selectStatus) {\n                this.currentSelectedRow = row\n                this.$refs.tb.toggleRowSelection(row, true)\n                this.getDetail()\n            } else {\n                if (this.clickChange) {\n                    this.$refs.tb.setCurrentRow(this.currentClickRow)\n                    this.getDetail()\n                }\n            }\n        },\n        selectChange (val) {\n            this.selectedRows = val\n            if (this.clickChange) {\n                this.$refs.tb.setCurrentRow(this.currentClickRow)\n                this.getDetail()\n            }\n        },\n        tableSelect (rows, row) {\n            let selectStatus = this.checkSelectStatus(rows)\n            if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n                this.clickChange = false\n            } else {\n                this.clickChange = true\n                this.currentClickRow = row\n            }\n            if (selectStatus) {\n                this.currentSelectedRow = row\n            } else {\n                this.curChange = false\n            }\n        }\n    }\n}\n",null]}