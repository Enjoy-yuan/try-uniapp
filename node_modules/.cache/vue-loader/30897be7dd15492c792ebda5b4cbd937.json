{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/definePointInspectionPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/definePointInspectionPlan/index.vue","mtime":1596610933408},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/ESC/definePointInspectionPlan'\nimport { queryTeamEmployee } from '@/api/project/eas/database/groups'\nimport Pagination from '@/components/Pagination'\nimport teamSelect from '../../components/teamSelect'\nimport caiGou from '@/components/Select/caigou'\nimport { mapState } from 'vuex'\nimport tab1 from './tab1'\nimport tab2 from './tab2'\nimport tab3 from './tab3'\n\nexport default {\n    name: 'definePointInspectionPlan',\n    components: {\n        Pagination,\n        tab1,\n        tab2,\n        tab3,\n        teamSelect,\n        caiGou\n    },\n    data () {\n        return {\n            list: [],\n            materiaList: [],\n            teamWorker: [],\n            dialogStatus: '',\n            dialogFormVisible: false,\n            dialogVisible2: false,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                rollCycleUtil: undefined,\n                executor: undefined,\n                inspectionPlanName: undefined\n            },\n            tabName: 'jhzxjl',\n            tabConfig: [\n                { label: '计划执行记录', name: 'jhzxjl', prop: 'jhzxjl' },\n                { label: '跳过时间', name: 'tgsj', prop: 'tgsj' },\n                { label: '点巡检设备', name: 'dxjsb', prop: 'dxjsb' }\n            ],\n            tableKey: [0],\n            temp: {\n                inspectionPlanName: undefined,\n                teamCode: undefined,\n                executor: undefined,\n                rollCycle: undefined,\n                rollCycleUtil: undefined,\n                executorRange: undefined,\n                executorRangeUtil: undefined,\n                nextInspectionTime: undefined,\n                remindTime: undefined,\n                remindTimeUtil: undefined,\n                isEnable: undefined,\n                remark: undefined\n            },\n            // 盘点人model\n            tempVal: {\n                employeeName: undefined\n            },\n            tempRules: {\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                inspectionPlanName: [\n                    {\n                        required: true,\n                        message: '计划名称不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                teamCode: [\n                    {\n                        required: true,\n                        message: '班组不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                executor: [\n                    {\n                        required: true,\n                        message: '执行人不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                rollCycle: [\n                    {\n                        required: true,\n                        message: '滚动周期不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                rollCycleUtil: [\n                    {\n                        required: true,\n                        message: '滚动周期不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                executorRange: [\n                    {\n                        required: true,\n                        message: '执行范围不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                executorRangeUtil: [\n                    {\n                        required: true,\n                        message: '执行范围不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                nextInspectionTime: [\n                    {\n                        required: true,\n                        message: '下次时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                isEnable: [\n                    {\n                        required: true,\n                        message: '状态不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                remindTime: [\n                    {\n                        required: true,\n                        message: '提醒时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                remindTimeUtil: [\n                    {\n                        required: true,\n                        message: '提醒时间不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            selectlistRow: []\n        }\n    },\n    watch: {\n        'temp.orgCode' (val, val2) {\n            if (val2) {\n                this.temp.teamCode = undefined\n                this.$refs.teamSelect.itemKey = ''\n                this.temp.teamCode = ''\n            }\n            setTimeout(() => {\n                if (val) {\n                    // 班组组件传入orgCode即可过滤成只包含当前组织的班组\n                    this.$refs.teamSelect.getOptions(val)\n                } else {\n                    this.$refs.teamSelect.getOptions()\n                }\n            }, 0)\n        },\n        'temp.teamCode' (val) {\n            if (val) {\n                this.getTeamWorker(val)\n            } else {\n                this.temp.executor = undefined\n            }\n        },\n        'temp.executor' (val) {\n            if (val && this.dialogStatus == 'create') {\n                this.temp.executorName = this.teamWorker.filter(\n                    item => item.employeeCode == val\n                )[0].employeeName\n            } else {\n                this.temp.executorName = ''\n            }\n        }\n    },\n    filters: {\n        splitState: function (e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_inspection_plan_cycle: state =>\n                state.eamDict.dt_inspection_plan_cycle,\n            dt_inspection_plan_remind: state =>\n                state.eamDict.dt_inspection_plan_remind\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_inspection_plan_cycle',\n            'dt_inspection_plan_remind'\n        ])\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n                if (this.list.length) {\n                    this.$nextTick(() => {\n                        // 默认选中第一行\n                        this.$refs.mainList.toggleRowSelection(\n                            this.list[0],\n                            true\n                        )\n                        this.getListSub()\n                    })\n                }\n            })\n        },\n        getTeamWorker (teamCode) {\n            queryTeamEmployee(teamCode, {\n                currentPage: 1,\n                pageSize: 1000\n            }).then(res => {\n                this.teamWorker = res.data.list\n            })\n        },\n        getListSub () {\n            switch (this.tabName) {\n                case 'jhzxjl':\n                    this.$refs.tab1[0].getList()\n                    break\n                case 'tgsj':\n                    this.$refs.tab2[0].getList()\n                    break\n                case 'dxjsb':\n                    this.$refs.tab3[0].getList()\n                    break\n            }\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            //新增按钮单击事件方法\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.addRecords(this.temp).then(res => {\n                        if (res.status == 201) {\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                            this.dialogFormVisible = false\n                        }\n                    })\n                }\n            })\n        },\n        handleUpdate () {\n            this.resetTemp()\n            if (this.selectlistRow.length) {\n                this.temp = this.selectlistRow[0]\n                this.tempVal.employeeName = this.selectlistRow[0].executorName\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n                setTimeout(() => {\n                    this.$refs.teamSelect.itemKey = this.selectlistRow[0].teamCode\n                }, 0)\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleUpdate2 () {\n            if (this.selectlistRow.length) {\n                this.temp = this.selectlistRow[0]\n                this.tempVal.employeeName = this.selectlistRow[0].executorName\n                this.dialogVisible2 = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.patchRecords(\n                        this.temp.inspectionPlanCode,\n                        this.temp\n                    ).then(res => {\n                        if (res.status == 201) {\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.dialogVisible2 = false\n                        }\n                    })\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow.length) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecords(\n                            this.selectlistRow[0].inspectionPlanCode\n                        ).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleState (num) {\n            //删除列表\n            if (this.selectlistRow.length) {\n                api.changeRecords(\n                    this.selectlistRow[0].inspectionPlanCode,\n                    num\n                ).then(() => {\n                    this.getList(),\n                        this.$message({\n                            title: '成功',\n                            message: num == 'YES' ? '启用成功' : '已停用',\n                            type: 'success',\n                            duration: 2000\n                        })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleBarcode () { },\n        handleClick () {\n            if (this.selectlistRow.length) {\n                this.getListSub()\n            }\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n            if (val.length == 0) {\n                this.selectlistRow = []\n                this.$refs.tab3[0].list = []\n                return false\n            }\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.mainList.setCurrentRow(this.selectlistRow[0])\n            if (this.selectlistRow.length) {\n                this.getListSub()\n            }\n        },\n        //主表行点击\n        showSubTable (val) {\n            this.$refs.mainList.toggleRowSelection(val, 'selected')\n        },\n        resetTemp () {\n            this.temp = {\n                inspectionPlanName: undefined,\n                teamCode: undefined,\n                executor: undefined,\n                rollCycle: undefined,\n                rollCycleUtil: undefined,\n                executorRange: undefined,\n                executorRangeUtil: undefined,\n                nextInspectionTime: undefined,\n                remindTime: undefined,\n                remindTimeUtil: undefined,\n                isEnable: undefined,\n                remark: undefined\n            }\n            this.tempVal = {\n                employeeName: undefined\n            }\n        }\n    }\n}\n",null]}