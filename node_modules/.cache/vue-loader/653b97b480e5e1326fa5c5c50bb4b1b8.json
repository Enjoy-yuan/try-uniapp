{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/PM/gatewayProducts/tabs/mainInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/PM/gatewayProducts/tabs/mainInfo.vue","mtime":1600927611520},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/PM/gatewayProducts\"\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nexport default {\n    name: \"gatewayProductsMainInfo\",\n    props: ['code'],\n    data () {\n        return {\n            dialogFormVisible: false,\n            form: {\n                gatewayCode: undefined,\n                gatewayName: undefined,\n                authentication: undefined,\n                dataFormat: undefined,\n                nodeType: undefined,\n                isTls: 0,\n                remark: undefined\n            },\n            temp: {\n                gatewayCode: undefined,\n                gatewayName: undefined,\n                authentication: undefined,\n                dataFormat: undefined,\n                nodeType: undefined,\n                isTls: undefined,\n                remark: undefined\n            },\n            rules: {\n                gatewayCode: [\n                    {\n                        required: true,\n                        message: '网关产品编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[a-zA-Z0-9]{0,32}$/,\n                        message: '由大写字母、数字组成，长度为32',\n                        trigger: 'blur'\n                    }\n                ],\n                gatewayName: [\n                    {\n                        required: true,\n                        message: '网关产品名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' },\n                    {\n                        pattern: /^[\\u4e00-\\u9fa5a-zA-Z0-9]{0,32}$/,\n                        message: '由大写字母、数字及中文组成',\n                        trigger: 'blur'\n                    }\n                ],\n                authentication: [\n                    {\n                        required: true,\n                        message: '请选择认证方式',\n                        trigger: 'change'\n                    }\n                ],\n                dataFormat: [\n                    {\n                        required: true,\n                        message: '请选择数据格式',\n                        trigger: 'change'\n                    }\n                ],\n                nodeType: [\n                    {\n                        required: true,\n                        message: '请选择节点类型',\n                        trigger: 'change'\n                    }\n                ],\n                remark: [\n                    {\n                        max: 100,\n                        message: '长度不大于100字',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            iot_authentication: state => state.iotDict.iot_authentication,\n            iot_data_format: state => state.iotDict.iot_data_format,\n            iot_node_type: state => state.iotDict.iot_node_type\n        })\n    },\n    mounted () {\n        this.getList()\n    },\n    methods: {\n        getList () {\n            if (this.$route.name == \"gatewayProducts\") {\n                api.queryRecord(this.code).then(res => {\n                    let options = [this.iot_authentication, this.iot_data_format, this.iot_node_type]\n                    res.data = this.$myFun.codeToNameS(res.data, options, ['authentication', 'dataFormat', 'nodeType'])\n                    this.form = res.data\n                    this.form.isTlsCN = this.form.isTls == 1 ? '是' : '否'\n                })\n            }\n        },\n        handleUpdate () {\n            this.dialogFormVisible = true\n            this.temp = JSON.parse(JSON.stringify(this.form))\n        },\n        update: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        api.updateRecord(this.code, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.resetTemp()\n                            this.$notify({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleUpdateFile () {\n            this.$message({\n                title: this.$t('message.warning'),\n                message: \"此功能暂未开放,敬请期待!\",\n                type: \"warning\"\n            })\n            return\n        },\n        resetTemp () {\n            this.temp = {}\n        }\n    }\n};\n",null]}