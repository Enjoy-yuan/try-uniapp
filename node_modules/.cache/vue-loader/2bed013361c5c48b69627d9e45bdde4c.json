{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/dataBase/processRoute/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/dataBase/processRoute/index.vue","mtime":1596610933560},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/mes/dataBase/processRoute'\nimport Pagination from '@/components/Pagination'\nimport orgSelect from '@/components/Select/orgSelect.vue'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport { mapState } from 'vuex'\nimport workStationTable from './workStationTable'\nimport processStepCode from './processStepCode'\nimport caiGou from '@/components/Select/xtpt/caigou' //下拉组件\nimport materiel from './materiel' //下拉组件\n\nexport default {\n    name: 'processRoute',\n    components: {\n        Pagination,\n        orgSelect,\n        workStationTable,\n        processStepCode,\n        caiGou,\n        materiel\n    },\n    data() {\n        return {\n            theight: 0, //表格高度\n            isSingle: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            fromList: [],\n            total: 0,\n            total1: 0,\n            listQuery: {\n                //查询\n                productProcessCode: undefined,\n                currentPage: 1,\n                pageSize: 15\n            },\n            listQuery1: {\n                //查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                productProcessCode: undefined,\n                endTime: undefined,\n                version: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                productCode: undefined,\n                startTime: undefined\n            },\n            tempFrom: {\n                eoq: undefined,\n                isEnd: 1,\n                isFirst: 1,\n                note: undefined,\n                processCode: undefined,\n                readyTime: undefined,\n                workCenterCode: undefined,\n                supplierCode: undefined,\n                transferTime: undefined,\n                workTime: undefined\n            },\n            materielDialogVisible: false,\n            dialogFormVisible: false,\n            fromDialogFormVisible: false,\n            workStationDialogVisible: false,\n            processStepCodenDialogVisible: false,\n            dialogStatus: '',\n            fromDialogStatus: '',\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            currentSelectedRow: null, //当前选中的行\n            selectedRows: null, //多选时选中的所有行\n            tableKey: [0, 1], //表格索引\n            rules: {\n                // processCode: [\n                //     {\n                //         required: true,\n                //         message: '工序编码不能为空',\n                //         trigger: 'blur'\n                //     },\n\n                // ],\n                // stationCode: [\n                //     {\n                //         required: true,\n                //         message: '工段不能为空',\n                //         trigger: 'blur'\n                //     },\n                // ],\n                productProcessCode: [\n                    {\n                        required: true,\n                        message: '工艺路线编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                productCode: [\n                    {\n                        required: true,\n                        message: '产品编码不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            rules1: {\n                processCode: [\n                    {\n                        required: true,\n                        message: '工序编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                stationCode: [\n                    {\n                        required: true,\n                        message: '工段不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    created() {},\n    filters: {\n        statusFilter: function(e) {\n            if (e === 'pro20') {\n                return '已发布'\n            } else {\n                return '未发布'\n            }\n        },\n        isEndFilter: function(e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        },\n        isFirstFilter: function(e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_role_type: state => state.mesDict.dt_role_type\n        })\n    },\n    mounted() {\n        this.$store.dispatch('mesDict/getDicData', ['dt_role_type'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        //获取主表表格数据\n        getList() {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //获取从表数据\n        getFromList() {\n            api.queryDetailRecords(this.selectedRows.productProcessCode).then(\n                res => {\n                    this.fromList = res.data\n                    // this.total1 = res.data.pages.count\n                }\n            )\n        },\n        //表格查询\n        handleQuery() {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleClose() {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleCloseFrom() {\n            this.resetFromTemp()\n            this.$refs.tempFrom.resetFields()\n        },\n        //产品编码弹窗\n        handleProductCode() {\n            this.materielDialogVisible = true\n        },\n        //产品编码父子传值\n        handleDblclickMateriel(row) {\n            this.materielRow = row\n            console.log(this.materielRow, 79)\n        },\n        //产品编码数据确认\n        materielUpdate() {\n            this.materielDialogVisible = false\n            this.temp.productCode = this.materielRow.materielCode\n        },\n        //表格显示条数变化\n        handleSizeChange(val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange(val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //打开工段弹窗\n        handleWorkStationCode() {\n            this.workStationDialogVisible = true\n        },\n        //工段父子传值\n        handleDblclickWorkStation(row) {\n            this.workStationClass = row\n        },\n        //获取工段\n        workStationUpdate() {\n            if (this.workStationClass) {\n                this.tempFrom.workCenterCode = this.workStationClass.workCenterCode\n                this.workStationDialogVisible = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //打开工序弹窗\n        handleProcessCode() {\n            this.processStepCodenDialogVisible = true\n        },\n        //工序父子传值\n        handleDblclickProcessStepCode(row) {\n            this.processStepCodeClass = row\n        },\n        //获取工序\n        processStepCodeUpdate() {\n            if (this.processStepCodeClass) {\n                this.tempFrom.processCode = this.processStepCodeClass.stepCode\n                this.processStepCodenDialogVisible = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        orgname(name) {\n            this.temp.orgName = name\n        },\n        resetTemp() {\n            this.temp = {\n                productProcessCode: undefined,\n                endTime: undefined,\n                version: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                productCode: undefined,\n                startTime: undefined\n            }\n        },\n        resetFromTemp() {\n            this.tempFrom = {\n                eoq: undefined,\n                isEnd: '1',\n                isFirst: '1',\n                note: undefined,\n                processCode: undefined,\n                readyTime: undefined,\n                workCenterCode: undefined,\n                supplierCode: undefined,\n                transferTime: undefined,\n                workTime: undefined\n            }\n        },\n        handleCreate() {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create() {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        handleUpdate() {\n            //编辑按钮单击事件方法\n            if (this.selectedRows) {\n                this.temp = this.selectedRows\n                api.getRecord(this.selectedRows.productProcessCode).then(\n                    res => {\n                        this.temp = res.data\n                        this.dialogStatus = 'update'\n                        this.dialogFormVisible = true\n                    }\n                )\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update() {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(\n                        this.temp.productProcessCode,\n                        this.temp\n                    ).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        handleDelete() {\n            //删除按钮单击事件方法\n            if (this.selectedRows) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecord(\n                            this.selectedRows.productProcessCode\n                        ).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handlePublish() {\n            //发布\n            if (this.selectedRows) {\n                api.publishRecord(this.selectedRows.productProcessCode).then(\n                    () => {\n                        this.getList(),\n                            this.$message({\n                                title: '成功',\n                                message: '发布成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                    }\n                )\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleCreateFrom() {\n            this.resetFromTemp()\n            if (this.selectedRows) {\n                this.fromDialogStatus = 'create'\n                this.fromDialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择产品工艺编码',\n                    type: 'warning'\n                })\n            }\n        },\n        handleUpdateFrom() {\n            if (this.selectedRows) {\n                if (this.selectFromList) {\n                    api.getDetailRecord(\n                        this.selectedRows.productProcessCode,\n                        this.selectFromList[0].processCode\n                    ).then(res => {\n                        this.tempFrom = res.data\n                        this.fromDialogStatus = 'update'\n                        this.fromDialogFormVisible = true\n                    })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择工序编码',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择产品工艺编码',\n                    type: 'warning'\n                })\n            }\n        },\n        handleDeleteFrom() {\n            if (this.selectedRows) {\n                if (this.selectFromList) {\n                    this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    })\n                        .then(() => {\n                            api.deleteDetailRecord(\n                                this.selectedRows.productProcessCode,\n                                this.selectFromList[0].processCode\n                            ).then(() => {\n                                this.getFromList(),\n                                    this.$message({\n                                        title: '成功',\n                                        message: '删除成功',\n                                        type: 'success',\n                                        duration: 2000\n                                    })\n                            })\n                        })\n                        .catch(() => {\n                            this.$message({\n                                type: 'info',\n                                message: '已取消删除'\n                            })\n                        })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择产品工艺编码',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择产品工艺编码',\n                    type: 'warning'\n                })\n            }\n        },\n        createFrom() {\n            this.$refs.tempFrom.validate(valid => {\n                if (valid) {\n                    api.addDetailRecord(\n                        this.selectedRows.productProcessCode,\n                        this.tempFrom\n                    ).then(() => {\n                        this.getFromList()\n                        this.fromDialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        updateFrom() {\n            api.updateDetailRecord(\n                this.selectedRows.productProcessCode,\n                this.selectFromList[0].processCode,\n                this.tempFrom\n            ).then(() => {\n                this.getFromList()\n                this.fromDialogFormVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange(val) {\n            if (val.length == 0) {\n                this.fromList = []\n                return\n            }\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows)\n            if (this.selectedRows) {\n                this.getFromList()\n            }\n        },\n        //从表选择框选中\n        selectFromChange(val) {\n            this.selectFromList = val\n        },\n        //点击表格某一行\n        rowClick(val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        //点击表格某一行\n        rowClick2(val) {\n            this.$refs.tb2.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        }\n    }\n}\n",null]}