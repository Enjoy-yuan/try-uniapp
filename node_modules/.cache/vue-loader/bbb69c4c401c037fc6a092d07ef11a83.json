{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/dialog/search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/dialog/search.vue","mtime":1598232746050},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/srm/contractManage/evaluationFormat'\nimport evaluateItems from './evaluateItems'\nimport { queryRecords } from '@/api/project/srm/dataBase/dictMaintenance'\nimport { mapState } from 'vuex'\nexport default {\n    components: { evaluateItems },\n    data () {\n        return {\n            dialogStatus: '',\n            dialogVisible: false,\n            tableKey: 0,\n            list: [],\n            phaseList: [],\n            temp: {\n                evaluationNo: undefined,\n                supplierCode: undefined,\n                evaluationType: undefined,\n                evaluationCategory: undefined,\n                evaluationStage: undefined,\n                evaluationItem: undefined,\n                evaluationYear: undefined,\n                score: undefined,\n                rank: undefined,\n                evaluationTime: undefined,\n                comment: undefined,\n            },\n            selectedrow: null\n        }\n    },\n    watch: {\n        'temp.evaluationCategory' (val) {\n            if (!val) {\n                this.temp.evaluationStage = undefined\n                this.phaseList = []\n            } else {\n                this.getPhaseData(val)\n            }\n        },\n        'temp' (val) {\n            this.getList(val)\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pak: state => state.dict.dt_srm_pak,   // 评价类型\n            dt_srm_pam: state => state.dict.dt_srm_pam,   // 综合等级\n            dt_srm_pb2: state => state.dict.dt_srm_pb2,   // 评价类别\n            dt_srm_pb3: state => state.dict.dt_srm_pb3,   // 评价阶段\n            dt_srm_pb4: state => state.dict.dt_srm_pb4,   // 评价项 \n            dt_srm_pb5: state => state.dict.dt_srm_pb5    // 评分方式\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', [\n            'dt_srm_pak',\n            'dt_srm_pam',\n            'dt_srm_pb2',\n            'dt_srm_pb3',\n            'dt_srm_pb4',\n            'dt_srm_pb5'\n        ])\n    },\n    methods: {\n        getList (val) {\n            // console.log(val, 'dan')\n            api.queryOneItem(val.rowId).then((res) => {\n                let options = [this.dt_srm_pb5]\n                this.list = this.$myFun.srmCodeToName(res.data, options, ['method'])\n                this.list.forEach((item, index) => {\n                    item.number = index + 1\n                })\n                // console.log(res, '22')\n            })\n        },\n        //评价类别评价阶段联动\n        getPhaseData (val) {\n            if (val) {\n                let dto = {\n                    currentPage: 1,\n                    pageSize: 15,\n                    parentCode: val\n                }\n                queryRecords(dto).then(res => {\n                    // console.log(res)\n                    this.phaseList = res.data.list\n                })\n            }\n        },\n        handleClose () {\n            this.$refs.dataForm.resetFields()\n        },\n        // 查询按钮单击事件\n        // handleQuery () {\n        //     // console.log(this.val)\n        //     this.getList()\n        // },\n        //新增按钮单击事件\n        // handleCreate () {\n        //     this.$refs.evaluateItems.dialogStatus = 'create'\n        //     this.$refs.evaluateItems.dialogVisible = true\n        // },\n        // 表内删除\n        handleDelete () {\n\n        },\n        // 表内修改\n        handleUpdate () {\n            this.$refs.evaluateItems.dialogStatus = 'create'\n            this.$refs.evaluateItems.dialogVisible = true\n        },\n        createData () {\n\n        },\n        updateData () {\n\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectedrow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.dd.clearSelection() //清除其他行的选中\n                this.$refs.dd.toggleRowSelection(val.pop(), 'selected')\n            }\n            this.$refs.dd.setCurrentRow(this.selectedrow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.selectedrow = val\n            this.$refs.dd.clearSelection()\n            this.$refs.dd.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n    }\n}\n",null]}