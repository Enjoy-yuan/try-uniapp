{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processStart/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processStart/index.vue","mtime":1600927611542},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/system/process/processStart'\nimport tabSelect from '@/components/Select/tabSelect'\nimport testUrl from \"@/views/data-base/dict\"\nexport default {\n    name: 'processStart',\n    components: { testUrl, tabSelect },\n    data () {\n        return {\n            activeNames: ['1', '2', '3', '4'],\n            src: '',\n            memo: null,//说明\n            linkurl: '',\n            activityId: null,\n            formData: {\n                oprate: \"1\",\n                businessKey: null,\n                processTitle: null,\n                remark: '',\n                readers: ''\n                // info: '说明'\n            },\n            setPerTitle: [\n                { prop: 'activityid', label: '任务编号', width: null },\n                { prop: 'name', label: '任务名称', width: null },\n                { prop: 'defuserNames', label: '执行人', width: null },\n                { prop: 'defroleNames', label: '执行组', width: null }\n            ],\n            settingList: [],\n            unMutiple: false,\n            selectIndex: null,\n            dialogIndex: 0\n        }\n    },\n    mounted () {\n        console.log(this.$route.params)\n        this.initView()\n    },\n    methods: {\n        initView () {\n            this.src = this.$route.params.src\n            this.memo = this.$route.params.formData.memo\n            this.activityId = this.$route.params.formData.activityId\n            this.formData.businessKey = this.$route.params.formData.businessKey\n            this.formData.variables = this.$route.params.formData.variables\n            this.formData.processTitle = this.$route.params.formData.processTitle\n            this.formData.processDefinitionKey = this.$route.params.formData.processDefinitionKey\n            api.getViewData({ key: this.formData.processDefinitionKey }).then(res => {\n                res = res.data\n                console.log(res, 11111)\n                res.activityViewDTOList.forEach((item, index) => {\n                    if (item.type === 'UserTask') {\n                        let data = {\n                            activityid: item.activityid,\n                            name: item.name,\n                            defusers: item.defusers,\n                            defuserNames: item.defuserNames,\n                            defroles: item.defroles,\n                            defroleNames: item.defroleNames\n                        }\n                        this.settingList[index] = {}\n                        console.log(data, index)\n                        this.$set(this.settingList, index, data)\n                    }\n                })\n                this.settingList = this.settingList.filter(item => {\n                    return item\n                })\n                this.settingList.forEach((item, index) => {\n                    this.$set(this.settingList, index, item)\n                })\n                console.log(this.settingList)\n            })\n        },\n        //提交操作\n        submitOprate () {\n            let activityStartDTOS = []\n            this.settingList.forEach((item) => {\n                let dataDto = {\n                    activityId: item.activityid,\n                    assignees: item.defuserNames,\n                    name: item.name,\n                    roles: item.defroleNames,\n                }\n                activityStartDTOS.push(dataDto)\n            })\n            this.formData.activityStartDTOS = activityStartDTOS\n            console.log('提交', this.formData)\n            api.processStart(this.activityId, this.formData).then(res => {\n                console.log(res)\n            })\n        },\n        handleTabConfirm (val) {\n            switch (val[1]) {\n                case 0: {\n                    let defusersArr = []\n                    let defuserNamesArr = []\n                    if (val[0]) {\n                        val[0].forEach((item) => {\n                            defusersArr.push(item.employeeCode)\n                            defuserNamesArr.push(item.employeeName)\n                        })\n                        this.$set(this.settingList[this.selectIndex], 'defusers', defusersArr.join(\",\"))\n                        this.$set(this.settingList[this.selectIndex], 'defuserNames', defuserNamesArr.join(\",\"))\n                    } else {\n                        this.$set(this.settingList[this.selectIndex], 'defusers', '')\n                        this.$set(this.settingList[this.selectIndex], 'defuserNames', '')\n                    }\n\n\n                    break\n                }\n                case 1: {\n                    let defrolesArr = []\n                    let defroleNamesArr = []\n                    if (val[0]) {\n                        val[0].forEach((item) => {\n                            defrolesArr.push(item.roleCode)\n                            defroleNamesArr.push(item.roleName)\n                        })\n                        this.$set(this.settingList[this.selectIndex], 'defroles', defrolesArr.join(\",\"))\n                        this.$set(this.settingList[this.selectIndex], 'defroleNames', defroleNamesArr.join(\",\"))\n                    } else {\n                        this.$set(this.settingList[this.selectIndex], 'defroles', '')\n                        this.$set(this.settingList[this.selectIndex], 'defroleNames', '')\n                    }\n\n                    break\n                }\n                case 2: {\n                    let defusersArr = []\n                    let defuserNamesArr = []\n                    if (val[0]) {\n                        val[0].forEach((item) => {\n                            defusersArr.push(item.employeeCode)\n                            defuserNamesArr.push(item.employeeName)\n                        })\n                        this.$set(this.formData, 'readers', defuserNamesArr.join(\",\"))\n                    } else {\n                        this.$set(this.formData, 'readers', defuserNamesArr.join(\",\"))\n                    }\n                    break\n                }\n            }\n        },\n        handleSelectP (row, index) {\n            if (row.assigneetype === '1') {\n                this.unMutiple = false\n            } else {\n                this.unMutiple = true\n            }\n            this.selectIndex = index\n            this.$refs.perRef.dialogVisible = true\n        },\n        handleSelectR (row, index) {\n            if (row.assigneetype === '1') {\n                this.unMutiple = false\n            } else {\n                this.unMutiple = true\n            }\n            this.selectIndex = index\n            this.$refs.groupRef.dialogVisible = true\n        },\n        selectReader () {\n            this.selectIndex = 2\n            this.$refs.perRef1.dialogVisible = true\n        }\n    }\n}\n",null]}