{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/formation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/formation.vue","mtime":1601359288010},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryRecords } from \"@/api/project/srm/supplierSelection/constantParameters\"\nimport * as api from \"@/api/project/srm/priceManage/actuarialDetailCost\"\nimport { DICT_CODE } from '@/utils/constant'\nimport tabQuote from './tab/tabQuote'\nimport tabYCLcost from './tab/tabYCLcost'\nimport tabWGcost from './tab/tabWGcost'\nimport tabZYcost from './tab/tabZYcost'\nimport tabJGcost from './tab/tabJGcost'\nimport tabBZcost from './tab/tabBZcost'\nimport tabWLcost from './tab/tabWLcost'\nimport dialogQuoteInfo from './dialog/dialogQuoteInfo' //参照报价新增\nimport dialogActuarial from './dialog/dialogActuarial' //参照精算新增\nimport dialogPreview from './dialog/dialogPreview' //参照精算新增\n\n\nexport default {\n    name: 'formation',\n    components: { tabQuote, tabYCLcost, tabWGcost, tabZYcost, tabJGcost, tabBZcost, tabWLcost, dialogQuoteInfo, dialogActuarial, dialogPreview },\n    data () {\n        // let compareDate = (rule, value, callback) => {\n        //     if (value > this.formData.prop9) {\n        //         return callback(new Error('生效时间不能大于失效时间'))\n        //     } else {\n        //         callback()\n        //     }\n        // }\n        return {\n            getwasteLoss: null,\n            getprofit: null,\n            buttonStatus: true,//新增可编辑，编辑时置灰\n            tabQuoteList: [],\n            tabYCLcostList: [],//原材料\n            tabWGcostList: [],//外协采购\n            tabZYcostList: [],//专业工装费用\n            tabJGcostList: [],//加工费用\n            tabBZcostList: [],//包装费用\n            tabWLcostList: [],//物流费用\n            status: null,\n            actuarialSubtotalCost: null,\n            WasteLoss: null,\n            formationState: 'add',\n            tabName: 'tabQuote',\n            DICT_CODE: DICT_CODE,\n            formData: {\n                actuarialPrice: undefined,\n                currency: undefined,\n                rowId: undefined,\n                mapNo: undefined,\n                specialDistinction: null,\n                materielName: null,\n                materielClassName: null,\n                supplierCode: null,\n                supplierName: null,\n                quotedDate: null,\n                taxFreePrice: null,\n                targetprice: null,\n                realPrice: null,\n                priceAnalysis: null,\n                validTimeStart: null,\n                validTimeEnd: null,\n                prop12: null,\n                prop13: null\n            },\n            rules: {\n                // prop1: [\n                //     { required: true, message: '请填写', trigger: 'blur' }\n                // ],\n                // prop8: [\n                //     { required: true, message: '请选择', trigger: 'blur' },\n                //     { validator: compareDate, trigger: 'blur' }\n                // ]\n            },\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-close', clickMethod: 'handleCancel', name: '取消' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-check', clickMethod: 'handleSave', name: '保存' },\n                { id: 2, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleBJRef', name: '参照报价新增', status: true },\n                { id: 3, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleJSRef', name: '参照精算新增', status: true }\n            ],\n            formConfig: [\n                { type: 'commonInput', status: true, label: '零件图号', prop: 'mapNo', width: '', },\n                { type: 'commonInput', status: true, label: '特殊区分', prop: 'specialDistinction', width: '' },\n                { type: 'commonInput', status: true, label: '零件名称', prop: 'materielName', width: '' },\n                { type: 'commonInput', status: true, label: '物料分类', prop: 'materielClassName', width: '' },\n                { type: 'commonInput', status: true, label: '供应商编码', prop: 'supplierCode', width: '' },\n                { type: 'commonInput', status: true, label: '供应商名称', prop: 'supplierName', width: '' },\n                { type: 'commonInput', status: true, label: '报价时间', prop: 'quotedDate', width: '' },\n                { type: 'date', status: false, label: '价格生效时间', prop: 'validTimeStart', width: '' },\n                { type: 'date', status: false, label: '价格失效时间', prop: 'validTimeEnd', width: '' },\n                { type: 'commonInput', status: true, label: '报价', prop: 'taxFreePrice', width: '' },\n                { type: 'commonInput', status: true, label: '目标价(元)', prop: 'targetprice', width: '' },\n                { type: 'commonInput', status: true, label: '精算价格(元)', prop: 'actuarialPrice', width: '' },\n                { type: 'textarea', label: '价格分析', prop: 'priceAnalysis', width: '800px', rows: \"2\" }\n            ],\n            tabConfig: [\n                { label: '报价表', name: 'tabQuote', prop: 'tabQuote' },\n                { label: '原材料费用', name: 'tabYCLcost', prop: 'tabYCLcost' },\n                { label: '外购/协费用', name: 'tabWGcost', prop: 'tabWGcost' },\n                { label: '专用工装费用', name: 'tabZYcost', prop: 'tabZYcost' },\n                { label: '加工费用', name: 'tabJGcost', prop: 'tabJGcost' },\n                { label: '包装费用', name: 'tabBZcost', prop: 'tabBZcost' },\n                { label: '物流费用', name: 'tabWLcost', prop: 'tabWLcost' }\n            ],\n            dialogConfig: [\n                { title: '报价信息查询', unMutiple: true },\n                { title: '精算信息查询', unMutiple: true },\n                { title: '预览' },\n            ],\n        }\n    },\n    created () {\n\n    },\n    mounted () {\n\n    },\n    watch: {\n\n    },\n    methods: {\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.$emit('changeState', 'list')\n                    break\n                }\n                case 1: {\n                    this.handleSave()\n                    break\n                }\n                case 2: {\n                    this.handleBJRef()\n                    break\n                }\n                case 3: {\n                    this.handleJSRef()\n                    break\n                }\n            }\n        },\n        getReal (val) {\n            this.$set(this.formData, 'actuarialPrice', val)\n            // this.$set(this.formData, 'actuarialPrice', this.formData.actuarialPrice)\n            // console.log(val, this.formData.actuarialPrice, '99')\n        },\n        getLossData (val) {\n            this.getwasteLoss = val\n        },\n        getProfit (val) {\n            this.getprofit = val\n        },\n        handleSave () {\n            this.$refs.formData.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let dto = {\n                            totalQuotations: this.$refs.tabQuoteRef[0].tableData.map(v => {\n                                if (v.totalType == '精算') {\n                                    v.realPrice = parseFloat(this.formData.actuarialPrice)\n                                    v.profit = parseFloat(this.$refs.tabQuoteRef[0].getProfit())\n                                    v.wasteLoss = parseFloat(this.$refs.tabQuoteRef[0].getwasteLossData())\n                                }\n                                return v\n                            }), //报价表\n                            actuarialRawMaterialDTOS: this.$refs.tabYCLcostRef[0].tableData.filter(v => {\n\n                                return v.subpartName !== '总计'\n                            }),//原材料\n                            actuarialOutsourcingDTOS: this.$refs.tabWGcostRef[0].tableData.filter(v => {\n                                return v.subpartName !== '总计'\n                            }),//外协采购\n                            actuarialToolingDTOS: this.$refs.tabZYcostRef[0].tableData.filter(v => {\n                                return v.partName !== '总计'\n                            }),//专用工装费用\n                            actuarialProcessingDTOS: this.$refs.tabJGcostRef[0].tableData.filter(v => {\n                                return v.partName !== '总计'\n                            }),//加工费用\n                            actuarialPackingDTOS: this.$refs.tabBZcostRef[0].tableData.filter(v => {\n                                return v.packingTypeCN !== '总计'\n                            }),//包装费用\n                            actuarialLogisticsDTOS: this.$refs.tabWLcostRef[0].tableData.filter(v => {\n                                return v.transportTypeCN !== '总计'\n                            }),//物流费用\n                            mapNo: this.formData.mapNo,\n                            specialDistinction: this.formData.specialDistinction,\n                            materielName: this.formData.materielName,\n                            materielClassName: this.formData.materielClassName,\n                            supplierCode: this.formData.supplierCode,\n                            supplierName: this.formData.supplierName,\n                            quotedDate: this.formData.quotedDate,\n                            supplierQuote: this.formData.taxFreePrice,\n                            targetprice: this.formData.targetprice,\n                            actuarialPrice: this.formData.actuarialPrice,\n                            orgCode: this.formData.orgCode,\n                            materielCode: this.formData.materielCode,\n                            orgName: this.formData.orgName,\n                            quotationNo: this.formData.quotationNo,\n                            priceAnalysis: this.formData.priceAnalysis,\n                            currency: this.formData.currency,\n                            validTimeStart: this.formData.validTimeStart,\n                            validTimeEnd: this.formData.validTimeEnd\n                        }\n                        console.log(dto, 'khg')\n                        if (this.status == 'add') {\n                            api.createRecords(dto).then(() => {\n                                this.$message({\n                                    title: '成功',\n                                    message: '新增成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                                this.$emit('changeState', 'list')\n                                this.$emit('refresh')\n                            })\n                        } else {\n                            console.log('编辑')\n                            api.updateRecords(this.formData.rowId, dto).then(() => {\n                                this.$message({\n                                    title: '成功',\n                                    message: '编辑成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                                this.$emit('changeState', 'list')\n                                this.$emit('refresh')\n                            })\n                        }\n\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n                }\n            })\n        },\n        handleBJRef () {\n            this.$refs.refDqi.dialogVisible = true\n            this.$refs.refDqi.getList()\n        },\n        handleJSRef () {\n            this.$refs.refAct.dialogVisible = true\n            this.$refs.refAct.getList()\n        },\n        initForm (type, row) {\n            this.status = type\n            this.$refs['formData'].resetFields()\n            this.$refs['formData'].clearValidate()\n            if (type === 'add') {\n                // this.$refs.tabQuoteRef[0].type = 'add'\n                this.$refs.tabQuoteRef[0].initData('add')\n                this.$refs.tabYCLcostRef[0].initData('add')\n                this.$refs.tabWGcostRef[0].initData('add')\n                this.$refs.tabZYcostRef[0].initData('add')\n                this.$refs.tabJGcostRef[0].initData('add')\n                this.$refs.tabBZcostRef[0].initData('add')\n                this.$refs.tabWLcostRef[0].initData('add')\n                this.oprateBtnConfig[2].status = false //按钮可编辑\n                this.oprateBtnConfig[3].status = false\n                // this.oprateBtnConfig[1].name = '保存新增精算'\n                this.$set(this.formData, 'tableDetails', [])\n\n            } else {\n                console.log('编辑初始化表格', row)\n                this.$refs.tabQuoteRef[0].initData('edit')\n                this.$refs.tabYCLcostRef[0].initData('edit')\n                this.$refs.tabWGcostRef[0].initData('edit')\n                this.$refs.tabZYcostRef[0].initData('edit')\n                this.$refs.tabJGcostRef[0].initData('edit')\n                this.$refs.tabBZcostRef[0].initData('edit')\n                this.$refs.tabWLcostRef[0].initData('edit')\n                this.oprateBtnConfig[2].status = true //按钮不可编辑\n                this.oprateBtnConfig[3].status = true\n                // this.oprateBtnConfig[1].name = '保存编辑精算'\n                for (let key in this.formData) {\n                    for (let par in row) {\n                        if (key === par) {\n                            this.$set(this.formData, key, JSON.parse(JSON.stringify(row[key])))\n                        }\n                    }\n                }\n                this.formData.materielCode = row.materielCode\n                this.formData.taxFreePrice = row.supplierQuote\n                this.formData.orgCode = row.orgCode\n                this.formData.orgName = row.orgName\n                this.formData.quotationNo = row.quotationNo\n                this.formData.actuarialPrice = row.actuarialPrice\n                this.$set(this.formData, 'priceAnalysis', row.priceAnalysis)\n\n                this.tabQuoteList = row.totalQuotations\n                this.tabYCLcostList = row.actuarialRawMaterialDTOS //原材料\n                this.tabYCLcostList = row.actuarialRawMaterialDTOS //原材料\n                this.tabWGcostList = row.actuarialOutsourcingDTOS //外协采购\n                this.tabZYcostList = row.actuarialToolingDTOS //工装费用\n                // this.tabJGcostList = row.actuarialProcessingDTOS //加工费用\n                this.tabJGcostList = row.actuarialProcessingDTOS //加工费用\n                this.tabBZcostList = row.actuarialPackingDTOS //包装费用\n                this.tabWLcostList = row.actuarialLogisticsDTOS //包装费用\n\n            }\n        },\n        confirmDqi (qiData) {\n            qiData = JSON.parse(JSON.stringify(qiData))\n            this.$refs.tabQuoteRef[0].initData('add')\n            this.$refs.tabYCLcostRef[0].initData('add')\n            this.$refs.tabWGcostRef[0].initData('add')\n            this.$refs.tabZYcostRef[0].initData('add')\n            this.$refs.tabJGcostRef[0].initData('add')\n            this.$refs.tabBZcostRef[0].initData('add')\n            this.$refs.tabWLcostRef[0].initData('add')\n            let dto = {\n                purchaseOrg: qiData[0].orgCode,\n                typeEncoding: 'PBE3',\n                currentPage: 1,\n                pageSize: 10,\n            }\n            queryRecords(dto).then(res => {\n                qiData[0].processingCostDTOS.map(v => {\n                    v.constantValue = res.data.list[0].constantValue\n                    return v\n                })\n                this.formData = qiData[0]\n                console.log(this.formData, ' this.formData')\n                // this.$refs.tabQuoteRef[0].getList(qiData)\n                this.tabQuoteList = [qiData[0].totalQuotation]\n                this.tabYCLcostList = qiData[0].rawMaterialCostDTOS //原材料\n                this.tabWGcostList = qiData[0].outsourcingCostDTOS //外协外购\n                this.tabZYcostList = qiData[0].toolingCostDTOS //工装费用\n                this.tabJGcostList = qiData[0].processingCostDTOS //加工费用\n                this.tabBZcostList = qiData[0].packingCostDTOS //包装费用\n                this.tabWLcostList = qiData[0].logisticsCostDTOS //物流费用\n\n            })\n        },\n        confirmAct (actData) {\n            actData = JSON.parse(JSON.stringify(actData))\n            this.$refs.tabQuoteRef[0].initData('edit')\n            this.$refs.tabYCLcostRef[0].initData('edit')\n            this.$refs.tabWGcostRef[0].initData('edit')\n            this.$refs.tabZYcostRef[0].initData('edit')\n            this.$refs.tabJGcostRef[0].initData('edit')\n            this.$refs.tabBZcostRef[0].initData('edit')\n            this.$refs.tabWLcostRef[0].initData('edit')\n            actData = actData.map(v => {\n                v.rawMaterialCostDTOS = v.actuarialRawMaterialDTOS\n                v.outsourcingCostDTOS = v.actuarialOutsourcingDTOS\n                v.toolingCostDTOS = v.actuarialToolingDTOS\n                v.processingCostDTOS = v.actuarialProcessingDTOS\n                v.packingCostDTOS = v.actuarialPackingDTOS\n                v.logisticsCostDTOS = v.actuarialLogisticsDTOS\n                return v\n            })\n            let dto = {\n                purchaseOrg: actData[0].orgCode,\n                typeEncoding: 'PBE3',\n                currentPage: 1,\n                pageSize: 10,\n            }\n            queryRecords(dto).then(res => {\n                actData[0].processingCostDTOS.map(v => {\n                    v.constantValue = res.data.list[0].constantValue\n                    return v\n                })\n                this.formData = actData[0]\n                this.formData.taxFreePrice = actData[0].supplierQuote\n                // this.$refs.tabQuoteRef[0].getList(actData)\n                this.tabQuoteList = actData[0].totalQuotations\n                this.tabYCLcostList = actData[0].rawMaterialCostDTOS //原材料\n                this.tabWGcostList = actData[0].outsourcingCostDTOS //外协外购\n                this.tabZYcostList = actData[0].toolingCostDTOS //工装费用\n                this.tabJGcostList = actData[0].processingCostDTOS //加工费用\n                this.tabBZcostList = actData[0].packingCostDTOS //包装费用\n                this.tabWLcostList = actData[0].logisticsCostDTOS //物流费用\n            })\n\n        },\n        //预览\n        handlePreview (type, data) {\n            console.log(type, data)\n            this.$refs.refPre.dialogVisible = true\n        }\n    }\n}\n",null]}