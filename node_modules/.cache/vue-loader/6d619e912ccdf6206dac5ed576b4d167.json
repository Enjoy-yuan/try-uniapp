{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/qualityManagement/qualityReportWork/index.vue?vue&type=template&id=e3543434&scoped=true&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/qualityManagement/qualityReportWork/index.vue","mtime":1596610933588},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"app-container\" }, [\n      _c(\"div\", { staticClass: \"filter-container\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"filter-items\" },\n          [\n            _vm._v(\"\\n                 随工单号：\\n                \"),\n            _c(\n              \"el-select\",\n              {\n                attrs: {\n                  clearable: \"\",\n                  placeholder: \"随工单号\",\n                  size: \"small\"\n                },\n                on: { clear: _vm.clearCode },\n                model: {\n                  value: _vm.workOrderCode,\n                  callback: function($$v) {\n                    _vm.workOrderCode = $$v\n                  },\n                  expression: \"workOrderCode\"\n                }\n              },\n              _vm._l(_vm.options, function(item) {\n                return _c(\"el-option\", {\n                  key: item,\n                  attrs: { label: item, value: item }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"filter-item\",\n                staticStyle: { margin: \"0\" },\n                attrs: { size: \"small\", type: \"primary\" },\n                on: { click: _vm.confirmCode }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"btn.confirm\")))]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"table-container\" },\n        [\n          _c(\"div\", { staticClass: \"oprate_btn\" }, [\n            _c(\n              \"div\",\n              [\n                _vm._v(\n                  \"\\n                     随工单号：\\n                    \"\n                ),\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    disabled: \"\",\n                    placeholder: \"生产批次\",\n                    size: \"small\"\n                  },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.temp.workOrderCode,\n                    callback: function($$v) {\n                      _vm.$set(_vm.temp, \"workOrderCode\", $$v)\n                    },\n                    expression: \"temp.workOrderCode\"\n                  }\n                }),\n                _vm._v(\"   当前工位：\\n                    \"),\n                _c(\"el-input\", {\n                  staticClass: \"filter-item\",\n                  attrs: { disabled: \"\", placeholder: \"工位\", size: \"small\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.temp.stationCode,\n                    callback: function($$v) {\n                      _vm.$set(_vm.temp, \"stationCode\", $$v)\n                    },\n                    expression: \"temp.stationCode\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticStyle: { \"margin-bottom\": \"5px\", \"line-height\": \"43px\" }\n              },\n              [\n                _vm._v(\n                  \"\\n                     质检结果：\\n                    \"\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    style: {\n                      opacity: _vm.temp.isQualified == 1 ? 1 : 0.3,\n                      verticalAlign: \"top\"\n                    },\n                    attrs: {\n                      icon: \"el-icon-circle-check\",\n                      size: \"small\",\n                      type: \"success\"\n                    },\n                    on: { click: _vm.handlQualified }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"btn.qualified\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    style: {\n                      opacity: _vm.temp.isQualified == 0 ? 1 : 0.3,\n                      verticalAlign: \"top\"\n                    },\n                    attrs: {\n                      icon: \"el-icon-circle-check\",\n                      size: \"small\",\n                      type: \"danger\"\n                    },\n                    on: { click: _vm.handleUnqualified }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"btn.unqualified\")))]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _vm.temp.isQualified == 0\n              ? _c(\n                  \"div\",\n                  {\n                    staticStyle: {\n                      display: \"inline-block\",\n                      \"white-space\": \"nowrap\"\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                     选择原因：\\n                    \"\n                    ),\n                    _vm._l(_vm.dt_below_standard_reason, function(\n                      reason,\n                      index\n                    ) {\n                      return _c(\n                        \"el-button\",\n                        {\n                          key: index,\n                          staticClass: \"filter-item\",\n                          class: {\n                            \"button-selected\": _vm.reasonChoosen[index]\n                          },\n                          attrs: {\n                            icon: \"el-icon-circle-check\",\n                            size: \"small\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.handleUnqualify(\n                                index,\n                                reason.dictItemValue\n                              )\n                            }\n                          }\n                        },\n                        [_vm._v(_vm._s(reason.dictItemKey))]\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"el-input\", {\n                      staticClass: \"filter-item\",\n                      staticStyle: { \"margin-bottom\": \"0\" },\n                      attrs: { placeholder: \"补充原因\", size: \"small\" },\n                      nativeOn: {\n                        keyup: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          return _vm.handleQuery($event)\n                        }\n                      },\n                      model: {\n                        value: _vm.supReason,\n                        callback: function($$v) {\n                          _vm.supReason = $$v\n                        },\n                        expression: \"supReason\"\n                      }\n                    })\n                  ],\n                  2\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              [\n                _vm._v(\n                  \"\\n                     扫码录入：\\n                    \"\n                ),\n                _c(\"el-input\", {\n                  ref: \"inputTarget\",\n                  staticClass: \"filter-item\",\n                  attrs: { placeholder: \"条码编号\", size: \"small\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleCreate($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.temp.barCode,\n                    callback: function($$v) {\n                      _vm.$set(_vm.temp, \"barCode\", $$v)\n                    },\n                    expression: \"temp.barCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-circle-check\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handleCreate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"btn.entry\")))]\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              key: _vm.tableKey,\n              ref: \"list\",\n              staticStyle: { width: \"100%\" },\n              attrs: {\n                data: _vm.list,\n                height: _vm.theight,\n                border: \"\",\n                \"cell-class-name\": \"table-cell\",\n                fit: \"\",\n                \"header-cell-class-name\": \"header-cell\",\n                \"highlight-current-row\": \"\",\n                size: \"mini\"\n              },\n              on: {\n                \"row-click\": _vm.selectListRow,\n                \"selection-change\": _vm.selectList\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"序号\",\n                  prop: \"rowId\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"条码编号\",\n                  prop: \"barCode\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"时间\",\n                  \"min-width\": \"150\",\n                  prop: \"createTime\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"编码\",\n                  prop: \"productCode\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"型号\",\n                  prop: \"productType\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"随工单\",\n                  \"min-width\": \"150\",\n                  prop: \"workOrderCode\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"工位\",\n                  prop: \"a6\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"操作人\",\n                  prop: \"creator\",\n                  \"show-overflow-tooltip\": \"\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  label: \"不合格原因\",\n                  \"show-overflow-tooltip\": \"\"\n                },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return scope.row.reason\n                          ? [\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { size: \"small\", type: \"text\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleCheck(scope.row)\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"查看\")]\n                              )\n                            ]\n                          : undefined\n                      }\n                    }\n                  ],\n                  null,\n                  true\n                )\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", \"show-overflow-tooltip\": \"\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: { size: \"small\", type: \"text\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleDelete(scope.row)\n                              }\n                            }\n                          },\n                          [_vm._v(\"删除\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"pagination\", {\n            attrs: {\n              limit: _vm.listQuery.pageSize,\n              page: _vm.listQuery.currentPage,\n              total: _vm.total\n            },\n            on: {\n              \"update:limit\": function($event) {\n                return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n              },\n              \"update:page\": function($event) {\n                return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n              },\n              pagination: _vm.getList\n            }\n          })\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}