{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processConfiguration/tab/tabRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processConfiguration/tab/tabRule.vue","mtime":1600927611538},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport * as api from '@/api/system/process/processConfiguration'\nexport default {\n    name: 'contentRule',\n    data () {\n        return {\n            activeCollName: ['1'],\n            tableList: [],\n            tableKey: [0],\n            dirList: [],\n            dirListd: [],\n            dirListn: [],\n            dirNodeList: [],\n            varNameList: [],\n            calculaterList: [\n                { id: 0, name: '=', value: 'eq' },\n                { id: 1, name: '!=', value: 'neq' },\n                { id: 2, name: '>', value: 'gt' },\n                { id: 3, name: '<', value: 'lt' },\n                { id: 4, name: '>=', value: 'egt' },\n                { id: 5, name: '<=', value: 'elt' }\n            ]\n        }\n    },\n    computed: {},\n    mounted () {\n\n    },\n    methods: {\n        initForm (data) {\n            this.tableList = data\n        },\n        handleAdd () {\n            let singleRow = {\n                varcode: '',\n                varvalue: '',\n                opercode: '',\n                value: '',\n                flownode: '',\n                flownodename: '',\n                tergetnode: '',\n                tergetnodename: '',\n                editable: true\n            }\n            this.tableList.push(singleRow)\n        },\n        //前端编辑\n        handleEditTable (index, row) {\n            this.tableList.forEach(item => {\n                if (item.varcode === row.varcode) {\n                    this.tableList[index].editable = true\n                }\n            })\n        },\n        //前端保存\n        handleSaveTable (index, row) {\n            this.tableList.forEach(item => {\n                if (item.varcode === row.varcode) {\n                    this.tableList[index].editable = false\n                }\n            })\n        },\n        //前端表格删除\n        handleDeleteTable (index, row) {\n            this.tableList = this.tableList.filter(item => {\n                console.log(item.varcode, row.varcode)\n                return item.varcode !== row.varcode\n            })\n        },\n        getNodeDir (query) {\n            api.getActivity(query).then(res => {\n                this.dirList = res.data\n                this.dirListd = this.dirList.filter(item => {\n                    return item.type === 'SequenceFlow'\n                })\n                this.dirListn = this.dirList.filter(item => {\n                    return item.type === 'UserTask'\n                })\n            })\n        },\n        setFlownode (id, val, index) {\n            console.log(id, val, index)\n            let name = this.dirListd.filter(item => {\n                return item.id === val.flownode\n            })\n            console.log(name)\n            this.tableList[index].flownodename = name[0].name\n        },\n        setTargetnode (id, val, index) {\n            console.log(id, val, index)\n            let name = this.dirListn.filter(item => {\n                return item.id === val.tergetnode\n            })\n            console.log(name)\n            this.tableList[index].tergetnodename = name[0].name\n\n        }\n    }\n}\n",null]}