{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/indexManagement/yieldEnergy/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/indexManagement/yieldEnergy/index.vue","mtime":1596610933531},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/indexManagement/yieldEnergy.js'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'yieldEnergy',\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            Org: null,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                organizationCode: undefined,\n                productCode: undefined,\n                setTime: undefined\n            },\n            temp: {\n                productCode: '产品名称',\n                organizationCode: '工厂名称',\n                gas: '气消耗指标',\n                ele: '电消耗指标',\n                water: '水消耗指标',\n                yield: '产量',\n                setStartTime: undefined,\n                setEndTime: undefined,\n                remark: '备注'\n            },\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            total: 0,\n            theight: 0, //表格高度\n            selectlistRow: null,\n            rules: {\n                remark: [\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' }\n                ]\n            },\n            pickerOptionsStart: {\n                disabledDate: time => {\n                    if (this.temp.setEndTime != '') {\n                        return time.getTime() > new Date(this.temp.setEndTime)\n                    } else {\n                        return time.getTime()\n                    }\n                }\n            },\n            pickerOptionsEnd: {\n                disabledDate: time => {\n                    return time.getTime() < new Date(this.temp.setStartTime)\n                }\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_cp_product_list: state =>\n                state.businessComponent.dt_cp_product_list\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_cp_product_list'\n        ])\n        this.getList()\n        this.getOrg()\n    },\n    destroyed () {\n        this.setTableHeight()\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_cp_product_list'\n        ])\n        this.getList()\n        this.getOrg()\n    },\n    methods: {\n        getList () {\n            api.queryYieldEnergy(this.listQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getOrg () {\n            api.queryOrg().then(res => {\n                this.Org = res.data\n            })\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.createYieldEnergy(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        handleUpdate () {\n            //编辑弹窗\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.temp = this.selectlistRow[0]\n                    ;[\n                        this.temp.setStartTime,\n                        this.temp.setEndTime\n                    ] = this.temp.setValidPeriod.split('~~') // copy obj\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            //编辑\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateYieldEnergy(this.temp.rowId, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length >= 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.rowId\n                        })\n                        api.deleteYieldEnergy(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        deleteQuery () {\n            // 清除查询条件\n            this.listQuery.currentPage = 1\n            this.listQuery.organizationCode = undefined\n            this.listQuery.productCode = undefined\n            this.listQuery.setValidPeriod = undefined\n            this.getList()\n        },\n        resetTemp () {\n            this.temp = {}\n        },\n        handleClose () {\n            this.resetTemp()\n            // this.$refs.temp.resetFields()\n        },\n        setTableHeight () {\n            //表格高度计算\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        selectRow (val) {\n            // 获取表格选中时的数据\n            this.selectlistRow = val\n        }\n    }\n}\n",null]}