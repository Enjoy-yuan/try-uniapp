{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/maintainPartSelect/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/maintainPartSelect/index.vue","mtime":1596610933464},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/database/maintainStand'\nimport Pagination from '@/components/Pagination'\nimport deviceType from '../../components/deviceTypeSelect'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'partSelect',\n    components: { Pagination, deviceType },\n    props: {\n        // 是否禁用选择设备类型（需要在父组件中关联进行控制时使用）\n        deviceTypeDisable: {\n            type: Boolean,\n            default: false\n        },\n        // 父组件中已选记录集合\n        listSelected: {\n            type: Array,\n            default: () => {\n                return []\n            }\n        },\n        deviceType: {\n            type: String,\n            default: ''\n        }\n    },\n    watch: {\n        deviceType (val) {\n            this.listQuery.typeCode = val\n        },\n        // 设备类型改变时查询对应设备\n        'listQuery.typeCode' () {\n            this.getList()\n        },\n    },\n    data () {\n        return {\n            // 设备列表（备选列表）\n            list: [],\n            // 设备类型\n            options: [],\n            total: 0,\n            // 查询条件\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                typeCode: undefined,\n                deviceName: undefined\n            },\n            // 当前tab\n            activeName2: 'first',\n            // 当前弹框弹出后已选记录集合\n            currentSelect: [],\n            tableKey: 0\n        }\n    },\n    computed: {\n        // 设备类别字典\n        ...mapState({\n            dt_device_category: state => state.eamDict.dt_device_category\n        })\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', ['dt_device_category'])\n        this.listQuery.typeCode = this.deviceType\n        this.getList()\n    },\n    methods: {\n        getList () {\n            if (this.listSelected && this.listSelected.length) {\n                this.listQuery.filterMaintenanceCodes = this.listSelected\n                    .map(item => {\n                        return item.maintenanceCode\n                            ? item.maintenanceCode\n                            : item.partCode\n                    })\n                    .join(',')\n            }\n\n            // 获取当前查询条件下的设备\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n                setTimeout(() => {\n                    // 翻页后对当前已选打钩\n                    this.getData()\n                }, 0)\n            })\n        },\n        handleQuery () {\n            // 翻页\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        checkUnsel (val, row) {\n            // 当前选择记录是否已选\n            let isuncheck = true\n            val.forEach(item => {\n                if (item.partCode == row.partCode) {\n                    isuncheck = false\n                }\n            })\n            return isuncheck\n        },\n        selectMain (val, row) {\n            // 点击备选记录\n            let isuncheck = this.checkUnsel(val, row)\n            if (!isuncheck) {\n                if (this.currentSelect) {\n                    val.forEach((items, indexv) => {\n                        let isSelected = false\n                        this.currentSelect.forEach(item => {\n                            if (item.partCode == items.partCode) {\n                                isSelected = true\n                            }\n                        })\n                        if (!isSelected) {\n                            this.currentSelect.push(val[indexv])\n                        }\n                    })\n                } else {\n                    this.currentSelect = val\n                }\n            } else {\n                this.currentSelect = this.currentSelect.filter(item => {\n                    return item.partCode != row.partCode\n                })\n            }\n        },\n        selectAll (val) {\n            // 全选\n            if (val.length == 0) {\n                this.list.forEach(item => {\n                    this.currentSelect.forEach((item2, index) => {\n                        if (item.partCode == item2.partCode) {\n                            this.currentSelect.splice(index, 1)\n                        }\n                    })\n                })\n                return\n            }\n            val.forEach((items, indexv) => {\n                let isSelected = false\n                this.currentSelect.forEach(item => {\n                    if (item.partCode == items.partCode) {\n                        isSelected = true\n                    }\n                })\n                if (!isSelected) {\n                    this.currentSelect.push(val[indexv])\n                }\n            })\n        },\n        getData () {\n            // 翻页后当前已选打钩\n            if (this.currentSelect && this.currentSelect.length) {\n                this.currentSelect.forEach(selected => {\n                    this.list.forEach((wait, index) => {\n                        if (wait.partCode == selected.partCode) {\n                            this.$nextTick(() => {\n                                this.$refs.tb_bx.toggleRowSelection(\n                                    this.list[index],\n                                    true\n                                )\n                            })\n                        }\n                    })\n                })\n            }\n        }\n    }\n}\n",null]}