{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/stokMove/undirectedAllocation/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/stokMove/undirectedAllocation/index.vue","mtime":1596610934219},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Pagination from '@/components/Pagination' // 分页组件\nimport * as api from '@/api/project/wms/stokMove/undirectedAllocation'\nimport { DICT_CODE, DT_ORG_TYPE } from '@/utils/constant'\nimport { mapState } from 'vuex'\nimport AuthoType from '@/components/Select/AuthoType.vue'//权限类型下拉组件\nimport wlxzbykcz from '@/components/Select/wlxzbykcz'//库存帐物料信息模块\nimport orgSelect from \"@/components/Select/orgSelect.vue\"\nimport qrcode from \"@/components/QRCode\"\n\n\nexport default {\n    name: \"undirectedAllocation\",\n    components: { Pagination, qrcode, wlxzbykcz, orgSelect, AuthoType },\n    data () {\n        return {\n            rheight: 0,\n            pheight: 0,\n            sheight: 0,\n            value: '',\n            value2: '',\n            value3: '',\n            unMutiple: false,\n            areaList: null,\n            locatorList: [],\n            toareaList: null,\n            tolocatorList: [],\n            list: [],\n            list2: null,\n            list3: null,\n            total3: 0,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            activeName2: 'first',\n            isEdit: false,\n            disabled: false,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: undefined,\n                arrivalOrgCode: '',\n                businessType: undefined,\n                warehouseCode: undefined,\n                accountDate: this.timeFormat(),\n                toWarehouseCode: undefined,\n                toOrgCode: undefined\n            },\n            dto: {\n                accountDate: undefined,\n                dicType: undefined,\n                orgCode: undefined,\n                outOrderPlans: [],\n                toWarehouseCode: undefined,\n                warehouseCode: undefined,\n            },\n            listQueryProofMain: {\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: undefined,\n                warehouseCode: undefined,\n                createDateStart: undefined,\n                createDateEnd: undefined\n            },\n            listQueryProofSub: {\n                currentPage: 1,\n                pageSize: 10,\n                businessType: undefined,\n                outOrderNumber: undefined,\n            },\n            temp: {\n                orgCode: undefined,\n                dicType: undefined,\n                warehouseCode: undefined,\n                accountDate: undefined,\n                toWarehouseCode: undefined,\n\n            },\n            locationCode: undefined,\n            proofNo: undefined,\n            warehouseCode: undefined,\n            orgCode: undefined,\n            parentsRows: null,\n            DICT_CODE: DICT_CODE,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            value1: '',\n            dialogStatus: '',\n            wlxzDialogFormVisible: false,\n            tableKey: 0,\n            printData: {},//打印数据\n            dialogPrintVisible: false,\n            downloadLoading: false\n        }\n    },\n    watch: {\n        'listQuery.orgCode': {\n            handler (newValue) {\n                this.listQuery.orgCode = newValue\n                this.listQuery.warehouseCode = ''\n                this.listQuery.toWarehouseCode = ''\n            },\n            deep: true,\n            immediate: true\n        },\n        'listQuery.warehouseCode': {\n            handler (newValue) {\n                this.listQuery.warehouseCode = newValue\n            },\n            deep: true,\n            immediate: true\n        },\n        'listQuery.toWarehouseCode': {\n            handler (newValue) {\n                this.listQuery.toWarehouseCode = newValue\n            },\n            deep: true,\n            immediate: true\n        },\n    },\n    computed: {\n        ...mapState({\n            dt_materiel_type: state => state.dict.dt_materiel_type,\n            dt_materiel_classify: state => state.dict.dt_materiel_classify,\n            dt_business_type_screenGroupNum_wzsdb: state => state.businessComponent.dt_business_type_screenGroupNum_wzsdb\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        this.$store.dispatch('dict/getDicData', ['dt_materiel_type', 'dt_materiel_classify'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', ['dt_business_type_screenGroupNum_wzsdb'])\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.rheight = this.$myFun.getSingleTbHeight() - 30\n            this.pheight = this.$myFun.getSingleTbHeight() + 86\n            this.sheight = this.$myFun.getSingleTbHeight() - 66\n        },\n        handleQuery1 () {\n            this.listQueryProofMain.currentPage = 1\n            this.getMainList()\n        },\n        timeFormat () {\n            var d = new Date()\n            var year = d.getFullYear()       //年  \n            var month = d.getMonth() + 1     //月  \n            var day = d.getDate()            //日  \n\n            var clock = year + \"-\"\n            if (month < 10)\n                clock += \"0\"\n            clock += month + \"-\"\n\n            if (day < 10)\n                clock += \"0\"\n            clock += day + \" \"\n            return (clock)\n        },\n        getMainList () {//调拨凭证主表查询\n            if (this.value2) {\n                var d1 = this.value2[0]\n                var d2 = this.value2[1]\n                this.listQueryProofMain.accountDateStart = d1\n                this.listQueryProofMain.accountDateEnd = d2\n            } else {\n                this.listQueryProofMain.accountDateStart = \"\"\n                this.listQueryProofMain.accountDateEnd = \"\"\n            }\n            if (this.value3) {\n                this.listQueryProofMain.createDateStart = d1\n                this.listQueryProofMain.createDateEnd = d2\n            } else {\n                this.listQueryProofMain.createDateStart = \"\"\n                this.listQueryProofMain.createDateEnd = \"\"\n            }\n            this.list3 = []\n            api.queryRecords(this.listQueryProofMain).then(res => {\n                res = res.data\n                this.list2 = res.list\n                this.total = res.pages.count\n            })\n        },\n        getSubList () { //调拨凭证明细查询\n            this.listQueryProofSub.outOrderNumber = this.selectlistRowout.outOrderNumber\n            api.queryRecordsitems(this.listQueryProofSub).then(res => {\n                res = res.data\n                this.list3 = res.list\n                this.total3 = res.pages.count\n            })\n        },\n        selectRow1 (val) {\n            this.selectRowData1 = val\n        },\n        handleCreate () {//新增弹窗\n            if (this.listQuery.orgCode && this.listQuery.businessType && this.listQuery.accountDate && this.listQuery.warehouseCode && this.listQuery.toWarehouseCode) {\n                this.wlxzDialogFormVisible = true\n                this.orgCode = this.listQuery.orgCode\n                this.warehouseCode = this.listQuery.warehouseCode\n                this.$nextTick(() => {\n                    this.$refs.wlxzRef.listSelected = [...this.list]\n                    this.$refs.wlxzRef.isEdit = true\n                    this.$refs.wlxzRef.getList()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择查询条件\",\n                    type: \"warning\"\n                })\n            }\n            api.getArea(this.warehouseCode).then(resa => {\n                resa = resa.data\n                this.areaList = resa\n            })\n            api.getArea(this.listQuery.toWarehouseCode).then(resa => {\n                this.toareaList = resa.data\n            })\n        },\n        savecheck () {\n            let result = true\n            let b = this.list.filter(v => {\n                return v.outStockNum !== 0 && v.outStockNum !== \"\"\n            })\n            console.log(this.list, '666')\n            b.forEach((v) => {\n                if (!v.toWareAreaCode || !v.toWareLocationCode) {\n                    this.$message({\n                        title: this.$t(\"message.warning\"),\n                        message: \"请先选择往来区位和往来储位\",\n                        type: \"warning\"\n                    })\n                    result = false\n                }\n            })\n            // this.save=b\n            if (result) {\n                return b\n            } else {\n                return false\n            }\n        },\n        handleSave () { //保存\n            this.dto = this.listQuery\n            this.dto.customerCode = 1\n            // this.list.filter(v=>{                                       \n            //     return v.outStockNum\n            // })\n            let a = this.savecheck()\n            if (a) {\n                this.dto.outOrderPlans = a\n                api.addRecords(this.dto).then(() => {\n                    this.disabled = true\n                    this.$message({\n                        title: '成功',\n                        message: '保存成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            }\n\n\n        },\n        setDetails (data) {\n            data.forEach((item) => {\n                this.list.push(item)\n            })\n            this.$set(this.$refs.wlxzRef.list_a, this.list)\n        },\n        //物料选择确认\n        create () {\n            if (this.$refs.wlxzRef.listSelected.length > 0) {\n                this.list = this.$refs.wlxzRef.listSelected\n                this.wlxzDialogFormVisible = false\n                this.isEdit = true\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleDelete () {//删除物料\n            if (this.selectRowData1) {\n                this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    this.list = this.list.filter(item => {\n                        let isD = true\n                        this.selectRowData1.forEach((itemr) => {\n                            if (itemr.materielCode === item.materielCode) {\n                                isD = false\n                            }\n                        })\n                        return isD\n                    })\n\n                    this.$message({\n                        type: \"success\",\n                        message: \"删除成功\"\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                    })\n                })\n            } else {\n                this.$message.warning(\"请勾选记录！\")\n                return\n            }\n        },\n        handelRefresh () {//刷新\n            this.isEdit = false\n            this.disabled = false\n            this.list = []\n        },\n        //打印\n        handlePrint () {\n            if (this.selectlistRowout) {\n                this.dialogPrintVisible = true\n                this.dialogStatus = \"print\"\n                this.printData = this.selectlistRowout\n                this.$nextTick(() => {\n                    this.$refs.childQRcode.qrCreate(this.printData.receiveOrderNumber)\n                })\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'))\n                return false\n            }\n\n        },\n        //打印执行\n        doReceiptPrint () {\n            let newWin = window.open(\"\")\n            var newstr = document.getElementById('receipt').innerHTML\n            newWin.document.write(newstr)\n            newWin.document.close()//IE添加\n\n            setTimeout(function () {\n                newWin.print()\n                newWin.close()\n            }, 100)\n        },\n        handleExport () {  //导出\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '打印次数', '凭证号', '业务类型',\n                    '物料编码', '物料名称', '数量',\n                    '组织编码', '仓库编码', '区位', '储位',\n                    '往来单位', '往来区位', '往来储位',\n                    '库存类型', '库存状态',\n                    '记账日期', '创建日期', '记账人'\n                ]\n                const filterVal = [\n                    'printNumber', 'outOrderNumber', 'businessType',\n                    'materielCode', 'materielName', 'outStockNum',\n                    'orgCode', 'warehouseCode', 'wareAreaCode',\n                    'wareLocationCode', 'toOrgCode', 'toWareAreaCode',\n                    'toWareLocationCode', 'stockType', 'stockState',\n                    'accountDate', 'createTime', 'creator'\n                ]\n                const data = this.formatJson(filterVal, this.list3)\n                console.log(data, '8')\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v => filterVal.map(j => {\n                if (j === 'timestamp') {\n                    return\n                } else {\n                    return v[j]\n                }\n            }))\n        },\n\n        selectRowchange (val) {\n            // this.selectlistRowchange = val;\n            this.selectlistRowchange = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbb.clearSelection()\n                this.$refs.tbb.toggleRowSelection(val.pop())\n            }\n        },\n        selectRowout (val) {//出库凭证复选框选中方法\n            this.selectlistRowout = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbMain.clearSelection()\n                this.$refs.tbMain.toggleRowSelection(val.pop())\n            }\n            this.$refs.tbMain.setCurrentRow(this.selectlistRowout)\n            if (this.selectlistRowout) {\n                this.getSubList()\n            }\n        },\n        selectRowout1 (val) {//出库凭证单击行选中方法\n            this.selectlistRowout1 = val\n            this.$refs.tbMain.clearSelection()\n            this.$refs.tbMain.toggleRowSelection(val)\n        },\n\n        togetLocatorList (warehouseCode, areaCode, i) {\n            api.getLocator(warehouseCode, areaCode).then(res => {\n                res = res.data\n                this.$set(this.tolocatorList, i, res)\n                this.$set(this.list[i], 'toWareLocationCode', res[0].locationCode)\n                this.$set(this.list, i, this.list[i])\n            })\n        },\n        tochangeAreaSel (areaCode, i) {\n            this.togetLocatorList(this.listQuery.toWarehouseCode, areaCode, i)\n        },\n        changeAreaSel (areaCode, i) {\n            this.getLocatorList(this.warehouseCode, areaCode, i)\n        },\n        getLocatorList (warehouseCode, areaCode, i) {\n            api.getLocator(warehouseCode, areaCode).then(res => {\n\n                res = res.data\n                this.$set(this.locatorList, i, res)\n                this.$set(this.list[i], 'wareLocationCode', res[0].locationCode)\n                this.$set(this.list, i, this.list[i])\n            })\n        },\n        setdefault1 (val, i) {\n            if (i === 1) {\n                this.listQueryProofMain.orgCode = val\n            } else if (i === 3) {\n                this.listQueryProofMain.warehouseCode = val\n                this.listQueryProofMain.businessType = this.dt_business_type_screenGroupNum_wzsdb.options[0].wareRuleCode\n                this.getMainList()\n            }\n        }\n    }\n};\n",null]}