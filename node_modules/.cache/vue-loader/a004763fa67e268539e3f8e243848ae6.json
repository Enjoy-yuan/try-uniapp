{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/pointPrepare/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/pointPrepare/index.vue","mtime":1596610933495},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/database/pointPreparation'\nimport Pagination from '@/components/Pagination'\nimport eqmtSelectTree from './eqmtSelectTree'\nimport deviceType from '../../components/deviceTypeSelect'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'pointPrepare',\n    components: { Pagination, eqmtSelectTree, deviceType },\n    data() {\n        return {\n            list: [],\n            listSub: [],\n            materiaList: [],\n            options: [],\n            partOptions: [],\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n                inspectionName: undefined,\n                typeCode: undefined\n            },\n            temp: {\n                inspectionName: undefined,\n                purpose: undefined,\n                remark: undefined,\n                typeCode: undefined,\n                tool: undefined\n            },\n            selectlistRow: [],\n            selectlistRowSub: [],\n            tempPart: {\n                partCode: undefined,\n                partName: undefined,\n                method: undefined,\n                recordMode: undefined,\n                normalOption: undefined,\n                exceptionOption: undefined,\n                upperVal: undefined,\n                lowerVal: undefined,\n                defaultVal: undefined\n            },\n            dtos: {\n                inspectionName: undefined,\n                pointInspectionItems: [],\n                purpose: undefined,\n                remark: undefined,\n                tool: undefined,\n                typeCode: undefined\n            },\n            rules: {\n                partCode: [\n                    {\n                        required: true,\n                        message: '请选择部位',\n                        trigger: 'blur'\n                    }\n                ],\n                content: [\n                    {\n                        required: true,\n                        message: '请输入内容',\n                        trigger: 'blur'\n                    }\n                ],\n                method: [\n                    {\n                        required: true,\n                        message: '请输入方法',\n                        trigger: 'blur'\n                    }\n                ],\n                recordMode: [\n                    {\n                        required: true,\n                        message: '请选择记录方式',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            formRules: {\n                inspectionName: [\n                    {\n                        required: true,\n                        message: '请输入点检名称',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            dialogStatus: '',\n            dxjdialogStatus: '',\n            dialogFormVisible: false,\n            dxjDialogVisible: false,\n            tableKey: [0, 1]\n        }\n    },\n    created() {\n        this.getList()\n    },\n    watch: {\n        'tempPart.recordMode'(val) {\n            if (val == 'dt_record_mode_value') {\n                this.tempPart.normalOption = undefined\n                this.tempPart.exceptionOption = undefined\n                return false\n            }\n            if (\n                val == 'dt_record_mode_single ' ||\n                val == 'dt_record_mode_multiple'\n            ) {\n                this.tempPart.upperVal = undefined\n                this.tempPart.lowerVal = undefined\n                return false\n            }\n            if (val == 'dt_record_mode_text') {\n                this.tempPart.upperVal = undefined\n                this.tempPart.lowerVal = undefined\n                this.tempPart.normalOption = undefined\n                this.tempPart.exceptionOption = undefined\n                return false\n            }\n        }\n    },\n    filters: {\n        splitState: function(e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_record_mode: state => state.eamDict.dt_record_mode\n        })\n    },\n    mounted() {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        this.getTypeCode()\n        this.$store.dispatch('eamDict/getDicData', ['dt_record_mode'])\n    },\n    methods: {\n        getDeviceType1(val) {\n            if (val) {\n                this.listQuery.typeCode = val.typeCode\n            } else {\n                this.listQuery.typeCode = undefined\n            }\n        },\n        getList() {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getTypeCode() {\n            api.queryTypeCode().then(res => {\n                this.options = res.data\n            })\n        },\n\n        getListSub() {\n            api.searchDetails(this.selectlistRow[0].inspectionCode).then(\n                res => {\n                    this.listSub = res.data\n                }\n            )\n        },\n        getDeviceType2(val) {\n            if (val) {\n                this.temp.typeCode = val.typeCode\n            } else {\n                this.temp.typeCode = undefined\n            }\n        },\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        handleQuery() {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        resetTemp() {\n            this.temp = {\n                inspectionName: undefined,\n                purpose: undefined,\n                remark: undefined,\n                typeCode: undefined,\n                tool: undefined\n            }\n            this.materiaList = []\n        },\n        resetTempPart() {\n            this.tempPart = {\n                partCode: '',\n                partName: '',\n                method: '',\n                recordMode: '',\n                normalOption: '',\n                exceptionOption: '',\n                upperVal: '',\n                lowerVal: '',\n                defaultVal: ''\n            }\n        },\n        //弹窗表格新增\n        handleAdd() {\n            this.resetTempPart()\n            if (this.selectlistRow.length) {\n                api.queryPart(this.selectlistRow[0].typeCode).then(res => {\n                    if (res.data.length == 0) {\n                        this.$message({\n                            title: '警告',\n                            message: '此设备类型无部位内容，请重新选择一条',\n                            type: 'warning'\n                        })\n                    } else {\n                        this.partOptions = res.data\n                        this.tempPart.partCode = res.data[0].partCode\n                        this.tempPart.partName = res.data[0].partName\n                        this.dialogFormVisible = true\n                        this.dialogStatus = 'createPart'\n                    }\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备类型',\n                    type: 'warning'\n                })\n            }\n        },\n        //新增\n        handleCreate() {\n            this.resetTemp()\n            this.dxjdialogStatus = 'create'\n            this.dxjDialogVisible = true\n            setTimeout(() => {\n                this.$refs.eqmtSelectTree.$refs.selectTree.valueTitle = ''\n            }, 0)\n        },\n        //新增方法\n        create() {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (!this.temp.typeCode) {\n                        this.$message({\n                            title: '警告',\n                            message: '请选择设备类型',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dxjDialogVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        //编辑\n        handleUpdate() {\n            if (!this.selectlistRow.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条数据',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.dxjDialogVisible = true\n            this.dxjdialogStatus = 'updatePart'\n            this.temp = this.selectlistRow[0]\n            setTimeout(() => {\n                this.$refs.eqmtSelectTree.$refs.selectTree.valueTitle = this.temp.typeName\n            }, 0)\n        },\n        handleDelete() {\n            //删除列表\n            if (this.selectlistRow.length) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecord(\n                            this.selectlistRow[0].inspectionCode\n                        ).then(() => {\n                            this.getList()\n                            this.listSub = []\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //弹窗编辑\n        handleEdit() {\n            if (this.selectlistRowSub) {\n                this.tempPart = this.selectlistRowSub\n                this.dialogStatus = 'updatePart'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //弹窗方法\n        handleCut() {\n            if (this.selectlistRowSub) {\n                this.$confirm('确认要删除该数据项吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteDetails(\n                            this.selectlistRow[0].inspectionCode,\n                            this.selectlistRowSub.inspectionItemCode\n                        ).then(res => {\n                            if (res.status == 204) {\n                                this.getListSub()\n                                this.$message({\n                                    type: 'success',\n                                    message: '删除成功'\n                                })\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n            } else {\n                this.$message.warning('请勾选记录！')\n                return\n            }\n        },\n        //弹窗表格新增方法\n        createPart() {\n            this.$refs['subForm'].validate(valid => {\n                if (valid) {\n                    api.addDetails(\n                        this.selectlistRow[0].inspectionCode,\n                        this.tempPart\n                    ).then(res => {\n                        if (res.status == 201) {\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getListSub()\n                        }\n                    })\n                }\n            })\n        },\n        //编辑方法\n        update() {\n            this.dtos.inspectionName = this.temp.inspectionName\n            this.dtos.purpose = this.temp.purpose\n            this.dtos.remark = this.temp.remark\n            this.dtos.tool = this.temp.tool\n            this.dtos.typeCode = this.temp.typeCode\n            api.updateRecord(\n                this.selectlistRow[0].inspectionCode,\n                this.dtos\n            ).then(() => {\n                this.getList()\n                this.dxjDialogVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '更新成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        //弹窗编辑方法\n        updatePart() {\n            this.$refs['subForm'].validate(valid => {\n                if (valid) {\n                    api.patchDetails(\n                        this.selectlistRow[0].inspectionCode,\n                        this.selectlistRowSub.inspectionItemCode,\n                        this.tempPart\n                    ).then(res => {\n                        if (res.status == 201) {\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success'\n                            })\n                            this.getListSub()\n                        }\n                    })\n                }\n            })\n        },\n        // 获取表格选中时的数据\n        selectRow(val) {\n            this.selectlistRow = val\n            if (val.length == 0) {\n                this.selectlistRow = []\n                this.listSub = []\n                return false\n            }\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.mainList.setCurrentRow(this.selectlistRow[0])\n            if (this.selectlistRow.length) {\n                this.getListSub()\n            }\n        },\n        //主表行点击\n        showSubTable(val) {\n            this.$refs.mainList.toggleRowSelection(val, 'selected')\n        },\n        // 获取表格选中时的数据\n        selectRow2(val) {\n            this.selectlistRowSub = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.subList.clearSelection()\n                this.$refs.subList.toggleRowSelection(\n                    val[val.length - 1],\n                    'selected'\n                )\n            }\n        },\n        //主表行点击\n        showSubTable2(val) {\n            this.selectlistRowSub = val\n            this.$refs.subList.clearSelection()\n            this.$refs.subList.toggleRowSelection(val, true)\n        }\n    }\n}\n",null]}