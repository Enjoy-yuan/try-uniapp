{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/procurementDemand/divisionNeeds/divisionNeed/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/procurementDemand/divisionNeeds/divisionNeed/index.vue","mtime":1596610933854},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\"\nimport * as api from \"@/api/project/srm/procurementDemand/divisionNeeds/divisionNeed\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\n\nimport Pagination from \"@/components/Pagination\"\n// import dialogDivide from './dialog/dialogDivide'\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\n\nexport default {\n    name: \"divisionNeed\",\n    components: { caiGou, Pagination, dialogPersonSelect },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            spanArr: [],\n            pos: 0,\n            dataList: [],\n            itemList: [],//从表数据\n            total: 0,\n            totalItem: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                state: null,\n                orgCode: null,\n                classification: null,\n                materialName: null,\n                purchasePeople: null,\n                purchasePeopleName: null\n            },\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            filterConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '', copmNum: 0, class: 'filter-item' },\n                { type: 'dictSelect', dType: 'dt_srm_pbd', label: '状态', prop: 'state', width: '', optionArr: [], class: 'filter-item ml_5' },\n                { type: 'dictSelect', dType: 'dt_materiel_type', label: '物料类型', prop: 'classification', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料名称', prop: 'materialName', width: '', class: 'filter-item ml_5' },\n                { type: 'inputBtnPerson', label: '责任人', prop: 'purchasePeopleName', copmNum: 1, class: 'ml_5' },\n            ],\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'handleDivide', name: '分工' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handlePublish', name: '发布' },\n            ],\n            tableConfig: [\n                { label: '打包号', prop: 'packageNo', align: 'center', width: '180' },\n                { label: '状态', prop: 'stateCN', align: 'center', width: 'auto' },\n                { label: '物料图号', prop: 'mapNo', align: 'center', width: '180' },\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: 'auto' },\n                { label: '物料编码', prop: 'materielCode', align: 'center', width: '180' },\n                { label: '物料名称', prop: 'materielName', align: 'center', width: '180' },\n                { label: '分配责任人', prop: 'purchasePeopleName', align: 'center', width: 'auto' },\n                { label: '上次分配人', prop: 'lastAssignPeopleName', align: 'center', width: 'auto' },\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: 'auto' },\n                { label: '供应商', prop: 'supplierName', align: 'center', width: 'auto' },\n                { label: '规格', prop: 'specifications', align: 'center', width: 'auto' },\n                { label: '材质', prop: 'materialTexture', align: 'center', width: 'auto' },\n                { label: '重量', prop: 'weight', align: 'center', width: 'auto' },//wu\n                { label: '物料类型', prop: 'materialType', align: 'center', width: 'auto' },\n                { label: '是否关重件', prop: 'heavyParts', align: 'center', width: 'auto' },\n                { label: '关联单号', prop: 'associatedNo', align: 'center', width: 'auto' },\n                { label: '计量单位', prop: 'measurement', align: 'center', width: 'auto' },\n                { label: '确定目标价', prop: 'targetPrice', align: 'center', width: 'auto' },\n                { label: '要求完成时间', prop: 'completionTime', align: 'center', width: '150' },\n                { label: '组织编码', prop: 'orgCode', align: 'center', width: 'auto' },\n                { label: '项目号', prop: 'projectNo', align: 'center', width: 'auto' },\n                { label: '来源方式', prop: 'sourceType', align: 'center', width: 'auto' },//wu\n                { label: '关联物料编码', prop: 'associatedMaterial', align: 'center', width: 'auto' },\n                { label: '设计师', prop: 'designer', align: 'center', width: 'auto' },\n                { label: '任务分配人', prop: 'assignPersonName', align: 'center', width: 'auto' },\n            ],\n            dialogConfig: [\n                { title: '人员分工', propCode: \"purchasePeople\", propName: \"purchasePeopleName\", unMutiple: true, required: false },\n            ]\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_materiel_type: state => state.dict.dt_materiel_type,//物料类型\n            dt_materiel_classify: state => state.dict.dt_materiel_classify,//物料分类\n            dt_srm_pbd: state => state.dict.dt_srm_pbd//分工状态\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_materiel_type\", \"dt_srm_pbd\"])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 10\n        },\n        //获取表格数据\n        getList () {\n\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_materiel_type, this.dt_srm_pbd]\n                res.data = this.$myFun.codeToName(res.data, options, ['classification', 'state'])\n                this.dataList = res.data.list\n                this.total = res.data.pages.count\n                this.spanArr = []\n                this.pos = 0\n                this.getSpanArr(this.dataList)\n            })\n        },\n        handleView () {\n\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.handleDivide()\n                    break\n                }\n                case 1: {\n                    this.handlePublish()\n                    break\n                }\n            }\n        },\n        //分工操作\n        handleDivide () {\n            if (this.selectedRows) {\n                if (this.selectedRows.length > 0) {\n                    this.showPerson(\"divide\")\n                } else {\n                    this.$message({ type: 'warning', message: '请至少选择一条数据' })\n                }\n            } else {\n                this.$message({ type: 'warning', message: '请至少选择一条数据' })\n            }\n        },\n        publish () {\n\n        },\n        handlePublish () {\n            if (this.selectedRows) {\n                if (this.selectedRows.length > 0) {\n                    let cdata = {\n                        packageNo: this.selectedRows[0].packageNo,\n                        method: \"RELEASE\"\n                    }\n                    api.handleRecords(cdata).then(() => {\n                        this.$message({ type: 'success', message: '发布成功' })\n                        this.getList()\n                    })\n                } else {\n                    this.$message({ type: 'warning', message: '请至少选择一条数据' })\n                }\n            } else {\n                this.$message({ type: 'warning', message: '请至少选择一条数据' })\n            }\n        },\n        getSpanArr (data) {\n            data.sort(this.compareObj(\"packageNo\"))\n            for (var i = 0; i < data.length; i++) {\n                if (i === 0) {\n                    this.spanArr.push(1)\n                    this.pos = 0\n                } else {\n                    // 判断当前元素与上一个元素是否相同\n                    if (data[i].packageNo === data[i - 1].packageNo) {\n                        this.spanArr[this.pos] += 1\n                        this.spanArr.push(0)\n                    } else {\n                        this.spanArr.push(1)\n                        this.pos = i\n                    }\n                }\n            }\n        },\n        compareObj (prop) {\n            return function (obj1, obj2) {\n                let val1 = obj1[prop]\n                let val2 = obj2[prop]\n                if (val1 < val2) {\n                    return -1\n                } else if (val1 > val2) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        },\n        objectSpanMethod ({ rowIndex, columnIndex }) {\n            if (columnIndex === 2) {\n                const _row = this.spanArr[rowIndex]\n                const _col = _row > 0 ? 1 : 0\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                }\n            }\n        },\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                    // this.selectSameProp(this.dataList, \"packageNo\", val)\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                    // this.itemList = []\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n                // this.selectSameProp(this.dataList, \"packageNo\", val)\n            }\n        },\n        // selectSameProp (data, prop, val) {\n        //     this.selectedRows = []\n        //     for (let j = 0; j < val.length; j++) {\n        //         for (var i = 0; i < data.length; i++) {\n        //             if (data[i][prop] === val[j][prop]) {\n        //                 this.selectedRows.push(data[i])\n        //             }\n        //         }\n        //     }\n        // },\n        showPerson (propCode, propName) {\n            switch (propCode) {\n                case 'purchasePeople': {\n                    this.dialogConfig[0].required = false\n                    this.dialogConfig[0].title = '选择责任人'\n                    break\n                }\n                case 'divide': {\n                    this.dialogConfig[0].required = true\n                    this.dialogConfig[0].title = '人员分工'\n                    break\n                }\n            }\n            this.dialogConfig[0].propCode = propCode\n            this.dialogConfig[0].propName = propName\n            this.$refs.refPerson.dialogVisible = true\n        },\n        personConfirm (val, propCode, propName) {\n            switch (propCode) {\n                case 'purchasePeople': {\n                    this.$set(this.listQuery, propCode, val[0].employeeCode)\n                    this.$set(this.listQuery, propName, val[0].employeeName)\n                    break\n                }\n                case 'divide': {\n                    console.log(val[0], '分工提交')\n                    //分工提交\n                    let cdata = {\n                        divideDTO: {\n                            assignPerson: val[0].employeeCode,\n                            assignPersonName: val[0].employeeName,\n                            packageNo: this.selectedRows[0].packageNo\n                        },\n                        packageNo: this.selectedRows[0].packageNo,\n                        method: \"DIVIDE\"\n                    }\n                    api.handleRecords(cdata).then(res => {\n                        console.log(res)\n                        this.$message({ type: 'success', message: '分工提交成功' })\n                    })\n                    break\n                }\n            }\n        }\n    }\n};\n",null]}