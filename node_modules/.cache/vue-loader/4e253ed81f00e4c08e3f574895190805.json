{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processMonitor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processMonitor/index.vue","mtime":1596610934258},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport * as api1 from '@/api/system/process/processConfiguration'\nimport * as api from '@/api/system/process/processMonitor'\nimport Pagination from '@/components/Pagination'\nimport dialogStart from './dialogStart'\n\n\nexport default {\n    name: 'processDesign',\n    components: { Pagination, dialogStart },\n    data () {\n        return {\n            theight: 0, //表格高度\n            isSingle: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null, //当前选中的行\n            selectedRows: null, //多选时选中的所有行\n            //树高度样式\n            contentStyleObj: {\n                height: ''\n            },\n            treeData: [],\n            defaultProps: {\n                children: 'children',\n                label: 'name'\n            },\n            tableKey: [0, 1], //表格索引，虚拟dom渲染表格时使用\n            list: [{\n                organizationCode: 1\n            }],\n            listSub: [],\n            total: 0,\n            orgName: [],\n            dialogStatus: '',\n            activeCollNames: ['1'],\n            listLoading: true,\n            dialogVisible: false,\n            dialogVisibleupload: false,\n            dialogVisiblesearch: false,\n            startData: {\n                formData: null,\n                src: null\n            },\n            listQuery: {\n                key: undefined,\n                currentPage: 1,\n                pageSize: 10\n            },\n            listQuerySub: {\n                parentOrgCode: undefined,\n                currentPage: 1,\n                pageSize: 10,\n                state: 0,\n                yewuhao: ''\n            }\n        }\n    },\n\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n            this.setTreeHeight()\n        }\n        this.getTreeList()\n        this.getList()\n        this.setTreeHeight()\n    },\n    methods: {\n        //模板变化\n        changeMoudle (val) {\n            this.$emit('changeSelect', val)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() / 2 - 30\n        },\n        getTreeList () {\n            api.getModelTree('tree').then(rest => {\n                rest = rest.data\n                this.treeData = this.$myFun.reDataToWorkTree(rest, 'category')\n            })\n        },\n        getList () {\n            // setTimeout(() => {\n            //     api.getRecords(this.listQuery).then(res => {\n            //         res = res.data.list\n            //         this.list = res\n            //     })\n            // }, 1.5 * 100);\n\n            setTimeout(() => {\n                api1.getRecords(this.listQuery).then(res => {\n                    res = res.data.list\n                    this.list = res\n                })\n            }, 1.5 * 100);\n        },\n        //获取监控详情\n        getSubList () {\n\n        },\n        handleQuery () {\n            //查询\n            this.getSubList()\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(\n                        val[val.length - 1],\n                        'selected'\n                    ) //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击某行时执行\n        rowClick (val) {\n            if (this.isSingle) {\n                this.$refs.tb.clearSelection() //清除其他行的选中\n            }\n            this.$refs.tb.toggleRowSelection(val) //单击行绑定点击事件\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight()\n        },\n        handleNodeClick (data) {\n            //点击树查询\n            this.listQuery.key = data.key\n            this.getList()\n        },\n        //流程启动\n        handleStart (index, row) {\n            //  this.dialogIndex = 1\n            this.$refs.dialogStart.initForm(row)\n            this.startData.src = `/workflow/diagram-viewer/index.html?processDefinitionId=${row.id}`\n            this.$refs.dialogStart.dialogVisible = true\n        },\n        startWorkFlow (val) {\n            this.startData.formData = val\n            console.log(this.startData)\n            this.$router.push({ name: '流程启动', params: this.startData })\n        }\n    }\n}\n",null]}