{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/errorType/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/errorType/index.vue","mtime":1596610933479},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport RightContent from './rightcontent'\nimport * as api from '@/api/project/eas/database/faultType'\nexport default {\n    name: 'faultType',\n    components: { RightContent },\n    data () {\n        return {\n            treeData: [],\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10\n            },\n            defaultProps: {\n                rowId: 'rowId',\n                children: 'children',\n                label: 'faultName'\n            },\n            rowIndex: '',\n            //树高度样式\n            contentStyleObj: {\n                height: ''\n            },\n            selectedObj: undefined\n        }\n    },\n    created () {\n        window.addEventListener('resize', this.getHeight)\n\n        this.initTree()\n    },\n    mounted () {\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTreeHeight()\n        }\n        this.setTreeHeight()\n        this.handleFresh()\n    },\n    methods: {\n        buildTree: (array, id, parent_id) => {\n            // 创建临时对象\n            let temp = {}\n            // 创建需要返回的树形对象\n            let tree = []\n            // 先遍历数组，将数组的每一项添加到temp对象中\n            for (let i in array) {\n                temp[array[i][id]] = array[i]\n            }\n            // 遍历temp对象，将当前子节点与父节点建立连接\n            for (let i in temp) {\n                // 判断是否是根节点下的项\n                if (temp[i][parent_id] !== '0') {\n                    if (!temp[temp[i][parent_id]].children) {\n                        temp[temp[i][parent_id]].children = []\n                    }\n                    temp[temp[i][parent_id]].children.push(temp[i])\n                } else {\n                    tree.push(temp[i])\n                }\n            }\n            return tree\n        },\n\n        initTree () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.treeData = [\n                    {\n                        faultName: '故障类型',\n                        faultCode: '0',\n                        rowId: 0,\n                        children: this.buildTree(\n                            res.data.list,\n                            'faultCode',\n                            'preFaultCode'\n                        )\n                    }\n                ]\n            })\n        },\n        handleFresh () {\n            this.initTree()\n        },\n        handleNodeClick (data) {\n            this.$refs.uploadRef.getList(data)\n            this.$refs.uploadRef.temp.preFaultCode = data.faultCode\n            this.selectedObj = data\n        },\n        getHeight () {\n            this.contentStyleObj.height =\n                document.body.scrollHeight - 110 + 'px'\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height =\n                parseInt(this.$myFun.getTreehHeight()) - 40 + 'px'\n        }\n    },\n    destroyed () {\n        window.removeEventListener('resize', this.getHeight)\n    }\n}\n",null]}