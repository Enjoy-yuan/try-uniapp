{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationPlan/index.vue","mtime":1597628790265},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryRecords } from \"@/api/project/srm/dataBase/dictMaintenance\"\nimport * as api from \"@/api/project/srm/contractManage/evaluationPlan\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport Pagination from \"@/components/Pagination\"\nimport { mapState } from \"vuex\"\nimport addMain from \"./dialog/addMain\"\n\nexport default {\n    name: \"evaluationPlan\",\n    components: { Pagination, caiGou, addMain },\n    data () {\n        return {\n            dictList: null,\n            modalnum: null,//模板编号，非模板页面可删\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            total: 0,\n            DICT_CODE: DICT_CODE,\n            listQuery: {\n                //查询\n                orgCode: 'dtcg0001',\n                page: true,\n                currentPage: 1,\n                pageSize: 15\n            },\n            tableConfig: [\n                { label: '序号', prop: 'rowId', align: 'center', width: 'auto' },\n                { label: '组织编码', prop: 'orgName', align: 'center', width: 'auto' },\n                { label: '计划号', prop: 'evaluationPlanNo', align: 'center', width: '120px' },\n                { label: '评价类型', prop: 'evaluationTypeCN', align: 'center', width: 'auto' },\n                { label: '评价分类', prop: 'evaluationClassificationCN', align: 'center', width: 'auto' },\n                { label: '评价年度', prop: 'evaluationYear', align: 'center', width: 'auto' },\n                { label: '评价类别', prop: 'evaluationCategoryCN', align: 'center', width: 'auto' },\n                { label: '评价阶段', prop: 'evaluationStageCN', align: 'center', width: 'auto' },\n                { label: '评价周期起', prop: 'periodStart', align: 'center', width: 'auto' },\n                { label: '评价周期止', prop: 'periodEnd', align: 'center', width: 'auto' },\n                { label: '评价日期截止', prop: 'endTime', align: 'center', width: 'auto' },\n                { label: '状态', prop: 'stateCN', align: 'center', width: 'auto' },\n                { label: '创建人', prop: 'creatorName', align: 'center', width: 'auto' },\n                { label: '创建时间', prop: 'createTime', align: 'center', width: 'auto' },\n                { label: '修改人', prop: 'updatorName', align: 'center', width: 'auto' },\n                { label: '修改时间', prop: 'updateTime', align: 'center', width: 'auto' }\n            ],\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            tableKey: 0 //表格索引\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_srm_pak: state => state.dict.dt_srm_pak,\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pb1: state => state.dict.dt_srm_pb1,\n            dt_srm_pb2: state => state.dict.dt_srm_pb2,\n        })\n    },\n    mounted () {\n        let dto = {\n            page: true,\n            currentPage: 1,\n            pageSize: 15\n        }\n        queryRecords(dto).then(response => {\n            this.dictList = response.data.list\n        })\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pak\", 'dt_srm_p0', 'dt_srm_pb1', 'dt_srm_pb2'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        //模板切换事件，非模板页面可删\n        changeMoudle (val) {\n            this.$emit('changeSelect', val)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        refresh () {\n            this.getList()\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecord(this.listQuery).then(res => {\n                let options = [this.dt_srm_pak, this.dt_srm_pb1, this.dt_srm_pb2, this.dt_srm_p0]\n                res.data = this.$myFun.codeToName(res.data, options, ['evaluationType', 'evaluationClassification', 'evaluationCategory', 'state'])\n                this.list = res.data.list.map(v => {\n                    if (this.dictList) {\n                        this.dictList.forEach(val => {\n                            if (v.evaluationStage == val.code) {\n                                v.evaluationStageCN = val.name\n                            }\n                        })\n                    }\n                    return v\n                })\n                this.total = res.data.pages.count\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //提交按钮单击事件\n        handleSubmit () {\n            if (this.selectlistRow) {\n                this.$confirm(\"是否提交该信息\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    let dto = {\n                        createTime: this.selectlistRow.createTime,\n                        creator: this.selectlistRow.creator,\n                        rowId: this.selectlistRow.rowId,\n                        updateTime: this.selectlistRow.updateTime,\n                    }\n                    api.submitRecord(dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '提交成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n\n        },\n        //关闭按钮单击事件\n        handleClose () {\n            if (this.selectlistRow) {\n                this.$confirm(\"是否关闭该信息\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    // api.deleteRecord(val.rowId).then(() => {\n                    //     this.$message({\n                    //         title: '成功',\n                    //         message: '关闭成功',\n                    //         type: 'success',\n                    //         duration: 2000\n                    //     })\n                    //     this.getList()\n                    // })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                    })\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.$refs.addMain.resetTemp()\n            this.$refs.addMain.dialogStatus = 'create'\n            this.$refs.addMain.dialogVisible = true\n        },\n        handleUpdate (index, val) {\n            //编辑按钮单击事件方法\n            this.$refs.addMain.dialogStatus = 'update'\n            this.$refs.addMain.dialogVisible = true\n            this.$refs.addMain.temp = { ...val }\n            let dto = {\n                currentPage: 1,\n                pageSize: 15,\n                parentCode: val.evaluationCategory\n            }\n            queryRecords(dto).then(res => {\n                this.$refs.addMain.phaseList = []\n                this.$refs.addMain.phaseList = res.data.list\n            })\n\n        },\n        handleDelete (index, val) {\n            console.log(index, val)\n            //删除按钮单击事件方法\n            this.$confirm(\"是否删除该信息\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                let dto = {\n                    rowIds: [val.rowId]\n                }\n                api.deleteRecord(dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)\n        }\n    }\n};\n",null]}