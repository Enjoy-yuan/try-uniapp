{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/bom/index.vue?vue&type=template&id=7746485e&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/bom/index.vue","mtime":1600927611443},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"app-container\" }, [\n      _c(\"div\", { staticClass: \"filter-container\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"filter-items\" },\n          [\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"filter-item\",\n                attrs: { placeholder: \"BOM类型\", size: \"small\", clearable: \"\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.bomType,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"bomType\", $$v)\n                  },\n                  expression: \"listQuery.bomType\"\n                }\n              },\n              _vm._l(_vm.dt_bom_type, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: { label: item.dictItemValue, value: item.dictItemKey }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"filter-item\",\n                attrs: { placeholder: \"BOM类别\", size: \"small\", clearable: \"\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.bomCategory,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"bomCategory\", $$v)\n                  },\n                  expression: \"listQuery.bomCategory\"\n                }\n              },\n              _vm._l(_vm.dt_bom_category, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: {\n                    label: item.dictItemValue + \"BOM\",\n                    value: item.dictItemKey\n                  }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"filter-item\",\n                attrs: {\n                  placeholder: \"公司级别\",\n                  size: \"small\",\n                  clearable: \"\"\n                },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.bomRank,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"bomRank\", $$v)\n                  },\n                  expression: \"listQuery.bomRank\"\n                }\n              },\n              _vm._l(_vm.dt_bom_rank, function(item) {\n                return _c(\"el-option\", {\n                  key: item.dictItemKey,\n                  attrs: {\n                    label: item.dictItemValue + \"级别\",\n                    value: item.dictItemKey\n                  }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"el-input\", {\n              staticClass: \"filter-item\",\n              attrs: { placeholder: \"组织编码\", size: \"small\" },\n              nativeOn: {\n                keyup: function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.handleQuery($event)\n                }\n              },\n              model: {\n                value: _vm.listQuery.organizationCode,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"organizationCode\", $$v)\n                },\n                expression: \"listQuery.organizationCode\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\"el-input\", {\n              staticClass: \"filter-item\",\n              attrs: { placeholder: \"产品编码\", size: \"small\" },\n              nativeOn: {\n                keyup: function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.handleQuery($event)\n                }\n              },\n              model: {\n                value: _vm.listQuery.materielCode,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"materielCode\", $$v)\n                },\n                expression: \"listQuery.materielCode\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"filter-item-btn filter-item\",\n                attrs: {\n                  type: \"primary\",\n                  size: \"small\",\n                  icon: \"el-icon-search\"\n                },\n                on: { click: _vm.handleQuery }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"btn.search\")))]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"table-container\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"oprate_btn\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-plus\"\n                  },\n                  on: { click: _vm.handleCreate }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.add\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-edit\"\n                  },\n                  on: { click: _vm.handleUpdate }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.edit\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-delete\"\n                  },\n                  on: { click: _vm.handleDelete }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.delete\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-edit-outline\"\n                  },\n                  on: { click: _vm.handlePublish }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.publish\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-delete\"\n                  },\n                  on: { click: _vm.handleInvalid }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.abandon\")))]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              key: _vm.tableKey[0],\n              ref: \"tb\",\n              attrs: {\n                data: _vm.list,\n                height: _vm.theight,\n                border: \"\",\n                fit: \"\",\n                \"highlight-current-row\": \"\",\n                \"cell-class-name\": \"table-cell\",\n                \"header-cell-class-name\": \"header-cell\"\n              },\n              on: {\n                \"selection-change\": _vm.selectChange,\n                \"row-click\": _vm.rowClick\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { type: \"selection\", width: \"30\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"BOMID\",\n                  prop: \"rowId\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"产品编码\",\n                  prop: \"materielCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"产品名称\",\n                  prop: \"materielName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"基准数\",\n                  prop: \"cardinalNumber\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"版本号\",\n                  prop: \"version\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"状态\",\n                  prop: \"statusName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"生产号\",\n                  prop: \"productionNumber\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"订单号\",\n                  prop: \"orderNumber\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"组织编码\",\n                  prop: \"organizationCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"BOM类型\",\n                  prop: \"bomTypeName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"BOM类别\",\n                  prop: \"bomCategoryName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"BOM级别\",\n                  prop: \"bomRankName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"有效开始日期\",\n                  prop: \"startDate\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"有效结束日期\",\n                  prop: \"endDate\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"pagination\", {\n            attrs: {\n              total: _vm.total,\n              page: _vm.listQuery.currentPage,\n              limit: _vm.listQuery.pageSize\n            },\n            on: {\n              \"update:page\": function($event) {\n                return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n              },\n              \"update:limit\": function($event) {\n                return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n              },\n              pagination: _vm.getList\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"hr\", { staticClass: \"hrtLineStyle\" }),\n          _vm._v(\" \"),\n          _c(\"hr\", { staticClass: \"hrLineStyle\" }),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"oprate_btn\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-plus\"\n                  },\n                  on: { click: _vm.handleCreateFrom }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.add\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-edit\"\n                  },\n                  on: { click: _vm.handleUpdateFrom }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.edit\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    type: \"primary\",\n                    icon: \"el-icon-delete\"\n                  },\n                  on: { click: _vm.handleDeleteFrom }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.delete\")))]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              key: _vm.tableKey[1],\n              ref: \"tb2\",\n              attrs: {\n                data: _vm.fromList,\n                height: _vm.theight,\n                border: \"\",\n                fit: \"\",\n                \"highlight-current-row\": \"\",\n                \"cell-class-name\": \"table-cell\",\n                \"header-cell-class-name\": \"header-cell\"\n              },\n              on: {\n                \"selection-change\": _vm.selectFromChange,\n                \"row-click\": _vm.rowClickFrom\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { type: \"selection\", width: \"30\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"BOMID\",\n                  prop: \"rowId\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"物料编码\",\n                  prop: \"materielCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"装配数量\",\n                  prop: \"assembleQuantity\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"装配工位\",\n                  prop: \"workStationName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"物料属性\",\n                  prop: \"materialProperty\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"制造路线\",\n                  prop: \"manufactureLineName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"装配路线\",\n                  prop: \"assembleLineName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"开始日期\",\n                  prop: \"startDate\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  \"min-width\": \"100\",\n                  align: \"center\",\n                  label: \"结束日期\",\n                  prop: \"endDate\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                title:\n                  _vm.dialogStatus == \"create\"\n                    ? _vm.$t(\"table.add\")\n                    : _vm.$t(\"table.edit\"),\n                visible: _vm.dialogFormVisible\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.dialogFormVisible = $event\n                },\n                close: _vm.handleClose\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"temp\",\n                  staticClass: \"small-space\",\n                  staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                  attrs: {\n                    model: _vm.temp,\n                    rules: _vm.rules,\n                    \"label-position\": \"left\",\n                    \"label-width\": \"100px\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"BOM类型\", prop: \"bomType\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择\",\n                            size: \"small\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.temp.bomType,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp, \"bomType\", $$v)\n                            },\n                            expression: \"temp.bomType\"\n                          }\n                        },\n                        _vm._l(_vm.dt_bom_type, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"BOM类别\", prop: \"bomCategory\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择\",\n                            size: \"small\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.temp.bomCategory,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp, \"bomCategory\", $$v)\n                            },\n                            expression: \"temp.bomCategory\"\n                          }\n                        },\n                        _vm._l(_vm.dt_bom_category, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue + \"BOM\",\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"BOM级别\", prop: \"bomRank\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择\",\n                            size: \"small\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.temp.bomRank,\n                            callback: function($$v) {\n                              _vm.$set(_vm.temp, \"bomRank\", $$v)\n                            },\n                            expression: \"temp.bomRank\"\n                          }\n                        },\n                        _vm._l(_vm.dt_bom_rank, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue + \"级别\",\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"组织编码\", prop: \"organizationCode\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.organizationCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"organizationCode\", $$v)\n                          },\n                          expression: \"temp.organizationCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"产品编码\", prop: \"materielCode\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.materielCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"materielCode\", $$v)\n                          },\n                          expression: \"temp.materielCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"产品基数\", prop: \"cardinalNumber\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.cardinalNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"cardinalNumber\", $$v)\n                          },\n                          expression: \"temp.cardinalNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"生产号\", prop: \"productionNumber\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.productionNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"productionNumber\", $$v)\n                          },\n                          expression: \"temp.productionNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"订单号\", prop: \"orderNumber\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.orderNumber,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"orderNumber\", $$v)\n                          },\n                          expression: \"temp.orderNumber\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"版本\", prop: \"version\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.temp.version,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"version\", $$v)\n                          },\n                          expression: \"temp.version\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"有效时间\", prop: \"startTime\" } },\n                    [\n                      _c(\"el-date-picker\", {\n                        staticStyle: { width: \"240px\" },\n                        attrs: {\n                          size: \"small\",\n                          type: \"daterange\",\n                          \"start-placeholder\": \"开始日期\",\n                          \"end-placeholder\": \"结束日期\",\n                          \"value-format\": \"yyyy-MM-dd\"\n                        },\n                        model: {\n                          value: _vm.temp.timeRange,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"timeRange\", $$v)\n                          },\n                          expression: \"temp.timeRange\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.dialogFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _vm.dialogStatus == \"create\"\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.create }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                    : _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.update }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n              attrs: {\n                \"custom-class\": \"dialog-custom\",\n                \"close-on-click-modal\": false,\n                \"close-on-press-escape\": false,\n                title:\n                  _vm.fromDialogStatus == \"create\"\n                    ? _vm.$t(\"table.add\")\n                    : _vm.$t(\"table.edit\"),\n                visible: _vm.fromDialogFormVisible\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.fromDialogFormVisible = $event\n                },\n                close: _vm.handleCloseFrom\n              }\n            },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"tempFrom\",\n                  staticClass: \"small-space\",\n                  staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                  attrs: {\n                    model: _vm.tempFrom,\n                    rules: _vm.formRules,\n                    \"label-position\": \"left\",\n                    \"label-width\": \"100px\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"物料编码\", prop: \"materielCode\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.tempFrom.materielCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.tempFrom, \"materielCode\", $$v)\n                          },\n                          expression: \"tempFrom.materielCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"装配数量\", prop: \"assembleQuantity\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.tempFrom.assembleQuantity,\n                          callback: function($$v) {\n                            _vm.$set(_vm.tempFrom, \"assembleQuantity\", $$v)\n                          },\n                          expression: \"tempFrom.assembleQuantity\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"工位编码\", prop: \"workStationCode\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.tempFrom.workStationCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.tempFrom, \"workStationCode\", $$v)\n                          },\n                          expression: \"tempFrom.workStationCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"物料属性\", prop: \"materialProperty\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择\",\n                            size: \"small\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.tempFrom.materialProperty,\n                            callback: function($$v) {\n                              _vm.$set(_vm.tempFrom, \"materialProperty\", $$v)\n                            },\n                            expression: \"tempFrom.materialProperty\"\n                          }\n                        },\n                        _vm._l(_vm.dt_material_property, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"制造路线\", prop: \"manufactureLine\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择\",\n                            size: \"small\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.tempFrom.manufactureLine,\n                            callback: function($$v) {\n                              _vm.$set(_vm.tempFrom, \"manufactureLine\", $$v)\n                            },\n                            expression: \"tempFrom.manufactureLine\"\n                          }\n                        },\n                        _vm._l(_vm.dt_manufacture_line, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"装配路线\", prop: \"assembleLine\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择\",\n                            size: \"small\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.tempFrom.assembleLine,\n                            callback: function($$v) {\n                              _vm.$set(_vm.tempFrom, \"assembleLine\", $$v)\n                            },\n                            expression: \"tempFrom.assembleLine\"\n                          }\n                        },\n                        _vm._l(_vm.dt_assemble_line, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.dictItemKey,\n                            attrs: {\n                              label: item.dictItemValue,\n                              value: item.dictItemKey\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"有效时间\", prop: \"startTime\" } },\n                    [\n                      _c(\"el-date-picker\", {\n                        staticStyle: { width: \"240px\" },\n                        attrs: {\n                          size: \"small\",\n                          type: \"daterange\",\n                          \"start-placeholder\": \"开始日期\",\n                          \"end-placeholder\": \"结束日期\",\n                          \"value-format\": \"yyyy-MM-dd\"\n                        },\n                        model: {\n                          value: _vm.tempFrom.timeRange,\n                          callback: function($$v) {\n                            _vm.$set(_vm.tempFrom, \"timeRange\", $$v)\n                          },\n                          expression: \"tempFrom.timeRange\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          _vm.fromDialogFormVisible = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _vm.fromDialogStatus == \"create\"\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.createFrom }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                    : _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.updateFrom }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                      )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}