{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/useSpareparts/requisitionApplication/dialog/addMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/useSpareparts/requisitionApplication/dialog/addMain.vue","mtime":1596610934227},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/wms/useSpareparts/requisitionApplication'\nimport { DT_ORG_TYPE } from \"@/utils/constant\"\nimport { mapState } from \"vuex\"\nimport dialogOrgSelect from '@/components/Dialog/dialogOrgSelect'\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\nimport orgSelect from \"@/components/Select/orgSelect.vue\"\nimport warehouseSelect from \"@/components/Select/warehouse-select.vue\" //下拉组件\nimport wlxzbyzsj from \"@/components/Select/wlxzbyzsj.vue\"\nimport { getDomainCode, getDomainCodeName } from '@/utils/auth'\nexport default {\n    props: ['useOrderCode'],\n    components: { dialogOrgSelect, dialogPersonSelect, orgSelect, warehouseSelect, wlxzbyzsj },\n    data () {\n        return {\n            wlxzDialog: false,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            list: [],\n            temp: {\n                applyEmpName: getDomainCodeName(),\n                applyEmp: getDomainCode()\n            },\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n            },\n            rules: {\n                businessType: [{ required: true, message: '申请类型不能为空', trigger: 'blur' }],\n                orgCode: [{ required: true, message: '组织编码不能为空', trigger: 'blur' }],\n                warehouseCode: [{ required: true, message: '仓库编码不能为空', trigger: 'blur' }],\n                departmentName: [{ required: true, message: '申请单位不能为空', trigger: 'blur' }],\n                applyEmpName: [{ required: true, message: '申请人不能为空', trigger: 'blur' }],\n                purposeNote: [{ required: true, message: '用途不能为空', trigger: 'blur' }],\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pc2: state => state.dict.dt_srm_pc2,\n            dt_use_type_screenGroupNum: state =>\n                state.businessComponent.dt_use_type_screenGroupNum\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pc2\"])\n        this.$store.dispatch(\"businessComponent/getBusinessComponentData\", [\n            \"dt_use_type_screenGroupNum\"\n        ])\n    },\n    methods: {\n        //获取采购组织名称\n        orgName (val) {\n            this.temp.orgName = val\n        },\n        //申请单位\n        showOrg () {\n            this.$refs.refOrg.dialogVisible = true\n        },\n        //申请单位确定\n        confirmOrg (data) {\n            console.log(data)\n            if (data) {\n                this.$set(this.temp, 'departmentCode', data[0].organizationCode)\n                this.$set(this.temp, 'departmentName', data[0].organizationName)\n            }\n        },\n        //人员选择\n        showPerson () {\n            this.$refs.person.dialogVisible = true\n        },\n        //人员选择确定\n        personConfirm (val) {\n            this.$set(this.temp, 'applyEmp', val[0].employeeCode)\n            this.$set(this.temp, 'applyEmpName', val[0].employeeName)\n        },\n        handleCreate () {\n            this.wlxzDialog = true\n            this.$nextTick(() => {\n                this.$refs.wlxz.listSelected = [...this.list]\n                this.$refs.wlxz.getList()\n            })\n        },\n        //关联物料确定\n        confirmWl () {\n            if (this.$refs.wlxz.listSelected.length > 0) {\n                this.list = this.$refs.wlxz.listSelected.map((v, index) => {\n                    v.rowId = (this.listQuery.currentPage - 1) * this.listQuery.pageSize + index + 1\n                    return v\n                })\n                this.wlxzDialog = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //删除按钮单击事件\n        handleDelete () {\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    this.list = this.list.filter(item => {\n                        let isD = true\n                        this.selectlistRow.forEach((itemr) => {\n                            if (itemr.materielCode === item.materielCode) {\n                                isD = false\n                            }\n                        })\n                        return isD\n                    })\n                    this.$message({\n                        type: \"success\",\n                        message: \"删除成功\"\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消\"\n                    })\n                })\n            } else {\n                this.$message.warning(\"请勾选记录！\")\n                return\n            }\n        },\n        //刷新按钮单击事件\n        handelRefresh () {\n            this.temp = {\n                businessType: undefined,\n                orgCode: undefined,\n                warehouseCode: undefined,\n                departmentName: undefined,\n                applyEmpName: undefined,\n                applyEmp: undefined,\n                purposeNote: undefined,\n                remark: undefined\n            }\n            this.list = []\n        },\n        getList () {\n            api.queryRecordone(this.temp.useOrderCode).then(res => {\n                this.list = res.data.useOrderDetails\n            })\n        },\n        //物料选择确定\n        confirmWlxz (val) {\n            console.log(val)\n            this.$nextTick(() => {\n                this.list = [...val]\n                this.$refs.wlxz.dialogVisible = false\n            })\n\n        },\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        //新增按钮单击事件\n        createData () {\n            this.$refs.dataForm.validate(valid => {\n                if (valid) {\n                    this.temp.method = 'MODIFY'\n                    this.temp.useOrderDetails = this.list\n                    api.addRecords(this.temp).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.dialogVisible = false\n                        this.$emit('refresh')\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //编辑按钮单击事件\n        updateData () {\n            this.temp.method = 'MODIFY'\n            this.temp.useOrderDetails = this.list\n            api.updateRecord(this.temp.useOrderCode, this.temp).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '编辑成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.dialogVisible = false\n                this.$emit('refresh')\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                useOrderCode: undefined,\n                businessType: undefined,\n                orgCode: undefined,\n                warehouseCode: undefined,\n                departmentName: undefined,\n                applyEmpName: getDomainCodeName(),\n                applyEmp: getDomainCode(),\n                purposeNote: undefined,\n                remark: undefined\n            }\n            this.list = []\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.dataForm.resetFields()\n        },\n\n    }\n}\n",null]}