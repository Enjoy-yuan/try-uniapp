{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/planManagement/productionOrdersMaintain/index.vue?vue&type=template&id=89ed4fca&scoped=true&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/planManagement/productionOrdersMaintain/index.vue","mtime":1596610933583},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"app-container\" },\n      [\n        _c(\"div\", { staticClass: \"filter-container\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"filter-items\" },\n            [\n              _c(\"el-input\", {\n                staticClass: \"filter-item\",\n                attrs: { placeholder: \"订单编码\", size: \"small\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.productOrderCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"productOrderCode\", $$v)\n                  },\n                  expression: \"listQuery.productOrderCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"el-select\",\n                {\n                  attrs: {\n                    clearable: \"\",\n                    placeholder: \"订单状态\",\n                    size: \"small\"\n                  },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.orderState,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"orderState\", $$v)\n                    },\n                    expression: \"listQuery.orderState\"\n                  }\n                },\n                _vm._l(_vm.dt_product_order_stat, function(item) {\n                  return _c(\"el-option\", {\n                    key: item.dictItemKey,\n                    attrs: {\n                      label: item.dictItemValue,\n                      value: item.dictItemKey\n                    }\n                  })\n                }),\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    icon: \"el-icon-search\",\n                    size: \"small\",\n                    type: \"primary\"\n                  },\n                  on: { click: _vm.handleQuery }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.search\")))]\n              )\n            ],\n            1\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"table-container\" },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"oprate_btn\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-plus\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handleCreate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.add\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-edit\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handleUpdate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.edit\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-delete\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handleDelete }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.delete\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-upload2\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handleDownload }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.export\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-edit\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handleImport }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.import\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      icon: \"el-icon-edit-outline\",\n                      size: \"small\",\n                      type: \"primary\"\n                    },\n                    on: { click: _vm.handlePublish }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"btn.publish\")))]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-table\",\n              {\n                key: _vm.tableKey,\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  data: _vm.list,\n                  height: _vm.theight,\n                  border: \"\",\n                  \"cell-class-name\": \"table-cell\",\n                  fit: \"\",\n                  \"header-cell-class-name\": \"header-cell\",\n                  \"highlight-current-row\": \"\",\n                  size: \"mini\"\n                },\n                on: { \"selection-change\": _vm.selectRow }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    fixed: \"\",\n                    type: \"selection\",\n                    width: \"30\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"订单编码\",\n                    prop: \"productOrderCode\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"订单生产状态\",\n                    prop: \"orderStateName\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"产品编码\",\n                    prop: \"productCode\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"产品名称\",\n                    prop: \"productName\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"产品规格\",\n                    prop: \"specification\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"100\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"客户名称\",\n                    prop: \"customerName\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"计划生产数量\",\n                    prop: \"productNumber\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"合格数量\",\n                    prop: \"qualifiedNumber\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"生产批号\",\n                    prop: \"productBatch\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"是否生成随工单\",\n                    prop: \"isGenerateWorkOrderName\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"数据来源\",\n                    prop: \"dataSourcesCN\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"责任人编码\",\n                    prop: \"staffCode\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"备注\",\n                    prop: \"note\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"计划开工日期\",\n                    prop: \"planStartTime\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"实际开工日期\",\n                    prop: \"actualStartTime\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"计划完成日期\",\n                    prop: \"planCompleteTime\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    align: \"center\",\n                    label: \"实际完成日期\",\n                    prop: \"actualCompleteTime\",\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"pagination\", {\n              attrs: {\n                limit: _vm.listQuery.pageSize,\n                page: _vm.listQuery.currentPage,\n                total: _vm.total\n              },\n              on: {\n                \"update:limit\": function($event) {\n                  return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                },\n                \"update:page\": function($event) {\n                  return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                },\n                pagination: _vm.getList\n              }\n            })\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-dialog\",\n          {\n            directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n            attrs: {\n              \"close-on-click-modal\": false,\n              \"close-on-press-escape\": false,\n              title:\n                _vm.dialogStatus == \"create\"\n                  ? _vm.$t(\"table.add\")\n                  : _vm.$t(\"table.edit\"),\n              visible: _vm.dialogFormVisible,\n              \"custom-class\": \"dialog-custom dialog-big\"\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.dialogFormVisible = $event\n              },\n              close: _vm.handleClose\n            }\n          },\n          [\n            _c(\n              \"el-form\",\n              {\n                ref: \"temp\",\n                staticClass: \"small-space\",\n                staticStyle: { \"max-width\": \"400px\" },\n                attrs: {\n                  model: _vm.temp,\n                  rules: _vm.rules,\n                  \"label-width\": \"120px\",\n                  size: \"mini\"\n                }\n              },\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"产品编号\", prop: \"productCode\" } },\n                  [\n                    _c(\n                      \"el-input\",\n                      {\n                        staticStyle: { width: \"165px\" },\n                        attrs: { disabled: \"\" },\n                        model: {\n                          value: _vm.temp.productCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"productCode\", $$v)\n                          },\n                          expression: \"temp.productCode\"\n                        }\n                      },\n                      [\n                        _c(\"el-button\", {\n                          attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                          on: { click: _vm.handleProductCode },\n                          slot: \"append\"\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"客户名称\", prop: \"customerName\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.temp.customerName,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"customerName\", $$v)\n                        },\n                        expression: \"temp.customerName\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"数据来源\", prop: \"dataSources\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: {\n                          disabled: \"\",\n                          placeholder: \"订单状态\",\n                          size: \"small\"\n                        },\n                        model: {\n                          value: _vm.temp.dataSources,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"dataSources\", $$v)\n                          },\n                          expression: \"temp.dataSources\"\n                        }\n                      },\n                      _vm._l(_vm.dt_product_order_resource, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.dictItemKey,\n                          attrs: {\n                            label: item.dictItemValue,\n                            value: item.dictItemKey\n                          }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"生产批号\", prop: \"productBatch\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.temp.productBatch,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"productBatch\", $$v)\n                        },\n                        expression: \"temp.productBatch\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"计划生产数量\", prop: \"productNumber\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.temp.productNumber,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"productNumber\", $$v)\n                        },\n                        expression: \"temp.productNumber\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"备注\", prop: \"note\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.temp.note,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"note\", $$v)\n                        },\n                        expression: \"temp.note\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"计划开始时间\", prop: \"planStartTime\" } },\n                  [\n                    _c(\"el-date-picker\", {\n                      staticStyle: { width: \"165px\" },\n                      attrs: {\n                        size: \"small\",\n                        type: \"datetime\",\n                        \"value-format\": \"yyyy-MM-dd HH:mm:ss\"\n                      },\n                      model: {\n                        value: _vm.temp.planStartTime,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"planStartTime\", $$v)\n                        },\n                        expression: \"temp.planStartTime\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  {\n                    attrs: { label: \"计划完成时间\", prop: \"planCompleteTime\" }\n                  },\n                  [\n                    _c(\"el-date-picker\", {\n                      staticStyle: { width: \"165px\" },\n                      attrs: {\n                        size: \"small\",\n                        type: \"datetime\",\n                        \"value-format\": \"yyyy-MM-dd HH:mm:ss\"\n                      },\n                      model: {\n                        value: _vm.temp.planCompleteTime,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"planCompleteTime\", $$v)\n                        },\n                        expression: \"temp.planCompleteTime\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  {\n                    attrs: { label: \"生成随工单\", prop: \"isGenerateWorkOrder\" }\n                  },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择\" },\n                        model: {\n                          value: _vm.temp.isGenerateWorkOrder,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"isGenerateWorkOrder\", $$v)\n                          },\n                          expression: \"temp.isGenerateWorkOrder\"\n                        }\n                      },\n                      [\n                        _c(\"el-option\", { attrs: { label: \"是\", value: \"1\" } }),\n                        _vm._v(\" \"),\n                        _c(\"el-option\", { attrs: { label: \"否\", value: \"0\" } })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"dialog-footer\",\n                attrs: { slot: \"footer\" },\n                slot: \"footer\"\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.dialogFormVisible = false\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                    \" +\n                        _vm._s(_vm.$t(\"table.cancel\")) +\n                        \"\\n                \"\n                    )\n                  ]\n                ),\n                _vm._v(\" \"),\n                _vm.dialogStatus == \"create\"\n                  ? _c(\n                      \"el-button\",\n                      { attrs: { type: \"primary\" }, on: { click: _vm.create } },\n                      [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                    )\n                  : _c(\n                      \"el-button\",\n                      { attrs: { type: \"primary\" }, on: { click: _vm.update } },\n                      [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(_vm.$t(\"table.confirm\")) +\n                            \"\\n                \"\n                        )\n                      ]\n                    )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-dialog\",\n          {\n            directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n            staticClass: \"table_dialog\",\n            attrs: {\n              \"close-on-click-modal\": false,\n              title: \"生产订单维护导入\",\n              visible: _vm.importDialogVisible,\n              \"custom-class\": \"dialog-custom\"\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.importDialogVisible = $event\n              }\n            }\n          },\n          [\n            _c(\"ImportFile\", {\n              ref: \"importDialog\",\n              attrs: { modalNo: _vm.modalNo }\n            })\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-dialog\",\n          {\n            directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n            staticClass: \"table_dialog\",\n            attrs: { title: \"产品编码\", visible: _vm.productCodeDialogVisible },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.productCodeDialogVisible = $event\n              }\n            }\n          },\n          [\n            _c(\"materielTable\", {\n              on: { handSelectSelectRow: _vm.handleDblclickMateriel }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"dialog-footer\",\n                attrs: { slot: \"footer\" },\n                slot: \"footer\"\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: { click: _vm.materielUpdate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}