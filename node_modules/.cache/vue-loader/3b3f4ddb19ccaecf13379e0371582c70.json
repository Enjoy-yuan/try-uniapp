{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/supplierQuote/detailQuoteNote/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/supplierQuote/detailQuoteNote/index.vue","mtime":1602761138502},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/priceManage/detailQuoteNote\"\nimport * as importApi from '@/api/import/index'\nimport { priceCompare } from \"@/api/project/srm/supplierSelect/priceReview\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport { mapState } from \"vuex\"\nimport Pagination from \"@/components/Pagination\"\nimport dialogAdd from './Dialog/dialogAdd'\nimport dialogEdit from './Dialog/dialogEdit'\nimport dialogWlxzg from './Dialog/dialogWlxzGhxl'\nimport dialogImport from '@/components/Dialog/dialogImport'\nimport dialogBjsh from './Dialog/dialogBjsh'\nimport dialogCompare from './Dialog/dialogCompare'\n\n\n// import { mapState } from \"vuex\"\nexport default {\n    name: \"detailQuoteNote\",\n    components: { caiGou, Pagination, dialogAdd, dialogEdit, dialogWlxzg, dialogImport, dialogBjsh, dialogCompare },\n    data () {\n        return {\n            rangeDate: null,\n            theight: 0,//表格高度\n            isSingle: false,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            dataList: [],\n            total: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: null,\n                formateTime: null\n            },\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'handleAdd', name: '新增' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-download', clickMethod: 'handleModelDownload', name: '模板下载' },\n                { id: 2, class: 'filter-item ml_5', icon: 'el-icon-download', clickMethod: 'handleImport', name: '导入' },\n                { id: 3, class: 'filter-item ml_5', icon: 'el-icon-edit-outline', clickMethod: 'handlePublish', name: '发布' },\n                { id: 4, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleQuoteCheck', name: '报价审核' },\n                { id: 5, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleQuoteCompare', name: '多伦报价对比' },\n            ],\n            dialogConfig: [\n                { titleA: '报价单通知新增', title: '报价单通知编辑', curdialogStatus: 'add', unMutiple: false },\n                { title: '供货路线信息', unMutiple: false },\n                { title: '导入' },\n                { title: '报价审核' },\n                { title: '多伦报价对比' }\n            ],\n            modalNo: 'EXTP-BAS-0001',//导入模板编号,\n            dialogImportVisible: false,\n            excelName: '零件报价通知'\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pdj: state => state.dict.dt_srm_pdj,\n            dt_srm_pdi: state => state.dict.dt_srm_pdi,\n        })\n    },\n    filters: {\n        stateFilter: function (a) {\n            if (a === \"0\") {\n                return \"未报价\"\n            } else {\n                return \"已报价\"\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\", 'dt_srm_pdj', 'dt_srm_pdi'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    watch: {\n        'rangeDate' (value) {\n            if (value) {\n                this.listQuery.createDateBegin = value[0]\n                this.listQuery.createDateEnd = value[1]\n            } else {\n                this.listQuery.createDateBegin = undefined\n                this.listQuery.createDateEnd = undefined\n            }\n        }\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        refresh () {\n            console.log('11')\n            this.getList()\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_pdj, this.dt_srm_pdi]\n                res.data = this.$myFun.codeToName(res.data, options, ['state', 'quotationMethod'])\n                this.dataList = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            console.log(this.listQuery)\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.handleAdd()\n                    break\n                }\n                case 1: {\n                    this.handleModelDownload()\n                    break\n                }\n                case 2: {\n                    this.handleImport()\n                    break\n                }\n                case 3: {\n                    this.handlePublish()\n                    break\n                }\n                case 4: {\n                    this.handleQuoteCheck()\n                    break\n                }\n                case 5: {\n                    this.handleQuoteCompare()\n                    break\n                }\n\n            }\n        },\n        //新增按钮\n        handleAdd () {\n            this.$refs.refadd.dialogStatus = 'create'\n            this.$refs.refadd.resetTemp()\n            this.$refs.refadd.list = []\n            this.$refs.refadd.dialogVisible = true\n        },\n        //模板下载按钮\n        handleModelDownload () {\n            importApi.srmdownloadModal(this.modalNo).then(res => {\n                this.download(res.data, this.excelname)\n            })\n        },\n        // 下载文件\n        download (data, filename) {\n            if (!data) {\n                return\n            }\n            let url = window.url.createObjectURL(new Blob([data]))\n            let link = document.createElement('a')\n            link.style.display = 'none'\n            link.href = url\n            link.setAttribute('download', filename)\n\n            document.body.appendChild(link)\n            link.click()\n        },\n        //导入按钮\n        handleImport () {\n            this.$refs.refImport.getList()\n            this.$refs.refImport.dialogVisible = true\n        },\n        //发布按钮\n        handlePublish () {\n            if (this.selectedRows && this.selectedRows.length > 0) {\n                this.$confirm('发布后将向相关供应商推送报价通知,是否发布勾选的报价通知?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let dto = {\n                        method: 'publish',\n                        rowIds: []\n                    }\n                    this.selectedRows.forEach((val, index) => {\n                        dto.rowIds[index] = val.rowId\n                    })\n                    api.confirmRecords(dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '发布成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择信息'\n                })\n            }\n\n        },\n        //报价审核按钮\n        handleQuoteCheck () {\n            if (this.selectedRows && this.selectedRows.length == 1) {\n                this.$refs.refBjsh.setFormData(this.selectedRows[0])\n                let dto = {\n                    materielCode: this.selectedRows[0].materielCode,\n                    quotationSource: 'notice',\n                    rfqNo: this.selectedRows[0].noticeNo,\n                    supplierCode: this.selectedRows[0].supplierCode\n                }\n                priceCompare(dto).then(res => {\n                    this.$refs.refBjsh.formData.tableDetails = res.data.map(v => {\n                        v.quotationMethod = this.selectedRows[0].quotationMethod\n                        v.quotationMethodCN = this.selectedRows[0].quotationMethodCN\n                        return v\n                    })\n                })\n\n                this.$refs.refBjsh.dialogVisible = true\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择一条信息'\n                })\n            }\n        },\n        //多伦报价对比按钮\n        handleQuoteCompare () {\n            if (this.selectedRows && this.selectedRows.length == 1) {\n                this.$refs.refCompare.dialogVisible = true\n                this.$refs.refCompare.listSub = []\n                this.$refs.refCompare.getList(this.selectedRows[0])\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择一条信息'\n                })\n            }\n        },\n        //表格操作编辑\n        handleUpdate (index, row) {\n            this.$refs.edit.temp = { ...row }\n            this.$refs.edit.dialogVisible = true\n        },\n        //表格操作删除\n        handleDelete (index, row) {\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                api.deleteRecord(row.rowId).then(() => {\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        //表格操作预览\n        handlePreview (index, row) {\n            console.log('预览', index, row)\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, \"selected\") //单击行绑定点击事件\n        },\n        //确认添加/编辑\n        confirmAddEdit (cdata) {\n            if (this.dialogConfig[0].curdialogStatus === 'add') {\n                //添加api post\n                console.log('添加', cdata)\n            } else if (this.dialogConfig[0].curdialogStatus === 'edit') {\n                //编辑api patch\n                console.log('编辑', cdata)\n            }\n        },\n        //供货路线信息显示\n        showWlxzGhxl () {\n            this.$refs.refWlxzg.dialogVisible = true\n        },\n        //供货线路信息确认\n        confirmWlxzg (wdata) {\n            console.log('供货线路信息确认', wdata)\n            this.$refs.refadd.setWlxzg(wdata)\n        }\n    }\n};\n",null]}