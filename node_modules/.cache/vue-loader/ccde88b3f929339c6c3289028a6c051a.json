{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/supplierRFQ/supplierRFQAnswer/tab/tabJGcost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/supplierRFQ/supplierRFQAnswer/tab/tabJGcost.vue","mtime":1599136050910},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\"\nimport { queryQuoteItem, createQuoteItem, updateQuoteItem, deleteQuoteItem, queryQuoteDetails } from \"@/api/project/srm/supplierSelect/supplierRFQ/supplierRFQAnswer\"\nexport default {\n    name: 'tabJGcost',\n    props: ['parentRowId', 'orgCode'],\n    data () {\n        return {\n            tableData: [],\n            fentancost: null,\n            rules: {\n                partName: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                processName: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                deviceName: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                deviceType: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                processHour: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                operatorCount: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                processUnitPrice: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                ratedPower: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                powerUtilization: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                electricityTariff: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                deviceOriginalValue: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                deviceAllocationWork: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ]\n            },\n            formData: {\n                partName: null,\n                processName: null,\n                deviceName: null,\n                deviceType: null,\n                processHour: null,\n                operatorCount: null,\n                processUnitPrice: null,\n                ratedPower: null,\n                wu1: null,\n                powerUtilization: null,\n                electricityTariff: null,\n                burningCharge: null,\n                deviceOriginalValue: null,\n                deviceAllocationWork: null,\n                deviceAllocation: null,\n                auxiliaryMaterialName: null,\n                specification: null,\n                factory: null,\n                unitPrice: null,\n                consumptionQuota: null,\n                subtotalCost: null,\n                rejectRate: null,\n                wasteLoss: null,\n                auxiliaryMaterialCost: null\n            },\n            formConfig: [\n                { type: 'commonInput', required: true, label: '部件名称', prop: 'partName', width: '' },\n                { type: 'commonInput', required: true, label: '工序名称', prop: 'processName', width: '' },\n                { type: 'commonInput', required: true, label: '设备名称', prop: 'deviceName', width: '' },\n                { type: 'commonInput', required: true, label: '设备型号', prop: 'deviceType', width: '' },\n                { type: 'commonInput', required: true, label: '工序工时', prop: 'processHour', width: '' },\n                { type: 'commonInput', required: true, label: '操作人数', prop: 'operatorCount', width: '' },\n                { type: 'commonInput', required: true, label: '工序单价', prop: 'processUnitPrice', width: '' },\n                { type: 'commonInput', required: true, label: '设备额定功率', prop: 'ratedPower', width: '' },//dict\n                { type: 'commonInput', label: '人工费', disabled: true, prop: 'wu1', width: '' },//wu\n                { type: 'commonInput', required: true, label: '功率使用率', prop: 'powerUtilization', width: '' },\n                { type: 'commonInput', required: true, label: '电费单价', prop: 'electricityTariff', width: '' },//dict\n                { type: 'commonInput', label: '燃动费', disabled: true, prop: 'burningCharge', width: '' },\n                { type: 'commonInput', required: true, label: '设备原值', prop: 'deviceOriginalValue', width: '' },\n                { type: 'commonInput', required: true, label: '设备分摊工时', prop: 'deviceAllocationWork', width: '' },\n                { type: 'commonInput', label: '设备分摊', disabled: true, prop: 'deviceAllocation', width: '' },\n                { type: 'commonInput', label: '辅材名称', prop: 'auxiliaryMaterialName', width: '' },\n                { type: 'commonInput', label: '规格型号', prop: 'specification', width: '' },\n                { type: 'commonInput', label: '生产厂', prop: 'factory', width: '' },\n                { type: 'commonInput', label: '单价', prop: 'unitPrice', width: '' },\n                { type: 'commonInput', label: '消耗定额', prop: 'consumptionQuota', width: '' },\n                { type: 'commonInput', disabled: true, label: '辅材费用', prop: 'auxiliaryMaterialCost', width: '' },\n                { type: 'commonInput', disabled: true, label: '费用小计', prop: 'subtotalCost', width: '' },\n                { type: 'commonInput', label: '废品率', prop: 'rejectRate', width: '' },\n                { type: 'commonInput', disabled: true, label: '废品损失', prop: 'wasteLoss', width: '' }\n            ],\n            tableConfig: [\n                { label: '部件名称', prop: 'partName', align: 'center', width: 'auto' },\n                { label: '工序名称', prop: 'processName', align: 'center', width: 'auto' },\n                { label: '设备名称', prop: 'deviceName', align: 'center', width: 'auto' },\n                { label: '设备型号', prop: 'deviceType', align: 'center', width: 'auto' },\n                { label: '工序工时(小时)', prop: 'processHour', align: 'center', width: '150' },//D1\n                { label: '操作人数', prop: 'operatorCount', align: 'center', width: 'auto' },//D3\n                { label: '工时单价(元/小时)', prop: 'processUnitPrice', align: 'center', width: '150' },//D4\n                { label: '人工费', prop: 'wu1', cal: 'D1*D3*D4', calprop: 'processHour*operatorCount*processUnitPrice', align: 'center', width: 'auto' },//D2\n                { label: '设备额定功率', prop: 'ratedPower', align: 'center', width: '120' },//D6\n                { label: '功率使用率', prop: 'powerUtilization', align: 'center', width: 'auto' },//D7\n                { label: '电费单价', prop: 'electricityTariff', align: 'center', width: 'auto' },//d8\n                { label: '燃动费', prop: 'burningCharge', cal: 'D6*D7*D8*D1', calprop: 'processHour*ratedPower*powerUtilization*electricityTariff', align: 'center', width: 'auto' },//D5\n                { label: '设备原值', prop: 'deviceOriginalValue', align: 'center', width: 'auto' },//D10\n                { label: '设备分摊工时费', prop: 'deviceAllocationWork', cal: 'D10*0.95/10/12/21.75/8/运行班次', calprop: '', align: 'center', width: '150' },//D11 \n                { label: '设备分摊', cal: 'D11*D1', prop: 'deviceAllocation', align: 'center', width: 'auto' },//D9\n                { label: '辅材名称', prop: 'auxiliaryMaterialName', align: 'center', width: 'auto' },\n                { label: '生产厂', prop: 'factory', align: 'center', width: 'auto' },\n                { label: '规格型号', prop: 'specification', align: 'center', width: 'auto' },\n                { label: '消耗定额', prop: 'consumptionQuota', align: 'center', width: 'auto' },//D12\n                { label: '单价', prop: 'unitPrice', align: 'center', width: 'auto' },//D13\n                { label: '辅料成本', prop: 'auxiliaryMaterialCost', cal: 'D12*D13', align: 'center', width: 'auto' },//D14 消耗定额D12*单据D13\n                { label: '小计费用', prop: 'subtotalCost', cal: 'D=D2+D5+D9+D14', align: 'center', width: 'auto' },//D\n                { label: '废品率', prop: 'rejectRate', align: 'center', width: 'auto' },//D15\n                { label: '废品损失', prop: 'wasteLoss', cal: 'D15*D', align: 'center', width: 'auto' }\n            ]\n        }\n    },\n    watch: {\n        'formData.processHour' () {\n            this.calculate('processHour', this.formData)\n        },\n        'formData.operatorCount' () {\n            this.calculate('operatorCount', this.formData)\n        },\n        'formData.processUnitPrice' () {\n            this.calculate('processUnitPrice', this.formData)\n        },\n        'formData.ratedPower' () {\n            this.calculate('ratedPower', this.formData)\n        },\n        'formData.powerUtilization' () {\n            this.calculate('powerUtilization', this.formData)\n        },\n        'formData.electricityTariff' () {\n            this.calculate('electricityTariff', this.formData)\n        },\n        'formData.burningCharge' () {\n            this.calculate('burningCharge', this.formData)\n        },\n        'formData.deviceAllocationWork' () {\n            this.calculate('deviceAllocationWork', this.formData)\n        },\n        'formData.consumptionQuota' () {\n            this.calculate('consumptionQuota', this.formData)\n        },\n        'formData.unitPrice' () {\n            this.calculate('unitPrice', this.formData)\n        },\n        'formData.wu1' () {\n            this.calculate('wu1', this.formData)\n        },\n        'formData.deviceAllocation' () {\n            this.calculate('deviceAllocation', this.formData)\n        },\n        'formData.auxiliaryMaterialCost' () {\n            this.calculate('auxiliaryMaterialCost', this.formData)\n        },\n        'formData.rejectRate' () {\n            this.calculate('rejectRate', this.formData)\n        },\n        'formData.subtotalCost' () {\n            this.calculate('subtotalCost', this.formData)\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_const: state => state.srmBisSelect.dt_const,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"srmBisSelect/getBisData\", [\"dt_cate_platformSeries\", \"dt_const\"])\n        if (!this.orgCode) {\n            this.fentancost = 1\n        } else {\n            this.dt_const.data.forEach(item => {\n                if (item.typeEncoding === 'PBE3' && item.purchaseOrg === this.orgCode) {\n                    this.fentancost = item.constantValue\n                }\n            })\n            if (!this.fentancost) {\n                this.fentancost = 1\n            }\n        }\n        this.getItems()\n    },\n    methods: {\n        checkValue (val) {\n            if (isNaN(val) || val == Infinity) {\n                return undefined\n            } else {\n                if (val.toString().indexOf('.') !== -1) {\n                    val = parseFloat(val).toFixed(4)\n                }\n                return val\n            }\n        },\n        calculate (prop, row, index = null) {\n            switch (prop) {\n                case 'processHour': case 'operatorCount': case 'processUnitPrice': {\n                    if (!index) {\n                        this.$set(this.formData, 'wu1', this.checkValue(row.processHour * row.operatorCount * row.processUnitPrice))\n                    } else {\n                        this.$set(this.tableData[index], 'wu1', this.checkValue(row.processHour * row.operatorCount * row.processUnitPrice))\n                    }\n                    break\n                }\n                case 'ratedPower': case 'powerUtilization': case 'electricityTariff': {\n                    if (!index) {\n                        this.$set(this.formData, 'burningCharge', this.checkValue(row.ratedPower * row.powerUtilization * row.electricityTariff))\n                    } else {\n                        this.$set(this.tableData[index], 'burningCharge', this.checkValue(row.ratedPower * row.powerUtilization * row.electricityTariff))\n                    }\n                    break\n                }\n                case 'burningCharge': {\n                    if (!index) {\n                        this.$set(this.formData, 'deviceAllocationWork', this.checkValue(row.ratedPower * 0.95 / 10 / 12 / 21.75 / 8 / this.fentancost))\n                        this.$set(this.formData, 'subtotalCost', this.checkValue(row.wu1 + row.burningCharge + row.deviceAllocation + row.auxiliaryMaterialCost))\n                    } else {\n                        this.$set(this.tableData[index], 'deviceAllocationWork', this.checkValue(row.ratedPower * 0.95 / 10 / 12 / 21.75 / 8 / this.fentancost))\n                        this.$set(this.tableData[index], 'subtotalCost', this.checkValue(row.wu1 + row.burningCharge + row.deviceAllocation + row.auxiliaryMaterialCost))\n                    }\n                    break\n                }\n                case 'deviceAllocationWork': {\n                    if (!index) {\n                        this.$set(this.formData, 'deviceAllocation', this.checkValue(row.processHour * row.deviceAllocationWork))\n                    } else {\n                        this.$set(this.tableData[index], 'deviceAllocation', this.checkValue(row.processHour * row.deviceAllocationWork))\n                    }\n                    break\n                }\n                case 'consumptionQuota': case 'unitPrice': {\n                    if (!index) {\n                        this.$set(this.formData, 'auxiliaryMaterialCost', this.checkValue(row.consumptionQuota * row.unitPrice))\n                    } else {\n                        this.$set(this.tableData[index], 'auxiliaryMaterialCost', this.checkValue(row.consumptionQuota * row.unitPrice))\n                    }\n                    break\n                }\n                case 'wu1': case 'deviceAllocation': case 'auxiliaryMaterialCost': {\n                    if (!index) {\n                        this.$set(this.formData, 'subtotalCost', this.checkValue(row.wu1 + row.burningCharge + row.deviceAllocation + row.auxiliaryMaterialCost))\n                    } else {\n                        this.$set(this.tableData[index], 'subtotalCost', this.checkValue(row.wu1 + row.burningCharge + row.deviceAllocation + row.auxiliaryMaterialCost))\n                    }\n                    break\n                }\n                case 'rejectRate': case 'subtotalCost': {\n                    if (!index) {\n                        this.$set(this.formData, 'wasteLoss', this.checkValue(row.rejectRate * row.subtotalCost))\n                    } else {\n                        this.$set(this.tableData[index], 'wasteLoss', this.checkValue(row.rejectRate * row.subtotalCost))\n                    }\n                    break\n                }\n            }\n        },\n        getItems () {\n            if (this.parentRowId) {\n                queryQuoteDetails({ parentRowId: this.parentRowId, method: 'PROCESSING_COST' }).then(res => {\n                    this.tableData = res.data\n                    this.tableData.forEach(item => {\n                        item.wu1 = item.processHour * item.operatorCount * item.processUnitPrice\n                    })\n                    this.calculateSum()\n                })\n            }\n        },\n        calculateSum () {\n            let wu1s = 0\n            let burningCharges = 0\n            let deviceAllocations = 0\n\n            this.tableData.forEach(item => {\n                wu1s += item.wu1\n                burningCharges += item.burningCharge\n                deviceAllocations += item.deviceAllocation\n            })\n\n            let dataSum = { key: 'sum', partName: '合计', wu1: wu1s, burningCharge: burningCharges, deviceAllocation: deviceAllocations }\n            this.tableData.push(dataSum)\n        },\n        handleUpdate (row) {\n            queryQuoteItem({ rowId: row.rowId, method: 'PROCESSING_COST' }).then(res => {\n                this.formData = res.data\n            })\n        },\n        handleDelete (row) {\n            this.$confirm('确认删除吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                deleteQuoteItem({ parentRowId: this.parentRowId, rowId: row.rowId, method: 'PROCESSING_COST' }).then(() => {\n                    this.getItems()\n                    this.$emit('getTotalQuotation')\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        resetForm () {\n            for (let par in this.formData) {\n                if (par !== 'parentRowId') {\n                    this.$set(this.formData, par, null)\n                }\n            }\n            this.$refs['refForm'].resetFields()\n            this.$refs['refForm'].clearValidate()\n        },\n        handleConfirm () {\n            this.$refs.refForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        //PROCESSING_COST 加工费用DTO processingCostDTO\n                        this.formData.parentRowId = this.parentRowId\n                        if (this.formData.rowId) {\n                            let cdata = {\n                                processingCostDTO: this.formData,\n                                method: \"PROCESSING_COST\"\n                            }\n                            updateQuoteItem(this.formData.rowId, cdata).then(() => {\n                                this.getItems()\n                                this.$emit('getTotalQuotation')\n                                this.$message({\n                                    type: 'success',\n                                    message: '编辑成功'\n                                })\n                                this.resetForm()\n                            })\n                        } else {\n                            let cdata = {\n                                processingCostDTO: this.formData,\n                                method: \"PROCESSING_COST\"\n                            }\n                            createQuoteItem(cdata).then(() => {\n                                this.getItems()\n                                this.$emit('getTotalQuotation')\n                                this.resetForm()\n                                this.$message({\n                                    type: 'success',\n                                    message: '新增成功'\n                                })\n                            })\n                        }\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n                }\n            })\n        }\n    }\n}\n",null]}