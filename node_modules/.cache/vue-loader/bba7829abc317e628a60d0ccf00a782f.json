{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SPM/spWarehouse/spRecipients/spRecipientsApply/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SPM/spWarehouse/spRecipients/spRecipientsApply/index.vue","mtime":1596610933596},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/el/inventoryPlanning'\nimport Pagination from '@/components/Pagination'\n// import inventoryPlanningSelect from './inventoryPlanningSelect'\nimport employeesSelect from '@/components/Select/employeesSelect'\nimport eqmtSelect from './eqmtSelect'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport caiGou from '@/components/Select/caigou' //下拉组件\nimport warehouseSelect from '@/components/Select/warehouse-select' //下拉组件\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'inventoryPlanning',\n    components: {\n        Pagination,\n        // inventoryPlanningSelect,\n        employeesSelect,\n        warehouseSelect,\n        caiGou,\n        eqmtSelect\n    },\n    data() {\n        return {\n            theight: 0, //表格高度\n            list: [],\n            list2: [],\n            organizations: [],\n            fromList: [],\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            total: 0,\n            tableKey: [0, 1], //表格索引\n            dialogStatus: '',\n            dialogVisible: false,\n            fromDialogStatus: '',\n            fromDialogFormVisible: false,\n            dialogFormVisible2: false,\n            selectedRows: [], //多选时选中的所有行\n            selectFromList: undefined, //从表选中\n            listQuery: {\n                organizationCode: undefined,\n                state: undefined,\n                startTime: undefined,\n                endTime: undefined,\n                //查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                deviceCodes: [],\n                contents: [],\n                checkName: undefined,\n                timeRange: undefined,\n                checkPlanTime: undefined,\n                checkPlanEndTime: undefined,\n                checker: undefined,\n                checkerName: undefined,\n                dept: undefined,\n                deptName: undefined,\n                deviceType: undefined,\n                remark: undefined,\n                organizationCode: undefined,\n                organizationName: undefined\n            },\n            // 盘点人model\n            tempVal: {\n                employeeName: undefined\n            },\n            tempFrom: {\n                assembleLine: undefined,\n                assembleQuantity: undefined,\n                bomId: undefined,\n                endTime: undefined,\n                manufactureLine: undefined,\n                materielCode: undefined,\n                startTime: undefined,\n                workStationCode: undefined,\n                timeRange: undefined\n            },\n            rules: {\n                checkName: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ],\n                timeRange: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ],\n                checker: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ],\n                contents: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ],\n                dept: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ],\n                organizationCode: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            formRules: {\n                materielCode: [\n                    {\n                        required: true,\n                        message: this.$t('validate.required'),\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    created() {\n        this.getList()\n        this.getOrganization()\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_check_plan_state: state => state.dict.dt_check_plan_state,\n            dt_check_content: state => state.dict.dt_check_content,\n            dt_device_category: state => state.dict.dt_device_category\n        })\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        'listQuery.timeRange'(value) {\n            if (value) {\n                this.listQuery.startTime = value[0]\n                this.listQuery.endTime = value[1]\n            } else {\n                this.listQuery.startTime = undefined\n                this.listQuery.endTime = undefined\n            }\n        },\n        'temp.timeRange'(value) {\n            if (!value) {\n                this.temp.checkPlanTime = undefined\n                this.temp.checkPlanEndTime = undefined\n                return false\n            }\n            this.temp.checkPlanTime = value[0]\n            this.temp.checkPlanEndTime = value[1]\n        },\n        'temp.dept'(val) {\n            this.organizations.forEach(item => {\n                if (item.organizationCode == val) {\n                    this.temp.deptName = item.organizationName\n                }\n            })\n        }\n    },\n    mounted() {\n        this.$store.dispatch('dict/getDicData', [\n            'dt_check_plan_state',\n            'dt_check_content',\n            'dt_device_category'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        getList() {\n            //获取表格数据\n            api.queryRecord(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getList2() {\n            //获取子表格数据\n            api.queryRecord2(\n                this.selectedRows[0].checkOrderNumber,\n                this.listQuery2\n            ).then(res => {\n                this.list2 = res.data\n                this.fromList = res.data.checkDetail\n            })\n        },\n        getOrganization() {\n            //获取表格数据\n            api.organizations().then(res => {\n                this.organizations = res.data\n            })\n        },\n        resetTemp() {\n            this.temp = {\n                deviceCodes: [],\n                contents: [],\n                checkName: undefined,\n                timeRange: undefined,\n                checkPlanTime: undefined,\n                checkPlanEndTime: undefined,\n                checker: undefined,\n                checkerName: undefined,\n                dept: undefined,\n                deptName: undefined,\n                deviceType: undefined,\n                remark: undefined,\n                organizationCode: undefined,\n                organizationName: undefined\n            }\n            this.tempVal = {\n                employeeName: undefined\n            }\n        },\n        handleQuery() {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n            this.fromList = []\n        },\n        handleCreate() {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogVisible = true\n            // this.temp.deviceCode = []\n        },\n        //员工弹窗\n        handleChecker() {\n            this.dialogFormVisible2 = true\n        },\n        // 接收员工组件传值\n        getEmployee(val) {\n            this.tempVal = val\n        },\n        getDeviceType(val) {\n            if (val) {\n                this.temp.deviceType = val.typeCode\n                this.temp.deviceCodes = []\n            } else {\n                this.temp.deviceType = undefined\n            }\n        },\n        handleOrganization(val) {\n            this.temp.organizationName = val\n        },\n        // 接口对象赋值\n        handleEmployee() {\n            this.temp.checker = this.tempVal.employeeCode\n            this.temp.checkerName = this.tempVal.employeeName\n            this.dialogFormVisible2 = false\n        },\n        create() {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (!this.temp.deviceCodes.length) {\n                        this.$message({\n                            title: '警告',\n                            message: '请添加设备',\n                            type: 'warning'\n                        })\n                    } else {\n                        var tmp = []\n                        this.temp.deviceCodes.forEach(item => {\n                            tmp.push(item.deviceCode)\n                        })\n                        this.temp.deviceCodes = tmp\n                        api.createRecord(this.temp).then(res => {\n                            if (res.status == 201) {\n                                this.getList()\n                                this.$message({\n                                    title: '成功',\n                                    message: '新增成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                                this.dialogVisible = false\n                            }\n                        })\n                    }\n                }\n            })\n        },\n        handleUpdate() {\n            if (this.selectedRows.length != 1) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条记录',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (this.selectedRows[0].state == 'cps30') {\n                this.$message({\n                    title: '警告',\n                    message: '该计划已完成',\n                    type: 'warning'\n                })\n                return false\n            }\n            //修改按钮单击事件方法\n            this.resetTemp()\n            this.dialogStatus = 'update'\n            this.dialogVisible = true\n            // 把selectedRows合并到temp,数据写入到表单\n            Object.assign(this.temp, this.selectedRows[0])\n            this.tempVal.employeeName = this.selectedRows[0].checkerName\n            this.temp.deviceCodes = this.list2.checkDetail\n            this.temp.timeRange = [\n                this.temp.checkPlanTime,\n                this.temp.checkPlanEndTime\n            ]\n            setTimeout(() => {\n                var tmp = []\n                this.list2.contents.forEach(item => {\n                    tmp.push(item.content)\n                })\n                this.temp.contents = tmp\n            }, 0)\n        },\n        update() {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (!this.temp.deviceCodes.length) {\n                        this.$message({\n                            title: '警告',\n                            message: '请添加设备',\n                            type: 'warning'\n                        })\n                    } else {\n                        var tmp = []\n                        this.temp.deviceCodes.forEach(item => {\n                            tmp.push(item.deviceCode)\n                        })\n                        this.temp.deviceCodes = tmp\n                        api.patchRecord(this.temp).then(res => {\n                            if (res.status == 201) {\n                                this.getList()\n                                this.$message({\n                                    title: '成功',\n                                    message: '修改成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                                this.dialogVisible = false\n                                this.selectedRows = []\n                                this.fromList = []\n                            }\n                        })\n                    }\n                }\n            })\n        },\n        handleDelete() {\n            if (this.selectedRows.length !== 0) {\n                this.$confirm('确认要删除该数据项吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        var tmp = []\n                        this.selectedRows.forEach(item => {\n                            tmp.push(item.checkOrderNumber)\n                        })\n                        api.deleteRecord(tmp).then(res => {\n                            if (res.status == 200) {\n                                this.getList()\n                                this.$message({\n                                    type: 'success',\n                                    message: '删除成功'\n                                })\n                                this.selectedRows = []\n                                this.fromList = []\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n            } else {\n                this.$message.warning('请勾选记录！')\n                return\n            }\n        },\n        handlePublish() {\n            if (this.selectedRows.length !== 0) {\n                this.$confirm('确认要发布所有已选项吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        var tmp = []\n                        this.selectedRows.forEach(item => {\n                            tmp.push(item.checkOrderNumber)\n                        })\n                        api.issueRecord({\n                            checkOrderNumbers: tmp\n                        }).then(res => {\n                            if (res.status == 200) {\n                                this.getList()\n                                this.$message({\n                                    type: 'success',\n                                    message: '发布成功'\n                                })\n                                this.selectedRows = []\n                                this.fromList = []\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n            } else {\n                this.$message.warning('请勾选记录！')\n                return\n            }\n        },\n        //打开工位弹窗\n        handleWorkStationCode() {\n            this.workStationDialogVisible = true\n        },\n        //工位父子传值\n        handleDblclickWorkStation(row) {\n            this.workStationClass = row\n        },\n        //获取工位\n        workStationUpdate() {\n            if (this.workStationClass) {\n                this.temp.workStationCode = this.workStationClass.stationCode\n                this.workStationDialogVisible = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleClose() {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleClose2() {\n            this.dialogFormVisible2 = false\n        },\n        resetFromTemp() {\n            this.tempFrom = {\n                assembleLine: undefined,\n                assembleQuantity: undefined,\n                bomId: undefined,\n                endTime: undefined,\n                manufactureLine: undefined,\n                materielCode: undefined,\n                startTime: undefined,\n                workStationCode: undefined,\n                timeRange: undefined\n            }\n        },\n        //从表选择框选中\n        selectFromChange(val) {\n            this.selectFromList = val\n            if (val.length > 1) {\n                this.$refs.tb2.clearSelection()\n                this.$refs.tb2.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb2.setCurrentRow(this.selectFromList[0])\n        },\n        handleCreateFrom() {\n            if (!this.temp.deviceType) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备类型',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.resetFromTemp()\n            this.fromDialogStatus = 'create'\n            this.fromDialogFormVisible = true\n            setTimeout(() => {\n                this.$refs.eqmtSelect.listQuery.typeCode = this.temp.deviceType\n                // this.$refs.inventoryPlanningSelect.listSelected = this.temp.deviceCodes\n                this.$refs.eqmtSelect.getList()\n            }, 0)\n        },\n        confirmDevice() {\n            this.temp.deviceCodes = this.temp.deviceCodes.concat(\n                this.$refs.eqmtSelect.currentSelect\n            )\n            this.fromDialogFormVisible = false\n        },\n        cancelDevice() {\n            this.$refs.eqmtSelect.listQuery.page = 1\n            this.fromDialogFormVisible = false\n        },\n        handleDeleteFrom() {\n            if (this.selectFromList.length == 0) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.temp.deviceCodes.forEach((item, index) => {\n                if (item.deviceCode == this.selectFromList[0].deviceCode) {\n                    this.temp.deviceCodes.splice(index, 1)\n                }\n            })\n        },\n        rowClickFrom(val) {\n            this.$refs.tb2.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        // 获取表格选中时的数据\n        selectRow(val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected')\n        },\n        rowClick(val) {\n            this.selectedRows = val\n            if (val.length == 0) {\n                this.selectedRows = []\n                // this.list2 = []\n                return false\n            }\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows[0])\n            if (this.selectedRows.length) {\n                this.getList2()\n            }\n        },\n        // 全选\n        selectAll(val) {\n            if (val.length == 0) {\n                this.selectedRows = []\n                this.$refs.tb.clearSelection()\n                return false\n            }\n            val.forEach((items, indexv) => {\n                let isSelected = false\n                this.selectedRows.forEach(item => {\n                    if (item.checkOrderNumber === items.checkOrderNumber) {\n                        isSelected = true\n                    }\n                })\n                if (!isSelected) {\n                    this.selectedRows.push(val[indexv])\n                }\n            })\n        }\n    }\n}\n",null]}