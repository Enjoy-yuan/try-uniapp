{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/CheckPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/CheckPlan/index.vue","mtime":1596610933407},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/ESC/checkPlan' // 增、删、改api引入\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex' // 基本数据引入\nimport caiGou from '@/components/Select/xtpt/caigou' //下拉组件\nimport eqmtSelect from '../../components/eqmtSelect'\n\nexport default {\n    name: 'CheckPlan',\n    components: { Pagination, caiGou, eqmtSelect },\n    data () {\n        return {\n            checked: undefined,\n            checkList: [],\n            theight: 0, //表格高度\n            list: [],\n            fromList: [],\n            lists: [],\n            total: 0,\n            tableKey: [0, 1, 2], //表格索引\n            timeRange: undefined,\n            listQuery: {\n                orgCode: undefined,\n                inspectMethod: undefined,\n                inspectType: undefined,\n                deviceCode: undefined,\n                inspectTimeStart: undefined,\n                inspectTimeEnd: undefined,\n                currentPage: 1,\n                pageSize: 15\n            },\n            listQuery1: {\n                //从表查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                deviceCodes: [],\n                inspectMethod: undefined,\n                inspectType: undefined,\n                nextInspectTime: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                remark: undefined,\n                rollCycle: undefined,\n                rollCycleUtil: undefined\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogStatus: '',\n            dialogFormVisible: false,\n            dialogFormVisible2: false,\n            fromDialogFormVisible: false,\n            selectedRows: [], //多选时选中的所有行\n            selectFromList: [] //从表选中\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_inspect_method: state => state.eamDict.dt_inspect_method,\n            dt_inspect_type: state => state.eamDict.dt_inspect_type,\n            dt_inspect_plan_cycle: state => state.eamDict.dt_inspect_plan_cycle\n        })\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        // 'temp.timeRange' (value) {\n        //     if (value) {\n        //         this.temp.startDate = value[0]\n        //         this.temp.endDate = value[1]\n        //     }\n        // },\n        'timeRange' (value) {\n            if (value) {\n                this.listQuery.inspectTimeStart = value[0]\n                this.listQuery.inspectTimeEnd = value[1]\n            } else {\n                this.listQuery.inspectTimeStart = undefined\n                this.listQuery.inspectTimeEnd = undefined\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_inspect_method',\n            'dt_inspect_type',\n            'dt_inspect_plan_cycle'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        setTimeout(() => {\n            this.getList()\n        }, 500)\n    },\n    methods: {\n        confirmDevice () {\n            let obj = {}\n            this.temp.deviceCodes = this.temp.deviceCodes.concat(\n                this.$refs.eqmtSelect.currentSelect\n            )\n            this.temp.deviceCodes = this.temp.deviceCodes.reduce((cur, next) => {\n                obj[next.deviceCode] ? \"\" : obj[next.deviceCode] = true && cur.push(next)\n                return cur\n            }, [])\n\n            this.fromDialogFormVisible = false\n        },\n        cancelDevice () {\n            this.$refs.eqmtSelect.listQuery.page = 1\n            this.fromDialogFormVisible = false\n        },\n        handleCheckRow (row) {\n            this.dialogFormVisible2 = true\n            api.querySingleRecord(row.inspectPlanCode, row.deviceCode).then(res => {\n                this.lists = res.data\n            })\n        },\n        // 修改当前行检验计划单\n        handleEditRow (row) {\n            api.querySingleRecords(row.inspectPlanCode, row.deviceCode).then(\n                res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                }\n            )\n        },\n        //编辑确认\n        update () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.patchSingleRecords(\n                        this.temp.inspectPlanCode,\n                        this.temp.deviceCode,\n                        this.temp\n                    ).then(res => {\n                        if (res.status == 201) {\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                        }\n                    })\n                }\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        getList () {\n            //获取表格数据\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = this.$myFun.codeToName(\n                    res.data,\n                    [\n                        this.dt_inspect_method,\n                        this.dt_inspect_type,\n                        this.dt_inspect_plan_cycle\n                    ],\n                    ['inspectMethod', 'inspectType', 'rollCycleUtil']\n                ).list\n                this.total = res.data.pages.count\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                deviceCodes: [],\n                inspectMethod: undefined,\n                inspectType: undefined,\n                nextInspectTime: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                remark: undefined,\n                rollCycle: undefined,\n                rollCycleUtil: undefined\n            }\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n            // this.fromList = undefined\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create () {\n            if (this.temp.deviceCodes.length == 0) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.temp.deviceCodes = this.temp.deviceCodes.map(item => {\n                return item.deviceCode\n            })\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    // 添加bom\n                    api.addRecords(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        //删除按钮单击事件方法\n        handleDelete () {\n            if (this.selectedRows) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecords(this.selectedRows.inspectPlanCode, this.selectedRows.deviceCode).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条计划',\n                    type: 'warning'\n                })\n            }\n        },\n        selectRow (val) {\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)\n        },\n        selectChange (val) {\n            this.selectedRows = val\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleCloses () {\n\n        },\n        //从表选择框选中\n        selectFromChange (val) {\n            this.selectFromList = val\n            if (val.length > 1) {\n                this.$refs.tb2.clearSelection()\n                this.$refs.tb2.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb2.setCurrentRow(this.selectFromList[0])\n        },\n        handleCreateFrom () {\n            this.fromDialogStatus = 'create'\n            if (!this.temp.orgCode) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择组织编码',\n                    type: 'warning'\n                })\n                return\n            }\n            this.fromDialogFormVisible = true\n            setTimeout(() => {\n                this.$refs.eqmtSelect.getList()\n            }, 0)\n        },\n        rowClickFrom (val) {\n            this.$refs.tb2.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        }\n    }\n}\n",null]}