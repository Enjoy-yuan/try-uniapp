{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/FM/failureRegister/index.vue?vue&type=template&id=7a199270&scoped=true&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/FM/failureRegister/index.vue","mtime":1596610933415},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"app-container\" },\n      [\n        _c(\"div\", { staticClass: \"filter-container\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"filter-items\" },\n            [\n              _c(\"el-input\", {\n                staticClass: \"filter-item\",\n                attrs: { size: \"small\", placeholder: \"故障编号\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.faultNumber,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"faultNumber\", $$v)\n                  },\n                  expression: \"listQuery.faultNumber\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-input\", {\n                staticClass: \"filter-item\",\n                attrs: { size: \"small\", placeholder: \"设备编号\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.deviceCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"deviceCode\", $$v)\n                  },\n                  expression: \"listQuery.deviceCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"selectTree\", {\n                staticClass: \"filter-item\",\n                attrs: {\n                  size: \"small\",\n                  placeholder: \"故障类型\",\n                  props: _vm.props,\n                  value: _vm.valueId,\n                  options: _vm.optionData,\n                  clearable: _vm.isClearable,\n                  accordion: _vm.isAccordion\n                },\n                on: {\n                  getValue: function($event) {\n                    return _vm.getValue($event)\n                  }\n                },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.handleQuery($event)\n                  }\n                },\n                model: {\n                  value: _vm.listQuery.faultTypeCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery, \"faultTypeCode\", $$v)\n                  },\n                  expression: \"listQuery.faultTypeCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: { clearable: \"\", placeholder: \"状态\", size: \"small\" },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.handleQuery($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery.state,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery, \"state\", $$v)\n                    },\n                    expression: \"listQuery.state\"\n                  }\n                },\n                _vm._l(_vm.dt_fault_state, function(item) {\n                  return _c(\"el-option\", {\n                    key: item.dictItemKey,\n                    attrs: {\n                      label: item.dictItemValue,\n                      value: item.dictItemKey\n                    }\n                  })\n                }),\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"el-icon-search\"\n                  },\n                  on: { click: _vm.handleQuery }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.search\")))]\n              )\n            ],\n            1\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"table-container\" },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"oprate_btn\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-plus\"\n                    },\n                    on: { click: _vm.handleCreate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.add\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-edit\"\n                    },\n                    on: { click: _vm.handleUpdate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.edit\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-delete\"\n                    },\n                    on: { click: _vm.handleDelete }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.delete\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-setting\"\n                    },\n                    on: { click: _vm.handleRepair }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.Repair\")))]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-table\",\n              {\n                key: _vm.tableKey[0],\n                ref: \"mainList\",\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  data: _vm.list,\n                  border: \"\",\n                  fit: \"\",\n                  height: _vm.theight,\n                  \"highlight-current-row\": \"\",\n                  size: \"mini\",\n                  \"cell-class-name\": \"table-cell\",\n                  \"header-cell-class-name\": \"header-cell\"\n                },\n                on: {\n                  \"row-click\": _vm.rowClick,\n                  select: _vm.tableSelect,\n                  \"selection-change\": _vm.selectChange\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    type: \"selection\",\n                    fixed: \"\",\n                    width: \"30\",\n                    align: \"center\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"故障编码\",\n                    prop: \"faultNumber\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    \"min-width\": \"150\",\n                    align: \"center\",\n                    label: \"状态\",\n                    prop: \"stateCN\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"设备编码\",\n                    prop: \"deviceCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"设备名称\",\n                    prop: \"deviceName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\",\n                    align: \"center\",\n                    label: \"故障代码\",\n                    prop: \"faultCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"120\",\n                    align: \"center\",\n                    label: \"所在位置\",\n                    prop: \"useDeptName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"故障类型\",\n                    prop: \"faultTypeName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"发生时间\",\n                    prop: \"happenTime\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"操作人\",\n                    prop: \"operatorName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"联系电话\",\n                    prop: \"mobile\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"故障等级\",\n                    prop: \"faultGradeCN\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"紧急程度\",\n                    prop: \"urgencyDegreeCN\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"问题描述\",\n                    prop: \"description\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"是否停机\",\n                    prop: \"ifMachineHaltCN\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"停机时间\",\n                    prop: \"machineHaltTime\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"维修单号\",\n                    prop: \"workOrderNumber\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"维修班组\",\n                    prop: \"mwoClassCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    width: \"150\",\n                    align: \"center\",\n                    label: \"维修人\",\n                    prop: \"mainMaintainerName\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"pagination\", {\n              attrs: {\n                total: _vm.total,\n                page: _vm.listQuery.currentPage,\n                limit: _vm.listQuery.pageSize\n              },\n              on: {\n                \"update:page\": function($event) {\n                  return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                },\n                \"update:limit\": function($event) {\n                  return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                },\n                pagination: _vm.getList\n              }\n            })\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-dialog\",\n          {\n            directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n            attrs: {\n              \"custom-class\": \"dialog-custom\",\n              \"close-on-click-modal\": false,\n              \"close-on-press-escape\": false,\n              title:\n                _vm.dialogStatus == \"create\"\n                  ? _vm.$t(\"table.add\")\n                  : _vm.$t(\"table.edit\"),\n              visible: _vm.dialogFormVisible\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.dialogFormVisible = $event\n              },\n              close: _vm.clear\n            }\n          },\n          [\n            _c(\n              \"el-form\",\n              {\n                ref: \"tempR\",\n                staticClass: \"small-space\",\n                staticStyle: { width: \"100%\", \"min-width\": \"400px\" },\n                attrs: {\n                  \"label-position\": \"center\",\n                  size: \"mini\",\n                  model: _vm.temp,\n                  rules: _vm.rules,\n                  \"label-width\": \"110px\",\n                  inline: true\n                }\n              },\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"设备编号\", prop: \"deviceCode\" } },\n                  [\n                    _c(\n                      \"el-input\",\n                      {\n                        attrs: { disabled: \"\" },\n                        model: {\n                          value: _vm.temp.deviceCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"deviceCode\", $$v)\n                          },\n                          expression: \"temp.deviceCode\"\n                        }\n                      },\n                      [\n                        _c(\"el-button\", {\n                          style: { background: \"#fff\" },\n                          attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                          on: { click: _vm.handleClickDevice },\n                          slot: \"append\"\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"设备名称\", prop: \"deviceName\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.temp.deviceName,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"deviceName\", $$v)\n                        },\n                        expression: \"temp.deviceName\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"设备类型\", prop: \"typeCode\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.temp.typeName,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"typeName\", $$v)\n                        },\n                        expression: \"temp.typeName\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"规格型号\", prop: \"modelNumber\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.temp.modelNumber,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"modelNumber\", $$v)\n                        },\n                        expression: \"temp.modelNumber\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"使用部门\", prop: \"useDept\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.temp.useDeptName,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"useDeptName\", $$v)\n                        },\n                        expression: \"temp.useDeptName\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"设备地点\", prop: \"address\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.temp.address,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"address\", $$v)\n                        },\n                        expression: \"temp.address\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"发生时间\", prop: \"happenTime\" } },\n                  [\n                    _c(\"el-date-picker\", {\n                      attrs: {\n                        size: \"small\",\n                        type: \"datetime\",\n                        \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                        placeholder: \"发生时间\"\n                      },\n                      model: {\n                        value: _vm.temp.happenTime,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"happenTime\", $$v)\n                        },\n                        expression: \"temp.happenTime\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"操作人\", prop: \"operator\" } },\n                  [\n                    _c(\n                      \"el-input\",\n                      {\n                        attrs: { disabled: \"\" },\n                        model: {\n                          value: _vm.temp.operator,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"operator\", $$v)\n                          },\n                          expression: \"temp.operator\"\n                        }\n                      },\n                      [\n                        _c(\"el-button\", {\n                          attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                          on: { click: _vm.handleClickEmployee },\n                          slot: \"append\"\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"联系电话\", prop: \"mobile\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.temp.mobile,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"mobile\", $$v)\n                        },\n                        expression: \"temp.mobile\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障代码\", prop: \"faultCode\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { size: \"small\" },\n                        on: { change: _vm.faultCodeChange },\n                        model: {\n                          value: _vm.temp.faultCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"faultCode\", $$v)\n                          },\n                          expression: \"temp.faultCode\"\n                        }\n                      },\n                      _vm._l(_vm.faultList, function(item) {\n                        return _c(\"el-option\", {\n                          key: item,\n                          attrs: { label: item, value: item }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障类型\", prop: \"faultTypeCode\" } },\n                  [\n                    _c(\"faultTypeSelect\", {\n                      ref: \"faultType\",\n                      model: {\n                        value: _vm.temp.faultTypeCode,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"faultTypeCode\", $$v)\n                        },\n                        expression: \"temp.faultTypeCode\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障部位\", prop: \"partCode\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { size: \"small\", disabled: !_vm.temp.typeCode },\n                        model: {\n                          value: _vm.temp.partCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"partCode\", $$v)\n                          },\n                          expression: \"temp.partCode\"\n                        }\n                      },\n                      _vm._l(_vm.partCodeOption, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.partCode,\n                          attrs: { label: item.partName, value: item.partCode }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障描述\", prop: \"description\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.temp.description,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"description\", $$v)\n                        },\n                        expression: \"temp.description\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"紧急程度\", prop: \"urgencyDegree\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { size: \"small\" },\n                        model: {\n                          value: _vm.temp.urgencyDegree,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"urgencyDegree\", $$v)\n                          },\n                          expression: \"temp.urgencyDegree\"\n                        }\n                      },\n                      _vm._l(_vm.dt_urgency_degree, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.dictItemKey,\n                          attrs: {\n                            label: item.dictItemValue,\n                            value: item.dictItemKey\n                          }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障等级\", prop: \"faultGrade\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { size: \"small\" },\n                        model: {\n                          value: _vm.temp.faultGrade,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"faultGrade\", $$v)\n                          },\n                          expression: \"temp.faultGrade\"\n                        }\n                      },\n                      _vm._l(_vm.dt_fault_grade, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.dictItemKey,\n                          attrs: {\n                            label: item.dictItemValue,\n                            value: item.dictItemKey\n                          }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"维修班组\", prop: \"classCode\" } },\n                  [\n                    _c(\"teamSelect\", {\n                      attrs: { placeholder: \"维修班组\" },\n                      on: { obj: _vm.getClass },\n                      model: {\n                        value: _vm.temp.classCode,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"classCode\", $$v)\n                        },\n                        expression: \"temp.classCode\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"是否停机\", prop: \"ifMachineHalt\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { size: \"small\" },\n                        on: { change: _vm.changeShutdown },\n                        model: {\n                          value: _vm.temp.ifMachineHalt,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"ifMachineHalt\", $$v)\n                          },\n                          expression: \"temp.ifMachineHalt\"\n                        }\n                      },\n                      _vm._l(_vm.dt_yes_or_no, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.dictItemKey,\n                          attrs: {\n                            label: item.dictItemValue,\n                            value: item.dictItemKey\n                          }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"停机时间\", prop: \"machineHaltTime\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        \"label-width\": \"20px\",\n                        placeholder: \"分钟\",\n                        disabled: _vm.temp.ifMachineHalt == \"N\",\n                        oninput: \"value=value.replace(/[^\\\\d]/g,'')\"\n                      },\n                      model: {\n                        value: _vm.temp.machineHaltTime,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"machineHaltTime\", $$v)\n                        },\n                        expression: \"temp.machineHaltTime\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"dialog-footer\",\n                attrs: { slot: \"footer\" },\n                slot: \"footer\"\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.dialogFormVisible = false\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                _vm.dialogStatus == \"create\"\n                  ? _c(\n                      \"el-button\",\n                      { attrs: { type: \"primary\" }, on: { click: _vm.create } },\n                      [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                    )\n                  : _c(\n                      \"el-button\",\n                      { attrs: { type: \"primary\" }, on: { click: _vm.update } },\n                      [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                    )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-dialog\",\n          {\n            directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n            staticClass: \"table_dialog\",\n            attrs: {\n              \"custom-class\": \"dialog-custom\",\n              title: \"操作人\",\n              visible: _vm.employeeDialogVisible,\n              \"close-on-click-modal\": false\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.employeeDialogVisible = $event\n              }\n            }\n          },\n          [\n            _c(\"employeesSelect\", {\n              attrs: { isTick: false },\n              on: { change: _vm.handleEmployee }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"dialog-footer\",\n                attrs: { slot: \"footer\" },\n                slot: \"footer\"\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.employeeDialogVisible = false\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: { click: _vm.employeeCreate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-dialog\",\n          {\n            directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n            staticClass: \"table_dialog\",\n            attrs: {\n              \"custom-class\": \"dialog-custom\",\n              title: \"设备编码\",\n              visible: _vm.equipmentDialogVisible,\n              \"close-on-click-modal\": false\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.equipmentDialogVisible = $event\n              }\n            }\n          },\n          [\n            _c(\"equipmentSelect\", { on: { change: _vm.handleEquipment } }),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"dialog-footer\",\n                attrs: { slot: \"footer\" },\n                slot: \"footer\"\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.equipmentDialogVisible = false\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: { click: _vm.equipmentUpdate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"table-container\" },\n          [\n            _c(\n              \"el-tabs\",\n              {\n                attrs: { type: \"card\" },\n                model: {\n                  value: _vm.tabName,\n                  callback: function($$v) {\n                    _vm.tabName = $$v\n                  },\n                  expression: \"tabName\"\n                }\n              },\n              _vm._l(_vm.tabConfig, function(item) {\n                return _c(\n                  \"el-tab-pane\",\n                  {\n                    key: item.prop,\n                    attrs: { label: item.label, name: item.name }\n                  },\n                  [\n                    item.prop === \"sbtp\"\n                      ? _c(\"imgUpload\", {\n                          ref: \"tab1\",\n                          refInFor: true,\n                          attrs: {\n                            titleText: \"故障编码\",\n                            categoryData: _vm.dt_file_equipment,\n                            functionCode: _vm.workOrderNumberA\n                          }\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    item.prop === \"sbfj\"\n                      ? _c(\"fileUpload\", {\n                          ref: \"tab2\",\n                          refInFor: true,\n                          attrs: {\n                            titleText: \"故障编码\",\n                            categoryData: _vm.dt_file_equipment,\n                            functionCode: _vm.workOrderNumberA\n                          }\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    item.prop === \"bjqd\"\n                      ? _c(\"tab3\", {\n                          ref: \"tab3\",\n                          refInFor: true,\n                          attrs: { functionCode: _vm.workOrderNumberA }\n                        })\n                      : _vm._e()\n                  ],\n                  1\n                )\n              }),\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}