{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/equipmentTransfers/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/equipmentTransfers/index.vue","mtime":1596610933384},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/el/equipmentTransfers'\nimport * as org from '@/api/system/organization'\nimport * as employees from '@/api/system/employees'\nimport eqmtSelect from '../../components/eqmtSelect'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'equipmentTransfers',\n    components: { Pagination, eqmtSelect },\n    data () {\n        return {\n            theight: 0, //表格高度\n            list: [],\n            subList: [],\n            devModelList: [],\n            total: 0,\n            totalDev: 0,\n            tableKey: [0, 1, 2, 3], //表格索引\n            orgList: [], //组织选择\n            workList: [], //工作中心选择\n            transferDepartmentList: [], //部门选择\n            employeesList: [], //员工列表\n            employeesListSub: [], // 人员列表\n            listQuery: {\n                materielCode: undefined,\n                //查询\n                orgCode: undefined,\n                state: undefined,\n                applicationTimeStart: undefined,\n                applicationTimeEnd: undefined,\n                currentPage: 1,\n                pageSize: 15\n            },\n            listQueryDev: {\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                allocationApplyCode: undefined, //  设备调拨单号\n                equipmentCode: undefined, //设备代码\n                orgCode: undefined, //组织编码\n                transferDepartment: undefined, //调往部门\n                transferAddress: undefined, //调往地址\n                applicant: undefined, //申请人\n                applicationTime: undefined, //申请时间\n                leadCadre: undefined, // 新资产负责人\n                reasonExplan: undefined, //原因说明\n                remark: undefined,\n                deviceAllocationDetailList: null //设备分配列表\n            },\n            subTemp: {\n                confirmPeople: undefined,\n                confirmTime: undefined,\n                allocationState: undefined\n            },\n            dialogStatus: '', //新增/修改\n            dialogFormVisible: false,\n            fromDialogFormVisibleDev: false, // 设备\n            selectedRowsDev: null, //选择的设备\n            selectedRowsDelDev: null, //预选择删除的设备\n            fromDialogStatus: '',\n            fromDialogFormVisible: false, // 调入调出弹出层\n            workStationDialogVisible: false,\n            selectedRows: null, //主表选中\n            selectFromList: null, //从表选中\n            rules: {\n                orgCode: [\n                    {\n                        required: true,\n                        message: '请选择组织编码',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                transferDepartment: [\n                    {\n                        required: true,\n                        message: '请选择调往部门',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                transferAddress: [\n                    {\n                        required: true,\n                        message: '请选择调往地址',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                applicant: [\n                    {\n                        required: true,\n                        message: '请选择申请人',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                applicationTime: [\n                    {\n                        required: true,\n                        message: '请选择申请时间',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                leadCadre: [\n                    {\n                        required: true,\n                        message: '请选择新资产负责人',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                reasonExplan: [\n                    {\n                        required: true,\n                        message: '请输入原因说明',\n                        trigger: ['blur', 'change']\n                    }\n                ], //原因说明\n                remark: undefined,\n                confirmPeople: [\n                    {\n                        required: true,\n                        message: '请选择',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                confirmTime: [\n                    {\n                        required: true,\n                        message: '请选择',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                deviceAllocationDetailList: null //设备分配列表\n            }\n        }\n    },\n    created () {\n        this.getList()\n        this.getOrg()\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_allocation_state: state => state.eamDict.dt_allocation_state,\n            dt_device_state: state => state.eamDict.dt_device_state\n        })\n    },\n    watch: {\n        'temp.orgCode' (value) {\n            if (value) {\n                api.queryWork(value).then(res => {\n                    this.workList = res.data\n                    let ret = res.data.find(v => {\n                        return v.workCenterCode == this.temp.transferDepartment\n                    })\n                    if (res.data.length) {\n                        if (!ret) {\n                            this.temp.transferDepartment =\n                                res.data[0].workCenterCode\n                        }\n                    } else {\n                        this.temp.transferDepartment = undefined\n                    }\n                })\n                let query = {\n                    orgCode: value\n                }\n                employees.selectlists(query).then(res => {\n                    this.employeesList = res.data\n                    // leadCadre 资产负责人\n                    let ret = res.data.find(v => {\n                        return v.employeeCode == this.temp.leadCadre\n                    })\n                    // applicant 申请人\n                    let ret2 = res.data.find(v => {\n                        return v.employeeCode == this.temp.applicant\n                    })\n                    if (res.data.length) {\n                        if (!ret) {\n                            this.temp.leadCadre = res.data[0].employeeCode\n                        }\n                        if (!ret2) {\n                            this.temp.applicant = res.data[0].employeeCode\n                        }\n                    } else {\n                        this.temp.leadCadre = undefined\n                        this.temp.applicant = undefined\n                    }\n                })\n            } else {\n                this.temp.transferDepartment = undefined\n                this.temp.leadCadre = undefined\n                this.temp.applicant = undefined\n            }\n        },\n        'temp.transferDepartment' (value) {\n            if (value) {\n                api.queryStations(value).then(res => {\n                    this.transferDepartmentList = res.data\n\n                    let ret = res.data.find(v => {\n                        return v.stationCode == this.temp.transferAddress\n                    })\n                    if (res.data.length) {\n                        if (!ret) {\n                            this.temp.transferAddress = res.data[0].stationCode\n                        }\n                    } else {\n                        this.temp.transferAddress = undefined\n                    }\n                })\n            } else {\n                this.temp.transferAddress = undefined\n            }\n        }\n        //\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_allocation_state',\n            'dt_device_state'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n    },\n    methods: {\n        cancelDevice () {\n            this.$refs.eqmtSelect.listQuery.page = 1\n            this.fromDialogFormVisibleDev = false\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        //获取主表数据\n        getList () {\n            api.queryOcation(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getOrg () {\n            let query = {\n                currentPage: 1,\n                pageSize: 1000\n            }\n            org.selectlists(query).then(res => {\n                this.orgList = res.data.list\n            })\n        },\n        // 获取人员列表\n        getEmployees () {\n            employees.selectlists().then(res => {\n                this.employeesListSub = res.data\n            })\n        },\n        // 获取从表\n        getSubList () {\n            api.queryAllocationsDetails(\n                this.selectedRows.allocationApplyCode\n            ).then(res => {\n                this.subList = res.data\n            })\n        },\n        // 新增预选设备\n        createDev () {\n            let obj = {}\n            this.devModelList = this.devModelList.concat(\n                this.$refs.eqmtSelect.currentSelect\n            )\n            this.devModelList = this.devModelList.reduce((cur, next) => {\n                obj[next.deviceCode]\n                    ? ''\n                    : (obj[next.deviceCode] = true && cur.push(next))\n                return cur\n            }, [])\n            this.fromDialogFormVisibleDev = false\n        },\n        // 删除预选设备\n        handleDelFromDev () {\n            if (this.selectedRowsDelDev) {\n                let a = this.selectedRowsDelDev\n                let b = this.devModelList\n                let arr = [...b].filter(x =>\n                    [...a].every(y => y.deviceCode !== x.deviceCode)\n                )\n                this.devModelList = arr\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return false\n            }\n        },\n        resetTemp () {\n            this.temp = {\n                allocationApplyCode: undefined, //  设备调拨单号\n                equipmentCode: undefined, //设备代码\n                orgCode: undefined, //组织编码\n                transferDepartment: undefined, //调往部门\n                transferAddress: undefined, //调往地址\n                applicant: undefined, //申请人\n                applicationTime: undefined, //申请时间\n                leadCadre: undefined, // 新资产负责人\n                reasonExplan: undefined, //原因说明\n                remark: undefined,\n                deviceAllocationDetailList: null //设备分配列表\n            }\n        },\n        // 表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n            this.subList = []\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.resetTemp()\n            this.devModelList = []\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 新增\n        create () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (this.devModelList) {\n                        this.temp.deviceAllocationDetailList = this.devModelList.map(\n                            res => {\n                                return { equipmentCode: res.deviceCode }\n                            }\n                        )\n                    }\n                    api.creatAllocation(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        //编辑按钮单击事件方法\n        handleUpdate () {\n            if (this.selectedRows) {\n                this.temp = JSON.parse(JSON.stringify(this.selectedRows))\n                Promise.all([\n                    api.queryAllocations(this.selectedRows.allocationApplyCode),\n                    api.queryAllocationsDetails(\n                        this.selectedRows.allocationApplyCode\n                    )\n                ]).then(res => {\n                    this.temp = res[0].data\n                    res[1].data.forEach(i => {\n                        i.deviceName = i.equipmentName\n                        i.deviceCode = i.equipmentCode\n                        i.modelNumber = i.equipmentMode\n                        i.categoryName = i.equipmentType\n                        i.useDeptName = i.lineCode\n                        i.addressName = i.equipmentStation\n                    })\n                    this.devModelList = res[1].data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // 更新\n        update () {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (this.selectedRowsDev) {\n                        this.temp.deviceAllocationDetailList = this.selectedRowsDev.map(\n                            res => {\n                                return { equipmentCode: res.deviceCode }\n                            }\n                        )\n                    }\n                    api.updataAllocation(\n                        this.temp.allocationApplyCode,\n                        this.temp\n                    ).then(() => {\n                        this.getList()\n                        this.clearValidate('temp')\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        //删除按钮单击事件方法\n        handleDelete () {\n            if (this.selectedRows) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteAllocation(\n                            this.selectedRows.allocationApplyCode\n                        ).then(() => {\n                            this.subList = []\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //发布\n        handlePublish () {\n            if (this.selectedRows) {\n                api.updataAllocationState(\n                    this.selectedRows.allocationApplyCode\n                ).then(() => {\n                    this.getList(),\n                        this.$message({\n                            title: '成功',\n                            message: '发布成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        // 打开新增预选设备弹出层\n        handleCreateFromDev () {\n            if (!this.temp.orgCode) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择组织编码',\n                    type: 'warning'\n                })\n                return\n            }\n            this.fromDialogFormVisibleDev = true\n\n            setTimeout(() => {\n                this.$refs.eqmtSelect.getList()\n            }, 0)\n        },\n        // 设备调出\n        handleOutFrom () {\n            this.getEmployees()\n            this.resetSubTemp()\n            if (this.selectFromList) {\n                this.fromDialogStatus = 'out'\n                this.fromDialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择组织编码',\n                    type: 'warning'\n                })\n            }\n        },\n        // 调出确认\n        createOutFrom () {\n            this.$refs['subTemp'].validate(valid => {\n                if (valid) {\n                    let data = {\n                        allocationState: this.subTemp.allocationState,\n                        equipmentCode: this.selectFromList[0].equipmentCode,\n                        outConfirmPeople: this.subTemp.confirmPeople,\n                        outConfirmTime: this.subTemp.confirmTime\n                    }\n                    api.comfirmOut(\n                        this.selectFromList[0].allocationApplyCode,\n                        data\n                    ).then(() => {\n                        this.getSubList()\n                        this.fromDialogFormVisible = false\n                        this.clearValidate('subTemp')\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        // 设备调入\n        handleCreateFrom () {\n            this.getEmployees()\n            this.resetSubTemp()\n            if (Array.isArray(this.selectFromList) && this.selectFromList[0]) {\n                this.fromDialogStatus = 'enter'\n                this.fromDialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条数据',\n                    type: 'warning'\n                })\n            }\n        },\n        // 调入确认\n        createCreateFrom () {\n            let data = {\n                allocationState: this.subTemp.allocationState,\n                equipmentCode: this.selectFromList[0].equipmentCode,\n                enterConfirmPeople: this.subTemp.confirmPeople,\n                enterConfirmTime: this.subTemp.confirmTime\n            }\n            api.comfirmIn(\n                this.selectFromList[0].allocationApplyCode,\n                data\n            ).then(() => {\n                this.getSubList()\n                this.fromDialogFormVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectChange (val) {\n            if (!val.length) {\n                this.subList = []\n                return false\n            }\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows)\n            if (this.selectedRows) {\n                this.getSubList()\n            }\n        },\n        //\n        rowClickDev (val) {\n            this.$refs.tbDev.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectChangeDev (val) {\n            this.selectedRowsDev = val\n        },\n        //从表选择框选中\n        rowClickFrom (val) {\n            this.$refs.tb2.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectFromChange (val) {\n            this.selectFromList = val\n            if (val.length > 1) {\n                this.$refs.tb2.clearSelection()\n                this.$refs.tb2.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb2.setCurrentRow(this.selectFromList[0])\n        },\n        // 预选设备列表\n        rowClickFromDev (val) {\n            this.$refs.tbYxDev.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectFromChangeDev (val) {\n            this.selectedRowsDelDev = val\n        },\n        resetSubTemp () {\n            this.subTemp = {\n                confirmPeople: undefined,\n                confirmTime: undefined,\n                allocationState: undefined\n            }\n        }\n    }\n}\n",null]}