{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/materialScrap/scrapApplication/index.vue?vue&type=template&id=3a5a89a9&scoped=true&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/materialScrap/scrapApplication/index.vue","mtime":1596610934135},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-col\",\n    { attrs: { span: 24 } },\n    [\n      _c(\"div\", { staticClass: \"app-container\" }, [\n        _c(\"div\", { staticClass: \"filter-container\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"filter-items\" },\n            [\n              _c(\"AuthoType\", {\n                staticClass: \"filter-item\",\n                attrs: {\n                  isDefault: true,\n                  selectType: 1,\n                  placeholder: \"组织编码\"\n                },\n                on: { setdefault: _vm.setdefault },\n                model: {\n                  value: _vm.listQuery_a.orgCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.listQuery_a, \"orgCode\", $$v)\n                  },\n                  expression: \"listQuery_a.orgCode\"\n                }\n              }),\n              _vm._v(\" \"),\n              !_vm.listQuery_a.orgCode\n                ? _c(\"AuthoType\", {\n                    staticClass: \"filter-item\",\n                    attrs: { selectType: 3, placeholder: \"请先选择组织\" },\n                    model: {\n                      value: _vm.listQuery_a.warehouseCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery_a, \"warehouseCode\", $$v)\n                      },\n                      expression: \"listQuery_a.warehouseCode\"\n                    }\n                  })\n                : _c(\"AuthoType\", {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      isDefault: true,\n                      selectType: 3,\n                      cascading: _vm.listQuery_a.orgCode,\n                      placeholder: \"仓库编码\"\n                    },\n                    on: { setdefault: _vm.setdefault },\n                    model: {\n                      value: _vm.listQuery_a.warehouseCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery_a, \"warehouseCode\", $$v)\n                      },\n                      expression: \"listQuery_a.warehouseCode\"\n                    }\n                  }),\n              _vm._v(\" \"),\n              _c(\"el-date-picker\", {\n                staticClass: \"filter-item range_date\",\n                attrs: {\n                  size: \"small\",\n                  \"value-format\": \"yyyy-MM-dd\",\n                  type: \"daterange\",\n                  \"start-placeholder\": _vm.$t(\"deliverOrder.startTime\"),\n                  \"end-placeholder\": _vm.$t(\"deliverOrder.endTime\")\n                },\n                model: {\n                  value: _vm.applyDate,\n                  callback: function($$v) {\n                    _vm.applyDate = $$v\n                  },\n                  expression: \"applyDate\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    size: \"small\",\n                    placeholder: _vm.$t(\"table.orderState\"),\n                    clearable: \"\"\n                  },\n                  nativeOn: {\n                    keyup: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.getList_a($event)\n                    }\n                  },\n                  model: {\n                    value: _vm.listQuery_a.state,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery_a, \"state\", $$v)\n                    },\n                    expression: \"listQuery_a.state\"\n                  }\n                },\n                _vm._l(_vm.dt_scrap_order_state, function(item) {\n                  return _c(\"el-option\", {\n                    key: item.dictItemKey,\n                    attrs: {\n                      label: item.dictItemValue,\n                      value: item.dictItemKey\n                    }\n                  })\n                }),\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-input\",\n                {\n                  attrs: { size: \"small\", placeholder: \"申请人\", disabled: \"\" },\n                  model: {\n                    value: _vm.listQuery_a.applyEmp,\n                    callback: function($$v) {\n                      _vm.$set(_vm.listQuery_a, \"applyEmp\", $$v)\n                    },\n                    expression: \"listQuery_a.applyEmp\"\n                  }\n                },\n                [\n                  _c(\"el-button\", {\n                    attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                    on: { click: _vm.handlegPersonnel },\n                    slot: \"append\"\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"el-icon-search\"\n                  },\n                  on: { click: _vm.getList_a }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.search\")))]\n              )\n            ],\n            1\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"table-container\" },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"oprate_btn\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-plus\"\n                    },\n                    on: { click: _vm.handleCreate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.add\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-delete\"\n                    },\n                    on: { click: _vm.handleDelete }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.delete\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-edit\"\n                    },\n                    on: { click: _vm.handleUpdate }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"table.edit\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-close\"\n                    },\n                    on: { click: _vm.handleScrap }\n                  },\n                  [_vm._v(\"作废\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"filter-item\",\n                    attrs: {\n                      size: \"small\",\n                      type: \"primary\",\n                      icon: \"el-icon-finished\"\n                    },\n                    on: { click: _vm.handleSubmit }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                    \" + _vm._s(_vm.$t(\"table.submit\"))\n                    )\n                  ]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-table\",\n              {\n                key: _vm.tableKey[0],\n                ref: \"tb_a\",\n                attrs: {\n                  data: _vm.list_a,\n                  border: \"\",\n                  fit: \"\",\n                  width: \"100%\",\n                  height: _vm.theight,\n                  size: \"mini\",\n                  \"highlight-current-row\": \"\",\n                  \"cell-class-name\": \"table-cell\",\n                  \"header-cell-class-name\": \"header-cell\"\n                },\n                on: {\n                  \"selection-change\": _vm.selectRow_a,\n                  \"row-click\": _vm.rowClick_a\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: { type: \"selection\", width: \"30\", fixed: \"\" }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"状态\",\n                    fixed: \"\",\n                    prop: \"state\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(_vm._f(\"stateFilter\")(scope.row.state)) +\n                              \"\\n                    \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"申请单号\",\n                    fixed: \"\",\n                    prop: \"scrapOrderCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"组织编码\",\n                    fixed: \"\",\n                    prop: \"orgCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"组织名称\",\n                    fixed: \"\",\n                    prop: \"orgName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"仓库编码\",\n                    fixed: \"\",\n                    prop: \"warehouseCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"仓库名称\",\n                    fixed: \"\",\n                    prop: \"warehouseName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"业务类型\",\n                    prop: \"businessType\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"业务类型名称\",\n                    prop: \"businessTypeName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"申请日期\",\n                    prop: \"createTime\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"申请人\",\n                    prop: \"applyEmpName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"备注\",\n                    prop: \"note\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"pagination\", {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.total_a > 0,\n                  expression: \"total_a>0\"\n                }\n              ],\n              attrs: {\n                total: _vm.total_a,\n                page: _vm.listQuery_a.currentPage,\n                limit: _vm.listQuery_a.pageSize\n              },\n              on: {\n                \"update:page\": function($event) {\n                  return _vm.$set(_vm.listQuery_a, \"currentPage\", $event)\n                },\n                \"update:limit\": function($event) {\n                  return _vm.$set(_vm.listQuery_a, \"pageSize\", $event)\n                },\n                pagination: _vm.getList_a\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\"hr\", { staticClass: \"hrLineStyle\" }),\n            _vm._v(\" \"),\n            _c(\n              \"el-table\",\n              {\n                key: _vm.tableKey[1],\n                ref: \"tb_b\",\n                attrs: {\n                  data: _vm.list_b,\n                  border: \"\",\n                  fit: \"\",\n                  width: \"100%\",\n                  height: _vm.theight,\n                  size: \"mini\",\n                  \"highlight-current-row\": \"\",\n                  \"cell-class-name\": \"table-cell\",\n                  \"header-cell-class-name\": \"header-cell\"\n                },\n                on: {\n                  \"selection-change\": _vm.selectRow_b,\n                  \"row-click\": _vm.rowClick_b\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: { type: \"selection\", width: \"30\", fixed: \"\" }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"行号\",\n                    fixed: \"\",\n                    prop: \"rowNo\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"物料编码\",\n                    fixed: \"\",\n                    prop: \"materielCode\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"物料名称\",\n                    fixed: \"\",\n                    prop: \"materielName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"数量\",\n                    prop: \"scrapNumber\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"计量单位\",\n                    prop: \"measuringUnit\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"库存状态\",\n                    prop: \"stockStateName\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    \"show-overflow-tooltip\": \"\",\n                    label: \"库存类型\",\n                    prop: \"stockTypeName\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"pagination\", {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.total_b > 0,\n                  expression: \"total_b>0\"\n                }\n              ],\n              attrs: {\n                total: _vm.total_b,\n                page: _vm.listQuery_b.currentPage,\n                limit: _vm.listQuery_b.pageSize\n              },\n              on: {\n                \"update:page\": function($event) {\n                  return _vm.$set(_vm.listQuery_b, \"currentPage\", $event)\n                },\n                \"update:limit\": function($event) {\n                  return _vm.$set(_vm.listQuery_b, \"pageSize\", $event)\n                },\n                pagination: _vm.getList_b\n              }\n            })\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          staticClass: \"table_dialog\",\n          attrs: {\n            \"custom-class\": \"dialog-custom\",\n            title: \"采购计划员\",\n            visible: _vm.purchasingPersonnelDialogFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.purchasingPersonnelDialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\"purchasingPersonnel\", {\n            on: { handSelectPersonnelsRows: _vm.purchasingPersonnels }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.getEmp } },\n                [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          staticClass: \"form_dialog\",\n          attrs: {\n            \"custom-class\": \"dialog-custom\",\n            width: \"70%\",\n            title:\n              _vm.dialogStatus == \"create\"\n                ? _vm.$t(\"table.add\")\n                : _vm.$t(\"table.edit\"),\n            visible: _vm.dialogFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              staticClass: \"demo-form-inline dialog_form\",\n              attrs: {\n                rules: _vm.rules,\n                size: \"mini\",\n                inline: true,\n                model: _vm.temp,\n                \"label-width\": \"120px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"申请单号\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { disabled: \"disabled\" },\n                    model: {\n                      value: _vm.temp.scrapOrderCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"scrapOrderCode\", $$v)\n                      },\n                      expression: \"temp.scrapOrderCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    disabled: \"isEdit\",\n                    label: \"组织编码\",\n                    prop: \"orgCode\"\n                  }\n                },\n                [\n                  _c(\"caiGou\", {\n                    attrs: {\n                      disabled: _vm.isEdit,\n                      orgType: _vm.DT_ORG_TYPE.factory,\n                      placeholder: _vm.$t(\"table.select\")\n                    },\n                    on: { selectName: _vm.arrivalCompanyName },\n                    model: {\n                      value: _vm.temp.orgCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"orgCode\", $$v)\n                      },\n                      expression: \"temp.orgCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"仓库编码\", prop: \"warehouseCode\" } },\n                [\n                  !_vm.temp.orgCode\n                    ? _c(\"warehouseSelect\", {\n                        attrs: {\n                          disabled: _vm.isEdit,\n                          orgCode: _vm.temp.orgCode,\n                          placeholder: _vm.$t(\"table.arrivalCompanyFirst\")\n                        },\n                        model: {\n                          value: _vm.temp.warehouseCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"warehouseCode\", $$v)\n                          },\n                          expression: \"temp.warehouseCode\"\n                        }\n                      })\n                    : _c(\"warehouseSelect\", {\n                        attrs: {\n                          disabled: _vm.isEdit,\n                          orgCode: _vm.temp.orgCode,\n                          placeholder: _vm.$t(\"table.arrivalWarehouse\")\n                        },\n                        model: {\n                          value: _vm.temp.warehouseCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"warehouseCode\", $$v)\n                          },\n                          expression: \"temp.warehouseCode\"\n                        }\n                      })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"申请人\", prop: \"applyEmp\" } },\n                [\n                  _c(\n                    \"el-input\",\n                    {\n                      staticStyle: { width: \"165px\" },\n                      attrs: { size: \"small\", placeholder: \"请选择申请人\" },\n                      model: {\n                        value: _vm.temp.applyEmp,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"applyEmp\", $$v)\n                        },\n                        expression: \"temp.applyEmp\"\n                      }\n                    },\n                    [\n                      _c(\"el-button\", {\n                        attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                        on: { click: _vm.handlegPersonnel },\n                        slot: \"append\"\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"往来仓库\", prop: \"toWarehouseCode\" } },\n                [\n                  !_vm.temp.orgCode\n                    ? _c(\"warehouseSelect\", {\n                        attrs: {\n                          disabled: _vm.isEdit,\n                          orgCode: _vm.temp.orgCode,\n                          placeholder: _vm.$t(\"table.arrivalCompanyFirst\")\n                        },\n                        model: {\n                          value: _vm.temp.toWarehouseCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"toWarehouseCode\", $$v)\n                          },\n                          expression: \"temp.toWarehouseCode\"\n                        }\n                      })\n                    : _c(\"warehouseSelect\", {\n                        attrs: {\n                          disabled: _vm.isEdit,\n                          orgCode: _vm.temp.orgCode,\n                          placeholder: _vm.$t(\"table.arrivalWarehouse\")\n                        },\n                        model: {\n                          value: _vm.temp.toWarehouseCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.temp, \"toWarehouseCode\", $$v)\n                          },\n                          expression: \"temp.toWarehouseCode\"\n                        }\n                      })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"业务类型\", prop: \"businessType\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        disabled: _vm.isEdit,\n                        size: \"small\",\n                        placeholder: \"请选择业务类型\",\n                        clearable: \"\"\n                      },\n                      model: {\n                        value: _vm.temp.businessType,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"businessType\", $$v)\n                        },\n                        expression: \"temp.businessType\"\n                      }\n                    },\n                    _vm._l(_vm.dt_type, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.wareRuleCode,\n                        attrs: {\n                          label: item.wareRuleName,\n                          value: item.wareRuleCode\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"poFormulation.remark\") } },\n                [\n                  _c(\"el-input\", {\n                    staticStyle: { width: \"765px\" },\n                    attrs: { type: \"textarea\" },\n                    model: {\n                      value: _vm.temp.note,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"note\", $$v)\n                      },\n                      expression: \"temp.note\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"table-container\", attrs: { width: \"100%\" } },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"oprate_btn\" },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-plus\"\n                      },\n                      on: { click: _vm.handleCreate_a }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.add\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-delete\"\n                      },\n                      on: { click: _vm.handleDelete_a }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.delete\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"filter-item\",\n                      attrs: {\n                        size: \"small\",\n                        type: \"primary\",\n                        icon: \"el-icon-refresh-right\"\n                      },\n                      on: { click: _vm.handelRefresh }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"table.refresh\")))]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-table\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.list_a_1,\n                    border: \"\",\n                    fit: \"\",\n                    \"highlight-current-row\": \"\",\n                    height: \"200\",\n                    size: \"mini\",\n                    \"cell-class-name\": \"table-cell\",\n                    \"header-cell-class-name\": \"header-cell\"\n                  },\n                  on: { \"selection-change\": _vm.selectRow_a_1 }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      type: \"selection\",\n                      width: \"30\",\n                      prop: \"\",\n                      fixed: \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"物料编码\",\n                      prop: \"materielCode\",\n                      fixed: \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"物料名称\",\n                      prop: \"materielName\",\n                      fixed: \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      width: \"120\",\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"数量\",\n                      prop: \"scrapNumber\",\n                      fixed: \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input\", {\n                              staticStyle: { width: \"110px\" },\n                              attrs: { type: \"text\" },\n                              nativeOn: {\n                                keyup: function($event) {\n                                  return _vm.isIntegerNotMust($event)\n                                }\n                              },\n                              model: {\n                                value: scope.row.scrapNumber,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"scrapNumber\", $$v)\n                                },\n                                expression: \"scope.row.scrapNumber\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"规格型号\",\n                      prop: \"specification\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"计量单位\",\n                      prop: \"measuringUnit\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"库存类型\",\n                      prop: \"stockState\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      \"show-overflow-tooltip\": \"\",\n                      label: \"库存状态\",\n                      prop: \"stockType\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.dialogFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      _vm.dialogStatus === \"create\"\n                        ? _vm.createData()\n                        : _vm.updateData()\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          staticClass: \"table_dialog\",\n          attrs: {\n            width: \"70%\",\n            \"custom-class\": \"dialog-custom\",\n            title: \"新增物料信息\",\n            visible: _vm.wlxzDialogFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.wlxzDialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\"wlxzbykcz\", {\n            ref: \"wlxzRef\",\n            attrs: {\n              unMutiple: _vm.unMutiple,\n              orgCode: _vm.temp.orgCode,\n              warehouseCode: _vm.temp.warehouseCode\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.getMateriel } },\n                [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}