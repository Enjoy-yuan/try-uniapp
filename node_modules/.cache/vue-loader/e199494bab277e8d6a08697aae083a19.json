{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabQuote.vue?vue&type=template&id=a6388214&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabQuote.vue","mtime":1596610933675},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"customizeTable\" },\n    [\n      _c(\n        \"el-table\",\n        {\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            data: _vm.tableData,\n            border: \"\",\n            fit: \"\",\n            \"highlight-current-row\": \"\",\n            size: \"mini\",\n            \"cell-class-name\": \"table-cell\",\n            \"header-cell-class-name\": \"header-cell\"\n          }\n        },\n        [\n          _c(\n            \"el-table-column\",\n            {\n              attrs: {\n                \"show-overflow-tooltip\": \"\",\n                width: \"120\",\n                align: \"center\",\n                label: \"制造总费用\",\n                prop: \"no1\"\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"类型\",\n                  prop: \"totalType\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"原材料费用\",\n                  prop: \"rawMaterialCost\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"回收价值\",\n                  prop: \"recoveryValue\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"外购/协费用\",\n                  prop: \"outsourcingCost\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"专业工装费用\",\n                  prop: \"toolingCost\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"加工费用\",\n                  prop: \"processingCost\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"废品损失\",\n                  prop: \"wasteLoss\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.totalType == \"精算\"\n                          ? _c(\"span\", [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(_vm.getwasteLossData()) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.wasteLoss))])\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table-column\",\n            {\n              attrs: {\n                \"show-overflow-tooltip\": \"\",\n                width: \"120\",\n                align: \"center\",\n                label: \"期间费用\",\n                prop: \"no2\"\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"设计/试验费用\",\n                  prop: \"designCost\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-input\", {\n                          attrs: { rows: 2 },\n                          on: {\n                            input: function($event) {\n                              return _vm.getRealPrice()\n                            }\n                          },\n                          model: {\n                            value: scope.row.designCost,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"designCost\", $$v)\n                            },\n                            expression: \"scope.row.designCost\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"管理费率\",\n                  prop: \"managementRate\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"管理费\",\n                  prop: \"managementCost\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.type == \"精算\"\n                          ? _c(\"span\", [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(\n                                    (scope.row.managementCost = (\n                                      (_vm.sums -\n                                        _vm.RecoveryValue +\n                                        _vm.WGsums +\n                                        _vm.ApportionmentFee +\n                                        _vm.JGsums +\n                                        scope.row.wasteLoss) *\n                                      scope.row.managementRate\n                                    ).toFixed(2))\n                                  ) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          : _c(\"span\", [\n                              _vm._v(_vm._s(scope.row.managementCost))\n                            ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"财务费率\",\n                  prop: \"financialRate\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"财务费用\",\n                  prop: \"financialCost\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.type == \"精算\"\n                          ? _c(\"span\", [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(\n                                    (scope.row.financialCost = (\n                                      (_vm.sums -\n                                        _vm.RecoveryValue +\n                                        _vm.WGsums +\n                                        _vm.ApportionmentFee +\n                                        _vm.JGsums +\n                                        scope.row.wasteLoss) *\n                                      scope.row.financialRate\n                                    ).toFixed(2))\n                                  ) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          : _c(\"span\", [\n                              _vm._v(_vm._s(scope.row.financialCost))\n                            ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"包装费用\",\n                  prop: \"packingCost\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"物流费用\",\n                  prop: \"logisticsCost\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"show-overflow-tooltip\": \"\",\n                  width: \"120\",\n                  align: \"center\",\n                  label: \"其他费用\",\n                  prop: \"otherCost\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-input\", {\n                          attrs: { rows: 2 },\n                          on: {\n                            input: function($event) {\n                              return _vm.getRealPrice()\n                            }\n                          },\n                          model: {\n                            value: scope.row.otherCost,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"otherCost\", $$v)\n                            },\n                            expression: \"scope.row.otherCost\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              \"show-overflow-tooltip\": \"\",\n              width: \"120\",\n              align: \"center\",\n              label: \"利润率\",\n              prop: \"profitRate\"\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              \"show-overflow-tooltip\": \"\",\n              width: \"120\",\n              align: \"center\",\n              label: \"利润\",\n              prop: \"profit\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.totalType == \"精算\"\n                      ? _c(\"span\", [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(_vm.getProfit()) +\n                              \"\\n                \"\n                          )\n                        ])\n                      : _c(\"span\", [_vm._v(_vm._s(scope.row.profit))])\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              \"show-overflow-tooltip\": \"\",\n              width: \"120\",\n              align: \"center\",\n              label: \"核实价\",\n              prop: \"realPrice\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.totalType == \"精算\"\n                      ? _c(\"span\", [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(_vm.getRealPrice()) +\n                              \"\\n                \"\n                          )\n                        ])\n                      : _c(\"span\", [_vm._v(_vm._s(scope.row.realPrice))])\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}