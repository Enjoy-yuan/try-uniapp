{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/actuarialList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/actuarialList.vue","mtime":1599136050802},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/priceManage/actuarialDetailCost\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport costActuarial from '@/components/Dialog/costActuarial'//供应商选择\n// import * as api from \"@/api/system/role\"\nimport Pagination from \"@/components/Pagination\"\nimport dialogPreview from './dialog/dialogPreview'\nimport { mapState } from 'vuex'\n\n\n// import { mapState } from \"vuex\"\nexport default {\n    name: \"actuarialList\",\n    components: { caiGou, Pagination, dialogPreview, costActuarial },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: false,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            dataList: [],\n            total: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: null,\n                supplierCode: null,\n                supplierName: null,\n                quoteNo: null,\n                state: null,\n                materielName: null,\n                materielCode: null\n            },\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'handleAdd', name: '新增' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-edit-outline', clickMethod: 'handlePublish', name: '发布' },\n                { id: 2, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handlePreview', name: '精算预览' }\n            ],\n            tableConfig: [\n                { label: '序号', prop: 'rowId', align: 'center', width: 'auto' },\n                { label: '状态', prop: 'stateCN', align: 'center', width: 'auto' },\n                { label: '精算单号', prop: 'actuarialNo', align: 'center', width: 'auto' },\n                { label: '报价单号', prop: 'quotationNo', align: 'center', width: 'auto' },\n                { label: '零件图号', prop: 'mapNo', align: 'center', width: 'auto' },\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: 'auto' },\n                { label: '零件名称', prop: 'materielName', align: 'center', width: 'auto' },\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: 'auto' },\n                { label: '供应商', prop: 'supplierCode', align: 'center', width: 'auto' },\n                { label: '供应商名称', prop: 'supplierName', align: 'center', width: 'auto' },\n                { label: '供应商报价', prop: 'supplierQuote', align: 'center', width: 'auto' },\n                { label: '精算价格', prop: 'actuarialPrice', align: 'center', width: 'auto' },\n                { label: '要求价格', prop: 'prop12', align: 'center', width: 'auto' },\n                { label: '报价日期', prop: 'quotedDate', align: 'center', width: 'auto' },\n                { label: '价格生效日期', prop: 'validTimeStart', align: 'center', width: 'auto' },\n                { label: '价格失效日期', prop: 'validTimeEnd', align: 'center', width: 'auto' },\n                { label: '供应商确认时间', prop: 'supplierConfirmationTime', align: 'center', width: '120' }\n            ],\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\"])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 2\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecordsMain(this.listQuery).then(res => {\n                let options = [this.dt_srm_p0]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state'])\n                this.dataList = res.data.list\n                this.total = res.data.pages.count\n            })\n\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n            console.log(this.listQuery)\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    //新增\n                    this.handleAdd()\n                    break\n                }\n                case 1: {\n                    //发布\n                    console.log('发布')\n                    this.handlePublish()\n                    break\n                }\n                case 2: {\n                    //预览\n                    this.handlePreview()\n                    break\n                }\n            }\n        },\n        //新增按钮\n        handleAdd () {\n            console.log('新增')\n            this.$emit('setFormationState', 'add')\n        },\n        //发布按钮\n        handlePublish () {\n            if (this.selectedRows && this.selectedRows.length > 0) {\n                console.log('发布')\n                this.$confirm('发布后将向相关供应商推送报价通知,是否发布勾选的报价通知?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let dto = {\n                        rowIds: []\n                    }\n                    this.selectedRows.forEach((val, index) => {\n                        dto.rowIds[index] = val.rowId\n                    })\n                    api.effectRecords(dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '发布成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择信息'\n                })\n            }\n\n        },\n        //表格操作编辑\n        handleUpdate (index, row) {\n            console.log('编辑', index, row)\n            this.$emit('setFormationState', 'edit', row)\n        },\n        //表格操作删除\n        handleDelete (index, row) {\n            console.log('删除', index, row)\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                //api\n                api.deleteRecord(row.rowId).then(() => {\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    })\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        //表格操作预览\n        handlePreview () {\n            console.log('预览', this.selectedRows)\n            if (this.selectedRows && this.selectedRows.length == 1) {\n                this.$refs.cost.dialogVisible = true\n                this.$refs.cost.initData(this.selectedRows)\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择一条信息'\n                })\n            }\n\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        showGys () {\n            this.$refs.refGys.dialogVisible = true\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            console.log(gysRows)\n            this.listQuery.supplierCode = gysRows[0].supplierCode\n            this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName)\n        }\n    }\n};\n",null]}