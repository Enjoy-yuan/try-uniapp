{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/reservoirLocation/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/reservoirLocation/index.vue","mtime":1596610933346},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/warehouse'\nimport { selectlists as listOrg } from '@/api/system/organization'\nimport Pagination from '@/components/Pagination'\nimport orgSelect from '@/components/Select/orgSelect.vue'\nimport { DT_ORG_TYPE, TWO_STATE_OPTIONS } from '@/utils/constant'\nimport { mapState } from 'vuex'\nimport JsBarcode from 'jsbarcode'\n\nexport default {\n    name: 'reservoirLocation',\n    components: { Pagination, orgSelect },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: undefined,\n                warehouseCode: undefined\n            },\n            printData: {},//打印数据\n            orgCode: undefined,\n            orgName: undefined,\n            warehouseCode: undefined,\n            warehouseName: undefined,\n            areaCode: undefined,\n            areaName: undefined,\n            areaList: null,\n            areaTemp: {\n                warehouseCode: undefined,\n                areaCode: undefined,\n                areaName: undefined,\n                isEnabled: 1,\n                areaType: undefined\n            },\n            packDataList: null,\n            packPrintList: [],\n            updatePacklist: {\n                barCode: [],\n                method: '',\n                supplierBatch: '',\n                supplierRemark: ''\n            },\n            areaDialogVisible: false,\n            locationList: null,\n            locationTemp: {\n                areaCode: undefined,\n                column: undefined,\n                height: undefined,\n                isEnabled: 1,\n                layer: undefined,\n                locationClass: undefined,\n                locationCode: undefined,\n                locationName: undefined,\n                locationType: undefined,\n                longth: undefined,\n                remark: undefined,\n                row: undefined,\n                warehouseCode: undefined,\n                width: undefined,\n                wtb: undefined\n            },\n            locationDialogVisible: false,\n            dialogPackPrintVisible: false,//打印弹框显示\n            dialogStatus: '',\n            tableKey: [0, 1, 2],//表格索引，虚拟dom渲染表格时使用\n            theight: 0,\n            stheight: 0,//右子表高度\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            rules: {\n                warehouseCode: [\n                    { required: true, message: '仓库编码不能为空', trigger: 'blur' }\n                ],\n                areaCode: [\n                    { required: true, message: '编码不能为空', trigger: 'blur' },\n                    { pattern: /^[A-Z0-9]{0,8}$/, message: '由大写字母和数字组成，长度为8', trigger: 'blur' }\n                ],\n                areaName: [\n                    { required: true, message: '名称不能为空', trigger: 'blur' },\n                    { max: 60, message: '长度不能超过60', trigger: 'blur' }\n                ],\n                areaType: [\n                    { required: true, message: '请选择区位类型', trigger: 'blur' }\n                ],\n                locationCode: [\n                    { required: true, message: '编码不能为空', trigger: 'blur' },\n                    { pattern: /^[A-Z0-9]{0,8}$/, message: '由大写字母和数字组成，长度为8', trigger: 'blur' }\n                ],\n                locationName: [\n                    { required: true, message: '名称不能为空', trigger: 'blur' },\n                    { max: 60, message: '长度不能超过60', trigger: 'blur' }\n                ],\n                locationType: [\n                    { required: true, message: '请选择储位类型', trigger: 'blur' }\n                ],\n                locationClass: [\n                    { required: true, message: '请选择储位类别', trigger: 'blur' }\n                ],\n                longth: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: '由正数组成，保留两位有效数，长度不能超过14', trigger: 'blur' }\n                ],\n                width: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: '由正数组成，保留两位有效数，长度不能超过14', trigger: 'blur' }\n                ],\n                height: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: '由正数组成，保留两位有效数，长度不能超过14', trigger: 'blur' }\n                ],\n                wtb: [\n                    { pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/, message: '由正数组成，保留两位有效数，长度不能超过14', trigger: 'blur' }\n                ],\n                row: [\n                    { pattern: /^[A-Z-_0-9]{0,8}$/, message: '由大写字母、数字、-和_组成，长度为8', trigger: 'blur' }\n                ],\n                column: [\n                    { pattern: /^[A-Z-_0-9]{0,8}$/, message: '由大写字母、数字、-和_组成，长度为8', trigger: 'blur' }\n                ],\n                layer: [\n                    { pattern: /^[A-Z-_0-9]{0,8}$/, message: '由大写字母、数字、-和_组成，长度为8', trigger: 'blur' }\n                ],\n                remark: [\n                    { size: 512, message: '长度不能超过512', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_soragecell_type: state => state.dict.dt_soragecell_type,\n            dt_soragecell_class: state => state.dict.dt_soragecell_class,\n            dt_whpartition_type: state => state.dict.dt_whpartition_type\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_soragecell_type', 'dt_soragecell_class', 'dt_whpartition_type'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            this.orgCode = undefined\n            this.orgName = undefined\n            this.warehouseCode = undefined\n            this.warehouseName = undefined\n            this.areaCode = undefined\n            this.areaName = undefined\n            this.areaList = []\n            this.locationList = []\n            const orgs = listOrg({\n                type: DT_ORG_TYPE.factory,\n                organizationCode: this.orgCode,\n                state: 1\n            })\n            const list = api.queryRecords(this.listQuery)\n            Promise.all([orgs, list]).then(([o, l]) => {\n                this.list = l.data.list.map(v => {\n                    const org = o.data.find(value => value.organizationCode == v.orgCode)\n                    if (org) {\n                        v.orgName = org.organizationName\n                    } else {\n                        v.orgName = ''\n                    }\n                    return v\n                })\n                // this.total = res.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() + 50\n            this.stheight = this.theight / 2\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreateArea () {\n            if (!this.orgCode) {\n                this.$message.warning('请选择对应仓库！')\n                return\n            }\n            this.resetAreaTemp()\n            this.areaTemp.orgCode = this.orgCode\n            this.areaTemp.warehouseCode = this.warehouseCode\n            this.areaTemp.warehouseName = this.warehouseName\n            this.dialogStatus = 'create'\n            this.areaDialogVisible = true\n        },\n        handleUpdateArea () {\n            if (this.selectListArea) {\n                api.getArea(this.selectListArea.warehouseCode, this.selectListArea.areaCode).then(res => {\n                    this.areaTemp = res.data\n                    this.areaTemp.orgCode = this.orgCode\n                    this.areaTemp.warehouseCode = this.warehouseCode\n                    this.areaTemp.warehouseName = this.warehouseName\n                    this.dialogStatus = 'update'\n                    this.areaDialogVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        handleDeleteArea () {\n            if (this.selectListArea) {\n                this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    api.deleteArea(this.selectListArea.warehouseCode, this.selectListArea.areaCode).then(() => {\n                        this.listArea()\n                        this.$notify({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        createArea () {\n            this.$refs.areaTemp.validate((valid) => {\n                if (valid) {\n                    api.addArea(this.warehouseCode, this.areaTemp).then(() => {\n                        this.listArea()\n                        this.areaDialogVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        updateArea () {\n            this.$refs.areaTemp.validate((valid) => {\n                if (valid) {\n                    api.updateArea(this.warehouseCode, this.areaTemp.areaCode, this.areaTemp).then(() => {\n                        this.listArea()\n                        this.areaDialogVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.$refs.areaTemp.resetFields()\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetAreaTemp () {\n            this.areaTemp = {\n                warehouseCode: undefined,\n                areaCode: undefined,\n                areaName: undefined,\n                isEnabled: 1,\n                areaType: undefined\n            }\n        },\n        handleCloseArea () {\n            this.resetAreaTemp()\n            this.$refs.areaTemp.resetFields()\n        },\n        clickWarehouse (row) {\n            this.orgCode = row.orgCode\n            this.orgName = row.orgName\n            this.warehouseCode = row.warehouseCode\n            this.warehouseName = row.warehouseName\n            this.areaCode = undefined\n            this.areaName = undefined\n            this.listArea()\n            this.locationList = []\n        },\n        listArea () {\n            api.listArea(this.warehouseCode).then(res => {\n                this.areaList = res.data\n            })\n        },\n        handleCreateLocation () {\n            if (!this.orgCode || !this.areaCode) {\n                this.$message.warning('请选择对应仓库库区！')\n                return\n            }\n            this.resetLocationTemp()\n            this.locationTemp.orgCode = this.orgCode\n            this.locationTemp.orgName = this.orgName\n            this.locationTemp.warehouseCode = this.warehouseCode\n            this.locationTemp.warehouseName = this.warehouseName\n            this.locationTemp.areaCode = this.areaCode\n            this.locationTemp.areaName = this.areaName\n            this.dialogStatus = 'create'\n            this.locationDialogVisible = true\n        },\n        handleUpdateLocation () {\n            if (this.selectListLocation && this.selectListLocation.length == 1) {\n                api.getLocation(this.selectListLocation[0].warehouseCode, this.selectListLocation[0].areaCode, this.selectListLocation[0].locationCode).then(res => {\n                    this.locationTemp = res.data\n                    this.locationTemp.areaName = this.selectListLocation[0].areaName\n                    this.locationTemp.orgCode = this.orgCode\n                    this.locationTemp.orgName = this.orgName\n                    this.locationTemp.warehouseCode = this.warehouseCode\n                    this.locationTemp.warehouseName = this.warehouseName\n                    this.locationTemp.areaCode = this.areaCode\n                    // this.locationTemp.areaName = this.areaName\n                    this.dialogStatus = 'update'\n                    this.locationDialogVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        handleDeleteLocation () {\n            if (this.selectListLocation && this.selectListLocation.length == 1) {\n                this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    api.deleteLocation(this.selectListLocation[0].warehouseCode, this.selectListLocation[0].areaCode, this.selectListLocation[0].locationCode).then(() => {\n                        this.listLocation()\n                        this.$notify({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        handleBulkPrint () {\n            if (this.selectListLocation == undefined) {\n                this.$message({\n                    title: this.$t('message.warning'),\n                    message: '请选择要打印的标签',\n                    type: \"warning\"\n                })\n            } else {\n                let printable = true\n                try {\n                    this.selectListLocation.forEach(item => {\n                        if (item.printSign === 1) {\n                            printable = false\n                            this.$message({\n                                title: this.$t('message.warning'),\n                                message: '所选项包含已打印过的标签，不能进行批量打印',\n                                type: \"warning\"\n                            })\n                            throw ''\n                        }\n                    })\n                    if (printable) {\n                        this.updateMethod = 'batchPrint'\n                        this.createPrintPack()\n\n                    }\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n        },\n        //生成打印内容\n        createPrintPack () {\n            this.dialogPackPrintVisible = true\n            this.packPrintList = this.selectListLocation\n            this.$nextTick(() => {\n                this.packPrintList.forEach((item) => {\n                    // this.$refs['childQRcode'+item.locationCode][index].qrCreate(item.locationCode);\n                    JsBarcode(\"#barcode\" + item.locationCode, item.locationCode)\n                })\n            })\n        },\n        //执行包装标签打印\n        doPackPrint () {\n            this.$confirm('是否进行打印操作？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning',\n            }).then(() => {\n                this.dialogPackPrintVisible = false\n                this.initUpdatePacklist()\n                api.updatePackTag(this.updatePacklist).then(() => {\n                    api.queryPackTag(this.listQueryPack).then(resq => {\n                        this.packDataList = resq.data\n                    })\n                    this.$message.success('设置成功')\n                })\n                let newWin = window.open(\"\")\n                var newstr = document.getElementById('packprint').innerHTML\n                newWin.document.write(newstr)\n                newWin.document.close()//IE添加\n\n                setTimeout(function () {\n                    newWin.print()\n                    newWin.close()\n                }, 100)\n            })\n\n        },\n        initUpdatePacklist () {\n            let barcodes = new Array()\n            this.selectListLocation.forEach(item => {\n                barcodes.push(item.locationCode)\n            })\n            this.updatePacklist.barCode = barcodes\n            this.updatePacklist.method = this.updateMethod\n            if (this.updateMethod !== 'setUp') {\n                this.updatePacklist.supplierBatch = ''\n                this.updatePacklist.supplierRemark = ''\n            }\n        },\n        createLocation () {\n            this.$refs.locationTemp.validate((valid) => {\n                if (valid) {\n                    api.addLocation(this.warehouseCode, this.areaCode, this.locationTemp).then(() => {\n                        this.listLocation()\n                        this.locationDialogVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        updateLocation () {\n            this.$refs.locationTemp.validate((valid) => {\n                if (valid) {\n                    api.updateLocation(this.warehouseCode, this.areaCode, this.locationTemp.locationCode, this.locationTemp).then(() => {\n                        this.listLocation()\n                        this.locationDialogVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.$refs.locationTemp.resetFields()\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetLocationTemp () {\n            this.locationTemp = {\n                warehouseCode: undefined,\n                locationCode: undefined,\n                locationName: undefined,\n                isEnabled: 1,\n                locationType: undefined\n            }\n        },\n        handleCloseLocation () {\n            this.resetLocationTemp()\n            this.$refs.locationTemp.resetFields()\n        },\n        listLocation () { //查询库位\n            this.warehouseCode = this.selectListArea.warehouseCode\n            this.areaCode = this.selectListArea.areaCode\n            api.listLocation(this.warehouseCode, this.areaCode).then(res => {\n                this.locationList = res.data\n            })\n        },\n        clickArea (val) {\n            //   this.areaCode = row.areaCode\n            //   this.areaName = row.areaName\n            //   this.listLocation()\n            this.selectlistRow2 = val\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)//单击行绑定点击事件\n        },\n        selectArea (val) { //区位复选框选中\n            this.selectListArea = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            this.$refs.tb.setCurrentRow(this.selectListArea)\n            if (this.selectListArea) {\n                this.listLocation()\n            }\n        },\n        selectLocation (val) {\n            this.selectListLocation = val\n        }\n    }\n}\n",null]}