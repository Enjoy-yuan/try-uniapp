{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/content/formation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/content/formation.vue","mtime":1599136050895},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createRecords, updateRecords, queryReqList } from \"@/api/project/srm/supplierSelect/options/option\"\nimport { mapState } from \"vuex\"\nimport dialogOrgSelect from '@/components/Dialog/dialogOrgSelect'\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\nimport dialogWlxzbyzsj from '@/components/Dialog/dialogWlxzbyzsj.vue'//主数据物料选择\n\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\n\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\n\n\n\nexport default {\n    name: 'formation',\n    components: { caiGou, dialogOrgSelect, dialogPersonSelect, dialogGysxz, dialogWlxzbyzsj },\n    data () {\n        return {\n            status: undefined,\n            formationState: 'add',\n            tabName: 'tabQuote',\n            changeable: false,\n            dataListSupplier: [],\n            dataListMateriel: [],\n            dataListReq: [],\n            DICT_CODE: DICT_CODE,\n            tableKey: [0, 1, 2],\n            personType: 'form',\n            rfqPersonIndex: null,\n            formData: {\n                planNo: null,\n                orgCode: null,\n                orgName: null,\n                choiceMethod: null,\n                technicalBidDeadline: null,\n                quotationDeadline: null,\n                editOrgCode: null,\n                technicalBidOpeningTime: null,\n                businessOpeningTime: null,\n                editorName: null,\n                quotationMethod: null,\n                planDesc: null,\n                remark: null\n            },\n            rules: {\n                orgCode: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                prop8: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ]\n            },\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-document-delete', clickMethod: 'handleCancel', name: '取消' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-check', clickMethod: 'handleSave', name: '保存' }\n            ],\n            formConfig: [\n                { type: 'commonInput', label: '方案编号', prop: 'planNo', width: '' },\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pdf', label: '选择方式', prop: 'choiceMethod', width: '' },\n                { type: 'date', label: '技术投标止', prop: 'technicalBidDeadline', width: '' },\n                { type: 'date', label: '报价截止', prop: 'quotationDeadline', width: '' },\n                { type: 'inputBtnOrg', label: '登记单位', prop: 'editOrgCode', width: '' },//code+name\n                { type: 'datetime', label: '技术开标', prop: 'technicalBidOpeningTime', width: '' },\n                { type: 'datetime', label: '商务开标', prop: 'businessOpeningTime', width: '' },\n                { type: 'inputBtnPerson', label: '登记人', prop: 'editorName', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pdi', label: '报价方式', prop: 'quotationMethod', width: '' },\n                { type: 'textarea', label: '方案描述', prop: 'planDesc', width: '800px', rows: \"2\" },\n                { type: 'textarea', label: '备注', prop: 'remark', width: '800px', rows: \"2\" }\n            ],\n            tableConfig: {\n                \"materielTable\": [\n                    { label: '打包号', showData: true, prop: 'packageNo', align: 'center', width: '150' },\n                    { label: '需求分工ID', showData: false, prop: 'divisionId', align: 'center', width: '150' },\n                    { label: '物料图号', showData: true, prop: 'mapNo', align: 'center', width: '150' },\n                    { label: '特殊区分', showData: true, prop: 'specialDistinction', align: 'center', width: 'auto' },\n                    { label: '物料编码', showData: true, prop: 'materielCode', align: 'center', width: 'auto' },\n                    { label: '物料名称', showData: true, prop: 'materielName', align: 'center', width: '120' },//?\n                    { type: 'numInput', showData: true, label: '基准年', prop: 'baseYearQuantity', align: 'center', width: '120' },\n                    { type: 'numInput', showData: true, label: '第一年需求', prop: 'firstYearQuantity', align: 'center', width: '120' },\n                    { type: 'numInput', showData: true, label: '第二年需求', prop: 'secondYearQuantity', align: 'center', width: '120' },\n                    { type: 'numInput', showData: true, label: '第三年需求', prop: 'thirdYearQuantity', align: 'center', width: '120' },\n                    { type: 'numInput', showData: true, label: '第四年需求', prop: 'forthYearQuantity', align: 'center', width: '120' },\n                    { type: 'numInput', showData: true, label: '第五年需求', prop: 'fifthYearQuantity', align: 'center', width: '120' },\n                    { label: '责任人', showData: true, prop: 'score', align: 'center', width: 'auto' },//wu\n                    { label: '物料分类', showData: true, prop: 'materielClass', align: 'center', width: '180' },\n                    { label: '物料分类名称', showData: true, prop: 'materielClassName', align: 'center', width: '140' },//materielClassName\n                    { label: '规格', showData: true, prop: 'specification', align: 'center', width: 'auto' },\n                    { label: '材质', showData: true, prop: 'materielQuality', align: 'center', width: 'auto' },\n                    { label: '重量', showData: true, prop: 'weight', align: 'center', width: 'auto' },\n                    { label: '物料类型', showData: true, prop: 'materielType', align: 'center', width: '180' },//Name dict\n                    { label: '是否关重件', showData: true, prop: 'heavyParts', align: 'center', width: 'auto' },\n                    { label: '关联单号', showData: true, prop: 'associatedNo', align: 'center', width: 'auto' },\n                    { label: '计量单位', showData: true, prop: 'measurement', align: 'center', width: 'auto' },\n                    { label: '确定目标价', showData: true, prop: 'targetPrice', align: 'center', width: 'auto' },\n                    { label: '要求完成时间', showData: true, prop: 'completionDate', align: 'center', width: '150' },\n                    { label: '项目号', showData: true, prop: 'projectNo', align: 'center', width: '150' },\n                    { label: '来源方式', showData: true, prop: 'sourceType', align: 'center', width: 'auto' },//来源类型 dict\n                    { label: '关联物料编码', showData: true, prop: 'associatedMateriel', align: 'center', width: 'auto' },\n                    { label: '设计师', showData: true, prop: 'designerName', align: 'center', width: 'auto' }\n                ],\n                \"supplierTable\": [\n                    { label: '供应商编码', prop: 'supplierCode', align: 'center', width: 'auto' },\n                    { label: '供应商名称', prop: 'supplierName', align: 'center', width: '180' },\n                    { label: '是否试制指定', prop: 'rialProduce', align: 'center', width: 'auto', type: 'checkbox' },\n                    { label: '推荐理由', prop: 'recommendReason', align: 'center', width: '200', type: 'commonInput' }\n                ],\n                \"reqTable\": [\n                    { label: '资料', prop: 'contentExplain', align: 'center', width: 'auto' },\n                    { label: 'RFQ类型', prop: 'rfqName', align: 'center', width: 'auto' },\n                    { type: 'checkbox', label: '是否下发', prop: 'download', align: 'center', width: 'auto' },\n                    { type: 'checkbox', label: '是否提交', prop: 'submit', align: 'center', width: 'auto' },\n                    { type: 'checkbox', label: '是否评审', prop: 'audit', align: 'center', width: 'auto' },\n                    { type: 'inputBtnPerson', label: '评审人', prop: 'auditorName', align: 'center', width: 'auto' },\n                ]\n            },\n            dialogConfig: [\n                { title: '登记单位选择', unMutiple: true },\n                { title: '登记人选择', unMutiple: true, propCode: 'editor', propName: 'editorName', required: false },\n                { title: '供应商信息选择', unMutiple: false, isRequired: false },\n                { title: '物料主数据选择', unMutiple: false, isRequired: false }\n            ]\n        }\n    },\n    created () {\n\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pdg: state => state.dict.dt_srm_pdg,\n            dt_srm_pdf: state => state.dict.dt_srm_pdf,//选择方式\n            dt_srm_pdi: state => state.dict.dt_srm_pdi//报价方式\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pdg\", \"dt_srm_pdf\", \"dt_srm_pdi\"])\n    },\n    watch: {\n        'formData.orgCode' () {\n            this.$refs.refZsjWlxz.listQuery.purchaseOrg = this.formData.orgCode\n            this.$refs.refZsjWlxz.isEdit = true\n            if (this.changeable) {\n                this.getReqData()\n            }\n        },\n        'formData.choiceMethod' () {\n            if (this.changeable) {\n                this.getReqData()\n            }\n        }\n    },\n    methods: {\n        getReqData () {\n            queryReqList({ purchaseOrg: this.formData.orgCode, businessType: this.formData.choiceMethod }).then(res => {\n                let options = [this.dt_srm_pdg]\n                res.data = this.$myFun.srmCodeToName(res.data, options, ['attachmentType'])\n                res.data.map(item => {\n                    item.rfqType = item.attachmentType\n                    item.rfqName = item.attachmentTypeCN\n                    item.download = true\n                })\n                this.dataListReq = res.data\n            })\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.$emit('changeState', 'list')\n                    break\n                }\n                case 1: {\n                    this.handleSave()\n                    break\n                }\n            }\n        },\n        handleSave () {\n            this.$refs.formData.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        if (this.dataListReq) {\n                            this.dataListReq.forEach(item => {\n                                if (!item.download) {\n                                    item.download = false\n                                } else {\n                                    item.download = true\n                                }\n                                if (!item.submit) {\n                                    item.submit = false\n                                } else {\n                                    item.submit = true\n                                }\n                                if (!item.audit) {\n                                    item.audit = false\n                                } else {\n                                    item.audit = true\n                                }\n                            })\n                        }\n                        if (this.dataListSupplier) {\n                            this.dataListSupplier.forEach(item => {\n                                if (!item.rialProduce) {\n                                    item.rialProduce = false\n                                } else {\n                                    item.rialProduce = true\n                                }\n                            })\n                        }\n\n                        if (this.formationState === 'add' || this.formationState === 'taskedit') {\n                            let sdata = this.formData\n                            sdata.purchasePlanMaterielDTOs = this.dataListMateriel\n                            sdata.purchasePlanRfqDTOs = this.dataListReq\n                            sdata.purchasePlanSupplierDTOs = this.dataListSupplier\n\n                            createRecords(sdata).then(() => {\n                                this.$emit('changeState', 'list')\n                                this.$message({ type: 'success', message: '新增成功' })\n                            })\n                        } else if (this.formationState === 'edit') {\n                            this.dataListMateriel.map(item => {\n                                item.planNo = this.formData.planNo\n                            })\n                            this.dataListReq.map(item => {\n                                item.planNo = this.formData.planNo\n                            })\n                            this.dataListSupplier.map(item => {\n                                item.planNo = this.formData.planNo\n                            })\n                            let sdata = this.formData\n                            sdata.purchasePlanMaterielDTOs = this.dataListMateriel\n                            sdata.purchasePlanRfqDTOs = this.dataListReq\n                            sdata.purchasePlanSupplierDTOs = this.dataListSupplier\n\n                            let cData = {\n                                method: \"UPDATE\",\n                                planNo: this.formData.planNo,\n                                purchasePlanDTO: sdata\n                            }\n                            updateRecords(cData).then(() => {\n                                this.$emit('changeState', 'list')\n                                this.$message({ type: 'success', message: '编辑成功' })\n                            })\n\n                        }\n\n                    })\n                }\n            })\n        },\n        initForm (type, row) {\n            this.$refs['formData'].resetFields()\n            this.$refs['formData'].clearValidate()\n            if (type === 'add') {\n                this.changeable = true\n                this.oprateBtnConfig[1].name = '保存新增方案'\n                this.dataListSupplier = []\n                this.dataListMateriel = []\n                this.dataListReq = []\n                this.changeable = true\n            } else if (type === 'edit') {\n                this.oprateBtnConfig[1].name = '保存编辑方案'\n                this.dataListMateriel = row.purchasePlanMaterielDTOs\n                this.dataListReq = row.purchasePlanRfqDTOs\n                this.dataListSupplier = row.purchasePlanSupplierDTOs\n\n                for (let key in this.formData) {\n                    for (let par in row) {\n                        if (key === par) {\n                            this.$set(this.formData, key, row[key])\n                        }\n                    }\n                }\n                this.$nextTick(() => {\n                    this.changeable = true\n                })\n            } else if (type === 'taskedit') {\n                this.status = type\n                this.changeable = true\n                this.oprateBtnConfig[1].name = '保存清单方案'\n                row.forEach((item, index) => {\n                    this.dataListMateriel.push({})\n                    for (let par in item) {\n                        this.tableConfig['materielTable'].forEach(mitem => {\n                            if (par === mitem.prop) {\n                                this.dataListMateriel[index][par] = item[par]\n                            }\n                        })\n\n                        for (let key in this.formData) {\n                            if (key === par) {\n                                this.$set(this.formData, key, item[key])\n                            }\n                        }\n                    }\n                })\n            }\n\n            // this.changeable = true\n        },\n        //1新增物料\n        handleAddM () {\n            if (this.formData.orgCode) {\n                this.$refs.refZsjWlxz.listQuery.purchaseOrg = this.formData.orgCode\n                this.$refs.refZsjWlxz.isEdit = true\n                this.$refs.refZsjWlxz.checkProp = ['materialCode', 'materielCode']\n                this.$refs.refZsjWlxz.valueType = 'row'\n                this.$refs.refZsjWlxz.listSelected = JSON.parse(JSON.stringify(this.dataListMateriel))\n                this.$refs.refZsjWlxz.dialogVisible = true\n            } else {\n                this.$message({ type: 'warning', message: '请先选择采购组织' })\n            }\n        },\n        //刷新物料\n        handleRefreshM () {\n            this.dataListSupplier = []\n        },\n        confirmMateriel (data) {\n            console.log(data, 'kkkk')\n            data.map(item => {\n                item.materielCode = item.materialCode\n                item.materielName = item.materialName\n                item.materielClass = item.materialClassification\n                item.materielClassName = item.materialClassificationName\n            })\n            this.dataListMateriel = JSON.parse(JSON.stringify(data))\n        },\n        //2新增供应商\n        handleAddS () {\n            let addable = true\n            let materielClassArr = []\n            let materielClassNameArr = []\n\n            if (this.dataListMateriel) {\n                if (this.dataListMateriel.length > 0) {\n                    for (let i = 0; i < this.dataListMateriel.length; i++) {\n                        if (!this.dataListMateriel[i].materielClass) {\n                            addable = false\n                            break\n                        } else {\n                            materielClassArr.push(this.dataListMateriel[i].materielClass)\n                            materielClassNameArr.push(this.dataListMateriel[i].materielClassName)\n                        }\n                    }\n                } else {\n                    addable = false\n                }\n            } else {\n                addable = false\n            }\n\n            if (addable) {\n                this.$refs.refGys.valueType = 'row'\n                this.$refs.refGys.listQuery.materielClass = materielClassArr.join(',') //物料分类 内容与wms主数据不一 暂不使用该条件\n                // this.$refs.refGys.listQuery.materielClassName = materielClassNameArr.join(',')\n                this.$refs.refGys.listQuery.isExist = 1\n                this.$refs.refGys.listSelected = JSON.parse(JSON.stringify(this.dataListSupplier))\n                this.$refs.refGys.getList()\n                this.$refs.refGys.dialogVisible = true\n            } else {\n                this.$message({ type: 'warning', message: '请先选择物料信息' })\n            }\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            this.dataListSupplier = JSON.parse(JSON.stringify(gysRows))\n        },\n        handleDeleteM (index, row) {\n            console.log(index, row)\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.dataListMateriel = this.dataListMateriel.filter(item => {\n                    let isD = true\n                    if (row.materielCode === item.materielCode) {\n                        isD = false\n                    }\n                    return isD\n                })\n\n                this.$message({\n                    type: 'success',\n                    message: '删除成功'\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        handleDeleteS (index, row) {\n            console.log(index, row)\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.dataListSupplier = this.dataListSupplier.filter(item => {\n                    let isD = true\n                    if (row.supplierCode === item.supplierCode) {\n                        isD = false\n                    }\n                    return isD\n                })\n\n                this.$message({\n                    type: 'success',\n                    message: '删除成功'\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        showOrg () {\n            this.$refs.refOrg.dialogVisible = true\n        },\n        confirmOrg (data) {\n            console.log(data)\n            if (data) {\n                this.$set(this.formData, 'editOrgCode', data[0].organizationCode)\n                this.$set(this.formData, 'editOrgName', data[0].organizationName)\n            }\n        },\n\n        showPerson (type, index) {\n            this.personType = type\n            if (type === 'form') {\n                this.dialogConfig[1].propCode = 'editor'\n                this.dialogConfig[1].propName = 'editorName'\n            } else if (type === 'list') {\n                this.rfqPersonIndex = index\n                this.dialogConfig[1].propCode = 'auditor'\n                this.dialogConfig[1].propName = 'auditorName'\n            }\n            this.$refs.refPerson.dialogVisible = true\n        },\n        personConfirm (val, propCode, propName) {\n            if (this.personType === 'form') {\n                this.$set(this.formData, propCode, val[0].employeeCode)\n                this.$set(this.formData, propName, val[0].employeeName)\n            } else if (this.personType === 'list') {\n                this.$set(this.dataListReq[this.rfqPersonIndex], propCode, val[0].employeeCode)\n                this.$set(this.dataListReq[this.rfqPersonIndex], propName, val[0].employeeName)\n            }\n        },\n        orgname (name) {\n            this.formData.orgName = name\n        }\n    }\n}\n",null]}