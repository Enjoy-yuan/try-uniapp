{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/srmSupplierTab/Tab/dialog/dialogscyjMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/srmSupplierTab/Tab/dialog/dialogscyjMain.vue","mtime":1596610933186},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/supplierManagement/supplierRegister\"\n\nexport default {\n    data () {\n        let compareDate = (rule, value, callback) => {\n            if (value < 1900) {\n                return callback(new Error(\"年度不能小于1900\"))\n            } else if (value > 2999) {\n                return callback(new Error(\"年度不能大于2999\"))\n            }\n            else {\n                callback()\n            }\n        }\n        let validatePercentage = (rule, value, callback) => {\n            const reg = /^(100|[1-9]?\\d(\\.\\d\\d?\\d?)?)$|0$/\n            if (value == '' || value == undefined || value == null) {\n                callback()\n            } else {\n                if ((!reg.test(value)) && value != '') {\n                    callback(new Error('请输入正确的百分比'))\n                } else {\n                    callback()\n                }\n            }\n        }\n        let validateMoney = (rule, value, callback) => {\n            const reg = /(^[1-9]\\d{0,7}$)/\n            if (value == '' || value == undefined || value == null) {\n                callback()\n            } else {\n                if ((!reg.test(value)) && value != '') {\n                    callback(new Error('请输入正确的金额'))\n                } else {\n                    callback()\n                }\n            }\n        }\n        return {\n            dialogStatus: '',\n            dialogVisible: false,\n            temp: {},\n            rules: {\n                productionQuantity: [{ required: true, message: '年产数量不能为空', trigger: 'blur' },\n                { validator: validateMoney, trigger: \"blur\", message: '请输入首位不为0的1-8位数' }],\n                outputValue: [{ required: true, message: '年产总值不能为空', trigger: 'blur' }],\n                year: [\n                    { validator: compareDate, trigger: \"blur\" }\n                ],\n                marketShare: [\n                    { validator: validatePercentage, trigger: \"blur\" }\n                ],\n\n            }\n        }\n    },\n    methods: {\n        create () {\n            this.$refs.dataForm.validate(valid => {\n                if (valid) {\n                    api.addRecordachieve(this.temp).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.dialogVisible = false\n                        this.$emit('getFreshList')\n                    })\n                } else {\n                    return false\n                }\n            })\n\n        },\n        update () {\n            api.updateRecordachieve(this.temp.rowId, this.temp).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '编辑成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.dialogVisible = false\n                this.$emit('getFreshList')\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                year: undefined,\n                productionQuantity: undefined,\n                salesRevenue: undefined,\n                outputValue: undefined,\n                marketShare: undefined,\n                profit: undefined,\n                exportValue: undefined,\n                saleServiceValue: undefined,\n                ranking: undefined,\n                topTen: undefined,\n                supplierId: this.temp.supplierId\n            }\n        }\n    }\n}\n",null]}