{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabWGcost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabWGcost.vue","mtime":1596610933675},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'tabWGcost',\n    props: ['tabWGcostList'],\n    data () {\n        return {\n            type: null,\n            tableData: [],\n        }\n    },\n    watch: {\n        tabWGcostList (val) {\n            if (this.type == 'add') {\n                let arr = JSON.parse(JSON.stringify(val))\n                arr.forEach(i => {\n                    i.actuarialUnitPrice = i.unitPrice ? i.unitPrice : 0 //单价精算\n                    i.actuarialConsumptionQuota = i.consumptionQuota ? i.consumptionQuota : 0 //定额精算\n                    i.actuarialRejectRate = i.rejectRate ? i.rejectRate : 0 //废品率精算\n                    i.actuarialSubtotalCost = i.actuarialUnitPrice * i.actuarialConsumptionQuota || 0 //小计精算\n                    i.actuarialWasteLoss = i.actuarialUnitPrice * i.actuarialConsumptionQuota * i.actuarialRejectRate || 0 //废品损失精算\n                })\n                this.tableData = arr\n            } else {\n                let arr = JSON.parse(JSON.stringify(val))\n                this.tableData = arr\n            }\n\n        }\n    },\n    methods: {\n        checkValue (val) {\n            if (isNaN(val) || val == Infinity) {\n                return undefined\n            } else {\n                if (val.toString().indexOf('.') !== -1) {\n                    val = val.toFixed(2)\n                }\n                return val\n            }\n        },\n        getSummaries (param) {\n            const { columns, data } = param\n\n            const sums = []\n            columns.forEach((column, index) => {\n                if (index === 0) {\n                    sums[index] = '总计'\n                    return\n                }\n                const values = data.map(item => Number(item[column.property]))\n                if (!values.every(value => isNaN(value))) {\n                    if (column.property == 'subpartName' || column.property == 'actuarialUnitPrice' || column.property == 'actuarialConsumptionQuota' || column.property == 'actuarialSubtotalCost' || column.property == 'actuarialRejectRate' || column.property == 'actuarialWasteLoss') {\n                        sums[index] = values.reduce((prev, curr) => {\n                            const value = Number(curr)\n                            if (!isNaN(value)) {\n                                return prev + curr\n                            } else {\n                                return prev\n                            }\n                        }, 0)\n                        // sums[index] += ' 元'\n                    } else {\n                        sums[index] = '--'\n                    }\n\n                } else {\n                    sums[index] = 0\n                }\n            })\n            columns.forEach((val, index) => {\n                //小计精算\n                if (val.property == 'actuarialSubtotalCost') {\n                    this.$store.dispatch('getData/getWgSums', sums[index])\n                }\n                //废品损失精算\n                if (val.property == 'actuarialWasteLoss') {\n                    this.$store.dispatch('getData/getDataLoss', sums[index])\n                }\n            })\n            return sums\n        },\n        getPriceCost (row) {\n            this.tableData.forEach(i => {\n                if (i.rowId == row.rowId) {\n                    i.actuarialSubtotalCost = this.checkValue(i.actuarialUnitPrice * i.actuarialConsumptionQuota)  //小计精算\n                    i.actuarialWasteLoss = this.checkValue(i.actuarialUnitPrice * i.actuarialConsumptionQuota * i.actuarialRejectRate)  //废品损失精算\n                }\n            })\n        },\n        initData (val) {\n            this.type = val\n            this.tableData = []\n        }\n\n    },\n\n}\n\n",null]}