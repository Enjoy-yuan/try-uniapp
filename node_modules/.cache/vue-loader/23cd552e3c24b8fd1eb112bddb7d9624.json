{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/maintainStand/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/maintainStand/index.vue","mtime":1596610933494},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/database/maintainStand'\nimport eqmtSelectTree from './eqmtSelectTree'\nimport deviceType from '../../components/deviceTypeSelect'\nimport Pagination from '@/components/Pagination'\nimport fileUpload from '../../components/fileUpload'\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'maintainStand',\n    components: { Pagination, eqmtSelectTree, deviceType, fileUpload },\n    data () {\n        return {\n            list: null,\n            listSub: null,\n            materiaList: [],\n            options: [],\n            options2: [],\n            total: 0,\n            theight: 0, //表格高度\n            selectlistRow: undefined,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n                typeCode: undefined,\n                partCode: undefined,\n                maintenanceContent: undefined\n            },\n            temp: {\n                typeCode: undefined,\n                partCode: undefined,\n                attachment: undefined,\n                maintenanceContent: undefined\n            },\n            dialogFormVisible: false,\n            dialogFormStatus: '',\n            uploadVisible: false,\n            tableKey: [0, 1],\n            transCode: undefined\n        }\n    },\n    created () {\n        this.getList()\n    },\n    filters: {\n        splitState: function (e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n        })\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', ['dt_file_equipment'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        this.getTypeCode()\n    },\n    methods: {\n        handleUpload () {\n            if (!this.selectlistRow) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return\n            }\n            this.uploadVisible = true\n            setTimeout(() => {\n                this.transCode = this.selectlistRow.maintenanceCode\n            }, 0)\n        },\n        getDeviceType1 (val) {\n            if (val) {\n                this.listQuery.typeCode = val.typeCode\n            } else {\n                this.listQuery.typeCode = undefined\n            }\n        },\n        getDeviceType2 (val) {\n            if (val) {\n                this.temp.typeCode = val.typeCode\n            } else {\n                this.temp.typeCode = undefined\n            }\n            this.getPart()\n        },\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getPart () {\n            api.queryPart(\n                this.temp.typeCode\n                    ? this.temp.typeCode\n                    : this.listQuery.typeCode\n            ).then(res => {\n                this.options2 = res.data\n            })\n        },\n        getTypeCode () {\n            api.queryTypeCode().then(res => {\n                this.options = res.data\n            })\n        },\n        resetListQuery () {\n            this.listQuery = {\n                currentPage: 1,\n                pageSize: 15,\n                typeCode: undefined,\n                partCode: undefined,\n                maintenanceContent: undefined\n            }\n            this.options2 = []\n            this.dialogFormStatus = ''\n            this.getList()\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        resetTemp () {\n            this.temp = {\n                typeCode: undefined,\n                partCode: undefined,\n                attachment: undefined,\n                maintenanceContent: undefined\n            }\n        },\n        //新增\n        handleCreate () {\n            this.resetTemp()\n            this.dialogFormVisible = true\n            this.dialogFormStatus = 'create'\n            setTimeout(() => {\n                this.$refs.eqmtSelectTree.$refs.selectTree.valueTitle = ''\n            }, 0)\n        },\n        //新增方法\n        create () {\n            if (!this.temp.typeCode) {\n                this.$message({\n                    title: '警告',\n                    message: '设备类型编码不能为空',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (!this.temp.partCode) {\n                this.$message({\n                    title: '警告',\n                    message: '设备部位编码不能为空',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (!this.temp.maintenanceContent) {\n                this.$message({\n                    title: '警告',\n                    message: '保养标准不能为空',\n                    type: 'warning'\n                })\n                return false\n            }\n            api.addRecord(this.temp).then(res => {\n                if (res.status == 201) {\n                    this.getList()\n                    this.$message({\n                        title: '成功',\n                        message: '新增成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.dialogFormVisible = false\n                    this.dialogFormStatus = ''\n                }\n            })\n        },\n        //编辑\n        handleUpdate () {\n            if (this.selectlistRow) {\n                this.getPart()\n                this.temp = this.selectlistRow\n                this.dialogFormVisible = true\n                this.dialogFormStatus = 'update'\n                // setTimeout(() => {\n                //     this.$refs.eqmtSelectTree.$refs.selectTree.valueTitle = this.temp.typeName\n                // }, 0)\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //编辑方法\n        update () {\n            api.updateRecord(this.temp.maintenanceCode, {\n                attachment: this.temp.attachment,\n                maintenanceContent: this.temp.maintenanceContent,\n                partCode: this.temp.partCode,\n                typeCode: this.temp.typeCode\n            }).then(() => {\n                this.getList()\n                this.dialogFormVisible = false\n                this.dialogFormStatus = ''\n                this.$message({\n                    title: '成功',\n                    message: '更新成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecord(\n                            this.selectlistRow.maintenanceCode\n                        ).then(res => {\n                            if (res.status == 204) {\n                                this.getList()\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.typeCode == val.typeCode) {\n                    this.selectlistRow = undefined\n                    this.$refs.mainList.clearSelection()\n                    return false\n                }\n            }\n            this.selectlistRow = val\n            this.$refs.mainList.clearSelection()\n            this.$refs.mainList.toggleRowSelection(val, 'selected')\n        },\n        rowClick (val) {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.typeCode == val.typeCode) {\n                    this.selectlistRow = undefined\n                    this.$refs.mainList.clearSelection()\n                    return false\n                }\n            }\n            this.selectlistRow = val[val.length - 1]\n        }\n    }\n}\n",null]}