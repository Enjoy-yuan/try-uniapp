{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/processRoute/processMaintain/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/processRoute/processMaintain/index.vue","mtime":1596610933509},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/dataBase/processMaintain'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nexport default {\n    name: 'pricessMaintain',\n    components: { Pagination }, //warehouseSelect orgSelect\n    data () {\n        return {\n            list: null,\n            subList: null,\n            unList: null,\n            total: 0,\n            subTotal: 0,\n            unTotal: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                createTime: undefined,\n                updateTime: undefined,\n                creator: undefined,\n                stepName: undefined,\n                stepCode: undefined,\n                updator: undefined\n            },\n            subListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                stepCode: undefined\n            },\n            unListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                stepCode: undefined\n            },\n            stepCode: undefined,\n            temp: {\n                stepCode: undefined,\n                stepName: undefined,\n                processType: undefined,\n                remark: undefined\n            },\n            dialogFormVisible: false,\n            dialogFormSubVisible: false,\n            dialogStatus: '',\n            selectUnlistRow: undefined,\n            tableKey: [0, 1, 3],\n            rules: {\n                stepCode: [\n                    {\n                        required: true,\n                        message: '工序编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                stepName: [\n                    {\n                        required: true,\n                        message: '工序名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                processType: [\n                    {\n                        required: true,\n                        message: '请选择工序类别',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_process_step_type: state => state.emsDict.dt_process_step_type\n        })\n    },\n    mounted () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_process_step_type'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    destroyed () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_process_step_type'])\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryStep(this.listQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getSubList () {\n            api.queryModel(this.subListQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.subList = res.data.list\n                this.subTotal = res.data.pages.count\n            })\n        },\n        getUnList () {\n            api.queryUnModel(this.unListQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.unList = res.data.list\n                this.unTotal = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        deleteQuery () {\n            // 清除查询条件\n            this.listQuery.currentPage = 1\n            this.listQuery.stepCode = undefined\n            this.listQuery.stepName = undefined\n            this.getList()\n        },\n        handleCreate () {\n            //新增弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n            if (this.selectlistRow) {\n                this.subListQuery.stepCode = this.selectlistRow.stepCode\n                this.unListQuery.stepCode = this.selectlistRow.stepCode\n                this.getSubList()\n            }\n        },\n        selectSubRow (val) {\n            this.selectSublistRow = val\n        },\n        selectUnRow (val) {\n            this.selectUnlistRow = val\n        },\n        // 关联\n        handleRelation () {\n            if (this.unListQuery.stepCode) {\n                this.getUnList()\n                this.dialogFormSubVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        relation: throttle(\n            function () {\n                if (\n                    this.selectUnlistRow &&\n                    this.selectUnlistRow.length >= 1 &&\n                    this.selectlistRow.stepCode\n                ) {\n                    let data = []\n                    this.selectUnlistRow.forEach(i => {\n                        data.push({\n                            modelCode: i.modelCode,\n                            stepCode: this.unListQuery.stepCode\n                        })\n                    })\n                    api.updateRelateModel(data).then(() => {\n                        this.getSubList()\n                        this.dialogFormSubVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '关联成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择一条信息',\n                        type: 'warning'\n                    })\n                }\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 移除关联\n        deleteRelate: throttle(\n            function () {\n                if (\n                    this.selectSublistRow &&\n                    this.selectSublistRow.length >= 1\n                ) {\n                    let ids = []\n                    this.selectSublistRow.forEach(i => {\n                        ids.push(i.rowId)\n                    })\n                    api.deleteRelateModel(ids).then(() => {\n                        this.getSubList()\n                        this.$message({\n                            title: '成功',\n                            message: '成功取消关联',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择一条信息',\n                        type: 'warning'\n                    })\n                }\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleUpdate () {\n            //编辑弹窗\n            if (this.selectlistRow) {\n                this.temp = this.selectlistRow // copy obj\n                this.stepCode = this.selectlistRow.stepCode\n                api.getStepCode(this.temp.stepCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update: throttle(\n            function () {\n                //编辑\n                this.$refs['temp'].validate(valid => {\n                    if (valid) {\n                        api.updateStep(this.stepCode, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$refs['temp'].clearValidate()\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        create: throttle(\n            function () {\n                // 新增\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        api.createStep(this.temp).then(() => {\n                            this.handleChange()\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$refs['temp'].clearValidate()\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = [this.selectlistRow.stepCode]\n                        // this.selectlistRow.forEach((val, index) => {\n                        //     ids[index] = val.stepCode\n                        // })\n                        api.deleteStep(ids).then(() => {\n                            this.getList(),\n                                this.subList = []\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        resetTemp () {\n            this.temp = {\n                energyTypeCode: undefined,\n                energyTypeName: undefined,\n                energyTypeUnit: undefined,\n                remark: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.workCenterCode)\n        },\n        handleChange () {\n            this.$emit('fresh', true)\n        }\n    }\n}\n",null]}