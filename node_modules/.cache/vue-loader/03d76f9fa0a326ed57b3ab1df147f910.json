{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/CheckRecord/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ESC/CheckRecord/index.vue","mtime":1596610933408},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/ESC/checkRecord' // 增、删、改api引入\nimport { getDomainCode, getDomainCodeName } from '@/utils/auth'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport caiGou from '@/components/Select/caigou'\nimport Pagination from '@/components/Pagination'\nimport employeesSelect from '@/components/Select/employeesSelect' //下拉组件\nimport suppierSelect from '@/components/Select/suppierSelect' //下拉组件\nimport eqmtSelect from '../../components/eqmtSelect'\nimport planSelect from '../../components/planSelect'\nimport fileUpload from '../../components/fileUpload'\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'checkRecord',\n    components: {\n        Pagination,\n        caiGou,\n        employeesSelect,\n        eqmtSelect,\n        planSelect,\n        suppierSelect,\n        fileUpload\n    },\n    data () {\n        return {\n            theight: 0, //表格高度\n            list: [],\n            fromList: [],\n            total: 0,\n            total2: 0,\n            tableKey: [0, 1], //表格索引\n            listQuery: {\n                //查询\n                currentPage: 1,\n                pageSize: 10\n            },\n            listQuery1: {\n                //从表查询\n                currentPage: 1,\n                pageSize: 10\n            },\n            temp: { inspectRecordDetails: [] },\n            tempFrom: {},\n            rules: {\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                inspectMethod: [\n                    {\n                        required: true,\n                        message: '检验方式不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                inspectType: [\n                    {\n                        required: true,\n                        message: '检验类型不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                sendTime: [\n                    {\n                        required: true,\n                        message: '送检时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                inspectorsName: [\n                    {\n                        required: true,\n                        message: '检验人不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                senderName: [\n                    {\n                        required: true,\n                        message: '送检人不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                workCenterCode: [\n                    {\n                        required: true,\n                        message: '送检单位不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogFormVisible: false,\n            fromDialogStatus: '',\n            fromDialogFormVisible: false,\n            employeeVisible: false,\n            employeeDialogStatus: 'inspector',\n            eqmtVisible: false,\n            planVisible: false,\n            supplierVisible: false,\n            uploadVisible: false,\n            transCode: undefined,\n            selectedRows: null, //多选时选中的所有行\n            selectFromList: null //从表选中\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_inspect_method: state => state.eamDict.dt_inspect_method,\n            dt_inspect_type: state => state.eamDict.dt_inspect_type,\n            dt_inspect_state: state => state.eamDict.dt_inspect_state,\n            dt_inspect_record_result: state =>\n                state.eamDict.dt_inspect_record_result,\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n        })\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        'listQuery.timeRange' (value) {\n            if (value) {\n                this.listQuery.sendTimeStart = value[0]\n                this.listQuery.sendTimeEnd = value[1]\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_inspect_method',\n            'dt_inspect_type',\n            'dt_inspect_state',\n            'dt_inspect_record_result',\n            'dt_file_equipment'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        setTimeout(() => {\n            this.getList()\n        }, 500)\n    },\n    methods: {\n        calAll () {\n            this.temp.cost = 0\n            this.temp.inspectRecordDetails.forEach(item => {\n                this.temp.cost =\n                    this.temp.cost + (item.cost ? Number(item.cost) : 0)\n            })\n            this.$forceUpdate()\n        },\n        handleInspect () {\n            if (!this.selectedRows) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return\n            }\n            // if (this.selectedRows.state == 'inspect30') {\n            //     this.$message({\n            //         title: '警告',\n            //         message: '此单号已确认，请勿重复提交',\n            //         type: 'warning'\n            //     })\n            //     return\n            // }\n            api.patchRecords(this.selectedRows.inspectOrderCode, {\n                method: 'END'\n            }).then(res => {\n                if (res.status == 201) {\n                    this.getList()\n                    this.$message({\n                        title: '成功',\n                        message: '已提交',\n                        type: 'success',\n                        duration: 2000\n                    })\n                }\n            })\n        },\n        getWorkOrder (obj) {\n            if (obj) {\n                this.temp.workCenterCode = obj.supplierCode\n                this.temp.workCenterName = obj.supplierName\n            }\n        },\n        handleDevice (num) {\n            if (num == 1) {\n                this.eqmtVisible = true\n                setTimeout(() => {\n                    this.$refs.eqmtSelect.getList()\n                }, 0)\n            } else {\n                this.planVisible = true\n                setTimeout(() => {\n                    this.$refs.planSelect.getList()\n                }, 0)\n            }\n        },\n        confirmDevice () {\n            this.temp.inspectRecordDetails = this.temp.inspectRecordDetails.concat(\n                this.eqmtVisible\n                    ? this.$refs.eqmtSelect.currentSelect\n                    : this.$refs.planSelect.currentSelect\n            )\n            this.eqmtVisible = false\n            this.planVisible = false\n        },\n        handleEmployeeDialog (num) {\n            if (num == 1) {\n                this.employeeDialogStatus = 'sender'\n                this.employeeVisible = true\n            } else if (num == 3) {\n                this.supplierVisible = true\n            } else {\n                this.employeeDialogStatus = 'inspector'\n                this.employeeVisible = true\n            }\n        },\n        handleEmployee (val) {\n            this.temp.senderCode = val[val.length - 1].employeeCode\n            this.temp.senderName = val[val.length - 1].employeeName\n        },\n        handleCheckRow (row) {\n            this.uploadVisible = true\n            setTimeout(() => {\n                this.transCode = row.inspectOrderCode\n            }, 0)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        getList () {\n            //获取表格数据\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = this.$myFun.codeToName(\n                    res.data,\n                    [\n                        this.dt_inspect_method,\n                        this.dt_inspect_type,\n                        this.dt_inspect_state\n                    ],\n                    ['inspectMethod', 'inspectType', 'state']\n                ).list\n                this.total = res.data.pages.count\n                this.$nextTick(() => {\n                    this.$refs.tb.toggleRowSelection(this.list[0], true)\n                })\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                inspectRecordDetails: []\n            }\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n            this.fromList = undefined\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogFormVisible = true\n            this.temp.senderName = getDomainCodeName()\n            this.temp.senderCode = getDomainCode()\n        },\n        create () {\n            //编辑确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    if (this.temp.inspectRecordDetails.length == 0) {\n                        this.$message({\n                            title: '警告',\n                            message: '请选择设备',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    api.addRecords(this.temp).then(res => {\n                        if (res.status == 201) {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }\n            })\n        },\n        handleDelete () {\n            //删除按钮单击事件方法\n            if (this.selectedRows) {\n                this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecords(\n                            this.selectedRows.inspectOrderCode\n                        ).then(res => {\n                            this.fromList = []\n                            if (res.status == 204) {\n                                this.getList()\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        selectChange (val) {\n            if (!val.length) {\n                this.fromList = []\n                return false\n            }\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows)\n            if (this.selectedRows) {\n                this.getSub()\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        //获取从表数据\n        getSub () {\n            api.queryDetail(\n                this.listQuery1,\n                this.selectedRows.inspectOrderCode\n            ).then(res => {\n                this.fromList = this.$myFun.codeToName(\n                    res.data,\n                    [this.dt_inspect_record_result],\n                    ['inspectResult']\n                ).list\n                this.total2 = res.data.pages.count\n            })\n        },\n        resetFromTemp () {\n            this.tempFrom = {}\n        },\n        //从表选择框选中\n        selectFromChange (val) {\n            this.selectFromList = val\n            if (val.length > 1) {\n                this.$refs.tb2.clearSelection()\n                this.$refs.tb2.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb2.setCurrentRow(this.selectFromList[0])\n        },\n        handleDeleteFrom () {\n            this.temp.inspectRecordDetails.forEach((item, index) => {\n                if (item.deviceCode == this.selectFromList[0].deviceCode) {\n                    this.temp.inspectRecordDetails.splice(index, 1)\n                }\n            })\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        rowClickFrom (val) {\n            this.$refs.tb2.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        }\n    }\n}\n",null]}