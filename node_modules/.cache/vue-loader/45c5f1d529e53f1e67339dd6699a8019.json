{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/supplierQuote/supplierQuoteInfo/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/supplierQuote/supplierQuoteInfo/index.vue","mtime":1599136050827},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/priceManage/supplierQuoteInfo\"\nimport { queryQuoteRow } from \"@/api/project/srm/supplierSelect/supplierRFQ/supplierRFQAnswer\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport { mapState } from \"vuex\"\nimport Pagination from \"@/components/Pagination\"\nimport dialogImport from '@/components/Dialog/dialogImport'\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\nimport dialogQuote from './dialog/dialogQuote'//明细报价\nimport dialogQuoteTotal from './dialog/dialogQuoteTotal'//总价报价\nimport dialogQuoteLevel1 from './dialog/dialogQuoteLevel1'//一级报价\n\nexport default {\n    name: \"supplierQuoteInfo\",\n    components: { caiGou, Pagination, dialogImport, dialogGysxz, dialogQuote, dialogQuoteTotal, dialogQuoteLevel1 },\n    data () {\n        return {\n            rangeDate: null,\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            dataList: [],\n            total: 0,\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: null,\n                supplierCoode: null,\n                quoteNo: null,\n                state: null,\n                materielName: null,\n                materielCode: null,\n                dateRange: null\n            },\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            tableConfig: [\n                { label: '状态', prop: 'stateCN', align: 'center', width: 'auto' },\n                { label: '报价轮次', prop: 'quoteRounds', align: 'center', width: '80px' },\n                { label: '报价通知单', prop: 'noticeNo', align: 'center', width: '150px' },\n                { label: '报价单号', prop: 'quoteNo', align: 'center', width: '150px' },\n                { label: '零件图号', prop: 'mapNo', align: 'center', width: 'auto' },\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: 'auto' },\n                { label: '零件名称', prop: 'materielName', align: 'center', width: 'auto' },\n                { label: '报价类型', prop: 'quotationMethodCN', align: 'center', width: 'auto' },\n                { label: '报价', prop: 'totalPrice', align: 'center', width: 'auto' },\n                { label: '目标价', prop: 'targetPrice', align: 'center', width: 'auto' },\n                { label: '报价截止时间', prop: 'validDateEnd', align: 'center', width: 'auto' },\n                { label: '实际报价时间', prop: 'quoteTime', align: 'center', width: 'auto' },\n                { label: '价格生效日期', prop: 'prop12', align: 'center', width: 'auto' },\n                { label: '价格失效', prop: 'prop13', align: 'center', width: 'auto' },\n                { label: '价格附件', prop: 'prop14', align: 'center', width: 'auto' }\n            ],\n            dialogConfig: [\n                { title: '导入' },\n                { title: '供应商选择', unMutiple: true, isRequired: false },\n                { title1: '总价报价', title2: '一级报价', title3: '明细报价' },\n            ],\n            modalNo: 'EXTP-BAS-0001',//导入模板编号,\n            dialogImportVisible: false\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_srm_pdj: state => state.dict.dt_srm_pdj,\n            dt_srm_pdi: state => state.dict.dt_srm_pdi\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pdj\", 'dt_srm_pdi'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    watch: {\n        'rangeDate' (value) {\n            if (value) {\n                this.listQuery.createDateBegin = value[0]\n                this.listQuery.createDateEnd = value[1]\n            } else {\n                this.listQuery.createDateBegin = undefined\n                this.listQuery.createDateEnd = undefined\n            }\n        }\n    },\n    methods: {\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 2\n        },\n        refresh () {\n            this.getList()\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_pdj, this.dt_srm_pdi]\n                res.data = this.$myFun.codeToName(res.data, options, ['state', 'quotationMethod'])\n                this.dataList = res.data.list.filter(v => {\n                    return v.state !== 'PDJ11'\n                })\n                this.total = res.data.pages.count\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleQuote () {\n            if (this.selectedRows && this.selectedRows.length == 1) {\n                this.quoto()\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请勾选一条信息'\n                })\n            }\n        },\n        quoto () {\n            let quotationMethod = this.selectedRows[0].quotationMethod\n            let fdata = {\n                rfqNo: this.selectedRows[0].noticeNo,\n                supplierCode: this.selectedRows[0].supplierCode,\n                supplierName: this.selectedRows[0].supplierName,\n                materielCode: this.selectedRows[0].materielCode,\n                materielName: this.selectedRows[0].materielName,\n                materielClass: this.selectedRows[0].materialClassification,\n                materielClassName: this.selectedRows[0].materialClassificationName,\n            }\n            switch (quotationMethod) {\n                case 'PDI0': {\n                    //总价\n                    let params = {\n                        method: 'TOTAL',\n                        rfqNo: this.selectedRows[0].noticeNo,\n                        materielCodes: [],\n                        quoteRounds: this.selectedRows[0].quoteRounds\n                    }\n                    this.selectedRows.forEach((val, index) => {\n                        params.materielCodes[index] = val.materielCode\n                    })\n                    params.materielCodes = params.materielCodes.join(\",\")\n                    if (this.selectedRows[0].quoteCommitState == \"0\") {\n                        this.$refs.refQuoteTotal.methodType = 'add'\n                        this.$refs.refQuoteTotal.initForm(fdata, null, this.selectedRows)\n                        this.$refs.refQuoteTotal.dialogVisible = true\n                    } else {\n                        queryQuoteRow(params).then(res => {\n                            this.$refs.refQuoteTotal.methodType = 'edit'\n                            this.$refs.refQuoteTotal.initForm(fdata, res.data, this.selectedRows)\n                            this.$refs.refQuoteTotal.dialogVisible = true\n                        })\n                    }\n                    break\n                }\n                case 'PDI1': {\n                    //一级\n                    let params = {\n                        method: 'FIRST',\n                        rfqNo: this.selectedRows[0].noticeNo,\n                        materielCodes: this.selectedRows[0].materielCode,\n                        quoteRounds: this.selectedRows[0].quoteRounds\n                    }\n                    if (this.selectedRows[0].quoteCommitState == \"0\") {\n                        this.$refs.refQuoteLevel1.methodType = 'add'\n                        this.$refs.refQuoteLevel1.resetTemp()\n                        this.$refs.refQuoteLevel1.initForm(fdata, null, 'add')\n                        this.$refs.refQuoteLevel1.dialogVisible = true\n                    } else {\n                        queryQuoteRow(params).then(res => {\n                            this.$refs.refQuoteLevel1.methodType = 'edit'\n                            this.$refs.refQuoteLevel1.initForm(fdata, res.data, 'edit')\n                            this.$refs.refQuoteLevel1.dialogVisible = true\n                        })\n                    }\n                    break\n                }\n                case 'PDI2': {\n                    //明细\n                    this.$refs.refQuote.orgCode = this.selectedRows[0].orgCode\n                    let params = {\n                        method: 'ITEM',\n                        rfqNo: this.selectedRows[0].noticeNo,\n                        materielCodes: this.selectedRows[0].materielCode,\n                        quoteRounds: this.selectedRows[0].quoteRounds\n                    }\n                    this.$refs.refQuote.params = params\n                    if (this.selectedRows[0].quoteCommitState == \"0\") {\n                        this.$refs.refQuote.methodType = 'add'\n                        this.$refs.refQuote.initForm(fdata, null)\n                        this.$refs.refQuote.dialogVisible = true\n                    } else {\n                        queryQuoteRow(params).then(res => {\n                            this.$refs.refQuote.methodType = 'edit'\n                            this.$refs.refQuote.initForm(fdata, res.data)\n                            this.$refs.refQuote.dialogVisible = true\n                        })\n                    }\n                    break\n                }\n            }\n        },\n        //新增按钮\n        handleAdd () {\n            console.log('新增')\n            this.dialogConfig[0].curdialogStatus = 'add'\n            this.$refs.refadd.dialogVisible = true\n        },\n        //模板下载按钮\n        handleModelDownload () {\n            console.log('模板下载')\n        },\n        //导入按钮\n        handleImport () {\n            console.log('导入')\n            this.$refs.refImport.getList()\n            this.$refs.refImport.dialogVisible = true\n        },\n        //发布按钮\n        handlePublish () {\n            if (this.currentSelectedRow) {\n                console.log('发布')\n                this.$confirm('发布后将向相关供应商推送报价通知,是否发布勾选的报价通知?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    alert('已确定发布')\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先选择一条信息'\n                })\n            }\n\n        },\n        //报价审核按钮\n        handleQuoteCheck () {\n            console.log('报价审核')\n            this.$refs.refBjsh.dialogVisible = true\n        },\n        //多伦报价对比按钮\n        handleQuoteCompare () {\n            console.log('多伦报价对比')\n            this.$refs.refCompare.dialogVisible = true\n        },\n        //表格操作编辑\n        handleUpdate (index, row) {\n            console.log('编辑', index, row)\n            this.dialogConfig[0].curdialogStatus = 'edit'\n            this.$refs.refadd.dialogVisible = true\n        },\n        //表格操作删除\n        handleDelete (index, row) {\n            console.log('删除', index, row)\n        },\n        //表格操作预览\n        handlePreview (index, row) {\n            console.log('预览', index, row)\n        },\n        //报价提交\n        handleSubmit () {\n            if (this.selectedRows && this.selectedRows.length > 0) {\n                this.$confirm('是否提交该条信息?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let dto = {\n                        method: 'commit',\n                        rowIds: []\n                    }\n                    this.selectedRows.forEach((val, index) => {\n                        dto.rowIds[index] = val.rowId\n                    })\n                    api.submitRecords(dto).then(() => {\n                        this.$message({\n                            title: '成功',\n                            message: '提交成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    })\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先勾选信息'\n                })\n            }\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, \"selected\") //单击行绑定点击事件\n        },\n        //确认添加/编辑\n        confirmAddEdit (cdata) {\n            if (this.dialogConfig[0].curdialogStatus === 'add') {\n                //添加api post\n                console.log('添加', cdata)\n            } else if (this.dialogConfig[0].curdialogStatus === 'edit') {\n                //编辑api patch\n                console.log('编辑', cdata)\n            }\n        },\n        showGys () {\n            this.$refs.refGys.dialogVisible = true\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            console.log(gysRows)\n            this.listQuery.supplierCode = gysRows[0].supplierCode\n            this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName)\n        }\n    }\n};\n",null]}