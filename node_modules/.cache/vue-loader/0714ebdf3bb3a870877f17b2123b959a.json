{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/indexManagement/equipmentEnergy/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/indexManagement/equipmentEnergy/index.vue","mtime":1596610933527},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/indexManagement/equipmentEnergy.js'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\n\nexport default {\n    name: 'equipmentEnergy',\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            modelList: null,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                modelCode: undefined,\n                modelName: undefined\n            },\n            modelListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                equipTypeCode: 'product',\n                modelName: undefined\n            },\n            temp: {\n                modelCode: undefined,\n                quarter: undefined,\n                waterValue: undefined,\n                electricValue: undefined,\n                gasValue: undefined,\n                remark: undefined,\n                modelName: undefined\n            },\n            dialogFormVisible: false,\n            dialogModelVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            modelTableKey: 1,\n            total: 0,\n            modelTotal: 0,\n            theight: 0, //表格高度\n            selectlistRow: null,\n            currentSelectedRowModel: null, //当前选中的行\n            selectedRowsModel: null, //多选时选中的所有行\n            isSingle: true,\n            rules: {\n                waterValue: [\n                    {\n                        required: true,\n                        message: '请输入水消耗指标',\n                        trigger: 'blur'\n                    }\n                ],\n                electricValue: [\n                    {\n                        required: true,\n                        message: '请输入电消耗指标',\n                        trigger: 'blur'\n                    }\n                ],\n                gasValue: [\n                    {\n                        required: true,\n                        message: '请输入气消耗指标',\n                        trigger: 'blur'\n                    }\n                ],\n                quarter: [\n                    { required: true, message: '请输选择季度', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_quarter: state => state.emsDict.dt_quarter\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.$store.dispatch('emsDict/getDicData', ['dt_quarter'])\n        this.getList()\n    },\n    destroyed () {\n        this.setTableHeight()\n        this.$store.dispatch('emsDict/getDicData', ['dt_quarter'])\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryEquipmentEnergy(this.listQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create: throttle(\n            function () {\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        api.createEquipmentEnergy(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleUpdate () {\n            //编辑弹窗\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.temp = JSON.parse(JSON.stringify(this.selectlistRow[0])) // copy obj\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update: throttle(\n            function () {\n                //编辑\n                this.$refs['temp'].validate(valid => {\n                    if (valid) {\n                        api.updateEquipmentEnergy(\n                            this.temp.rowId,\n                            this.temp\n                        ).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length >= 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.rowId\n                        })\n                        api.deleteEquipmentEnergy(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        deleteQuery () {\n            // 清除查询条件\n            this.listQuery.currentPage = 1\n            this.listQuery.modelCode = undefined\n            this.listQuery.modelName = undefined\n            this.getList()\n        },\n        resetTemp () {\n            this.temp = {}\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        setTableHeight () {\n            //表格高度计算\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        selectRow (val) {\n            // 获取表格选中时的数据\n            this.selectlistRow = val\n        },\n        // 选择设备\n        focus () {\n            this.modelListQuery.currentPage = 1\n            this.modelListQuery.modelName = undefined\n            this.getModelList()\n            this.dialogModelVisible = true\n        },\n        // 查询\n        getModelList () {\n            api.queryeQuipmentLedger(this.modelListQuery).then(res => {\n                res.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.modelList = res.data.list\n                this.modelTotal = res.data.pages.count\n            })\n        },\n        handleModelQuery () {\n            this.modelListQuery.currentPage = 1\n            this.getModelList()\n        },\n        deleteModelQuery () {\n            this.modelListQuery.currentPage = 1\n            this.modelListQuery.modelName = undefined\n            this.getModelList()\n        },\n        // 选择设备带回\n        addMeasure () {\n            if (this.dialogFormVisible) {\n                this.temp.modelName = JSON.parse(\n                    JSON.stringify(this.currentSelectedRowModel.modelName)\n                )\n                this.temp.modelCode = this.currentSelectedRowModel.modelCode\n            } else {\n                this.listQuery.modelCode = this.currentSelectedRowModel.modelCode\n                this.listQuery.modelName = this.currentSelectedRowModel.modelName\n            }\n            this.dialogModelVisible = false\n        },\n        rowModelClick (val) {\n            this.$refs.modelTb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectModelChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.modelTb.clearSelection() //清除其他行的选中\n                    this.$refs.modelTb.toggleRowSelection(\n                        val[val.length - 1],\n                        'selected'\n                    ) //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRowsModel = val\n                    this.currentSelectedRowModel = val[val.length - 1]\n                }\n            } else {\n                this.selectedRowsModel = val\n                this.currentSelectedRowModel = val[val.length - 1]\n            }\n        }\n    }\n}\n",null]}