{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/planManagement/productionOrdersMaintain/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/planManagement/productionOrdersMaintain/index.vue","mtime":1596610933583},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/mes/planManagement/productionOrdersMaintain'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport { parseTime } from '@/utils'\nimport ImportFile from '@/components/mesImportFile'\nimport materielTable from './materielTable'\n\nexport default {\n    name: 'productionOrdersMaintain',\n    components: { Pagination, ImportFile, materielTable },\n    data() {\n        return {\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                inspectionCode: undefined,\n                inspectionName: undefined,\n                inspectionType: undefined\n            },\n            temp: {\n                customerName: undefined,\n                dataSources: 'resource_web',\n                isGenerateWorkOrder: '1',\n                note: undefined,\n                productBatch: undefined,\n                productCode: undefined,\n                productNumber: undefined\n            },\n            productCodeDialogVisible: false,\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            modalNo: 'EXTP-BAS-0010', //导入模板编号\n            importDialogVisible: false,\n            rules: {\n                productCode: [\n                    {\n                        required: true,\n                        message: '产品编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                dataSources: [\n                    {\n                        required: true,\n                        message: '数据来源不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                productNumber: [\n                    {\n                        required: true,\n                        message: '计划生产数量不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^\\+?[1-9]\\d*$/,\n                        message: '数量大于0',\n                        trigger: 'blur'\n                    }\n                ],\n                planStartTime: [\n                    {\n                        required: true,\n                        message: '计划开始时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                planCompleteTime: [\n                    {\n                        required: true,\n                        message: '计划完成时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                isGenerateWorkOrder: [\n                    {\n                        required: true,\n                        message: '是否生产订单不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    filters: {\n        isGenerateWorkOrder: function(e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_product_order_stat: state => state.mesDict.dt_product_order_stat,\n            dt_product_order_resource: state =>\n                state.mesDict.dt_product_order_resource\n        })\n    },\n    mounted() {\n        this.$store.dispatch('mesDict/getDicData', [\n            'dt_product_order_stat',\n            'dt_product_order_resource'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        setTimeout(() => {\n            this.getList()\n        }, 500)\n    },\n    methods: {\n        getList() {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = this.$myFun.codeToName(\n                    res.data,\n                    [this.dt_product_order_resource],\n                    ['dataSources']\n                ).list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery() {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate() {\n            //新增\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        create() {\n            //新增确认按钮\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        cancel() {\n            //取消弹窗按钮\n            this.dialogFormVisible = false\n        },\n        // 获取表格选中时的数据\n        selectRow(val) {\n            this.selectlistRow = val\n        },\n        handleProductCode() {\n            this.productCodeDialogVisible = true\n        },\n        //父子传值\n        handleDblclickMateriel(row) {\n            this.materielClass = row\n        },\n        //物料弹窗确认\n        materielUpdate() {\n            if (this.materielClass) {\n                this.temp.productCode = this.materielClass.materielCode\n                this.productCodeDialogVisible = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleUpdate() {\n            //编辑弹窗\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                api.getRecord(this.selectlistRow[0].productOrderCode).then(\n                    res => {\n                        this.temp = res.data\n                        this.temp.isGenerateWorkOrder = JSON.stringify(\n                            this.temp.isGenerateWorkOrder\n                        )\n                        this.dialogStatus = 'update'\n                        this.dialogFormVisible = true\n                    }\n                )\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update() {\n            //编辑提交\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(\n                        this.temp.productOrderCode,\n                        this.temp\n                    ).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                }\n            })\n        },\n        handleDelete() {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecord(\n                            this.selectlistRow[0].productOrderCode\n                        ).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n\n        resetTemp() {\n            this.temp = {\n                customerName: undefined,\n                dataSources: 'resource_web',\n                isGenerateWorkOrder: '1',\n                note: undefined,\n                productBatch: undefined,\n                productCode: undefined,\n                productNumber: undefined\n            }\n        },\n        handleClose() {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '订单编码',\n                    '订单生产状态',\n                    '产品编码',\n                    '产品名称',\n                    '产品规格',\n                    '客户名称',\n                    '计划生产数量',\n                    '合格数量',\n                    '报废数量',\n                    '生产批号',\n                    '是否生成随工单',\n                    '开工日期',\n                    '实际开工日期',\n                    '完成日期',\n                    '实际完成日期',\n                    '责任人编码',\n                    '数据来源',\n                    '是否删除标识',\n                    '备注'\n                ]\n                const filterVal = [\n                    'productOrderCode',\n                    'orderStateName',\n                    'productCode',\n                    'productName',\n                    'specification',\n                    'customerName',\n                    'productNumber',\n                    'qualifiedNumber',\n                    'scrapNumber',\n                    'productBatch',\n                    'isGenerateWorkOrderName',\n                    'startTime',\n                    'actualStartTime',\n                    'completeTime',\n                    'actualCompleteTime',\n                    'staffCode',\n                    'dataSources',\n                    'isDelete',\n                    ' note'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === 'timestamp') {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        },\n        handleImport() {\n            this.importDialogVisible = true\n            this.$nextTick(() => {\n                this.$refs.importDialog.getList()\n            })\n        },\n        handlePublish() {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                api.publishRecord(this.selectlistRow[0].productOrderCode).then(\n                    () => {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '发布成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    }\n                )\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        }\n    }\n}\n",null]}