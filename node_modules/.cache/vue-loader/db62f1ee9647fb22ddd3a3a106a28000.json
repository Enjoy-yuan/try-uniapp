{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/gatewayQuery/GRTabs/runningState.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/gatewayQuery/GRTabs/runningState.vue","mtime":1597749614150},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/IOT/ga\"\nimport Pagination from \"@/components/Pagination\"\nimport gauge from \"./gauge\"\nexport default {\n    name: \"runningState\",\n    props: ['code', 'row'],\n    data () {\n        return {\n            form: {\n                name: undefined\n            },\n            chartsData: {\n                commFlowM: 0,\n                commFlowY: 0,\n                cpu: undefined,\n                diskUsed: undefined,\n                memUsed: undefined,\n                name: undefined,\n                pKey: undefined,\n                seq: undefined,\n                signal: undefined,\n                sn: undefined,\n                ts: undefined,\n                type: undefined,\n                ver: undefined\n            },\n            list1: [],\n            list2: [],\n            tableKey: [0, 1],\n            total1: 0,\n            total2: 0,\n            listLoading: false,\n            listLoading1: false,\n            listLoading2: false,\n            theight: 0,//表格高度\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                alarmTime: undefined,\n                alarmTypes: ['cpu', 'memUsed', 'diskUsed', 'yearFlow', 'signal'],\n                gatewayCode: this.row.gatewayCode,\n            },\n            listQuery2: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                alarmTime: undefined,\n                alarmTypes: ['connected', 'disconnected'],\n                gatewayCode: this.row.gatewayCode\n            }\n        }\n    },\n    components: { Pagination, gauge },\n    filters: {\n        signal: (val) => {\n            if (val >= 10 && val < 15) return '差'\n            else if (val >= 15 && val < 20) return '一般'\n            else if (val >= 20) return '强'\n            else return '无'\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList1()\n        this.getList2()\n        this.getSnState()\n    },\n    methods: {\n        getSnState () {\n            this.listLoading = false\n            api.getSnState(this.row.gatewayType, this.row.gatewaySn).then(res => {\n                this.listLoading = true\n                if (res.data.state !== 0) {\n                    this.chartsData = res.data\n                } else {\n                    this.chartsData = {\n                        commFlowM: 0,\n                        commFlowY: 0,\n                        cpu: undefined,\n                        diskUsed: undefined,\n                        memUsed: undefined,\n                        name: undefined,\n                        pKey: undefined,\n                        seq: undefined,\n                        signal: undefined,\n                        sn: undefined,\n                        ts: undefined,\n                        type: undefined,\n                        ver: undefined,\n                        state: 0,\n                    }\n                }\n            })\n        },\n        //获取表格数据\n        getList1 () {\n            this.listLoading1 = true\n            this.listQuery1.alarmTypes = ['cpu', 'memUsed', 'diskUsed', 'yearFlow', 'signal']\n            api.getAlarm(this.listQuery1).then(response => {\n                this.list1 = response.data.list\n                this.total1 = response.data.pages.count\n                setTimeout(() => {\n                    this.listLoading1 = false\n                }, 1.5 * 100)\n            })\n        },\n        getList2 () {\n            this.listLoading2 = true\n            this.listQuery2.alarmTypes = ['connected', 'disconnected']\n            api.getAlarm(this.listQuery2).then(response => {\n                this.list2 = response.data.list\n                this.total2 = response.data.pages.count\n                setTimeout(() => {\n                    this.listLoading2 = false\n                }, 1.5 * 100)\n            })\n        },\n        //表格查询\n        handleQuery1 () {\n            this.listQuery1.currentPage = 1\n            this.getList1()\n        },\n        handleQuery2 () {\n            this.listQuery2.currentPage = 1\n            this.getList2()\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, \"selected\") //单击行绑定点击事件\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        //字节B转换\n        change (limit) {\n            var size = 0\n            var comp = ''\n            if (limit < 0.1 * 1024) {            //小于0.1MB，则转化成KB\n                size = (limit / 1024).toFixed(2)\n                comp = \"KB\"\n            } else if (limit < 0.1 * 1024 * 1024) {        //小于0.1GB，则转化成MB\n                size = (limit / (1024)).toFixed(2)\n                comp = \"MB\"\n            } else {                                            //其他转化成GB\n                size = (limit / (1024 * 1024)).toFixed(2)\n                comp = \"GB\"\n            }\n            size = Number(size)\n            return {\n                size, comp\n            }\n        }\n\n    }\n};\n",null]}