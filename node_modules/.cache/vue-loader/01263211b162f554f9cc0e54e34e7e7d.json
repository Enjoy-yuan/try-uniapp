{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/dialog/dialogActuarial.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/dialog/dialogActuarial.vue","mtime":1596610933671},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/priceManage/actuarialDetailCost\"\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport Pagination from \"@/components/Pagination\"\nimport { DICT_CODE, TWO_STATE_OPTIONS } from \"@/utils/constant\"\n// import { mapState } from 'vuex'\n\n\nexport default {\n    name: \"ghxl\",\n    components: { Pagination, caiGou },\n    props: ['unMutiple', 'title'],\n    data () {\n        return {\n            list: null,\n            listSelected: [],\n            dialogVisible: false,\n            total: 0,\n            parentsRows: null,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: null,\n                state: 'P003',\n                materielCode: undefined,\n                materielName: undefined,\n                supplierCode: undefined,\n                supplierName: undefined\n            },\n            selectCode: [],\n            tableKey: 0,\n            tabName: 'first',\n            DICT_CODE: DICT_CODE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            filterConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '', copmNum: 0, class: 'filter-item' },\n                { type: 'commonInput', label: '物料编码', prop: 'materielCode', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料名称', prop: 'materielName', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '供应商编码', prop: 'supplierCode', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '供应商名称', prop: 'supplierName', width: '', class: 'filter-item ml_5' }\n            ],\n            tableConfig: [\n                { label: '序号', prop: 'rowId', align: 'center', width: 'auto' },\n                { label: '精算单号', prop: 'actuarialNo', align: 'center', width: 'auto' },\n                { label: '物料编码', prop: 'materielCode', align: 'center', width: 'auto' },\n                { label: '物料名称', prop: 'materielName', align: 'center', width: 'auto' },\n                { label: '供应商', prop: 'supplierCode', align: 'center', width: 'auto' },\n                { label: '供应商名称', prop: 'supplierName', align: 'center', width: 'auto' },\n                { label: '供应商报价', prop: 'supplierQuote', align: 'center', width: 'auto' },\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: 'auto' },\n                { label: '精算价格', prop: 'actuarialPrice', align: 'center', width: 'auto' },\n                { label: '报价日期', prop: 'quotedDate', align: 'center', width: 'auto' },\n                { label: '价格生效日期', prop: 'validTimeStart', align: 'center', width: 'auto' },\n                { label: '价格失效日期', prop: 'validTimeEnd', align: 'center', width: 'auto' },\n                { label: '供应商确认时间', prop: 'supplierConfirmationTime', align: 'center', width: '120' },\n                { label: '状态', prop: 'state', align: 'center', width: 'auto' },\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: 'auto' },\n                { label: '报价单号', prop: 'quotationNo', align: 'center', width: 'auto' }\n            ],\n        }\n    },\n    computed: {\n        // ...mapState({\n        //     dt_materiel_classify: state => state.dict.dt_materiel_classify,\n        //     dt_materiel_group: state => state.dict.dt_materiel_group,\n        //     dt_materiel_type: state => state.dict.dt_materiel_type,\n        // })\n    },\n    mounted () {\n        this.getList()\n        // this.$store.dispatch('dict/getDicData', ['dt_materiel_classify', 'dt_materiel_group', 'dt_materiel_type'])\n    },\n    methods: {\n        checked (i) {\n            this.$refs.tbselect.toggleRowSelection(this.list[i], true)\n        },\n        getData (val) {\n            console.log(val, '99')\n            // this.listQuery.orgCode = val[0].orgCode\n            this.$set(this.listQuery, 'orgCode', val[0].organizationCode)\n        },\n        getList () {\n            api.queryRecordsMain(this.listQuery).then(res => {\n                res = res.data\n                this.list = res.list\n                this.total = res.pages.count\n                if (this.listSelected) {\n                    this.listSelected.forEach(items => {\n                        this.list.forEach((item, index) => {\n                            if (item.materielCode === items.materielCode) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        })\n                    })\n                }\n            })\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true\n            val.forEach(item => {\n                if (item.materielCode === row.materielCode) {\n                    isuncheck = false\n                }\n            })\n            return isuncheck\n        },\n        selectMain (val, row) {\n            if (this.unMutiple) {\n                let isuncheck = this.checkUnsel(val, row)\n                if (!isuncheck) {\n                    let arr = []\n                    arr.push(val[val.length - 1])\n                    this.listSelected = arr\n                    if (val.length > 1) {\n                        this.$refs.tbselect.clearSelection()\n                        this.$refs.tbselect.toggleRowSelection(val[val.length - 1], 'selected')\n                    }\n                } else {\n                    this.listSelected = []\n                }\n            } else {\n                let isuncheck = this.checkUnsel(val, row)\n                if (!isuncheck) {\n                    if (this.listSelected) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false\n                            this.listSelected.forEach((item) => {\n                                if (item.materielCode === items.materielCode) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.listSelected.push(val[indexv])\n                            }\n                        })\n                    } else {\n                        this.listSelected = val\n                    }\n                } else {\n                    this.listSelected = this.listSelected.filter(item => {\n                        return item.materielCode !== row.materielCode\n                    })\n                }\n            }\n        },\n        //选择确认\n        handleConfirm () {\n            this.$emit('handleDialogClick', this.listSelected)\n            this.dialogVisible = false\n        },\n        handlePreview () {\n            console.log('预览')\n            this.$emit('handlePre', 'act', this.listSelected)\n        }\n    }\n};\n",null]}