{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/inventory/inventoryFormation/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/inventory/inventoryFormation/index.vue","mtime":1596610934120},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport * as api from \"@/api/project/wms/inventory/inventoryFormation\"\nimport AuthoType from '@/components/Select/AuthoType.vue'//权限类型下拉组件\nimport Pagination from \"@/components/Pagination\";\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport { mapState } from 'vuex';\nimport wlxzbyzsj from '@/components/Select/wlxzbyzsj'//主数据物料信息模块\n\nexport default {\n    name: \"inventoryFormation\",\n    components: { Pagination, AuthoType, wlxzbyzsj },\n    data () {\n        return {\n            theight: 0,\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            tableKey: [0, 1],\n            list: null,\n            listSub: null,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            total: 0,\n            selectRows: [],\n            dialogGys: false,\n            wlxzDialogFormVisible: false,\n            supplierRows: [],\n            isChangeAddS: false,\n            dt_accountDate: null,\n            rangeTime: \"\",\n            listQuery: {\n                method: 'create',\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                createDateBegin: null,\n                createDateEnd: null,\n                orgCode: '',//组织编码\n                warehouseCode: '',//仓库编码\n                inventoryType: '',//盘点方式，类型\n                actived: '',//冻结方式:0锁库，1未锁库\n                accountingYears: '',//会计年月\n                inventoryDate: '',//盘点日期\n            },\n            createList: null,\n            sublistQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n            },\n            accountQuery: {\n                state: 0,\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n            },\n            rules: {\n\n            }\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_inventory_type: state => state.dict.dt_inventory_type,\n            dt_stock_status: state => state.dict.dt_stock_status\n        })\n    },\n    mounted () {\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n\n        api.getAccountDate(this.accountQuery).then(res => {\n            res = res.data;\n            this.dt_accountDate = res.list;\n        });\n        this.$store.dispatch('dict/getDicData', ['dt_inventory_type', 'dt_stock_status']);\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 195;\n        },\n        //主表数据获取\n        getListData () {\n            if (this.rangeTime) {\n                var d1 = this.rangeTime[0];\n                var d2 = this.rangeTime[1];\n                this.listQuery.createDateBegin = d1;\n                this.listQuery.createDateEnd = d2;\n            } else {\n                this.listQuery.createDateBegin = null;\n                this.listQuery.createDateEnd = null;\n            }\n            api.queryRecords(this.listQuery).then(res => {\n                res = res.data;\n                this.list = res.list;\n            })\n        },\n        //显示主表\n        getList () {\n            this.getListData();\n        },\n        //显示从表\n        getSubList (row) {\n            this.sublistQuery.inventoryNo = row.inventoryNo;\n            api.queryRowRecords(this.sublistQuery).then(res => {\n                res = res.data;\n                this.listSub = res.list;\n            });\n        },\n        //查询\n        handleQuery () {\n            if (this.listQuery.orgCode && this.listQuery.warehouseCode) {\n                this.listRow = [];\n                this.listQuery.currentPage = 1;\n                this.getList();\n            } else {\n                this.$message({\n                    title: this.$t('message.warning'),\n                    message: '请先选择到货单位和到货仓库再进行搜索操作！',\n                    type: \"warning\"\n                });\n            }\n        },\n        //每页大小变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val;\n            this.getList();\n        },\n        //当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val;\n            this.getList();\n        },\n        //主表勾选框选中\n        selectRow (val) {\n            this.selectRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tbmain.clearSelection()\n                this.$refs.tbmain.toggleRowSelection(val[val.length - 1], 'selected')\n            }\n\n            if (val.length !== 0) {\n                this.getSubList(val[val.length - 1]);\n            }\n        },\n        //主表点击显示从表\n        showSubTable (val) {\n            this.selectRows = val;\n            this.$refs.tbmain.clearSelection()\n            this.$refs.tbmain.toggleRowSelection(val, 'selected')\n            this.getSubList(val);\n        },\n        //生成\n        handleCreate () {\n            let valid = this.listQuery.orgCode && this.listQuery.warehouseCode && this.listQuery.inventoryType && this.listQuery.actived && this.listQuery.inventoryDate\n            if (valid) {\n                this.createList = Object.assign({}, this.listQuery);\n                delete this.createList.page;\n                delete this.createList.currentPage;\n                delete this.createList.pageSize;\n                if (this.listQuery.inventoryType === 'dt_inventory_type2') {\n                    this.showWlxz();\n                } else {\n                    api.createRecords(this.createList).then(() => {\n                        this.getList();\n                    });\n                }\n            } else {\n                this.$message.warning('请将所有条件填写完整！');\n            }\n        },\n        //发布\n        handlePublish () {\n            if (this.selectRows) {\n                if (this.selectRows.inventoryState) {\n                    this.$confirm(this.$t('message.isPublishInventoryOrder'), this.$t('message.prompt'), {\n                        confirmButtonText: this.$t('message.yes'),\n                        cancelButtonText: this.$t('message.no'),\n                        type: 'warning'\n                    }).then(() => {\n                        let publishList = {};\n                        publishList.inventoryNoList = new Array();\n                        publishList.inventoryNoList.push(this.selectRows.inventoryNo)\n                        publishList.method = \"publish\";\n\n                        api.updateRecords(publishList).then(() => {\n                            this.getList();\n                            this.listSub = [];\n                            this.$message({\n                                type: 'success',\n                                message: '发布成功'\n                            });\n                        });\n                    });\n                } else {\n                    this.$message.warning(this.$t('message.checkedplease'));\n                    return false;\n                }\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'));\n                return false;\n            }\n        },\n        //删除\n        handleDelete () {\n            if (this.selectRows) {\n                if (this.selectRows.inventoryState) {\n                    this.$confirm(this.$t('message.isDeleteContinue'), this.$t('message.prompt'), {\n                        confirmButtonText: this.$t('message.confirm'),\n                        cancelButtonText: this.$t('message.cancel'),\n                        type: 'warning'\n                    }).then(() => {\n                        let inventoryNoList = new Array();\n                        if (this.selectRows.constructor === Array) {\n                            this.selectRows.forEach(item => {\n                                inventoryNoList.push(item.inventoryNo)\n                            })\n                        } else {\n                            inventoryNoList.push(this.selectRows.inventoryNo)\n                        }\n                        api.deleteRecords(inventoryNoList).then(() => {\n                            this.getList();\n                            this.listSub = [];\n                            this.$message({\n                                type: 'success',\n                                message: this.$t('message.deleteSuccessed')\n                            });\n                        });\n\n\n                    })\n                } else {\n                    this.$message.warning(this.$t('message.checkedplease'));\n                    return false;\n                }\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'));\n                return false;\n            }\n        },\n        //作废\n        handleCancel () {\n            if (this.selectRows) {\n                if (this.selectRows.inventoryState) {\n                    this.$confirm('是否要作废该盘点单？', this.$t('message.prompt'), {\n                        confirmButtonText: this.$t('message.yes'),\n                        cancelButtonText: this.$t('message.no'),\n                        type: 'warning'\n                    }).then(() => {\n                        let publishList = {};\n                        publishList.inventoryNoList = new Array();\n                        publishList.inventoryNoList.push(this.selectRows.inventoryNo)\n                        publishList.method = \"abolish\";\n\n                        api.updateRecords(publishList).then(() => {\n                            this.getList();\n                            this.listSub = [];\n                            this.$message({\n                                type: 'success',\n                                message: '该订单已作废'\n                            });\n                        });\n                    });\n                } else {\n                    this.$message.warning(this.$t('message.checkedplease'));\n                    return false;\n                }\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'));\n                return false;\n            }\n        },\n        setdefault (val, i) {\n            if (i === 1) {\n                this.listQuery.orgCode = val;\n            } else if (i === 3) {\n                this.listQuery.warehouseCode = val;\n                this.getList();\n            }\n        },\n        showWlxz () {\n            this.wlxzDialogFormVisible = true;\n            this.$nextTick(() => {\n                this.$refs.wlxzRef.listSelected = [];\n                this.$refs.wlxzRef.getList();\n            })\n        },\n        update2 () {//物料选中中弹窗确认按钮\n            if (this.$refs.wlxzRef.listSelected.length) {\n                this.createList.inventoryItemsDTOList = this.$refs.wlxzRef.listSelected;\n                api.createRecords(this.createList).then(() => {\n                    this.getList();\n                    this.wlxzDialogFormVisible = false;\n                });\n            } else {\n                this.$message({\n                    title: this.$t('message.warning'),\n                    message: this.$t('message.checkedplease'),\n                    type: \"warning\"\n                });\n            }\n        }\n    }\n};\n",null]}