{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/accountingCycle/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/accountingCycle/index.vue","mtime":1596610933319},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/accountingCycle.js'\nimport Pagination from '@/components/Pagination' // 分页组件\nimport { mapState } from 'vuex'\nexport default {\n    name: 'accountingCycle',\n    components: { Pagination },\n    data() {\n        return {\n            listQuery_a: {\n                currentPage: 1,\n                pageSize: 15\n            },\n            disabled: false,\n            total_a: 0,\n            theight: 0, //表格高度\n            tableKey: 0, //表格索引\n            list_a: [],\n            addDialogFormVisible: false,\n            creatDialogFormVisible: false,\n            dialogStatus: '',\n            temp: {\n                times: []\n            },\n            rules: {}\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_time_type: state => state.dict.dt_time_type\n        })\n    },\n    mounted() {\n        this.$store.dispatch('dict/getDicData', ['dt_time_type'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n    },\n    created() {\n        this.getList_a()\n    },\n    methods: {\n        getList_a() {\n            //会计周期主表\n            api.getData_a(this.listQuery_a).then(res => {\n                this.list_a = res.data.list\n                this.total_a = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        resetTemp() {\n            this.temp = {}\n        },\n        createAccounting() {\n            //生成会计周期\n            this.creatDialogFormVisible = true\n            this.resetTemp()\n        },\n        creatConfirm() {\n            //生成会计周期确认\n            let dto = {\n                accountingBatchDTO: {\n                    accountingYear: this.temp.accountingYear,\n                    createType: this.temp.createType,\n                    beginNo: parseInt(this.temp.beginNo),\n                    endNo: parseInt(this.temp.endNo)\n                },\n                method: 'batch'\n            }\n            api.creatData_a(dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '生成成功',\n                    type: 'success'\n                })\n                this.creatDialogFormVisible = false\n                this.getList_a()\n            })\n        },\n        addAccounting() {\n            //新增会计周期\n            this.dialogStatus = 'create'\n            this.disabled = false\n            this.resetTemp()\n            this.addDialogFormVisible = true\n        },\n        addConfirm() {\n            //新增会计周期确认method\n            let dto = {\n                accountingSingleDTO: {\n                    accountingYears: this.temp.accountingYears,\n                    beginDate: this.temp.times[0],\n                    endDate: this.temp.times[1]\n                },\n                method: 'one'\n            }\n            api.creatData_a(dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '新增成功',\n                    type: 'success'\n                })\n                this.addDialogFormVisible = false\n                this.getList_a()\n            })\n        },\n        updataAccounting() {\n            //修改会计周期\n            if (this.selectlistRow_a) {\n                this.dialogStatus = 'edit'\n                this.disabled = true\n                this.addDialogFormVisible = true\n                this.temp = this.selectlistRow_a\n                this.temp.times = [\n                    this.selectlistRow_a.beginDate,\n                    this.selectlistRow_a.endDate\n                ]\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        editConfirm() {\n            //修改会计周期确认\n            let dto = {\n                accountingYears: this.temp.accountingYears,\n                beginDate: this.temp.times[0],\n                endDate: this.temp.times[1]\n            }\n            api.upData_a(dto).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '修改成功',\n                    type: 'success'\n                })\n                this.addDialogFormVisible = false\n                this.getList_a()\n            })\n        },\n        deleteAccounting() {\n            //删除会计周期\n            let AccountingList = [this.selectlistRow_a.rowId]\n            api.deleteData_a(AccountingList).then(() => {\n                this.$message({\n                    title: '成功',\n                    message: '删除成功',\n                    type: 'success'\n                })\n                this.getList_a()\n            })\n        },\n        openAccounting() {\n            //开启会计周期\n            if (\n                this.selectlistRow_a &&\n                this.selectlistRow_a.stateName !== '开启'\n            ) {\n                //0开启，1关闭\n                let dto = {\n                    method: 'open',\n                    rowId: this.selectlistRow_a.rowId\n                }\n                api.changeData_a(dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '开启成功',\n                        type: 'success'\n                    })\n                    this.getList_a()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条关闭信息',\n                    type: 'warning'\n                })\n            }\n        },\n        closeAccounting() {\n            //关闭会计周期\n            if (\n                this.selectlistRow_a &&\n                this.selectlistRow_a.stateName !== '关闭'\n            ) {\n                //0开启，1关闭\n                let dto = {\n                    method: 'close',\n                    rowId: this.selectlistRow_a.rowId\n                }\n                api.changeData_a(dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '关闭成功',\n                        type: 'success'\n                    })\n                    this.getList_a()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条开启信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleCarry() {\n            if (\n                this.selectlistRow_a &&\n                this.selectlistRow_a.stateName !== '关闭' &&\n                this.selectlistRow_a.stateName !== '未开启'\n            ) {\n                api.Carry(this.selectlistRow_a.accountingYears).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '结转成功',\n                        type: 'success'\n                    })\n                    this.getList_a()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条开启信息',\n                    type: 'warning'\n                })\n            }\n        },\n        selectRow_a(val) {\n            //会计周期主表选中\n            this.selectlistRow_a = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.dt_a.clearSelection() //清除其他行的选中\n                this.$refs.dt_a.toggleRowSelection(\n                    val[val.length - 1],\n                    'selected'\n                ) //单击行绑定点击事件\n            }\n            this.$refs.dt_a.setCurrentRow(this.selectlistRow_a)\n        },\n        clickRow_a(val) {\n            //会计周期主表行点击\n            this.selectlistRow_a = val\n            this.$refs.dt_a.clearSelection() //清除其他行的选中\n            this.$refs.dt_a.toggleRowSelection(val) //单击行绑定点击事件\n        }\n    }\n}\n",null]}