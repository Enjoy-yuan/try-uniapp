{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/materielTransferType/dialog/dialogAddMain.vue?vue&type=template&id=40703666&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/materielTransferType/dialog/dialogAddMain.vue","mtime":1596610933332},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            width: \"75%\",\n            top: \"10vh\",\n            \"custom-class\": \"dialog-custom\",\n            title:\n              _vm.dialogStatus == 0\n                ? _vm.$t(\"table.add\")\n                : _vm.$t(\"table.edit\"),\n            \"close-on-click-modal\": false,\n            visible: _vm.dialogFormVisible\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"AddMainlist\",\n              staticClass: \"demo-form-inline\",\n              attrs: {\n                rules: _vm.rules,\n                model: _vm.AddMainlist,\n                \"label-position\": \"left\",\n                \"label-width\": \"130px\",\n                inline: true\n              }\n            },\n            [\n              _vm.dialogStatus !== 0\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"materielTransferType.transferTypeCode\"),\n                        prop: \"wareRuleCode\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { size: \"small\", disabled: \"\" },\n                        model: {\n                          value: _vm.AddMainlist.wareRuleCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.AddMainlist, \"wareRuleCode\", $$v)\n                          },\n                          expression: \"AddMainlist.wareRuleCode\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"materielTransferType.transferTypeCode\"),\n                        prop: \"wareRuleCode\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { size: \"small\" },\n                        model: {\n                          value: _vm.AddMainlist.wareRuleCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.AddMainlist, \"wareRuleCode\", $$v)\n                          },\n                          expression: \"AddMainlist.wareRuleCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.transferTypeName\"),\n                    prop: \"wareRuleName\"\n                  }\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.AddMainlist.wareRuleName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.AddMainlist, \"wareRuleName\", $$v)\n                      },\n                      expression: \"AddMainlist.wareRuleName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.statisticType\"),\n                    prop: \"statsClassify\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.statsClassify,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"statsClassify\", $$v)\n                        },\n                        expression: \"AddMainlist.statsClassify\"\n                      }\n                    },\n                    _vm._l(_vm.dt_statistic_type, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.displayGroup\"),\n                    prop: \"screenGroupNum\"\n                  }\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.AddMainlist.screenGroupNum,\n                      callback: function($$v) {\n                        _vm.$set(_vm.AddMainlist, \"screenGroupNum\", $$v)\n                      },\n                      expression: \"AddMainlist.screenGroupNum\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isProBatch\"),\n                    prop: \"isProdBatch\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isProdBatch,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isProdBatch\", $$v)\n                        },\n                        expression: \"AddMainlist.isProdBatch\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isProQC\"),\n                    prop: \"isQcNotice\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isQcNotice,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isQcNotice\", $$v)\n                        },\n                        expression: \"AddMainlist.isQcNotice\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.referDataSource\"),\n                    prop: \"refSources\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.refSources,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"refSources\", $$v)\n                        },\n                        expression: \"AddMainlist.refSources\"\n                      }\n                    },\n                    _vm._l(_vm.dt_referdata_resource, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isOverCheck\"),\n                    prop: \"isSuperIndicaChk\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isSuperIndicaChk,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isSuperIndicaChk\", $$v)\n                        },\n                        expression: \"AddMainlist.isSuperIndicaChk\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.refDataUpdate\"),\n                    prop: \"refUpdate\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.refUpdate,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"refUpdate\", $$v)\n                        },\n                        expression: \"AddMainlist.refUpdate\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isNegativeCheck\"),\n                    prop: \"isNegativeStockChk\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isNegativeStockChk,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isNegativeStockChk\", $$v)\n                        },\n                        expression: \"AddMainlist.isNegativeStockChk\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.getStockState\"),\n                    prop: \"fetchStockStatArr\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        multiple: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.fetchStockStatArr,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"fetchStockStatArr\", $$v)\n                        },\n                        expression: \"AddMainlist.fetchStockStatArr\"\n                      }\n                    },\n                    _vm._l(_vm.dt_stock_status, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.getStockType\"),\n                    prop: \"fetchStockTypeArr\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        multiple: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.fetchStockTypeArr,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"fetchStockTypeArr\", $$v)\n                        },\n                        expression: \"AddMainlist.fetchStockTypeArr\"\n                      }\n                    },\n                    _vm._l(_vm.dt_stock_type, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.setStockState\"),\n                    prop: \"storeStockStat\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.storeStockStat,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"storeStockStat\", $$v)\n                        },\n                        expression: \"AddMainlist.storeStockStat\"\n                      }\n                    },\n                    _vm._l(_vm.dt_stock_status, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.setStockType\"),\n                    prop: \"storeStockType\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.storeStockType,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"storeStockType\", $$v)\n                        },\n                        expression: \"AddMainlist.storeStockType\"\n                      }\n                    },\n                    _vm._l(_vm.dt_stock_type, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isAccount\"),\n                    prop: \"isAccount\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isAccount,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isAccount\", $$v)\n                        },\n                        expression: \"AddMainlist.isAccount\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.accountField\"),\n                    prop: \"accountField\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.accountField,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"accountField\", $$v)\n                        },\n                        expression: \"AddMainlist.accountField\"\n                      }\n                    },\n                    _vm._l(_vm.dt_account_field, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.accountSide\"),\n                    prop: \"accountDirection\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.accountDirection,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"accountDirection\", $$v)\n                        },\n                        expression: \"AddMainlist.accountDirection\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[1], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\n                      \"materielTransferType.activityIdentification\"\n                    ),\n                    prop: \"bizTypeFlag\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.bizTypeFlag,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"bizTypeFlag\", $$v)\n                        },\n                        expression: \"AddMainlist.bizTypeFlag\"\n                      }\n                    },\n                    _vm._l(_vm.dt_businesstype_identity, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isAutoIndicate\"),\n                    prop: \"isTrigProdInd\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isTrigProdInd,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isTrigProdInd\", $$v)\n                        },\n                        expression: \"AddMainlist.isTrigProdInd\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.isAutoProof\"),\n                    prop: \"isTrigAutoProof\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      model: {\n                        value: _vm.AddMainlist.isTrigAutoProof,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isTrigAutoProof\", $$v)\n                        },\n                        expression: \"AddMainlist.isTrigAutoProof\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.$t(\"materielTransferType.reverseBusinessType\"),\n                    prop: \"reversalBizType\"\n                  }\n                },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.AddMainlist.reversalBizType,\n                      callback: function($$v) {\n                        _vm.$set(_vm.AddMainlist, \"reversalBizType\", $$v)\n                      },\n                      expression: \"AddMainlist.reversalBizType\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"是否单件\", prop: \"isSingle\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.isSingle,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isSingle\", $$v)\n                        },\n                        expression: \"AddMainlist.isSingle\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"是否冲销类型\", prop: \"isReversal\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.isReversal,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isReversal\", $$v)\n                        },\n                        expression: \"AddMainlist.isReversal\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"是否集成\", prop: \"isIntegration\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"materielTransferType.select\")\n                      },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.isIntegration,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"isIntegration\", $$v)\n                        },\n                        expression: \"AddMainlist.isIntegration\"\n                      }\n                    },\n                    _vm._l(_vm.booleanValue[0], function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: \"库存类型取值方式\",\n                    prop: \"stockTypeValueMode\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.stockTypeValueMode,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"stockTypeValueMode\", $$v)\n                        },\n                        expression: \"AddMainlist.stockTypeValueMode\"\n                      }\n                    },\n                    _vm._l(_vm.dt_stockType_valueMode, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"库位匹配方式\", prop: \"wareLocationMode\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.wareLocationMode,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"wareLocationMode\", $$v)\n                        },\n                        expression: \"AddMainlist.wareLocationMode\"\n                      }\n                    },\n                    _vm._l(_vm.dt_location_match, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"区位类型\", prop: \"areaType\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        clearable: \"\",\n                        size: \"small\",\n                        placeholder: _vm.$t(\"table.select\")\n                      },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.areaType,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"areaType\", $$v)\n                        },\n                        expression: \"AddMainlist.areaType\"\n                      }\n                    },\n                    _vm._l(_vm.dt_whpartition_type, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"质检收货\", prop: \"qcReceive\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { clearable: \"\", size: \"small\", filterable: \"\" },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.qcReceive,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"qcReceive\", $$v)\n                        },\n                        expression: \"AddMainlist.qcReceive\"\n                      }\n                    },\n                    _vm._l(_vm.obList, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.wareRuleCode,\n                        attrs: {\n                          label: item.wareRuleCode + \"-\" + item.wareRuleName,\n                          value: item.wareRuleCode\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"免检收货\", prop: \"unCheckReceive\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { clearable: \"\", size: \"small\", filterable: \"\" },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.unCheckReceive,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"unCheckReceive\", $$v)\n                        },\n                        expression: \"AddMainlist.unCheckReceive\"\n                      }\n                    },\n                    _vm._l(_vm.obList, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.wareRuleCode,\n                        attrs: {\n                          label: item.wareRuleCode + \"-\" + item.wareRuleName,\n                          value: item.wareRuleCode\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"免费收货\", prop: \"freeReceive\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { clearable: \"\", size: \"small\", filterable: \"\" },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.freeReceive,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"freeReceive\", $$v)\n                        },\n                        expression: \"AddMainlist.freeReceive\"\n                      }\n                    },\n                    _vm._l(_vm.obList, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.wareRuleCode,\n                        attrs: {\n                          label: item.wareRuleCode + \"-\" + item.wareRuleName,\n                          value: item.wareRuleCode\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"完工关联\", prop: \"completedLink\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { clearable: \"\", size: \"small\", filterable: \"\" },\n                      on: { change: _vm.forceUpdateSel },\n                      model: {\n                        value: _vm.AddMainlist.completedLink,\n                        callback: function($$v) {\n                          _vm.$set(_vm.AddMainlist, \"completedLink\", $$v)\n                        },\n                        expression: \"AddMainlist.completedLink\"\n                      }\n                    },\n                    _vm._l(_vm.obList, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.wareRuleCode,\n                        attrs: {\n                          label: item.wareRuleCode + \"-\" + item.wareRuleName,\n                          value: item.wareRuleCode\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"接口编号\", prop: \"interfaceNumber\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.AddMainlist.interfaceNumber,\n                      callback: function($$v) {\n                        _vm.$set(_vm.AddMainlist, \"interfaceNumber\", $$v)\n                      },\n                      expression: \"AddMainlist.interfaceNumber\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: { label: \"外系统业务类型\", prop: \"exoSystemBizType\" }\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.AddMainlist.exoSystemBizType,\n                      callback: function($$v) {\n                        _vm.$set(_vm.AddMainlist, \"exoSystemBizType\", $$v)\n                      },\n                      expression: \"AddMainlist.exoSystemBizType\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.dialogFormVisible = !_vm.dialogFormVisible\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      _vm.dialogStatus == 0\n                        ? _vm.addMainConfirm()\n                        : _vm.updateMainConfirm()\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"table.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}