{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/investigatePlan/dialog/dialogAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/investigatePlan/dialog/dialogAdd.vue","mtime":1596610933924},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\"\nimport { createRecords } from \"@/api/project/srm/supplierManage/supplierAccess/investigatePlan\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\nimport tabClassify from '../tab/addTab/tabClassify'\nimport tabProject from '../tab/addTab/tabProject'\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'//选择人\nimport dialogProposal from './dialogProposal'\n\nexport default {\n    name: 'addMain',\n    components: { caiGou, dialogGysxz, tabProject, tabClassify, dialogPersonSelect, dialogProposal },\n    props: ['unMutiple', 'title', 'curdialogStatus'],\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            tabName: 'tabProject',\n            isEdit: false,\n            iscgEdit: false,//采购是否可编辑\n            formData: {\n                orgCode: null,\n                orgName: null,\n                investigateNo: null,\n                supplierCode: null,\n                supplierName: null,\n                supplierRowId: null,\n                platformSeries: null,\n                place: null,\n                investigateDate: null,\n                submitDate: null,\n                address: null,\n                reason: null,\n                purpose: null,\n                planSource: null\n            },\n            investigateItemDTOs: [],\n            investigateClassDTOs: [],\n            listSelected: null,//已选项\n            selectRowData: null,\n            dialogVisible: false,\n            rules: {\n                orgCode: [{ required: true, message: '请选择', trigger: 'blur' }],\n                supplierName: [{ required: true, message: '请选择', trigger: 'blur' }],\n                investigateDate: [{ required: true, message: '请选择', trigger: 'blur' }],\n                planSource: [{ required: true, message: '请选择', trigger: 'blur' }],\n                place: [\n                    { required: true, message: '请填写', trigger: 'blur' },\n                    { max: 32, message: '长度应小于32个字符', trigger: 'blur' }\n                ],\n                address: [\n                    { required: true, message: '请填写', trigger: 'blur' },\n                    { max: 128, message: '长度应小于128个字符', trigger: 'blur' }\n                ],\n                reason: [\n                    { max: 128, message: '长度应小于128个字符', trigger: 'blur' }\n                ],\n                purpose: [\n                    { max: 128, message: '长度应小于128个字符', trigger: 'blur' }\n                ]\n            },\n            formConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'orgCode', width: '', copmNum: 0 },\n                { type: 'commonInput', label: '考察计划号', prop: 'investigateNo', width: '' },\n                { type: 'inputBtnGys', label: '供应商', prop: 'supplierName', width: '', copmNum: 1 },\n                // { type: 'commonInput', label: '供应商名称', prop: 'supplierName', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pai', label: '计划来源', prop: 'planSource', width: '' },\n                { type: 'commonInput', label: '考察地点', prop: 'place', width: '' },\n                { type: 'date', label: '考察时间', prop: 'investigateDate', width: '' },\n                { type: 'date', label: '要求提交时间', prop: 'submitDate', width: '' },\n                { type: 'textarea', label: '考察地址', prop: 'address', width: '480px', rows: \"1\" },\n                { type: 'textarea', label: '考察原因', prop: 'reason', width: '800px', rows: \"2\" },\n                { type: 'textarea', label: '考察目的', prop: 'purpose', width: '800px', rows: \"2\" }\n            ],\n            tabConfig: [\n                { label: '考察项目', name: 'tabProject', prop: 'tabProject' },\n                { label: '考察分类', name: 'tabClassify', prop: 'tabClassify' }\n            ],\n            dialogConfig: [\n                { title: '任务接收人选择', unMutiple: true, propCode: '', propName: '' },\n                { title: '供应商信息', isRequired: false, unMutiple: true },\n                { title: '提案计划选择', isRequired: false, unMutiple: false }\n            ]\n        }\n    },\n    created () {\n\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pai: state => state.dict.dt_srm_pai//计划来源\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pai\"])\n    },\n    methods: {\n        //初始化选中内容\n        initSelect (val) {\n            this.listAll = null\n            this.listSelected = null\n            this.listSelected = val\n        },\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.showGys()\n                    break\n                }\n                case 1: {\n                    this.handleRefresh()\n                    break\n                }\n            }\n        },\n        handleRefresh () {\n            this.iscgEdit = false\n        },\n        //检查是否新增保存，保存后才能编辑详情\n        checkAdd (type) {\n            if (this.formData.investigateNo) {\n                if (type === 'project') {\n                    this.$refs.refProject[0].oprateAdd()\n                } else if (type === 'class') {\n                    if (this.formData.supplierName) {\n                        this.$refs.refProposal.listQuery.supplierCode = this.formData.supplierCode\n                        this.$refs.refProposal.listQuery.supplierName = this.formData.supplierName\n\n                        this.$refs.refClass[0].oprateAdd()\n                    } else {\n                        this.$message({ type: 'warning', message: '请先选择表格内供应商' })\n                    }\n                }\n            } else {\n                this.$refs.refForm.validate((valid) => {\n                    if (valid) {\n                        createRecords(this.formData).then(res => {\n                            this.$set(this.formData, 'investigateNo', res.data)\n                            if (type === 'project') {\n                                this.$refs.refProject[0].oprateAdd()\n                            } else if (type === 'class') {\n                                this.$refs.refClass[0].oprateAdd()\n                            }\n                        })\n                    } else {\n                        this.$message({ type: 'warning', message: '请先将主表填写完整再新增明细' })\n                    }\n                })\n            }\n        },\n        checkInvestigate (data) {\n            let result = true\n            if (data) {\n                for (let i = 0; i < data.length; i++) {\n                    if (data[i].investigate === true) {\n                        if (data[i].investigate && (!data[i].item || !data[i].evaluateModel || !data[i].investigateUser)) {\n                            result = false\n                            break\n                        }\n                    }\n                }\n            }\n            return result\n        },\n        handleConfirm () {\n            this.investigateItemDTOs = this.$refs.refProject[0].tableData\n            this.investigateClassDTOs = this.$refs.refClass[0].tableData\n            let result = this.checkInvestigate(this.investigateItemDTOs)\n            this.$refs.refForm.validate((valid) => {\n                if (valid && result) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let cdata = {\n                            method: \"UPDATE\",\n                            investigateDTO: this.formData\n                        }\n                        this.$emit('handleDialogClick', cdata, this.investigateItemDTOs, this.investigateClassDTOs)\n                        this.dialogVisible = false\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n                } else {\n                    if (!result) {\n                        this.$message({ type: 'warning', message: '考察时，考察项目中考察项、评价模型、考察人不能为空' })\n                    } else if (!valid) {\n                        this.$message({ type: 'warning', message: '请先将主表填写完整再保存' })\n                    }\n                }\n            })\n        },\n        //表格操作删除\n        handleDelete (index, row) {\n            this.$confirm('确认要删除该数据项吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.formData.proposalItemDTOs = this.formData.proposalItemDTOs.filter(item => {\n                    let isD = true\n                    if (row.supplierCode === item.supplierCode) {\n                        isD = false\n                    }\n                    return isD\n                })\n\n                this.$message({\n                    type: 'success',\n                    message: '删除成功'\n                })\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消'\n                })\n            })\n        },\n        initForm (type, row) {\n            this.tabName = 'tabProject'\n            if (type === 'add') {\n                if (this.$refs['refForm']) {\n                    this.$refs['refForm'].resetFields()\n                    this.$refs['refForm'].clearValidate()\n                }\n                for (let key in this.formData) {\n                    this.$set(this.formData, key, null)\n                }\n                if (this.$refs.refProject) {\n                    this.$refs.refProject[0].initTable([])\n\n                }\n                if (this.$refs.refClass) {\n                    this.$refs.refClass[0].initTable([])\n                }\n            } else {\n                for (let key in this.formData) {\n                    for (let par in row) {\n                        if (key === par) {\n                            this.$set(this.formData, key, row[key])\n                        }\n                    }\n                }\n                this.investigateItemDTOs = row.investigateItemDTOs\n                this.investigateClassDTOs = row.investigateClassDTOs\n\n                this.$nextTick(() => {\n                    this.$refs.refProject[0].initTable(this.investigateItemDTOs)\n                    this.$refs.refClass[0].initTable(this.investigateClassDTOs)\n                })\n\n            }\n        },\n        showGys () {\n            this.$refs.refGys.initSelect()\n            this.$refs.refGys.dialogVisible = true\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            this.$set(this.formData, 'supplierName', gysRows[0].supplierName)\n            this.formData.supplierCode = gysRows[0].supplierCode\n            this.formData.supplierRowId = gysRows[0].rowId\n        },\n        showPerson (title, propCode, propName) {\n            this.dialogConfig[0].title = title\n            this.dialogConfig[0].propCode = propCode\n            this.dialogConfig[0].propName = propName\n            this.$refs.refPerson.dialogVisible = true\n        },\n        personConfirm (pdata, propCode, propName) {\n            this.$nextTick(() => {\n                this.$refs.refProject[0].personConfirm(propCode, propName, pdata)\n            })\n        },\n        showProposal (selectedData) {\n            this.$refs.refProposal.initSelect(selectedData)\n            this.$refs.refProposal.dialogVisible = true\n        },\n        proposalConfirm (pData) {\n            this.$refs.refClass[0].proposalConfirm(pData)\n        },\n        setOrgName (name) {\n            this.formData.orgName = name\n        }\n    }\n}\n",null]}