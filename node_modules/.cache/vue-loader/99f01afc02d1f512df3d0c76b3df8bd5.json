{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/dataQuery/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/dataQuery/index.vue","mtime":1600170695909},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination'\nimport echartsCom from './components/echartsCom'\nimport throttle from 'lodash/throttle'\nimport * as api from '@/api/project/iot/MOM/dataQuery'\nimport { mapState } from 'vuex'\nexport default {\n    name: 'dataQuery',\n    components: { Pagination, echartsCom },\n    data() {\n        return {\n            // 查询数据\n            listQuery: {\n                project: '', // 项目名称\n                type: '', // 设备类型\n                name: '', // 设备名称\n                position: '', // 设备点位\n                time: [], // 时间\n                frequency: '', // 采样频率\n                mode: '', // 采样模式\n                startTime: '', // 开始时间\n                endTime: '', // 结束时间\n                currentPage: 1,\n                pageSize: 15\n            },\n            projects: [], // 项目\n            projectCode: '', // 项目code\n            deviceTypes: [], // 设备类型\n            deviceNames: [], // 设备名称\n            devicePositions: [], // 设备点位\n            list: [],\n            theight: 0, // 自适应表格高度\n            total: 0, // 当前数据总条数\n            listLoading: false, // 表格加载loading\n            iot_sample_rate_reverse: [], // 倒叙数组\n            // 表格数据 mock\n            labels: [\n                // {\n                //     label: 'A相总电压谐波畸变率',\n                //     value: 'value0'\n                // },\n                // {\n                //     label: 'A相电流',\n                //     value: 'value1'\n                // },\n                // {\n                //     label: 'B相电流',\n                //     value: 'value2'\n                // }\n            ],\n            tableData: [\n                // {\n                //     value0: '1',\n                //     value1: '2',\n                //     value2: '3',\n                //     time: '567890'\n                // },\n                // {\n                //     value0: '2',\n                //     value1: '3',\n                //     value2: '4',\n                //     time: '5678903456'\n                // }\n            ]\n        }\n    },\n    computed: {\n        ...mapState({\n            iot_sample_rate: (state) => state.iotDict.iot_sample_rate,\n            iot_sample_mode: (state) => state.iotDict.iot_sample_mode\n        }),\n        pickerOptions() {\n            let _this = this\n            return {\n                disabledDate(time) {\n                    const times = 86400000 * 30\n                    let curSelectTime = new Date(_this.minDate).getTime()\n                    let before = curSelectTime - times\n                    let after = curSelectTime + times\n                    return time.getTime() > after || time.getTime() < before\n                },\n                onPick({ maxDate, minDate }) {\n                    if (!maxDate) {\n                        _this.minDate = minDate\n                    }\n                }\n            }\n        }\n    },\n    created() {\n        this.setTableHeight()\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        // 获取采样频率，采样方式\n        this.$store.dispatch('iotDict/getDicData', ['iot_sample_rate', 'iot_sample_mode'])\n        setTimeout(() => {\n            this.iot_sample_rate_reverse = this.iot_sample_rate.reverse()\n            this.listQuery.frequency = this.iot_sample_rate_reverse[0].dictItemKey\n            this.listQuery.mode = this.iot_sample_mode[0].dictItemValue\n        }, 1000)\n        let nowYear = new Date().getFullYear()\n        let nowMonth = new Date().getMonth() + 1\n        let nowDate = new Date().getDate()\n        let nowHours = new Date().getHours()\n        let nowMinutes = new Date().getMinutes()\n        let nowSeconds = new Date().getSeconds()\n        nowMonth = nowMonth < 10 ? '-0' + nowMonth : '-' + nowMonth\n        nowDate = nowDate < 10 ? '-0' + nowDate : '-' + nowDate\n        nowHours = nowHours < 10 ? '0' + nowHours : nowHours\n        nowMinutes = nowMinutes < 10 ? '0' + nowMinutes : nowMinutes\n        nowSeconds = nowSeconds < 10 ? '0' + nowSeconds : nowSeconds\n        this.listQuery.time = [nowYear + nowMonth + nowDate + ' 00:00:00', nowYear + nowMonth + nowDate + ' ' + nowHours + ':' + nowMinutes + ':' + nowSeconds]\n        // 初始化图表数据\n        // this.list = [\n        //     {\n        //         time: nowYear + nowMonth + nowDate + ' 00:00:00',\n        //         数据: '0'\n        //     },\n        //     {\n        //         time: nowYear + nowMonth + nowDate + ' 23:00:00',\n        //         数据: '0'\n        //     }\n        // ]\n        // 获取项目类型\n        api.getProject().then((res) => {\n            this.projects = res.data\n        })\n    },\n    mounted() {\n        // this.$refs.echartsCom.showEcharts()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        // 项目名称的模糊搜索\n        querySearch(queryString, cb) {\n            let projects = this.projects\n            this.projects.map((item, index) => {\n                projects[index].value = item.projectName\n            })\n            let results = queryString ? projects.filter(this.createFilter(queryString)) : projects\n            cb(results)\n        },\n        createFilter(queryString) {\n            return (project) => {\n                return project.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n            }\n        },\n        // 选中项目或清空项目\n        handleSelect(item) {\n            // 重置数据\n            this.deviceTypes = []\n            this.deviceNames = []\n            this.devicePositions = []\n            this.listQuery.type = ''\n            this.listQuery.name = ''\n            this.listQuery.position = ''\n            if (item) {\n                // 获取设备类型\n                this.projectCode = item.projectCode\n                api.getDeviceType(item.projectCode).then((res) => {\n                    this.deviceTypes = res.data\n                })\n            }\n        },\n        // 选中设备类型\n        changeDeviceTypes(typeCode) {\n            // 重置数据\n            this.deviceNames = []\n            this.devicePositions = []\n            this.listQuery.name = ''\n            this.listQuery.position = ''\n            if (typeCode) {\n                // 获取设备名称\n                api.getDevice(this.projectCode, typeCode).then((res) => {\n                    this.deviceNames = res.data\n                    res.data.map((item, index) => {\n                        this.deviceNames[index].deviceName = item.deviceCode + '-' + item.deviceName\n                    })\n                })\n            }\n        },\n        // 选中设备名称\n        changeDeviceNames() {\n            // 重置数据\n            this.devicePositions = []\n            this.listQuery.position = ''\n            let postData = []\n            this.deviceNames.map((item) => {\n                if (this.listQuery.name.indexOf(item.deviceCode) !== -1) {\n                    postData.push(item)\n                }\n            })\n            // 获取设备点位\n            api.postPoint(postData).then((res) => {\n                this.devicePositions = res.data\n            })\n        },\n        //表格查询\n        handleQuery: throttle(\n            function() {\n                this.listQuery.currentPage = 1\n                this.getList()\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 搜索方法\n        getList() {\n            this.listLoading = true\n            let projectCode = ''\n            // console.log(this.listQuery)\n            this.projects.map((item) => {\n                if (item.projectName === this.listQuery.project) {\n                    projectCode = item.projectCode\n                }\n            })\n            let postData = {\n                deviceCodeList: this.listQuery.name,\n                endTime: this.listQuery.time[1],\n                pointCodeList: this.listQuery.position,\n                projectCode: projectCode,\n                sampleMode: this.listQuery.mode,\n                sampleRate: this.listQuery.frequency,\n                startTime: this.listQuery.time[0],\n                typeCode: this.listQuery.type\n            }\n            api.postDataQuery(postData).then((res) => {\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n                this.list = res.data\n                this.$refs.echartsCom.showEcharts()\n            })\n            api.postDataQuery(postData, {\n                currentPage: this.listQuery.currentPage,\n                pageSize: this.listQuery.pageSize\n            }).then((res) => {\n                // 重置数据\n                this.total = 0\n                this.labels = []\n                this.tableData = []\n                if (res.data.list.length !== 0) {\n                    this.total = res.data.pages.count\n                    let keys = Object.keys(res.data.list[0]) // 取键，不按顺序取\n                    // keys.splice(keys.indexOf('time'),1)\n                    keys.shift()\n                    keys.map((childItem, childIndex) => {\n                        let objLabels = {}\n                        objLabels.label = childItem\n                        objLabels.value = 'value' + childIndex\n                        this.labels.push(objLabels)\n                    })\n                    // console.log(this.labels)\n                    res.data.list.map((item) => {\n                        let objTableData = {}\n                        let values = Object.values(item) // 取值\n                        objTableData.time = values.shift()\n                        values.map((childItem, childIndex) => {\n                            objTableData['value' + childIndex] = childItem\n                        })\n                        this.tableData.push(objTableData)\n                    })\n                    // console.log(this.tableData)\n                }\n            })\n        }\n    }\n}\n",null]}