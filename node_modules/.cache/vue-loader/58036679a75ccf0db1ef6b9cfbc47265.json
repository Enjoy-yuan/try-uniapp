{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/maintenanceOrder/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/maintenanceOrder/index.vue","mtime":1596610933402},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/er/maintenanceOrder'\nimport { queryRecords, queryTeamEmployee } from '@/api/project/eas/database/groups'//班组\nimport caiGou from '@/components/Select/xtpt/caigou' //下拉组件\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport Pagination from '@/components/Pagination'\nimport equipmentSelect from \"../../components/equipmentSelect\"\nimport teamSelect from \"../../components/teamSelect\"\nimport employeesSelect from \"@/components/Select/employeesSelect\" //操作人\nimport emplSelect from \"../../components/teamEmpSelect\" //操作人下拉框\nimport suppierSelect from \"@/components/Select/suppierSelect.vue\" //供应商\nimport { mapState } from 'vuex'\nimport { getRealName, getName } from '@/utils/auth'\nimport { parseTime } from '@/utils'\nimport imgUpload from '../../components/imgUpload'\nimport fileUpload from '../../components/fileUpload'\nimport tab1 from './tab1'\nimport tab2 from './tab2'\n\nexport default {\n    name: 'maintenanceOrder',\n    components: {\n        Pagination,\n        tab1,\n        tab2,\n        caiGou,\n        equipmentSelect,\n        employeesSelect,\n        suppierSelect,\n        imgUpload,\n        fileUpload,\n        teamSelect,\n        emplSelect\n    },\n    data () {\n        return {\n            list: [],\n            checkList: [],\n            materiaList: [],\n            faultList: [],\n            parentRow: [],\n            equipmentRow: [],\n            workOrderNumbers: [],\n            suppirtRow: [],\n            numbers: [],\n            bjData: [],\n            timeData: [],\n            teamList: [],\n            groupList: [],\n            suppierRow: undefined,\n            value: \"\",\n            validater: undefined,\n            workOrderNumberA: undefined,\n            deviceCodeA: undefined,\n            dialogStatus: '',\n            dialogFormVisible: false,\n            equipmentDialogVisible: false,\n            suppierDialogVisible: false,\n            checkUponDialogFormVisible: false,\n            technicalSupportVisible: false,\n            outsourcingVisible: false,\n            validationVisible: false,\n            mainMaintainerDialogVisible: false,\n            supportDialogStatus: '',\n            supportDialogVisible: false,\n            fixDialogFormVisible: false,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            theight: 0, //表格高度\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            outDisabled: true,\n            buttonDisable: true,\n            fix: true,\n            repair: true,\n            selectlistRow: [],\n            curChange: false, //if the current row change\n            clickChange: false, //if click another row\n            currentSelectedRow: null, //当前选中行\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                organizationCode: undefined,\n                classCode: undefined,\n                ifEntrustOuter: undefined,\n                urgencyDegree: undefined,\n                maintainType: undefined,\n                states: undefined,\n                createTimeStart: undefined,\n                createTimeEnd: undefined,\n                mainMaintainerCode: undefined,\n                workOrderNumber: undefined\n            },\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                workOrderNumber: undefined,\n                teamCode: undefined,\n            },\n            temp: {\n                workOrderNumber: undefined,\n                organizationCode: undefined,\n                classCode: undefined,\n                className: undefined,\n                mainMaintainerName: undefined,\n                mainMaintainerCode: undefined,\n                deviceCode: undefined,\n                deviceName: undefined,\n                useDept: undefined,\n                addressName: undefined,\n                deviceType: undefined,\n                faultNumber: undefined,\n                happenTime: undefined,\n                operatorName: undefined,\n                partName: undefined,\n                faultTypeCode: undefined,\n                urgencyDegreeName: undefined,\n                description: undefined\n\n            },\n            technTemp: {\n                clockTime: undefined,\n                maintainLaborHour: undefined,\n                remark: undefined,\n                maintainerCode: undefined,\n                maintainerName: undefined,\n                planStartTime: undefined,\n                planEndTime: undefined\n            },\n            outTemp: {\n                entrustOuterCompanyCode: undefined,\n                planEntrustOuterLaborHour: undefined,\n                contact: undefined,\n                contactNumber: undefined,\n                entrustOuterCost: undefined,\n                planStartTime: undefined,\n                planEndTime: undefined,\n                entrustOuterRemark: undefined\n            },\n            checkTemp: {\n                validaterName: getRealName(),\n                validaterCode: getName()\n\n            },\n            tempCheckUpon: {\n                mainMaintainerName: undefined,\n                mainMaintainerCode: undefined,\n                planEndTime: undefined,\n                planStartTime: undefined\n\n            },\n            fixTemp: {\n            },\n            tabName: 'sbtp',\n            tabConfig: [\n                { label: '维修人员', name: 'sbtp', prop: 'sbtp' },\n                { label: '维修备件', name: 'sbfj', prop: 'sbfj' },\n                { label: '维修附件', name: 'bjqd', prop: 'bjqd' },\n                { label: '故障图片', name: 'glzsb', prop: 'glzsb' }\n            ],\n            tableKey: [0, 1, 2],\n            rules: {\n                organizationCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                deviceCode: [\n                    {\n                        required: true,\n                        message: '设备编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                faultNumber: [\n                    {\n                        // required: true,\n                        message: '故障编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                classCode: [\n                    {\n                        required: true,\n                        message: '班组编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                mainMaintainerCode: [\n                    {\n                        required: true,\n                        message: '主维修人不能为空',\n                        trigger: 'blur'\n                    }\n\n                ]\n            },\n            checkRules: {\n                validaterResult: [\n                    {\n                        required: true,\n                        message: '验证结果不能为空',\n                        trigger: 'blur'\n                    }\n\n                ]\n\n            },\n            technRules: {\n                maintainerCode: [\n                    {\n                        required: true,\n                        message: '支持人员不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            outRules: {\n                entrustOuterCompanyCode: [\n                    {\n                        required: true,\n                        message: '委外单位不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                entrustOuterCost: [\n                    {\n                        pattern: /^[0-9]{0,10}(\\.\\d{1,1})?$/,\n                        message: '保留1位小数，长度不能超过11',\n                        trigger: 'blur'\n                    }\n                ],\n                planEntrustOuterLaborHour: [\n                    {\n                        pattern: /^[0-9]{0,3}(\\.\\d{1,1})?$/,\n                        message: '保留1位小数，长度不能超过4',\n                        trigger: 'blur'\n                    }\n                ]\n\n            },\n            pickerOptionsEnd: {\n                disabledDate: time => {\n                    let beginDateVal = this.technTemp.planStartTime\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                }\n            },\n            pickerOptionsEnd1: {\n                disabledDate: time => {\n                    let beginDateVal = this.outTemp.planStartTime\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                }\n            },\n            pickerOptionsEnd2: {\n                disabledDate: time => {\n                    let beginDateVal = this.tempCheckUpon.planStartTime\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                }\n            },\n        }\n    },\n    created () {\n        this.getList()\n    },\n    computed: {\n        ...mapState({\n            dt_urgency_degree: state => state.eamDict.dt_urgency_degree,\n            dt_maintain_type: state => state.eamDict.dt_maintain_type,\n            dt_maintain_worder_state: state => state.eamDict.dt_maintain_worder_state,\n            dt_fault_cause: state => state.eamDict.dt_fault_cause,\n            dt_maintain_grade: state => state.eamDict.dt_maintain_grade,\n            dt_yes_or_no: state => state.eamDict.dt_yes_or_no,\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n\n        }),\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        let p = new Promise((resolve) => {\n            resolve(\n                this.$store.dispatch('eamDict/getDicData', [\n                    'dt_urgency_degree',\n                    'dt_maintain_type',\n                    'dt_maintain_worder_state', 'dt_fault_cause',\n                    'dt_maintain_grade', 'dt_yes_or_no',\n                    'dt_file_equipment'\n                ])\n            )\n        })\n        Promise.all([p]).then(() => {\n            this.getList()\n        })\n        this.getGroup()\n\n\n    },\n    methods: {\n        getMainMaintainer (val) {\n            this.temp.mainMaintainerCode = val.employeeCode\n            this.temp.mainMaintainerName = val.employeeName\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        //查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        checked () {\n            this.$refs.mainList.toggleRowSelection(this.list[0], true)\n        },\n        //查询主表\n        getList () {\n            if (this.value) {\n                var d1 = this.value[0]\n                var d2 = this.value[1]\n                this.listQuery.createTimeStart = d1\n                this.listQuery.createTimeEnd = d2\n            } else {\n                this.listQuery.createTimeStart = \"\"\n                this.listQuery.createTimeEnd = \"\"\n            }\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                res.data.list = this.$myFun.srmCodeToName(\n                    res.data.list,\n                    [this.dt_maintain_type, this.dt_urgency_degree, this.dt_yes_or_no, this.dt_maintain_worder_state],\n                    ['maintainType', 'urgencyDegree', 'ifEntrustOuter', 'state']\n                )\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        //获取班组\n        getGroup () {\n            queryRecords(this.listQuery1).then(res => {\n                this.groupList = res.data.list\n            })\n        },\n        //查看详情\n        inventoryDetail (val) {\n            this.fixDialogFormVisible = true\n            api.detailsRecords(val.workOrderNumber).then(res => {\n                this.fixTemp = res.data\n\n            })\n            this.listQuery1.workOrderNumber = val.workOrderNumber\n            api.personRecords(this.listQuery1).then(re => {\n                this.timeData = re.data.list\n                this.total1 = re.data.pages.count\n            })\n            api.spRecords(this.listQuery1).then(respone => {\n                this.bjData = respone.data.list\n                this.total2 = respone.data.pages.count\n            })\n\n        },\n        //设备编码弹窗\n        handleClickDevice () {\n            this.equipmentDialogVisible = true\n        },\n        //设备编码父子传值\n        handleEquipment (row) {\n            this.equipmentRow = row\n        },\n        //组织编码名称赋值\n        org (val) {\n            this.temp.organizationName = val\n        },\n        equipmentUpdate () {\n            this.temp.deviceCode = this.equipmentRow[0].deviceCode\n            this.temp.deviceName = this.equipmentRow[0].deviceName\n            this.temp.deviceTypeName = this.equipmentRow[0].deviceTypeName\n            this.temp.faultGradeName = this.equipmentRow[0].faultGradeName\n            this.temp.faultTypeCode = this.equipmentRow[0].faultTypeCode\n            this.temp.operatorName = this.equipmentRow[0].operatorName\n            this.temp.partName = this.equipmentRow[0].partName\n            this.temp.description = this.equipmentRow[0].description\n            this.temp.happenTime = this.equipmentRow[0].happenTime\n            this.temp.addressName = this.equipmentRow[0].addressName\n            this.temp.useDeptName = this.equipmentRow[0].useDeptName\n            this.temp.faultNumber = this.equipmentRow[0].faultNumber\n            this.equipmentDialogVisible = false\n        },\n        //主修人弹窗\n        handleClickMainMaintainer () {\n            this.mainMaintainerDialogVisible = true\n        },\n        //主维修人父子传值\n        handleMainMaintainer (row) {\n            this.parentRow = row\n        },\n        //主维修人确认\n        mainMaintainerCreate () {\n            this.temp.mainMaintainerCode = this.parentRow.employeeCode\n            this.temp.mainMaintainerName = this.parentRow.employeeName\n            this.mainMaintainerDialogVisible = false\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        //班组选择\n        changeClass (val) {\n            if (val) {\n                this.temp.className = val.teamName\n            }\n        },\n        //新增方法\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecords(this.temp).then(() => {\n                        this.$nextTick(() => {\n                            this.$refs.equipmentSelect.getList()\n                        })\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //编辑\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                if (this.selectlistRow[0].state == \"mwos10\") {\n                    api.detailsRecords(this.selectlistRow[0].workOrderNumber).then(res => {\n                        this.temp = res.data\n                        this.temp.description = res.data.faultDescription\n                        this.temp.urgencyDegreeName = res.data.urgencyDegree\n                        this.temp.addressName = res.data.address\n                        this.dialogStatus = 'update'\n                        this.dialogFormVisible = true\n                    })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已录入状态数据编辑',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //编辑方法\n        update () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.updateRecords(this.selectlistRow[0].workOrderNumber, this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '编辑成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //删除\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                let stateRow = this.selectlistRow.filter(v => {\n                    return v.state != \"mwos10\"\n                })\n                if (stateRow.length > 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已录入状态数据删除',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        this.selectlistRow.forEach((item, index) => {\n                            this.workOrderNumbers[index] = item.workOrderNumber\n                        })\n                        api.deleteRecords(this.workOrderNumbers).then(\n                            () => {\n                                this.getList()\n                                this.$nextTick(() => {\n                                    this.$refs.equipmentSelect.getList()\n                                })\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                            }\n                        )\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // 获取派工维修单号\n        getTeamEmployee () {\n            this.listQuery1.teamCode = this.selectlistRow[0].classCode\n            queryTeamEmployee(this.listQuery1.teamCode, this.listQuery1).then(res => {\n                this.teamList = res.data.list\n            })\n        },\n        //打开派工单\n        handleCheckUpon () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                if (this.selectlistRow[0].state == \"mwos10\" || this.selectlistRow[0].state == \"mwos110\") {\n                    this.tempCheckUpon = this.selectlistRow[0]\n                    this.checkUponDialogFormVisible = true\n                    this.getTeamEmployee()\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已录入或拒单状态数据派工',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //派工班组勾选\n        selectTeamRow (val) {\n            this.teamRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.teamList.clearSelection()\n                this.$refs.teamList.toggleRowSelection(val.pop())\n            }\n            this.tempCheckUpon.mainMaintainerName = this.teamRow.employeeName\n            this.tempCheckUpon.mainMaintainerCode = this.teamRow.employeeCode\n        },\n        //派工确认\n        tempCheckUponCreate () {\n            this.teamList.map(v => {\n                v.maintainerCode = v.employeeCode\n                v.maintainerName = v.employeeName\n            })\n            let assignDTO = {\n                mainMaintainerCode: this.tempCheckUpon.mainMaintainerName,\n                mainMaintainerName: this.tempCheckUpon.mainMaintainerCode,\n                planEndTime: this.tempCheckUpon.planEndTime,\n                planStartTime: this.tempCheckUpon.planStartTime,\n                maintainPersons: this.teamList\n            }\n            api.assignRecords(this.selectlistRow[0].workOrderNumber, assignDTO).then(() => {\n                this.getList()\n                this.checkUponDialogFormVisible = false\n                this.$message({\n                    title: '成功',\n                    message: '派工成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            })\n        },\n        resetTechnTemp () {\n            this.technTemp = {\n                maintainerCode: undefined\n            }\n        },\n        //请求响应\n        handleRequest () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                if (this.selectlistRow[0].state == \"mwos20\" || this.selectlistRow[0].state == \"mwos40\" || this.selectlistRow[0].state == \"mwos50\" || this.selectlistRow[0].state == 'mwos30') {\n                    this.resetTechnTemp()\n                    this.technTemp.workOrderNumber = this.selectlistRow[0].workOrderNumber\n                    this.technicalSupportVisible = true\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已派工、待件开始、待件结束、维修开始状态请求响应',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //打开支持人员弹窗\n        handleClickMaintainer () {\n            this.supportDialogVisible = true\n            this.supportDialogStatus = 'supportCreate'\n        },\n        //支持人员父子传值\n        handleSupport (row) {\n            this.suppirtRow = row\n        },\n        //支持人员确认\n        supportCreate () {\n            this.technTemp.maintainerCode = this.suppirtRow.employeeCode\n            this.technTemp.maintainerName = this.suppirtRow.employeeName\n            this.supportDialogVisible = false\n\n        },\n        //确认请求响应\n        technicalUpdate () {\n            this.$refs.technTemp.validate(valid => {\n                if (valid) {\n                    api.responseRecords(this.selectlistRow[0].workOrderNumber, this.technTemp).then(() => {\n                        this.getList()\n                        this.technicalSupportVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '请求响应成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n\n        },\n        resetOutTemp () {\n            this.outTemp = {\n                entrustOuterCompanyCode: undefined,\n                planEntrustOuterLaborHour: undefined,\n                contact: undefined,\n                contactNumber: undefined,\n                entrustOuterCost: undefined,\n                planStartTime: undefined,\n                planEndTime: undefined,\n                entrustOuterRemark: undefined\n            }\n        },\n        //打开委外弹窗\n        handleOutsourcing () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                if (this.selectlistRow[0].state == \"mwos20\" || this.selectlistRow[0].state == \"mwos40\" || this.selectlistRow[0].state == \"mwos50\" || this.selectlistRow[0].state == \"mwos30\" || this.selectlistRow[0].state == \"mwos90\" || this.selectlistRow[0].state == \"mwos100\") {\n                    this.resetOutTemp()\n                    this.outTemp.workOrderNumber = this.selectlistRow[0].workOrderNumber\n                    this.outTemp.deviceCode = this.selectlistRow[0].deviceCode\n                    this.outsourcingVisible = true\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已派工、待件开始、待件结束、维修开始、待技术支持、已派件技术支持状态的工单进行委外',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //是否委外\n        ifOut (val) {\n            if (val) {\n                this.outDisabled = false\n            } else {\n                this.outDisabled = true\n            }\n        },\n        //打开供应商弹窗\n        handleClickSupplier () {\n            this.suppierDialogVisible = true\n        },\n        //供应商父子传值\n        handleSuppier (row) {\n            this.suppierRow = row\n        },\n        //供应商获取值\n        suppierCreate () {\n            this.outTemp.entrustOuterCompanyCode = this.suppierRow.supplierCode\n            this.outTemp.contactNumber = this.suppierRow.contactNumber\n            this.outTemp.contact = this.suppierRow.contact\n            this.suppierDialogVisible = false\n        },\n        //委外确认\n        outsourcingCreate () {\n            this.$refs.outTemp.validate(valid => {\n                if (valid) {\n                    api.outerRecords(this.selectlistRow[0].workOrderNumber, this.outTemp).then(() => {\n                        this.getList()\n                        this.outsourcingVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '请求委外成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetCheckTemp () {\n            this.checkTemp = {\n                comment: undefined,\n                grade: 0,\n                validaterName: getRealName(),\n                validaterCode: getName(),\n                validaterResult: undefined,\n            }\n\n        },\n        //验证\n        handleCheck () {\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                let stateRow = this.selectlistRow.filter(v => {\n                    return v.state != \"mwos80\"\n                })\n                if (stateRow.length > 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对维修完成状态验证',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.resetCheckTemp()\n                this.checkList = []\n                this.selectlistRow.forEach(v => {\n                    this.checkList.push(v)\n                })\n                this.validationVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //验证确定\n        assetManagerUpdate () {\n            this.checkList.forEach(v => {\n                this.numbers.push(v.workOrderNumber)\n            })\n            let validateDTO = {\n                comment: this.checkTemp.comment,\n                grade: this.checkTemp.grade,\n                validaterCode: this.checkTemp.validaterCode,\n                validaterName: this.checkTemp.validaterName,\n                validaterResult: this.checkTemp.validaterResult,\n                workOrderNumbers: this.numbers\n            }\n            this.$refs.checkTemp.validate(valid => {\n                if (valid) {\n                    api.validateRecords(validateDTO).then(() => {\n                        this.getList()\n                        this.validationVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '验证成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n\n                } else {\n                    return false\n                }\n            })\n\n        },\n        //验证人\n        handleClickValidater () {\n            this.supportDialogVisible = true\n            this.supportDialogStatus = 'supportUpdate'\n        },\n        supportUpdate () {\n            this.checkTemp.validaterCode = this.suppirtRow.employeeCode\n            this.checkTemp.validaterName = this.suppirtRow.employeeName\n            this.supportDialogVisible = false\n        },\n        //是否验证\n        ifFix (val) {\n            if (val) {\n                this.fix = false\n                this.repair = false\n                this.buttonDisable = true\n            }\n        },\n        ifRepair (val) {\n            if (val) {\n                this.fix = true\n                this.repair = true\n                this.buttonDisable = false\n            }\n        },\n        ifFix1 (val) {\n            if (val) {\n                this.repair = false\n                this.buttonDisable = true\n            }\n        },\n        ifRepair1 (val) {\n            if (val) {\n                this.repair = true\n                this.buttonDisable = false\n            }\n        },\n        ifFix2 (val) {\n            if (val) {\n                this.fix = false\n                this.buttonDisable = true\n            }\n        },\n        ifRepair2 (val) {\n            if (val) {\n                this.fix = true\n                this.buttonDisable = false\n            }\n        },\n        //导出\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '状态', '维修类别', '维修级别', '紧急程度', '工单号', '工单类型', '是否委外', '委外金额',\n                    '组织编码', '维修组', '主修人', '维修开始时间', '维修结束时间', '设备编码', '设备名称',\n                    '设备类型', '型号', '使用部门', '设备地址', '故障描述', '报修人', '委外单位', '委外工时',\n                    '停机时间', '报修时间', '维修用时', '参考工单号'\n                ]\n                const filterVal = [\n                    'state', 'maintainType', 'maintainGrade', 'urgencyDegree', 'workOrderNumber', 'workOrderType', 'ifEntrustOuter',\n                    'entrustOuterCost', 'organizationName', 'classCode', 'mainMaintainerName', 'maintainStartTime', 'maintainEndTime',\n                    'deviceCode', 'deviceName', 'deviceTypeName', 'modelNumber', 'useDeptName', 'address', 'faultDescription',\n                    'repairsName', 'entrustOuterCompanyName', 'planEntrustOuterLaborHour', 'machineHaltTime', 'repairsTime',\n                    'maintainSpendTimeHour', 'referenceWorkOrderNumber',\n\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === 'timestamp') {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        },\n        handleClick () {\n        },\n        checkSelectStatus (rows, row) {\n            let checkStatus = false\n            if (rows) {\n                if (\n                    this.selectlistRow.length <= rows.length &&\n                    rows.length != 0\n                ) {\n                    checkStatus = true\n                }\n            }\n            if (row) {\n                if (\n                    JSON.stringify(this.selectlistRow).indexOf(JSON.stringify(row)) == -1\n                ) {\n                    checkStatus = true\n                }\n            }\n            return checkStatus\n        },\n        //点击表格某一行\n        rowClick (row) {\n            if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n                this.clickChange = false\n            } else {\n                this.clickChange = true\n            }\n            this.currentClickRow = row\n            let selectStatus = this.checkSelectStatus(null, row)\n            if (selectStatus) {\n                this.currentSelectedRow = row\n                this.$refs.mainList.toggleRowSelection(row, true)\n                this.workOrderNumberA = this.currentClickRow.workOrderNumber\n                this.deviceCodeA = this.currentClickRow.deviceCode\n                setTimeout(() => {\n                    this.$refs.tab4[0].getList()\n                    this.$refs.tab2[0].getList()\n                    this.$refs.tab1[0].getList()\n                    this.$refs.tab3[0].getList()\n                }, 1000)\n            } else {\n                if (this.clickChange) {\n                    this.$refs.mainList.setCurrentRow(this.currentClickRow)\n                    this.workOrderNumberA = this.currentClickRow.workOrderNumber\n                    this.deviceCodeA = this.currentClickRow.deviceCode\n                    setTimeout(() => {\n                        this.$refs.tab4[0].getList()\n                        this.$refs.tab2[0].getList()\n                        this.$refs.tab1[0].getList()\n                        this.$refs.tab3[0].getList()\n                    }, 1000)\n                }\n            }\n        },\n        selectChange (val) {\n            this.selectlistRow = val\n            if (this.clickChange) {\n                this.$refs.mainList.setCurrentRow(this.currentClickRow)\n                this.workOrderNumberA = this.currentClickRow.workOrderNumber\n                this.deviceCodeA = this.currentClickRow.deviceCode\n                setTimeout(() => {\n                    this.$refs.tab4[0].getList()\n                    this.$refs.tab2[0].getList()\n                    this.$refs.tab1[0].getList()\n                    this.$refs.tab3[0].getList()\n                }, 1000)\n            }\n        },\n        tableSelect (rows, row) {\n            let selectStatus = this.checkSelectStatus(rows)\n            if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n                this.clickChange = false\n            } else {\n                this.clickChange = true\n                this.currentClickRow = row\n            }\n            if (selectStatus) {\n                this.currentSelectedRow = row\n            } else {\n                this.curChange = false\n            }\n        },\n        //主表行点击\n        showSubTable (val) {\n            this.$refs.mainList.toggleRowSelection(val)\n        },\n        resetTemp () {\n            this.temp = {\n                workOrderNumber: undefined,\n                organizationCode: undefined,\n                classCode: undefined,\n                mainMaintainerName: undefined,\n                deviceCode: undefined,\n                deviceName: undefined,\n                useDept: undefined,\n                addressName: undefined,\n                deviceType: undefined,\n                faultNumber: undefined,\n                happenTime: undefined,\n                operatorName: undefined,\n                partName: undefined,\n                faultTypeCode: undefined,\n                urgencyDegreeName: undefined,\n                description: undefined\n            }\n        }\n    }\n}\n",null]}