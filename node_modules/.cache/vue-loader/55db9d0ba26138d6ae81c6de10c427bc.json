{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/eqmtRunRecords/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/eqmtRunRecords/index.vue","mtime":1596610933374},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/el/eqmtRunRecords' // 增、删、改api引入\nimport moment from 'moment'\nimport caiGou from '@/components/Select/caigou'\nimport Pagination from '@/components/Pagination'\nimport useDept from '../../components/useDeptSelect'\nimport deviceSelect from './singleDeviceSelect'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'eqmtRunRecords',\n    components: {\n        Pagination,\n        caiGou,\n        useDept,\n        deviceSelect\n    },\n    data () {\n        return {\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            pickerOptionsOn: {\n                disabledDate: time => {\n                    let endDateVal = this.temp.powerOffTime\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                }\n            },\n            pickerOptionsOff: {\n                disabledDate: time => {\n                    let beginDateVal = this.temp.powerOnTime\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                },\n            },\n            pickerOptionsStart: {\n                disabledDate: time => {\n                    let endDateVal = this.temp2.endTime\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                }\n            },\n            pickerOptionsEnd: {\n                disabledDate: time => {\n                    let beginDateVal = this.temp2.startTime\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                },\n            },\n            theight: 0, //表格高度\n            timeRange: undefined,\n            list: [],\n            fromList: [],\n            total: 0,\n            total2: 0,\n            tableKey: [0, 1], //表格索引\n            listQuery: {\n                //查询\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: undefined,\n                deviceCode: undefined,\n                useDept: undefined,\n                runTimeStart: undefined,\n                runTimeEnd: undefined\n            },\n            listQuery1: {\n                //从表查询\n                currentPage: 1,\n                pageSize: 10\n            },\n            temp: {\n                deviceCode: undefined,\n                deviceName: undefined,\n                orgCode: undefined,\n                orgName: undefined,\n                powerOnTime: undefined,\n                powerOffTime: undefined,\n                remark: undefined,\n                runningTime: undefined,\n                inspectRecordDetails: []\n            },\n            temp2: {\n                unusualType: undefined,\n                endTime: undefined,\n                startTime: undefined,\n                intervalTime: undefined,\n                remark: undefined,\n            },\n            rules: {\n                orgCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                deviceCode: [\n                    {\n                        required: true,\n                        message: '设备不能为空',\n                        trigger: ['blur']\n                    }\n                ],\n                powerOnTime: [\n                    {\n                        required: true,\n                        message: '请选择开机时间',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                powerOffTime: [{\n                    required: true,\n                    message: '请选择关机时间',\n                    trigger: ['blur', 'change']\n                }],\n                unusualType: [\n                    {\n                        required: true,\n                        message: '异常类型不能为空',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                startTime: [\n                    {\n                        required: true,\n                        message: '请选择开始时间',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                endTime: [{\n                    required: true,\n                    message: '请选择结束时间',\n                    trigger: ['blur', 'change']\n                }]\n            },\n            dialogFormVisible: false,\n            dialogStatus: 'create',\n            dialogFormVisible2: false,\n            dialogStatus2: 'create',\n            deviceVisible: false,\n            selectedRows: null, //多选时选中的单行\n            selectedRows2: null, //从表选择的所有行\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_device_unusual_type: state => state.eamDict.dt_device_unusual_type,\n            dt_inspect_record_result: state =>\n                state.eamDict.dt_inspect_record_result\n        })\n    },\n    watch: {\n        // 监听时间区间数组 写入到对应字段\n        'timeRange' (value) {\n            if (value) {\n                this.listQuery.runTimeStart = value[0]\n                this.listQuery.runTimeEnd = value[1]\n            }\n        },\n        'temp.powerOnTime' (val) {\n            if (this.temp.powerOffTime) {\n                const date1 = moment(val)\n                const date2 = moment(this.temp.powerOffTime)\n                this.temp.runningTime = date2.diff(date1, 'minute')//计算相差的分钟数\n            }\n\n        },\n        'temp.powerOffTime' (val) {\n            if (this.temp.powerOnTime) {\n                const date1 = moment(val)\n                const date2 = moment(this.temp.powerOnTime)\n                this.temp.runningTime = date1.diff(date2, 'minute')//计算相差的分钟数\n            }\n\n        },\n        'temp2.startTime' (val) {\n            if (this.temp2.EndTime) {\n                const date1 = moment(val)\n                const date2 = moment(this.temp2.EndTime)\n                this.temp2.intervalTime = date2.diff(date1, 'minute')\n            }\n\n        },\n        'temp2.endTime' (val) {\n            if (this.temp2.startTime) {\n                const date1 = moment(val)\n                const date2 = moment(this.temp2.startTime)\n                this.temp2.intervalTime = date1.diff(date2, 'minute')//计算相差的分钟数\n            }\n        }\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_inspect_record_result',\n            'dt_device_unusual_type'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        setTimeout(() => {\n            this.getList()\n        }, 500)\n    },\n    methods: {\n        getDevice (val) {\n            if (val) {\n                Object.assign(this.temp, val)\n            } else {\n                return\n            }\n        },\n        handleDevice () {\n            this.deviceVisible = true\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        getList () {\n            //获取表格数据\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //获取从表数据\n        getSub () {\n            if (this.selectedRows) {\n                api.queryRecordsSub(\n                    this.listQuery1,\n                    this.selectedRows.runRecordCode\n                ).then(res => {\n                    this.fromList = this.$myFun.codeToName(\n                        res.data,\n                        [\n                            this.dt_device_unusual_type\n                        ],\n                        ['unusualType']\n                    ).list\n                    this.total2 = res.data.pages.count\n                })\n            }\n        },\n        resetTemp () {\n            this.temp = {\n            }\n        },\n        resetTempSub () {\n            this.temp2 = {\n            }\n        },\n        handleQuery () {\n            //表格查询\n            this.listQuery.currentPage = 1\n            this.getList()\n            this.fromList = undefined\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        handleCreate2 () {\n            if (!this.selectedRows) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条主表数据',\n                    type: 'warning'\n                })\n                return\n            }\n            let selectedRows = JSON.parse(JSON.stringify(this.selectedRows))\n            this.temp2.deviceCode = selectedRows.deviceCode\n            this.temp2.deviceName = selectedRows.deviceName\n            this.temp2.powerOffTime = selectedRows.powerOffTime\n            this.temp2.powerOnTime = selectedRows.powerOnTime\n            this.dialogStatus2 = 'create'\n            this.dialogFormVisible2 = true\n        },\n        create () {\n            //新增确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.addRecords(this.temp).then(res => {\n                        if (res.status == 201) {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }\n            })\n        },\n        create2 () {\n            this.$refs['tempSub'].validate(valid => {\n                if (valid) {\n                    api.addRecordsSub(this.temp2, this.selectedRows.runRecordCode).then(res => {\n                        if (res.status == 201) {\n                            this.getSub()\n                            this.dialogFormVisible2 = false\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }\n            })\n        },\n        handleUpdate () {\n            if (!this.selectedRows) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择记录',\n                    type: 'warning'\n                })\n                return\n            }\n\n            api.queryRecord(this.selectedRows.runRecordCode).then(res => {\n                if (res.data.runRecordCode == this.selectedRows.runRecordCode) {\n                    this.temp = JSON.parse(JSON.stringify(this.selectedRows))\n                } else {\n                    this.temp = res.data\n                }\n\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            })\n\n        },\n        handleUpdate2 () {\n            if (this.selectedRows2.length !== 1 || !this.selectedRows2) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条记录',\n                    type: 'warning'\n                })\n                return\n            }\n            let selectedRows = JSON.parse(JSON.stringify(this.selectedRows))\n            api.queryRecordSub(this.selectedRows2[0].runRecordCode, this.selectedRows2[0].rowNo).then(res => {\n                this.temp2 = res.data\n                this.temp2.powerOnTime = res.data.createTime\n                this.temp2.powerOffTime = res.data.updateTime\n                this.temp2.deviceCode = selectedRows.deviceCode\n                this.temp2.deviceName = selectedRows.deviceName\n                this.temp2.intervalTime = selectedRows.intervalTime\n                this.dialogStatus2 = 'update'\n                this.dialogFormVisible2 = true\n            })\n        },\n        update () {\n            //新增确认\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updataRecord(this.temp.runRecordCode, this.temp).then(res => {\n                        if (res.status == 201) {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }\n            })\n        },\n        update2 () {\n            //修改确认\n            this.$refs['tempSub'].validate(valid => {\n                if (valid) {\n                    api.updataRecordSub(this.selectedRows2[0].runRecordCode, this.selectedRows2[0].rowNo, this.temp2).then(res => {\n                        if (res.status == 201) {\n                            this.getSub()\n                            this.dialogFormVisible2 = false\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }\n            })\n        },\n        handleDelete () {\n            //删除按钮单击事件方法\n            if (this.selectedRows) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    api.deleteRecord(\n                        this.selectedRows.runRecordCode\n                    ).then(res => {\n                        this.fromList = []\n                        if (res.status == 204) {\n                            this.getList()\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleDelete2 () {\n            if (this.selectedRows2) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let rowNos = ''\n                    this.selectedRows2.forEach((i, index) => {\n                        if (index == 0) {\n                            rowNos += i.rowNo\n                        } else {\n                            rowNos += `,${i.rowNo}`\n                        }\n                    })\n                    api.deleteRecordSub(\n                        this.selectedRows2[0].runRecordCode,\n                        rowNos\n                    ).then(res => {\n                        if (res.status == 201) {\n                            this.getSub()\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleCloseSub () {\n            this.resetTempSub()\n            this.$refs.tempSub.resetFields()\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectChange (val) {\n            if (!val.length) {\n                this.fromList = []\n                this.selectedRows = undefined\n                return false\n            }\n            this.selectedRows = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.tb.setCurrentRow(this.selectedRows)\n            if (this.selectedRows) {\n                this.getSub()\n            }\n        },\n        rowClick2 (val) {\n            this.$refs.subList.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        selectChange2 (val) {\n            this.selectedRows2 = val\n            // if (!val.length) {\n            //     this.selectedRows2 = undefined\n            //     return false\n            // }\n            // this.selectedRows2 = val[val.length - 1]\n            // if (val.length > 1) {\n            //     this.$refs.subList.clearSelection()\n            //     this.$refs.subList.toggleRowSelection(val[val.length - 1])\n            // }\n            // this.$refs.subList.setCurrentRow(this.selectedRows2)\n        }\n    }\n}\n",null]}