{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/equipmentMaintenance/tab3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/equipmentMaintenance/tab3.vue","mtime":1596610933400},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/el/equipmentArchives'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'dispatchOrderManagement',\n    components: {},\n    props: ['deviceCode'],\n    data () {\n        return {\n            fileList: [],\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                fileType: undefined\n            },\n            temp: {\n                fileType: undefined,\n                category: undefined,\n                fileCode: undefined,\n                readName: undefined\n            },\n            files: undefined,\n            tableKey: [0]\n        }\n    },\n    created () {\n    },\n\n    computed: {\n        ...mapState({\n            dt_file_equipment: state => state.eamDict.dt_file_equipment,\n            dt_file_type: state => state.eamDict.dt_file_type\n        }),\n        myHeader () {\n            return {\n                authToken: window.sessionStorage.getItem('authToken')\n            }\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.temp.fileType = \"document\"\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_file_equipment',\n            'dt_file_type'\n        ])\n    },\n    methods: {\n        getList () {\n            let fileType = 'document'\n            api.queryFile(this.deviceCode, fileType).then(res => {\n                this.list = res.data\n            })\n\n        },\n\n        value () { },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n\n        handleDownload () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow) {\n                    api.download(this.selectlistRow.readName).then(res => {\n                        var blob = new Blob([res.data],\n                            { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document;charset=utf-8' }) //application/vnd.openxmlformats-officedocument.wordprocessingml.document这里表示doc类型\n                        var contentDisposition = res.headers['content-disposition']  //从response的headers中获取filename, 后端response.setHeader(\"Content-disposition\", \"attachment; filename=xxxx.docx\") 设置的文件名;\n                        let filename = contentDisposition.substring(contentDisposition.indexOf('=') + 1)\n                        var downloadElement = document.createElement('a')\n                        var href = window.URL.createObjectURL(blob) //创建下载的链接\n                        downloadElement.style.display = 'none'\n                        downloadElement.href = href\n                        downloadElement.download = filename //下载后文件名\n                        document.body.appendChild(downloadElement)\n                        downloadElement.click() //点击下载\n                        document.body.removeChild(downloadElement) //下载完成移除元素\n                        window.URL.revokeObjectURL(href) //释放掉blob对象\n                    })\n\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '请选择一条信息',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteFile(this.selectlistRow.fileCode).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        init (val) {\n            this.subList = val\n            this.getList()\n        },\n        fileExceed () {\n            this.$message.error('一次最多上传10个文件')\n        },\n\n        beforeUpload (file) {\n            var testmsg = file.name.substring(file.name.lastIndexOf('.') + 1)\n            const extension = testmsg === 'xls'\n            const extension2 = testmsg === 'xlsx'\n            const extension3 = testmsg === 'pdf'\n            const extension4 = testmsg === 'docx'\n            const extension5 = testmsg === 'pptx'\n            const extension6 = testmsg === 'txt'\n            const isLt2M = file.size / 1024 / 1024 < 10\n            if (!extension && !extension2 && !extension3 && !extension4 && !extension5 && !extension6) {\n                this.$message({\n                    message: '上传文件只能是 xls、xlsx、pdf、docx、txt 格式!',\n                    type: 'warning'\n                })\n            }\n            if (!isLt2M) {\n                this.$message({\n                    message: '上传文件大小不能超过 10MB!',\n                    type: 'warning'\n                })\n            }\n            return (extension || extension2 || extension3 || extension4 || extension5 || extension6) && isLt2M\n        },\n        handleChange (file, fileList) {\n            this.files = fileList\n        },\n        handleUpload () {\n            if (!this.subList) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择设备',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (!this.temp.category) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择文件类别',\n                    type: 'warning'\n                })\n                return false\n            }\n            var data = new FormData()\n            this.files.forEach(file => {\n                data.append('files', file.raw)\n            })\n            api.uploadFile(this.deviceCode, data, {\n                category: this.temp.category,\n                fileType: this.temp.fileType\n            }).then(() => {\n                this.$refs.upload.clearFiles()\n                this.$message({\n                    title: '成功',\n                    message: '上传成功',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getList()\n            })\n        },\n        uploadFile () {\n\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(\n                    val[val.length - 1],\n                    'selected'\n                )\n            }\n        }\n    }\n}\n",null]}