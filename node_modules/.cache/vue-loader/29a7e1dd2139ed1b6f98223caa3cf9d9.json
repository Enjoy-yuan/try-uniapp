{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/template/template2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/template/template2.vue","mtime":1596610933193},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport changeModuleSelect from '@/components/template/changeMoudleSelect'\n\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\nimport {\n    selectlists,\n    selecttree\n} from \"@/api/system/organization\";\nimport { mapState } from \"vuex\";\n\nexport default {\n    name: \"zzjg\",\n    components: { changeModuleSelect, Pagination },\n    data () {\n        return {\n            modalnum: null,//模板编号\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            //树高度样式\n            contentStyleObj: {\n                height: \"\"\n            },\n            treeData: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"organizationName\"\n            },\n            tableKey: 0,//表格索引，虚拟dom渲染表格时使用\n            list: [],\n            total: 0,\n            orgName: [],\n            listLoading: true,\n            listQuery: {\n                parentOrgCode: undefined,\n                currentPage: 1,\n                pageSize: 10,\n                organizationCode: undefined,\n                organizationName: undefined\n            }\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_org_type: state => state.dict.dt_org_type,\n            dt_org_function: state => state.dict.dt_org_function\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\n            \"dt_org_type\",\n            \"dt_org_function\"\n        ]);\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight();\n            this.setTreeHeight();\n        };\n        this.getList();\n        this.setTreeHeight();\n    },\n    methods: {\n        //模板变化\n        changeMoudle (val) {\n            this.$emit('changeSelect', val)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        treeGetList () {\n            //点击树查询\n            selectlists(this.listQuery).then(response => {\n                this.list = response.data.list;\n                this.total = response.data.pages.count;\n            });\n        },\n        getList () {\n            //查询组织列表\n            setTimeout(() => {\n                selectlists(this.listQuery).then(response => {\n                    let options = [this.dt_org_type, this.dt_org_function];\n                    response.data = this.$myFun.codeToName(response.data, options, [\n                        \"type\",\n                        \"businessFunction\"\n                    ]);\n                    this.list = response.data.list;\n                    this.total = response.data.pages.count;\n                }),\n                    selecttree().then(response => {\n                        //获取树数据\n                        this.treeData = this.$myFun.addTreeRoot(response.data);\n                        this.orgName = response.data.map(function (itmes) {\n                            return [itmes.rowId, itmes.organizationName];\n                        });\n                    });\n            }, 1.5 * 100);\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.page = 1;\n\n            selectlists(this.listQuery).then(response => {\n                let options = [this.dt_org_type, this.dt_org_function];\n                response.data = this.$myFun.codeToName(response.data, options, [\n                    \"type\",\n                    \"businessFunction\"\n                ]);\n                this.list = response.data.list;\n            });\n        },\n        //新增\n        handleCreate () {\n\n        },\n        //编辑\n        handleUpdate () {\n\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection(); //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val;\n                    this.currentSelectedRow = val[val.length - 1]\n                }\n            } else {\n                this.selectedRows = val;\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        //点击某行时执行\n        rowClick (val) {\n            if (this.isSingle) {\n                this.$refs.tb.clearSelection(); //清除其他行的选中\n            }\n            this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n        },\n        handleDelete () {\n            //删除\n\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight();\n        },\n        handleNodeClick (data) {\n            //点击树查询\n            this.temp.parentId = data.rowId;\n            this.listQuery.parentOrgCode = data.rowId;\n            this.treeGetList();\n        }\n    }\n};\n",null]}