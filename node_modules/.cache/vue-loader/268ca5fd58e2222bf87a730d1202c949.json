{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SPM/sparePartsPurchase/demandOrder/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SPM/sparePartsPurchase/demandOrder/index.vue","mtime":1596610933598},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/spm/sparePartsPurchase/demandOrder' // 增、删、改api引入\nimport Pagination from '@/components/Pagination'\nimport supplierSelect from '@/components/Select/suppierSelect'\nimport orgSelect from '@/components/Select/orgSelect'\nimport warehouseSelect from '@/components/Select/warehouse-select'\nimport { mapState } from 'vuex' // 基本数据引入\n\nexport default {\n    name: 'demandOrder',\n    components: { Pagination, supplierSelect, orgSelect, warehouseSelect },\n    data () {\n        return {\n            checkList: [],\n            theight: 0, //表格高度\n            list: [],\n            total: 0,\n            tableKey: [0, 1], //表格索引\n            listQuery: {\n                dt_requisitions_type: undefined,\n                materielCode: undefined,\n                state: 'srss20',\n                //查询\n                currentPage: 1,\n                pageSize: 15\n            },\n            temp: {\n                procurementClass: undefined,\n                demandDate: undefined,\n                applyOrgCode: undefined,\n                arriveWarehouseCode: undefined\n            },\n            rules: {\n                procurementClass: [\n                    {\n                        required: true,\n                        message: '采购类型不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                demandDate: [\n                    {\n                        required: true,\n                        message: '到货日期不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                applyOrgCode: [\n                    {\n                        required: true,\n                        message: '到货单位不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                arriveWarehouseCode: [\n                    {\n                        required: true,\n                        message: '到货仓库不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            dialogVisible: false,\n            supplierVisible: false,\n            selectedRows: [], //多选时选中的所有行\n            changedRows: [],\n            supplierRow: undefined,\n            isCancel: false\n        }\n    },\n    computed: {\n        // 过滤器下拉框item数据\n        ...mapState({\n            dt_requisitions_type: state => state.dict.dt_requisitions_type,\n            dt_purchase_class: state => state.dict.dt_purchase_class\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', [\n            'dt_requisitions_type',\n            'dt_purchase_class'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        setTimeout(() => {\n            this.getList()\n        }, 500)\n    },\n    methods: {\n        // 订单生成\n        handleGenerateOrder () {\n            if (!this.selectedRows.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请先选择订单',\n                    type: 'warning'\n                })\n                return\n            }\n\n            var str = this.selectedRows.every(item => {\n                return item.supplierCode\n            })\n            if (!str) {\n                this.$message({\n                    title: '警告',\n                    message: '请先选择供应商编码',\n                    type: 'warning'\n                })\n                return\n            }\n            var ids = this.selectedRows.map(item => {\n                return item.rowId\n            })\n\n            api.generateOrder(ids).then(res => {\n                if (res.status == 201) {\n                    this.getList()\n                    this.$message({\n                        title: '成功',\n                        message: '订单生成成功',\n                        type: 'success'\n                    })\n                }\n            })\n        },\n        // 供应商选择\n        confirmSupplier () {\n            if (this.supplierRow == undefined) {\n                this.update()\n            } else {\n                this.supplierVisible = false\n            }\n        },\n        handleSupplierData (supplier) {\n            if (supplier) {\n                if (this.supplierRow == undefined) {\n                    this.temp.supplierCode = supplier.supplierCode\n                    this.temp.supplierName = supplier.supplierName\n                } else {\n                    var targetRow = this.list.filter(\n                        item => item.rowId == this.supplierRow\n                    )[0]\n                    targetRow.supplierCode = supplier.supplierCode\n                    targetRow.supplierName = supplier.supplierName\n                    if (this.changedRows.indexOf(targetRow.rowId == -1)) {\n                        this.changedRows.push(targetRow.rowId)\n                    } else {\n                        return\n                    }\n                }\n            }\n        },\n        handleSave () {\n            var sum = 0\n            this.selectedRows.forEach(item => {\n                item.rowIds = [item.rowId]\n                api.patchRecords(item).then(res => {\n                    sum++\n                    if (res.status == 201 && sum == this.selectedRows.length) {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '保存成功',\n                            type: 'success'\n                        })\n                    }\n                })\n            })\n        },\n        handleChange (rowId) {\n            if (this.changedRows.indexOf(rowId) == -1) {\n                this.changedRows.push(rowId)\n            } else {\n                return\n            }\n        },\n        handleSupplier (row) {\n            if (row.isEditing) {\n                this.supplierRow = row.rowId\n                this.supplierVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请先勾选订单',\n                    type: 'warning'\n                })\n            }\n        },\n        handleCheckRow () { },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        getList () {\n            //获取表格数据\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = this.$myFun.codeToName(\n                    res.data,\n                    [this.dt_requisitions_type],\n                    ['requisitionsType']\n                ).list\n                this.total = res.data.pages.count\n                this.list.forEach(item => {\n                    item.isEditing = false\n                })\n                this.isCancel = false\n                this.changedRows = []\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                requisitionsType: undefined,\n                demandDate: undefined,\n                applyOrgCode: undefined,\n                arriveWarehouseCode: undefined\n            }\n        },\n        handleQuery () {\n            if (this.changedRows.length) {\n                this.$confirm(\n                    '当前有已修改的数据，确定要丢弃这些数据并刷新吗?',\n                    '提示',\n                    {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }\n                )\n                    .then(() => {\n                        this.changedRows = []\n                        this.isCancel = true\n                        //表格查询\n                        this.listQuery.currentPage = 1\n                        this.getList()\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        })\n                    })\n            } else {\n                this.changedRows = []\n                this.isCancel = true\n                //表格查询\n                this.listQuery.currentPage = 1\n                this.getList()\n            }\n        },\n        handleCreate () {\n            if (!this.selectedRows.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择订单',\n                    type: 'warning'\n                })\n                return\n            }\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.dialogVisible = true\n        },\n        handleCreate2 () {\n            if (!this.selectedRows.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择订单',\n                    type: 'warning'\n                })\n                return\n            }\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.supplierVisible = true\n        },\n        update () {\n            this.temp.rowIds = this.selectedRows.map(item => {\n                return item.rowId\n            })\n            if (this.dialogVisible) {\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        api.patchRecords(this.temp).then(res => {\n                            if (res.status == 201) {\n                                this.dialogVisible = false\n                                this.supplierVisible = false\n                                this.getList()\n                                this.$message({\n                                    title: '成功',\n                                    message: '保存成功',\n                                    type: 'success'\n                                })\n                            }\n                        })\n                    }\n                })\n            } else {\n                api.patchRecords(this.temp).then(res => {\n                    if (res.status == 201) {\n                        this.dialogVisible = false\n                        this.supplierVisible = false\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '保存成功',\n                            type: 'success'\n                        })\n                    }\n                })\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.supplierRow = undefined\n        },\n        selectChange (val) {\n            // 如果当前行已被修改还未保存，为防止丢失其他行已修改数据，不允许取消\n            if (this.selectedRows.length > val.length && !this.isCancel) {\n                var cancelRow = this.getArrDifference(this.selectedRows, val)[0]\n                if (this.changedRows.indexOf(cancelRow.rowId) == 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '该行已被修改，请先保存',\n                        type: 'warning'\n                    })\n                    this.$refs.tb.toggleRowSelection(cancelRow, 'selected')\n                    return false\n                }\n            }\n            this.selectedRows = val\n            this.list.forEach(item => {\n                item.isEditing = false\n                this.selectedRows.forEach(row => {\n                    if (row.rowId == item.rowId) {\n                        item.isEditing = true\n                    }\n                })\n            })\n        },\n        getArrDifference (arr1, arr2) {\n            return arr1.concat(arr2).filter(function (v, i, arr) {\n                return arr.indexOf(v) === arr.lastIndexOf(v)\n            })\n        }\n    }\n}\n",null]}