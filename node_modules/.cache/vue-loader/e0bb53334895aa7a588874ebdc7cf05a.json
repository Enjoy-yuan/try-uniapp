{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/productionExecution/productionDone/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/productionExecution/productionDone/index.vue","mtime":1596610933585},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/mes/dataBase/completionOfProduction'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'completionOfProduction',\n    components: { Pagination },\n    data() {\n        return {\n            list: [],\n            options: [],\n            productionOptions: [\n                {\n                    value: '贴片',\n                    label: 'PASTER'\n                },\n                {\n                    value: '涂覆',\n                    label: 'DEPOSITING'\n                },\n                {\n                    value: '组装',\n                    label: 'ASSEMBLE'\n                }\n            ],\n            listPaster: [],\n            listDepositing: [],\n            listAssemble: [],\n            materiaList: [],\n            hiddenPatch: false,\n            hiddenCoating: false,\n            hiddenAssemble: false,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                productionSegment: undefined,\n                workOrderCode: undefined\n            },\n            temp: {\n                workOrderCode: undefined,\n                productCode: undefined,\n                planNum: undefined,\n                completeNum: undefined,\n                unCompleteNum: undefined,\n                waitFixNum: undefined,\n                fixQualifiedNum: undefined,\n                scrapNum: undefined\n            },\n            listCount: [],\n            showPaster: true,\n            showDepositing: false,\n            showAssemble: false,\n            tableKey: [0, 1, 2]\n        }\n    },\n    created() {\n        // this.getList()\n    },\n    filters: {\n        splitState: function(e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_production_section: state => state.mesDict.dt_production_section\n        })\n    },\n    mounted() {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        this.getOptions()\n        this.$store.dispatch('mesDict/getDicData', ['dt_production_section'])\n    },\n    methods: {\n        getList() {},\n        getTemp() {\n            if (this.listQuery.productionSegment == 'PASTER') {\n                let stationCode = 'paster-tf003'\n                api.getRecord(this.listQuery.workOrderCode, stationCode).then(\n                    res => {\n                        this.temp = res.data\n                    }\n                )\n            } else if (this.listQuery.productionSegment == 'DEPOSITING') {\n                let stationCode = 'smear-tf004'\n                api.getRecord(this.listQuery.workOrderCode, stationCode).then(\n                    res => {\n                        this.temp = res.data\n                    }\n                )\n            } else if (this.listQuery.productionSegment == 'ASSEMBLE') {\n                let stationCode = 'assemble-tf002'\n                api.getRecord(this.listQuery.workOrderCode, stationCode).then(\n                    res => {\n                        this.temp = res.data\n                    }\n                )\n            }\n        },\n        getSummaries(param) {\n            const { columns } = param\n            const sums = []\n            columns.forEach((column, index) => {\n                if (index === 0) {\n                    sums[index] = '合计' //这里就是显示你要写的啥名字,是合计还是汇总什么\n                    return\n                }\n                switch (column.property) {\n                    //column.property是prop=\"highQuality\" prop里面的东西,实在不知道可以打印出来是什么\n                    case 'pcb_b': //这是是根据prop来判断是那一列的数据\n                        sums[index] = this.listCount.pcb_b //sums[index]是固定写法  this.getAllTotalData.levelOneTotal 表示的是每一空格是要写什么内容,this.getAllTotalData就是后台的数据\n                        break\n                    case 'solderPastePrint_b':\n                        sums[index] = this.listCount.solderPastePrint_b\n                        break\n                    case 'solderPasteDetection_b':\n                        sums[index] = this.listCount.solderPasteDetection_b\n                        break\n                    case 'paster_b':\n                        sums[index] = this.listCount.paster_b\n                        break\n                    case 'reflowSoldering_b':\n                        sums[index] = this.listCount.reflowSoldering_b\n                        break\n                    case 'opticsDetection_b':\n                        sums[index] = this.listCount.opticsDetection_b\n                        break\n                    case 'downBoard_b':\n                        sums[index] = this.listCount.downBoard_b\n                        break\n                    case 'pcb_a':\n                        sums[index] = this.listCount.pcb_a\n                        break\n                    case 'solderPastePrint_a':\n                        sums[index] = this.listCount.solderPastePrint_a\n                        break\n                    case 'solderPasteDetection_a':\n                        sums[index] = this.listCount.solderPasteDetection_a\n                        break\n                    case 'paster_a':\n                        sums[index] = this.listCount.paster_a\n                        break\n                    case 'reflowSoldering_a':\n                        sums[index] = this.listCount.reflowSoldering_a\n                        break\n                    case 'opticsDetection_a':\n                        sums[index] = this.listCount.opticsDetection_a\n                        break\n                    case 'downBoard_a':\n                        sums[index] = this.listCount.downBoard_a\n                        break\n                    case 'depositing_a':\n                        sums[index] = this.listCount.depositing_a\n                        break\n                    case 'depositingDetection':\n                        sums[index] = this.listCount.depositingDetection\n                        break\n                    case 'divideBoard':\n                        sums[index] = this.listCount.divideBoard\n                        break\n                    case 'moduleMeasure':\n                        sums[index] = this.listCount.moduleMeasure\n                        break\n                    case 'labourPlugIn':\n                        sums[index] = this.listCount.labourPlugIn\n                        break\n                    case 'waveSoldering':\n                        sums[index] = this.listCount.waveSoldering\n                        break\n                    case 'weldingSpotDetection':\n                        sums[index] = this.listCount.weldingSpotDetection\n                        break\n                    case 'depositing_b':\n                        sums[index] = this.listCount.depositing_b\n                        break\n                    case 'radiatorDepositingTcg':\n                        sums[index] = this.listCount.radiatorDepositingTcg\n                        break\n                    case 'depositingRiveting':\n                        sums[index] = this.listCount.depositingRiveting\n                        break\n                    case 'shellRiveting':\n                        sums[index] = this.listCount.shellRiveting\n                        break\n                    case 'functionDetection':\n                        sums[index] = this.listCount.functionDetection\n                        break\n                    case 'optesthesiaDetection':\n                        sums[index] = this.listCount.optesthesiaDetection\n                        break\n                    default:\n                        break\n                }\n            })\n            return sums\n        },\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery() {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        selectOption() {},\n        getOptions() {\n            let workOrderState = 'work_order20'\n            api.queryWorkOrderCode(workOrderState).then(res => {\n                this.options = res.data\n            })\n        },\n        handleCertain() {\n            if (!this.listQuery.productionSegment) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择工段',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (this.listQuery.productionSegment == 'PASTER') {\n                this.showPaster = true\n                this.showDepositing = false\n                this.showAssemble = false\n                api.queryRecords(this.listQuery).then(res => {\n                    this.listPaster = res.data.list\n                    this.listCount = res.data.count\n                })\n            } else if (this.listQuery.productionSegment == 'DEPOSITING') {\n                this.showDepositing = true\n                this.showPaster = false\n                this.showAssemble = false\n                api.queryRecords(this.listQuery).then(res => {\n                    this.listDepositing = res.data.list\n                    this.listCount = res.data.count\n                })\n            } else if (this.listQuery.productionSegment == 'ASSEMBLE') {\n                this.showAssemble = true\n                this.showDepositing = false\n                this.showPaster = false\n                api.queryRecords(this.listQuery).then(res => {\n                    this.listAssemble = res.data.list\n                    this.listCount = res.data.count\n                })\n            }\n            if (this.listQuery.workOrderCode) {\n                this.getTemp()\n            } else {\n                this.temp = {\n                    workOrderCode: undefined,\n                    productCode: undefined,\n                    planNum: undefined,\n                    completeNum: undefined,\n                    unCompleteNum: undefined,\n                    waitFixNum: undefined,\n                    fixQualifiedNum: undefined,\n                    scrapNum: undefined\n                }\n            }\n        },\n        handleCompletion() {\n            if (this.listQuery.workOrderCode && this.temp.workOrderCode) {\n                let dto = {\n                    method: 'COMPLETED',\n                    qualifiedNumber: this.temp.qualifiedNum,\n                    scrapNumber: this.temp.scrapNum,\n                    unCompleteNumber: this.temp.unCompleteNum\n                }\n                api.addRecord(this.listQuery.workOrderCode, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '完工成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.listQuery.workOrderCode = undefined\n                    this.getOptions()\n                    this.resetTemp()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择随工单号',\n                    type: 'warning'\n                })\n            }\n        },\n        handleCompulsoryCompletion() {\n            if (this.listQuery.workOrderCode && this.temp.workOrderCode) {\n                let dto = {\n                    method: 'FORCED_COMPLETED',\n                    qualifiedNumber: this.temp.qualifiedNum,\n                    scrapNumber: this.temp.scrapNum,\n                    unCompleteNumber: this.temp.unCompleteNum\n                }\n                api.addRecord(this.listQuery.workOrderCode, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '完工成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.listQuery.workOrderCode = undefined\n                    this.getOptions()\n                    this.resetTemp()\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择随工单号',\n                    type: 'warning'\n                })\n            }\n        },\n        resetTemp() {\n            this.temp = {\n                workOrderCode: undefined,\n                productCode: undefined,\n                planNum: undefined,\n                completeNum: undefined,\n                unCompleteNum: undefined,\n                waitFixNum: undefined,\n                fixQualifiedNum: undefined,\n                scrapNum: undefined\n            }\n            this.listPaster = []\n            this.listDepositing = []\n            this.listAssemble = []\n        }\n    }\n}\n",null]}