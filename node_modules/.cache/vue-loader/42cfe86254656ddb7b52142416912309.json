{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogMaterial.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogMaterial.vue","mtime":1596610933150},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Tree from \"@/components/Tree\"\nimport { queryRecords } from '@/api/data-base/materiel'\nimport { mapState } from \"vuex\"\nimport Pagination from '@/components/Pagination' // 分页组件\n// import { queryRecords } from '@/api/data-base/materiel'\nimport { DICT_CODE, TWO_STATE_OPTIONS } from \"@/utils/constant\"\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\n\nexport default {\n    name: 'dialogWlxzbyzsj',\n    components: { caiGou, Pagination, Tree },\n    //是否多选，名称，是否必须选择\n    props: ['unMutiple', 'isRequired', 'title'],\n    data () {\n        return {\n            valueType: 'code',//code返回code name,row返回一行\n            treeType: 'materielCategory',\n            isEdit: false,\n            treeParams: {\n                orgCode: null\n            },\n            treeStyleObj: {\n                height: '440px',\n                overflow: 'auto'\n            },\n            DICT_CODE: DICT_CODE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            listAll: null,//备选项\n            listSelected: [],//已选项\n            dialogVisible: false,\n            totalAll: 0,//总条数\n            totalSelected: 0,//选中的条数 暂未使用\n            activeName: 'first',//tab激活内容\n            tableKey: [0, 1, 2],//表格索引\n            currentSelectedRow: null,\n            checkProp: ['materialCode', 'materialCode'],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                purchaseOrg: null,\n                // materielType: null,\n                materialClassification: null,\n                // materielGroup: null,\n                materialCode: null,\n                materialName: null\n            },//备选项查询条件\n            filterConfig: [\n                { type: 'selectcaiGou', label: '采购组织', prop: 'purchaseOrg', width: '' },\n                // { type: 'dictSelect', dType: 'dt_materiel_type', label: '物料类型', prop: 'materielType', width: '', class: 'filter-item ml_5' },\n                // { type: 'dictSelect', dType: 'dt_materiel_classify', label: '物料分类', prop: 'materialClassification', width: '', class: 'filter-item ml_5' },\n                // { type: 'dictSelect', dType: 'dt_materiel_group', label: '物料组', prop: 'materielGroup', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料编码', prop: 'materielCode', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料名称', prop: 'materielName', width: '', class: 'filter-item ml_5' },\n            ],\n            mainTitle: [\n                { width: '120', align: 'left', label: '物料编码', prop: 'materielCode' },\n                { width: '150', align: 'left', label: '物料名称', prop: 'materielName' },\n                { width: '120', align: 'left', label: '物料名称(英文)', prop: 'materielEngName' },\n                { width: null, align: 'left', label: '物料类型', prop: 'materielTypeName' },\n                { width: null, align: 'left', label: '物料分类', prop: 'materielClassify' },\n                { width: null, align: 'left', label: '物料分类名称', prop: 'materielClassifyName' },\n                { width: null, align: 'left', label: '物料组', prop: 'materielGroupName' },\n                { width: null, align: 'left', label: '规格', prop: 'specification' },\n                { width: null, align: 'left', label: '材质', prop: 'materialQuality' },\n                { width: null, align: 'left', label: '计量单位', prop: 'measuringUnitName' },\n            ]//备选项主表头数据\n        }\n    },\n    watch: {\n        'listQuery.purchaseOrg' (val) {\n            this.treeParams.orgCode = val\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_manufacture_diff: state => state.dict.dt_manufacture_diff,\n            dt_unit_type: state => state.dict.dt_unit_type,\n            dt_timeunit: state => state.dict.dt_timeunit,\n            dt_srm_pdz: state => state.dict.dt_srm_pdz,\n            dt_srm_pc0: state => state.dict.dt_srm_pc0,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_manufacture_diff\", 'dt_unit_type', 'dt_timeunit', 'dt_srm_pdz', 'dt_srm_pc0'])\n        this.getList()\n    },\n    methods: {\n        //选中某一行\n        checked (i) {\n            this.$refs.tbselect.toggleRowSelection(this.listAll[i], true)\n        },\n        handleQuery () {//查询备选项\n            this.getList()\n        },\n        getList () {//备选项查询\n            queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_manufacture_diff, this.dt_unit_type, this.dt_unit_type, this.dt_timeunit, this.dt_srm_pdz, this.dt_srm_pc0,]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['makeDistinction', 'purchaseUmo', 'basicUmo', 'leadTimeUnit', 'purchaseTriggeringMethod', 'purchaseStrategy'])\n                this.listAll = res.data.list\n                this.totalAll = res.data.pages.count\n                if (this.listSelected) {\n                    this.listSelected.forEach(items => {\n                        this.listAll.forEach((item, index) => {\n                            if (item[this.checkProp[0]] === items[this.checkProp[1]]) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        })\n                    })\n                }\n            })\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true\n            val.forEach(item => {\n                if (item.materialCode === row.materialCode) {\n                    isuncheck = false\n                }\n            })\n            return isuncheck\n        },\n        selectMain (val, row) {\n            if (this.unMutiple) {\n                let isuncheck = this.checkUnsel(val, row)\n                if (!isuncheck) {\n                    let arr = []\n                    arr.push(val[val.length - 1])\n                    this.listSelected = arr\n                    if (val.length > 1) {\n                        this.$refs.tbselect.clearSelection()\n                        this.$refs.tbselect.toggleRowSelection(val[val.length - 1], 'selected')\n                    }\n                } else {\n                    this.listSelected = []\n                }\n            } else {\n                let isuncheck = this.checkUnsel(val, row)\n                if (!isuncheck) {\n                    if (this.listSelected) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false\n                            this.listSelected.forEach((item) => {\n                                if (item.materialCode === items.materialCode) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.listSelected.push(val[indexv])\n                            }\n                        })\n                    } else {\n                        this.listSelected = val\n                    }\n                } else {\n                    this.listSelected = this.listSelected.filter(item => {\n                        return item.materialCode !== row.materialCode\n                    })\n                }\n            }\n        },\n        //供应商选择确定\n        dialogConfirm () {\n            if (this.isRequired && this.listSelected) {\n                if (this.listSelected.length === 0) {\n                    this.$message({ type: 'warning', message: '请选择一条数据' })\n                } else {\n                    this.$emit('handleConfirm', this.listSelected)\n                    this.dialogVisible = false\n                }\n            } else {\n                if (this.listSelected) {\n                    if (this.listSelected.length === 0) {\n                        if (this.valueType === 'code') {\n                            this.$emit('handleConfirm', [{ materialCode: null, materialName: null }])\n                        } else {\n                            this.$emit('handleConfirm', null)\n                        }\n                    } else {\n                        this.$emit('handleConfirm', this.listSelected)\n                    }\n                } else {\n                    if (this.valueType === 'code') {\n                        this.$emit('handleConfirm', [{ materialCode: null, materialName: null }])\n                    } else {\n                        this.$emit('handleConfirm', null)\n                    }\n                }\n                this.dialogVisible = false\n            }\n        },\n        setTreeDatas (classCode) {\n            this.$set(this.listQuery, 'materialClassification', classCode)\n            this.handleQuery()\n        }\n    }\n}\n",null]}