{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processFristaid/addUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processFristaid/addUser.vue","mtime":1596610934255},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\nimport {\n    selectlists,\n    selecttree\n} from \"@/api/system/organization\";\nimport { mapState } from \"vuex\";\nexport default {\n    name: \"organizationStructure\",\n    components: { Pagination },\n    data () {\n        return {\n            treeData: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"organizationName\"\n            },\n            tableKey: 0,\n            theight: 0,//表格高度\n            list: [],\n            listSelected: [],\n            total: 0,\n            orgType: [],\n            activeName: \"\",\n            orgFun: [],\n            orgName: [],\n            listLoading: true,\n            listQuery: {\n                parentOrgCode: undefined,\n                currentPage: 1,\n                pageSize: 15,\n                organizationCode: undefined,\n                organizationName: undefined\n            },\n            showReviewer: false,\n            temp: {\n                state: 1,\n                email: undefined,\n                postalCode: undefined\n            },\n            dialogFormVisible: false,\n            dialogStatus: \"\",\n            dialogPvVisible: false,\n            pvData: [],\n            contentStyleObj: {\n                height: \"\"\n            },\n            downloadLoading: false\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_org_type: state => state.dict.dt_org_type,\n            dt_org_function: state => state.dict.dt_org_function\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\n            \"dt_org_type\",\n            \"dt_org_function\"\n        ]);\n        this.getList();\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight();\n            this.setTreeHeight();\n        };\n        this.setTreeHeight();\n    },\n    methods: {\n        treeGetList () {\n            //点击树查询\n            selectlists(this.listQuery).then(response => {\n                this.list = response.data.list;\n                this.total = response.data.pages.count;\n            });\n        },\n        getList () {\n            //查询组织列表\n            setTimeout(() => {\n                selectlists(this.listQuery).then(response => {\n                    let options = [this.dt_org_type, this.dt_org_function];\n                    response.data = this.$myFun.codeToName(response.data, options, [\n                        \"type\",\n                        \"businessFunction\"\n                    ]);\n                    this.list = response.data.list;\n                    this.total = response.data.pages.count;\n                }),\n                    selecttree().then(response => {\n                        //获取树数据\n                        this.treeData = this.$myFun.addTreeRoot(response.data);\n                        this.orgName = response.data.map(function (itmes) {\n                            return [itmes.rowId, itmes.organizationName];\n                        });\n                    });\n                if (this.listSelected) {\n                    this.listSelected.forEach(items => {\n                        this.list.forEach((item, index) => {\n                            if (item.rowId === items.rowId) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        })\n                    })\n                }\n            }, 1.5 * 100);\n        },\n        checked (i) {\n            this.$refs.tb_bx.toggleRowSelection(this.list[i], true);\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true;\n            val.forEach(item => {\n                if (item.rowId === row.rowId) {\n                    isuncheck = false;\n                }\n            });\n            return isuncheck;\n        },\n        selectMain (val, row) {\n            let isuncheck = this.checkUnsel(val, row);\n            if (!isuncheck) {\n                if (this.unMutiple) {\n                    if (val.length == 1) {\n                        this.listSelected = val;\n                    }\n                    else {\n                        this.$message({\n                            title: \"警告\",\n                            message: \"请选择一条信息\",\n                            type: \"warning\"\n                        });\n                    }\n                } else {\n                    if (this.listSelected) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false;\n                            this.listSelected.forEach((item) => {\n                                if (item.rowId === items.rowId) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.listSelected.push(val[indexv]);\n                            }\n                        })\n                    } else {\n                        this.listSelected = val;\n                    }\n                }\n            } else {\n                this.listSelected = this.listSelected.filter(item => {\n                    return item.rowId !== row.rowId;\n                })\n            }\n        },\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight();\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            if (val.length > 1) {\n                this.$refs.tb_a.clearSelection(); //清除其他行的选中\n                this.$refs.tb_a.toggleRowSelection(\n                    val[val.length - 1],\n                    \"selected\"\n                ); //单击行绑定点击事件\n            } else if (val.length === 1) {\n                this.selectlistRow = val;\n            }\n        },\n        rowClick (val) {\n            this.$refs.tb_a.clearSelection(); //清除其他行的选中\n            this.$refs.tb_a.toggleRowSelection(val); //单击行绑定点击事件\n        },\n        handleNodeClick (data) {\n            //点击树查询\n            this.temp.parentId = data.rowId;\n            this.listQuery.parentOrgCode = data.rowId;\n            this.treeGetList();\n        }\n    }\n};\n",null]}