{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processConfiguration/diaLog/dialog1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processConfiguration/diaLog/dialog1.vue","mtime":1600927611533},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/system/process/processConfiguration'\nimport { DICT_TYPE_OPTIONS } from '@/utils/constant'\n\nexport default {\n    name: 'dict',\n    components: {},\n    data () {\n        return {\n            id: null,\n            src: null,\n            iframeWin: null,\n            dialogVisible: false,\n            isSingle: false, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            variableList: [],\n            formList: {},\n            activeCollNames: ['1'],\n            activeCollNamesub: ['2'],\n            enableds: {\n                areaEnabled: false,\n                locationEnabled: false,\n                wmsEnabled: false\n            },\n            dictCode: undefined,\n            selectCode: [],\n            tableKey: [0, 1], //表格索引，虚拟dom渲染表格时使用\n            dictTypeOptions: DICT_TYPE_OPTIONS,\n            dictItems: [],\n            activityQuery: {\n                activityid: undefined,\n                inflows: undefined,\n                outflows: undefined,\n                prodefId: undefined,\n                type: undefined\n            }\n        }\n    },\n    mounted () {\n    },\n    methods: {\n        initForm (row) {\n            this.variableList = row.variableList\n            this.id = row.id\n            this.$set(this.formList, 'cancel', row.cancel === '0' ? false : true)\n            this.$set(this.formList, 'cancelnode', row.cancelnode)\n            this.$set(this.formList, 'modapper', row.modapper === '0' ? false : true)\n            this.$set(\n                this.formList,\n                'samepauto',\n                row.samepauto === '0' ? false : true\n            )\n            this.$set(this.formList, 'samepnext', row.samepnext)\n            this.$set(this.formList, 'servicename', row.servicename)\n            this.$set(this.formList, 'starturl', row.starturl)\n            this.$set(this.formList, 'webroot', row.webroot)\n        },\n        //前端表格保存\n        handleSaveTable (index, row) {\n            console.log(row)\n            this.variableList[index].isSave = false\n            this.variableList[index].isEdit = true\n        },\n        //前端表格编辑\n        // handleEditTable(index) {\n        //     this.variableList[index].rowEdit = true\n        // },\n        //前端表格删除\n        handleDeleteTable (index, row) {\n            this.variableList = this.variableList.filter(item => {\n                console.log(item.id, row.id)\n                return item.id !== row.id\n            })\n        },\n        handleCreate () {\n            let newValue = {\n                id: '',\n                name: '',\n                type: 'String',\n                value: '',\n                // isSave: true,\n                // isEdit: false,\n                editable: true //是否为不可修改数据\n            }\n            this.variableList.push(newValue)\n        },\n\n        handleSave () {\n            if (this.id && this.formList.cancelnode) {\n                this.formList.variableList = this.variableList\n                this.$set(\n                    this.formList,\n                    'cancel',\n                    this.formList.cancel === true ? 1 : 0\n                )\n                this.$set(\n                    this.formList,\n                    'modapper',\n                    this.formList.modapper === true ? 1 : 0\n                )\n                this.$set(\n                    this.formList,\n                    'samepauto',\n                    this.formList.samepauto === true ? 1 : 0\n                )\n                api.infoConfig(this.id, this.formList).then(res => {\n                    console.log(res)\n                    this.dialogVisible = false\n                    this.$emit('refresh')\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '选择有意义的流程节点'\n                })\n            }\n        },\n        // 撤回配置变化\n        cancelChange () {\n            this.$set(this.formList, 'cancelnode', '')\n            this.$set(this.formList, 'cancelnodeName', '')\n        },\n        //点击节点后触发\n        nodeClick (data) {\n            if (data.params.data.type === 'userTask') {\n                this.$set(this.formList, 'cancel', true)\n                this.$set(this.formList, 'cancelnode', data.params.data.activityId)\n                this.$set(this.formList, 'cancelnodeName', data.params.data.name)\n            }\n        }\n    }\n}\n",null]}