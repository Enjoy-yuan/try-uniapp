{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/contractTemplate/specialPaymentMethod/content/dialog/addMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/contractTemplate/specialPaymentMethod/content/dialog/addMain.vue","mtime":1596610933611},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/contractManage/specialPaymentMethod\"\nimport * as api1 from \"@/api/project/srm/contractManage/paymentMethod\"\nimport { queryRecords } from \"@/api/project/srm/procurementDemand/divisionRules\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport dialogGysxz from '@/components/Dialog/dialogPlatformGys'//平台供应商选择\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\n\nexport default {\n    components: { dialogGysxz, caiGou },\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            temp: {\n                supplierCode: undefined,\n                regularPaymentPeriod: undefined,\n                regularPaymentType: undefined,\n                regularSettlementType: undefined,\n                createItemDTOList: null\n            },\n            tableKey: 0,\n            list: [],\n            dialogStatus: \"\",\n            dialogVisible: false,\n            Edit: false,\n            rules: {\n                purchaseOrg: [{ required: true, message: '采购组织不能为空', trigger: 'blur' }],\n                years: [{ required: true, message: '年度不能为空', trigger: 'blur' }],\n                requireFeedbackTime: [{ required: true, message: '要求反馈时间不能为空', trigger: 'blur' }],\n                number1: [{ required: true, message: '常规付款方式和不能为空', trigger: 'blur' }],\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pdr: state => state.dict.dt_srm_pdr,\n            dt_srm_pdt: state => state.dict.dt_srm_pdt,\n            dt_srm_pdu: state => state.dict.dt_srm_pdu,\n            dt_srm_pax: state => state.dict.dt_srm_pax,\n\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", ['dt_srm_pdr', 'dt_srm_pdt', 'dt_srm_pdu', 'dt_srm_pax'])\n    },\n    methods: {\n        //供应商选择确定\n        handleGysClick (val) {\n            console.log(val)\n            this.list = val\n        },\n        //获取商务经理名称\n        getBusinessName () {\n            let dto = {\n                purchaseOrg: this.temp.purchaseOrg,\n                divisionType: 'PBB1',\n                currentPage: 1,\n                pageSize: 15\n            }\n            queryRecords(dto).then(res => {\n                this.temp.businessManagerName = res.data.list[0].assigneeName\n                this.temp.businessManager = res.data.list[0].assignee\n            })\n            if (this.temp.purchaseOrg !== undefined) {\n                this.Edit = false\n            } else {\n                this.Edit = true\n            }\n        },\n        //获取付款方式\n        getPayment () {\n            if (this.temp.purchaseOrg !== undefined) {\n                console.log(1)\n                let dto = {\n                    purchaseOrg: this.temp.purchaseOrg,\n                    year: this.temp.years\n                }\n                api1.queryRecords(dto).then(res => {\n                    let options = [this.dt_srm_pdr, this.dt_srm_pdt, this.dt_srm_pdu]\n                    res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['paymentType', 'settlementType', 'paymentPeriod'])\n                    let dto = res.data.list\n                    if (res.data.pages.count > 0) {\n                        this.temp.number1 = dto[0].paymentTypeCN + '/' + dto[0].paymentPeriodCN + '/' + dto[0].settlementTypeCN\n                        this.temp.regularPaymentType = dto[0].paymentType//付款方式\n                        this.temp.regularPaymentPeriod = dto[0].paymentPeriod//付款周期\n                        this.temp.regularSettlementType = dto[0].settlementType//结算方式\n                        console.log(this.temp.regularPaymentType, dto[0].paymentType, 'pp')\n                    } else {\n                        this.temp.number1 = undefined\n                    }\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请先选择采购组织',\n                    type: 'warning',\n                    duration: 2000\n                })\n            }\n        },\n        //获取采购组织名称\n        selectName (val) {\n            this.temp.purchaseOrgName = val\n        },\n        handleDelete (index, val) {\n            this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                this.list = this.list.filter(item => {\n                    let isD = true\n                    if (val.rowId === item.rowId) {\n                        isD = false\n                    }\n                    return isD\n                })\n\n                this.$message({\n                    type: \"success\",\n                    message: \"删除成功\"\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n        },\n        handleCreate () {\n            this.$refs.refGys.dialogVisible = true\n            this.$nextTick(() => {\n                this.$refs.refGys.listSelected = [...this.list]\n                this.$refs.refGys.getList()\n            })\n        },\n        createData: throttle(function () {\n            let options = [this.dt_srm_pax]\n            this.list = this.$myFun.srmCodeToName(this.list, options, ['supplyClassification'])\n            let createItemDTOList = this.list.map(v => {\n                let a = {\n                    isArrivalPrinting: v.isArrivalPrinting,\n                    partsUse: v.partsUse,\n                    supplierCode: v.supplierCode,\n                    supplierName: v.supplierName,\n                    supplyClassification: v.supplyClassification,\n                    supplyClassificationName: v.supplyClassificationCN\n                }\n                return a\n            })\n            this.temp.createItemDTOList = createItemDTOList\n            this.$refs.dataForm.validate(valid => {\n                if (valid) {\n                    if (this.list.length > 0) {\n                        api.addRecord(this.temp).then(() => {\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.dialogVisible = false\n                            this.$emit('refresh')\n                        })\n                    } else {\n                        this.$message({\n                            title: '警告',\n                            message: '请先选择供应商信息',\n                            type: 'warning',\n                            duration: 2000\n                        })\n                    }\n                } else {\n                    return false\n                }\n            })\n        }, 2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleClose () {\n            this.resetTemp()\n            this.$refs.dataForm.resetFields()\n        },\n        resetTemp () {\n            this.temp = {\n                purchaseOrg: undefined,\n                years: undefined,\n                requireFeedbackTime: undefined,\n                number1: undefined\n            }\n        }\n    }\n}\n",null]}