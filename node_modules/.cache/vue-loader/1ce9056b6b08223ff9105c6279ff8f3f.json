{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/purchaseStorage/qaJudge/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/purchaseStorage/qaJudge/index.vue","mtime":1596610934181},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/wms/purchaseStorage/qaJudge'\n\nimport Pagination from \"@/components/Pagination\";\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: \"storageCheck\",\n    components: { Pagination },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list_a: [],\n            total_a: 0,\n            listQuery_a: {\n                currentPage: 1,\n                pageSize: 15,\n                state: 'jqc1'\n            },\n            list_a_1: [],\n            total_a_1: 0,\n            listQuery_a_1: {\n                currentPage: 1,\n                pageSize: 15,\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            dialogFormVisible: false,\n            temp: {},\n            rules: {\n                businessType: [\n                    { required: true, message: this.$t('validate.required'), trigger: 'blur' },\n                ],\n            },\n            dto: {}\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_band_type: state => state.dict.dt_band_type\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_band_type']);\n        this.setTableHeight();\n        this.getList_a();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        getList_a () {//获取质检判定单主表\n            api.getData_a(this.listQuery_a).then(res => {\n                res = res.data;\n                this.list_a = res.list\n                this.total_a = res.pages.count\n            })\n        },\n        getList_a_1 () {//获取判定单从表\n            this.listQuery_a_1.jqcOrderNumber = this.selectlistRow_a.jqcOrderNumber || this.selectlistRow_a.jqcOrderNumber\n            api.getData_a_1(this.listQuery_a_1).then(res => {\n                res = res.data;\n                this.list_a_1 = res.list.map(v => {\n                    for (const key in this.selectlistRow_a) {\n                        if (!v.hasOwnProperty(key)) {\n                            v[key] = this.selectlistRow_a[key]\n                        }\n                    }\n                    return v\n                })\n                this.total_a_1 = res.pages.count\n            })\n            api.getArea(this.selectlistRow_a.warehouseCode).then(resa => {\n                resa = resa.data;\n                this.areaList = resa;\n            });\n        },\n        getLocatorList (warehouseCode, areaCode, i) {\n            api.getLocator(warehouseCode, areaCode).then(res => {\n                res = res.data;\n                this.$set(this.locatorList, i, res);\n            });\n        },\n        changeAreaSel (areaCode, i) {\n            this.getLocatorList(this.selectlistRow_a.warehouseCode, areaCode, i);\n        },\n        selectRow_a (val) {//质检单主表选中事件\n\n            this.selectlistRow_a = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.dt_a.clearSelection()\n                this.$refs.dt_a.toggleRowSelection(val.pop())\n            }\n            if (this.selectlistRow_a) {\n                this.getList_a_1()\n            } else {\n                this.list_a_1 = []\n                this.total_a_1 = 0\n            }\n        },\n        clickRow_a (val) {//质检主表点击事件\n            this.selectlistRow_a = val\n            this.$refs.dt_a.clearSelection()//清除其他行的选中\n            this.$refs.dt_a.toggleRowSelection(val)//单击行绑定点击事件\n        },\n        selectRow_a_1 () {\n\n        },\n        qualityConfirmation () {//明细判定更新\n            api.update_a_1(this.dto, this.temp).then(() => {\n                this.$message({\n                    title: \"成功\",\n                    message: \"判定成功\",\n                    type: \"success\"\n                });\n                this.getList_a_1()\n            })\n            this.dialogFormVisible = false\n\n        },\n        handleEdit (index, row) {//明细判定按钮\n            this.dto = {\n                jqcOrderNumber: this.selectlistRow_a.jqcOrderNumber,\n                jqcRowNo: row.jqcRowNo\n            }\n            this.dialogFormVisible = true\n            api.getData_a_2(this.dto.jqcOrderNumber, this.dto.jqcRowNo).then(res => {\n                res = res.data;\n                for (const key in this.selectlistRow_a) {\n                    if (this.selectlistRow_a.hasOwnProperty(key)) {\n                        res[key] = this.selectlistRow_a[key];\n                    }\n                }\n                this.temp = res\n            })\n        },\n        determineCommit () {//判定确认\n            this.dto = {\n                jqcOrderNumber: this.selectlistRow_a.jqcOrderNumber,\n                method: 'COMMIT',\n            }\n            api.update_a(this.dto).then(() => {\n                this.$message({\n                    title: \"成功\",\n                    message: \"质检判定成功\",\n                    type: \"success\"\n                });\n                this.getList_a()\n            })\n        }\n    }\n};\n",null]}