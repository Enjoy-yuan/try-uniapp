{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/RF/troubleshooting/repairTime/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/RF/troubleshooting/repairTime/index.vue","mtime":1596610933427},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/rf/repairTime'\nimport deviceType from '../../../components/deviceTypeSelect'\nimport useDept from '../../../components/useDeptSelect'\nimport deviceSelect from '../../../components/singleDeviceSelect'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'repairTime',\n    components: { Pagination, deviceType, useDept, deviceSelect },\n    data () {\n        return {\n            chart1: undefined,\n            chart2: undefined,\n            chart3: undefined,\n            list1: null,\n            list2: null,\n            list3: null,\n            total: 0,\n            total2: 0,\n            theight: 0, //表格高度\n            timeRange: null,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n                fmStatDimensionality: 'FMSD_DEVICE_TYPE',\n                deviceCode: undefined,\n                useDept: undefined,\n                deviceType: undefined\n            },\n            listQuery2: {\n                currentPage: 1,\n                pageSize: 15,\n                fmStatDimensionality: 'FMSD_DATE'\n            },\n            deviceVisible: false,\n            tableKey: 0\n        }\n    },\n    watch: {\n        timeRange (val) {\n            if (val) {\n                this.listQuery.startTime = val[0]\n                this.listQuery.endTime = val[1]\n            } else {\n                delete this.listQuery.startTime\n                delete this.listQuery.endTime\n            }\n        },\n        'listQuery.fmStatDimensionality' (val) {\n            this.listQuery = {\n                currentPage: 1,\n                pageSize: 15,\n                fmStatDimensionality: val,\n                deviceCode: undefined,\n                useDept: undefined,\n                deviceType: undefined\n            }\n            this.$refs.deviceType.valueTitle = ''\n        },\n\n    },\n    created () {\n\n    },\n    computed: {\n        ...mapState({\n            dt_f_m_stat_dimensionality: state => state.eamDict.dt_f_m_stat_dimensionality.filter(\n                item => item.dictItemKey != 'FMSD_DATE'\n            ),\n            dt_maintain_type: state => state.eamDict.dt_maintain_type,\n            dt_maintain_grade: state => state.eamDict.dt_maintain_grade\n        })\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', ['dt_f_m_stat_dimensionality', 'dt_maintain_type', 'dt_maintain_grade'])\n        this.setTableHeight()\n        //窗口变化\n        this.getList()\n        window.onresize = () => {\n            this.setTableHeight()\n            this.chart1.resize()\n            this.chart2.resize()\n            this.chart3.resize()\n        }\n    },\n    methods: {\n        confirmDevice (val) {\n            this.listQuery.deviceCode = val.deviceCode\n        },\n        handleDevice () {\n            if (this.listQuery.fmStatDimensionality != 'FMSD_DEVICE') {\n                this.$message({\n                    title: '警告',\n                    message: '查询维度请选择设备',\n                    type: 'warning'\n                })\n                return\n            }\n            this.deviceVisible = true\n        },\n        // echarts渲染方法\n        getList () {\n            if (\n                this.listQuery.fmStatDimensionality == 'FMSD_DEVICE' &&\n                (!this.listQuery.deviceType ||\n                    !this.listQuery.useDept ||\n                    !this.listQuery.deviceCode)\n            ) {\n                this.$message({\n                    title: '警告',\n                    message: '请输入设备，设备类型，使用部门',\n                    type: 'warning'\n                })\n                return\n            }\n            const tmp = JSON.parse(JSON.stringify(this.listQuery))\n            // 饼图和柱图数据\n            api.queryRecords(this.listQuery).then(res => {\n                this.list1 = res.data.list\n                this.total = res.data.pages.count\n                let options = [this.dt_maintain_type, this.dt_maintain_grade]\n                this.list1 = this.$myFun.codeToName(this.list1, options, ['fieldCode', 'fieldCode'])\n                // 折线图带查询条件，单独查询日期维度\n                tmp.fmStatDimensionality = 'FMSD_DATE'\n                delete tmp.currentPage\n                delete tmp.pageSize\n                api.queryRecords(tmp).then(res => {\n                    this.list3 = res.data\n                    this.list2 = []\n                    this.formatChartData()\n                })\n            })\n        },\n        formatChartData () {\n            // 侧边选项\n            var pielegendData = this.list1.map(item =>\n                item.fieldName ? item.fieldName : item.fieldCodeCN\n            )\n            // 主数据\n            var pieData = this.list1.map(item => {\n                return {\n                    value: item.time,\n                    name: item.fieldName ? item.fieldName : item.fieldCodeCN\n                }\n            })\n            let opt1 = {\n                title: { text: '部门维修时间比' },\n                grid: {\n                    left: '7%',\n                    bottom: '0%',\n                    containLabel: true\n                },\n                tooltip: {\n                    //提示框组件\n                    trigger: 'item', //触发类型,'item'数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用。 'axis'坐标轴触发，主要在柱状图，折线图等会使用类目轴的图表中使用。\n                    showContent: true, //是否显示提示框浮层\n                    formatter: '{b0}: {c0}<br /> {d}%' //提示框浮层内容格式器，支持字符串模板和回调函数两种形式,模板变量有 {a}, {b}，{c}，{d}，{e}，分别表示系列名，数据名，数据值等\n                },\n                legend: {\n                    right: 100,\n                    top: 100,\n                    left: 'right',\n                    orient: 'vertical',\n                    data: pielegendData\n                },\n                series: [\n                    {\n                        name: '状态',\n                        type: 'pie',\n                        radius: '65%',\n                        center: ['40%', '50%'],\n                        data: pieData\n                    }\n                ]\n            }\n            let opt2 = {\n                title: { text: '部门维修时间' },\n                tooltip: {\n                    //提示框组件\n                    trigger: 'item', //触发类型,'item'数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用。 'axis'坐标轴触发，主要在柱状图，折线图等会使用类目轴的图表中使用。\n                    showContent: true, //是否显示提示框浮层\n                    formatter: '{b0}: {c0}' //提示框浮层内容格式器，支持字符串模板和回调函数两种形式,模板变量有 {a}, {b}，{c}，{d}，{e}，分别表示系列名，数据名，数据值等\n                },\n                grid: {\n                    left: '7%',\n                    bottom: '7%',\n                    containLabel: true\n                },\n                xAxis: {\n                    data: pielegendData\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        type: 'bar',\n                        data: pieData\n                    }\n                ]\n            }\n            let opt3 = {\n                title: { text: '维修时长统计' },\n                tooltip: {\n                    //提示框组件\n                    trigger: 'item', //触发类型,'item'数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用。 'axis'坐标轴触发，主要在柱状图，折线图等会使用类目轴的图表中使用。\n                    showContent: true, //是否显示提示框浮层\n                    formatter: '{b0}: {c0}' //提示框浮层内容格式器，支持字符串模板和回调函数两种形式,模板变量有 {a}, {b}，{c}，{d}，{e}，分别表示系列名，数据名，数据值等\n                },\n                grid: {\n                    left: '20%',\n                    right: '20%',\n                    bottom: '5%',\n                    containLabel: true\n                },\n                xAxis: {\n                    type: 'category',\n                    data: this.list3.map(item => item.fieldName ? item.fieldName : item.fieldCodeCN)\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: {\n                    name: '近七日收益',\n                    type: 'line',\n                    stack: '总量',\n                    data: this.list3.map(item => item.time)\n                }\n            }\n            setTimeout(() => {\n                if (document.getElementById('chartOne')) {\n                    this.chart1 = this.$echarts.init(document.getElementById('chartOne'))\n                    this.chart1.setOption(opt1, true)\n                }\n                if (document.getElementById('chartTwo')) {\n                    this.chart2 = this.$echarts.init(document.getElementById('chartTwo'))\n                    this.chart2.setOption(opt2, true)\n                }\n                if (document.getElementById('chartThree')) {\n                    this.chart3 = this.$echarts.init(document.getElementById('chartThree'))\n                    this.chart3.setOption(opt3, true)\n                }\n            }, 1000)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 200\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        selectRow (row) {\n            this.listQuery2 = JSON.parse(JSON.stringify(this.listQuery))\n            switch (this.listQuery.fmStatDimensionality) {\n                case 'FMSD_DEVICE_TYPE':\n                    this.listQuery2.deviceType = row.fieldCode\n                    break\n                case 'FMSD_USE_DEPT':\n                    this.listQuery2.useDept = row.fieldCode\n                    break\n                case 'FMSD_DEVICE':\n                    this.listQuery2.deviceCode = row.fieldCode\n                    break\n                case 'FMSD_MAINTAIN_TYPE':\n                    this.listQuery2.maintainType = row.fieldCode\n                    break\n                case 'FMSD_FAULT_TYPE':\n                    this.listQuery2.faultTypeCode = row.fieldCode\n                    break\n                case 'FMSD_MAINTAIN_GRADE':\n                    this.listQuery2.maintainGrade = row.fieldCode\n                    break\n            }\n            this.listQuery2.fmStatDimensionality = 'FMSD_DATE'\n            api.queryRecords(this.listQuery2).then(res => {\n                this.list2 = res.data.list\n                this.total2 = res.data.pages.count\n            })\n        }\n    }\n}\n",null]}