{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/main.vue","mtime":1596611178234},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\"\nimport Pagination from \"@/components/Pagination\"\nimport throttle from 'lodash/throttle'\nimport { mapState } from 'vuex'\nexport default {\n    name: \"equipmentProductsMain\",\n    props: ['title'],\n    components: { Pagination },\n    computed: {\n        ...mapState({\n            iot_locked_industry: state => state.iotDict.iot_locked_industry,\n            iot_trial_scenario: state => state.iotDict.iot_trial_scenario\n        })\n    },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: true,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            listLoading: false,\n            list: [],\n            total: 0,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                typeName: undefined\n            },\n            dialogFormVisible: false,\n            temp: {\n                ctacle: undefined,\n                industry: undefined,\n                typeCode: undefined,\n                typeName: undefined,\n                remark: undefined\n            },\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: null,//多选时选中的所有行\n            tableKey: 0,//表格索引\n            rules: {\n                ctacle: [\n                    {\n                        required: true,\n                        message: '请选择适用场景',\n                        trigger: 'change'\n                    }\n                ],\n                industry: [\n                    {\n                        required: true,\n                        message: '请选择所属行业',\n                        trigger: 'change'\n                    }\n                ],\n                typeCode: [\n                    {\n                        required: true,\n                        message: '设备类型编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[a-zA-Z0-9]{0,32}$/,\n                        message: '由大写字母、数字组成，长度为32',\n                        trigger: 'blur'\n                    }\n                ],\n                typeName: [\n                    {\n                        required: true,\n                        message: '设备类型名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' },\n                    {\n                        pattern: /^[\\u4e00-\\u9fa5]+$/,\n                        message: '只允许中文输入',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: undefined\n            }\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            this.listLoading = true\n            api.queryRecords(this.listQuery).then(response => {\n                this.list = response.data.list\n                let options = [this.iot_locked_industry, this.iot_trial_scenario]\n                this.list = this.$myFun.srmCodeToName(\n                    response.data.list,\n                    options,\n                    ['industry', 'ctacle']\n                )\n                this.total = response.data.pages.count\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        handleQuery: throttle(\n            function () {\n                this.listQuery.currentPage = 1\n                this.getList()\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 页面内跳转\n        toInfo (code) {\n            this.$emit('setCode', code)\n            this.$emit('setPage', 'info')\n        },\n        // 新增\n        handleCreate () {\n            this.dialogFormVisible = true\n        },\n        create: throttle(\n            function () {\n                this.$refs.tempRef.validate(valid => {\n                    if (valid) {\n                        api.addRecord(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.reTemp()\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        // 删除\n        handleDelete (code) {\n            this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    api.deleteRecord(code).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    }).catch(() => {\n                        this.getList()\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    })\n                })\n        },\n        // 表格选择\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        // 单条点击\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, \"selected\") //单击行绑定点击事件\n        },\n        // 关闭弹出层\n        handleClose () {\n            this.reTemp()\n        },\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        reTemp () {\n            this.temp = {}\n        }\n    }\n};\n",null]}