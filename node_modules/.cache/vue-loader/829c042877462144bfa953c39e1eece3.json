{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/measureUnit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/measureUnit/index.vue","mtime":1596610933336},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/data-base/measure-unit'\nimport Pagination from '@/components/Pagination'\nimport { DICT_CODE, TWO_STATE_OPTIONS } from '@/utils/constant'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'MeasureUnit',\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                measureCode: undefined,\n                measureName: undefined,\n                dimension: undefined\n            },\n            temp: {\n                measureCode: undefined,\n                measureName: undefined,\n                dimension: undefined,\n                transferRate: undefined,\n                isBase: 0,\n                isEnabled: 1,\n                remark: undefined\n            },\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            DICT_CODE: DICT_CODE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            rules: {\n                measureCode: [\n                    {\n                        required: true,\n                        message: '计量编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[A-Z-_0-9]{1,50}$/,\n                        message: '由大写字母，数字，—和_组成，长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ],\n                measureName: [\n                    {\n                        required: true,\n                        message: '计量名称长度不能超过100',\n                        trigger: 'blur'\n                    }\n                ],\n                dimension: [\n                    {\n                        required: true,\n                        message: '所属量纲不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                isBase: [\n                    {\n                        required: true,\n                        message: '是否基础单位不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                transferRate: [\n                    {\n                        required: true,\n                        message: '转换率不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/,\n                        message: '由正数组成，保留两位有效数，长度不能超过14',\n                        trigger: 'blur'\n                    }\n                ],\n                isEnabled: [\n                    {\n                        required: true,\n                        message: '计量名称长度不能超过100',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: [\n                    { max: 512, message: '备注长度为512内', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_dimension: state => state.dict.dt_dimension\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_dimension'])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleDelete () {\n            // 删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        const ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.measureCode\n                        })\n                        api.deleteRecord(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            }\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        handleDeleteBatch () {\n            if (this.selectCode.length == 0) {\n                this.$message.warning('请勾选记录！')\n                return\n            }\n            this.delete(this.selectCode)\n        },\n\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true\n                this.temp = this.selectlistRow[0]\n                api.getRecord(this.temp.measureCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                    this.$nextTick(() => {\n                        this.$refs['temp'].clearValidate()\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(this.temp.measureCode, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val\n        },\n        create () {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        cancel () {\n            this.dialogFormVisible = false\n        },\n        resetTemp () {\n            this.temp = {\n                measureCode: undefined,\n                measureName: undefined,\n                dimension: undefined,\n                transferRate: undefined,\n                isBase: 0,\n                isEnabled: 1,\n                remark: undefined\n            }\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        handleSelectionChange (selection) {\n            this.selectCode = selection.map(v => v.measureCode)\n        }\n    }\n}\n",null]}