{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/Select/wlxzbySourceList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/Select/wlxzbySourceList.vue","mtime":1596610933177},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/data-base/source-list\";\nimport orgSelect from \"@/components/Select/orgSelect.vue\";\nimport Pagination from \"@/components/Pagination\";\nimport { DICT_CODE, TWO_STATE_OPTIONS, DT_ORG_TYPE } from \"@/utils/constant\";\n\n\nexport default {\n    name: \"wlxz\",\n    components: { Pagination, orgSelect },\n    props: ['supplierCode', 'orgCode', 'materielselect', 'unMutiple', 'toOrgCode'],\n    data () {\n        return {\n            list: null,\n            listSelected: [],\n            total: 0,\n            parentsRows: null,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                materielCode: undefined,\n                supplierCode: undefined,\n                orgCode: undefined,\n                toOrgCode: undefined\n            },\n            selectCode: [],\n            tableKey: 0,\n            activeName2: 'first',\n            DICT_CODE: DICT_CODE,\n            TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            DT_ORG_TYPE: DT_ORG_TYPE\n        };\n    },\n    methods: {\n        checked (i) {\n            this.$refs.tbselect.toggleRowSelection(this.list[i], true);\n        },\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list;\n                this.total = res.data.pages.count;\n                if (this.listSelected) {\n                    this.listSelected.forEach(items => {\n                        items.snp2 = items.snp;\n                        this.list.forEach((item, index) => {\n                            if (item.materielCode === items.materielCode) {\n                                this.$nextTick(function () {\n                                    this.checked(index)\n                                })\n                            }\n                        })\n                    })\n                }\n            });\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1;\n            this.getList();\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val;\n            this.getList();\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val;\n            this.getList();\n        },\n        //检查是否取消勾选\n        checkUnsel (val, row) {\n            let isuncheck = true;\n            val.forEach(item => {\n                if (item.materielCode === row.materielCode) {\n                    isuncheck = false;\n                }\n            });\n            return isuncheck;\n        },\n        selectMain (val, row) {\n            if (this.unMutiple) {\n                let isuncheck = this.checkUnsel(val, row);\n                if (!isuncheck) {\n                    let arr = [];\n                    arr.push(val[val.length - 1])\n                    this.listSelected = arr;\n                    if (val.length > 1) {\n                        this.$refs.tbselect.clearSelection()\n                        this.$refs.tbselect.toggleRowSelection(val[val.length - 1], 'selected')\n                    }\n                } else {\n                    this.listSelected = [];\n                }\n            } else {\n                let isuncheck = this.checkUnsel(val, row);\n                if (!isuncheck) {\n                    if (this.listSelected) {\n                        val.forEach((items, indexv) => {\n                            let isSelected = false;\n                            this.listSelected.forEach((item) => {\n                                if (item.materielCode === items.materielCode) {\n                                    isSelected = true\n                                }\n                            })\n                            if (!isSelected) {\n                                this.listSelected.push(val[indexv]);\n                            }\n                        })\n                    } else {\n                        this.listSelected = val;\n                    }\n                } else {\n                    this.listSelected = this.listSelected.filter(item => {\n                        return item.materielCode !== row.materielCode;\n                    })\n                }\n            }\n        }\n    },\n    watch: {\n        supplierCode: {\n            handler (newValue) {\n                this.listQuery.supplierCode = newValue\n                this.getList()\n            },\n            deep: true\n        },\n        orgCode: {\n            handler (newValue) {\n                this.listQuery.orgCode = newValue\n                this.getList()\n            },\n            deep: true\n        },\n        toOrgCode: {\n            handler (newValue) {\n                this.listQuery.toOrgCode = newValue\n                this.getList()\n            },\n            deep: true\n        },\n    }\n\n};\n",null]}