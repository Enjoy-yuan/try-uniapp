{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/content/tabTaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/content/tabTaskList.vue","mtime":1603329739787},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/procurementDemand/divisionNeeds/divisionNeed\"\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'//供应商选择\nimport { mapState } from \"vuex\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\n\nimport Pagination from \"@/components/Pagination\"\n\n\nexport default {\n    name: \"tabTaskList\",\n    components: { caiGou, Pagination, dialogGysxz },\n    data () {\n        return {\n            theight: 0,//表格高度\n            isSingle: false,//表格是否单选 点击各按钮根据流程逻辑控制单多选\n            dataList: [],\n            itemList: [],//从表数据\n            total: 0,\n            totalItem: 0,\n            spanArr: [],\n            listQuery: {\n                //查询\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                orgCode: null,\n                materielType: null,\n                materielCode: null,\n                materielName: null,\n                supplierName: null,\n                state: null,\n                sourceType: null\n            },\n            DICT_CODE: DICT_CODE,\n            currentSelectedRow: null,//当前选中的行\n            selectedRows: [],//多选时选中的所有行\n            tableKey: 0, //表格索引\n            filterConfig: [\n                { type: 'selectcaiGou', label: '组织编码', prop: 'orgCode', width: '', copmNum: 0, class: 'filter-item' },\n                { type: 'dictSelect', dType: 'dt_materiel_type', label: '物料类型', prop: 'materielType', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料编码', prop: 'materielCode', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '物料名称', prop: 'materielName', width: '', class: 'filter-item ml_5' },\n                { type: 'inputBtnGys', label: '供应商', prop: 'supplierName', width: '', class: 'ml_5' },\n                { type: 'dictSelect', dType: 'dt_srm_pal', label: '状态', prop: 'state', width: '', optionArr: [], class: 'filter-item ml_5' },\n                { type: 'dictSelect', dType: 'dt_srm_pak', label: '来源', prop: 'sourceType', width: '', optionArr: [], class: 'filter-item ml_5' }\n            ],\n            oprateBtnConfig: [\n                { id: 0, class: 'filter-item', icon: 'el-icon-plus', clickMethod: 'handleFormation', name: '方案编制' },\n                { id: 1, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleClassSet', name: '分类设置' },\n                { id: 2, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handlePackage', name: '打包' },\n                { id: 3, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleunPackage', name: '取消打包' },\n                { id: 4, class: 'filter-item ml_5', icon: 'el-icon-warning-outline', clickMethod: 'handleAbort', name: '驳回' },\n                { id: 5, class: 'filter-item ml_5', icon: 'el-icon-plus', clickMethod: 'handleErrorFeedback', name: '异常反馈' }\n            ],\n            tableConfig: [\n                { label: '打包号', prop: 'packageNo', align: 'center', width: '150' },\n                { label: '状态', prop: 'stateCN', align: 'center', width: 'auto' },\n                { label: '物料图号', prop: 'mapNo', align: 'center', width: '150' },\n                { label: '特殊区分', prop: 'specialDistinction', align: 'center', width: 'auto' },\n                { label: '物料编码', prop: 'materielCode', align: 'center', width: '120' },\n                { label: '物料名称', prop: 'materielName', align: 'center', width: '120' },\n                { label: '责任人', prop: 'score', align: 'center', width: 'auto' },//wu\n                { label: '物料分类', prop: 'materielClassName', align: 'center', width: 'auto' },//name\n                { label: '供应商', prop: 'supplierName', align: 'center', width: '180' },\n                { label: '规格', prop: 'specification', align: 'center', width: 'auto' },\n                { label: '材质', prop: 'materielQuality', align: 'center', width: 'auto' },\n                { label: '重量', prop: 'weight', align: 'center', width: 'auto' },\n                { label: '是否关重件', prop: 'heavyParts', align: 'center', width: 'auto' },\n                { label: '关联单号', prop: 'associatedNo', align: 'center', width: 'auto' },\n                { label: '计量单位', prop: 'measurement', align: 'center', width: 'auto' },\n                { label: '确定目标价', prop: 'targetPrice', align: 'center', width: 'auto' },\n                { label: '要求完成时间', prop: 'completionDate', align: 'center', width: '150' },\n                { label: '组织编码', prop: 'orgCode', align: 'center', width: 'auto' },\n                { label: '项目号', prop: 'projectNo', align: 'center', width: 'auto' },\n                { label: '来源方式', prop: 'sourceType', align: 'center', width: 'auto' },\n                { label: '关联物料编码', prop: 'associatedMateriel', align: 'center', width: 'auto' },\n                { label: '设计师', prop: 'designerName', align: 'center', width: 'auto' },\n                { label: '任务分配人', prop: 'evaluationModel7', align: 'center', width: 'auto' },//wu\n                { label: '任务分配时间', prop: 'evaluationModel8', align: 'center', width: '150' },//wu\n                { label: '方案编号', prop: 'planNo', align: 'center', width: 'auto' }\n            ],\n            dialogConfig: [\n                { title: '供应商选择', unMutiple: true }\n            ]\n        }\n    },\n    created () { },\n    computed: {\n        ...mapState({\n            dt_materiel_type: state => state.dt_materiel_type,\n            // dt_materiel_classify: state => state.dict.dt_materiel_classify,//物料分类\n            dt_srm_pak: state => state.dict.dt_srm_pak,\n            dt_srm_pbd: state => state.dict.dt_srm_pbd,//分工状态\n            dt_srm_pal: state => state.dict.dt_srm_pal\n        })\n    },\n    mounted () {\n        // this.$store.dispatch(\"dict/getDicData\", [\"dt_materiel_type\", \"dt_materiel_classify\", \"dt_srm_pak\", \"dt_srm_pbd\", \"dt_srm_pal\"])\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_materiel_type\", \"dt_srm_pak\", \"dt_srm_pbd\", \"dt_srm_pal\"])\n\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 40\n        },\n        getSpanArr (data) {\n            data.sort(this.compareObj(\"packageNo\"))\n            for (var i = 0; i < data.length; i++) {\n                if (i === 0) {\n                    this.spanArr.push(1)\n                    this.pos = 0\n                } else {\n                    // 判断当前元素与上一个元素是否相同\n                    if (data[i].packageNo === data[i - 1].packageNo) {\n                        this.spanArr[this.pos] += 1\n                        this.spanArr.push(0)\n                    } else {\n                        this.spanArr.push(1)\n                        this.pos = i\n                    }\n                }\n            }\n        },\n        compareObj (prop) {\n            return function (obj1, obj2) {\n                let val1 = obj1[prop]\n                let val2 = obj2[prop]\n                if (val1 < val2) {\n                    return -1\n                } else if (val1 > val2) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        },\n        objectSpanMethod ({ rowIndex, columnIndex }) {\n            if (columnIndex === 2) {\n                const _row = this.spanArr[rowIndex]\n                const _col = _row > 0 ? 1 : 0\n                return {\n                    rowspan: _row,\n                    colspan: _col\n                }\n            }\n        },\n        //获取表格数据\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_pbd]\n                res.data = this.$myFun.codeToName(res.data, options, ['state'])\n                this.dataList = res.data.list\n                this.total = res.data.pages.count\n                this.spanArr = []\n                this.getSpanArr(this.dataList)\n            })\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        //操作按钮事件\n        oprateClick (id) {\n            switch (id) {\n                case 0: {\n                    this.handleFormation()\n                    break\n                }\n                case 1: {\n                    if (this.listQuery.orgCode) {\n                        if (this.selectedRows.length === 1) {\n                            this.$emit('showMC', this.listQuery.orgCode)\n                        } else {\n                            this.$message({\n                                type: 'warning',\n                                message: '请选择一条数据'\n                            })\n                        }\n                    } else {\n                        this.$message({\n                            type: 'warning',\n                            message: '请先选择组织编码'\n                        })\n                    }\n                    break\n                }\n                case 2: {\n                    this.handlePackage()\n                    break\n                }\n                case 3: {\n                    this.handleunPackage()\n                    break\n                }\n                case 4: {\n                    this.handleAbort()\n                    break\n                }\n                case 5: {\n                    this.$emit('showFB')\n                    break\n                }\n            }\n        },\n        handleFormation () {\n            if (this.selectedRows) {\n                console.log(this.selectedRows, '22222')\n                if (this.selectedRows.length > 0) {\n                    let editable = 'editable'\n                    let noArr = []\n                    for (let i = 0; i < this.selectedRows.length; i++) {\n                        if (!this.selectedRows[i].materielClassName) {\n                            editable = 'mc'\n                        }\n                        noArr.push(this.selectedRows[i].packageNo)\n                    }\n                    for (let i = 0; i < noArr.length - 1; i++) {\n                        if (noArr[i] !== noArr[i + 1]) {\n                            editable = 'packageNo'\n                        }\n                    }\n                    for (let i = 0; i < this.selectedRows.length; i++) {\n                        if (this.selectedRows[i].state !== 'PBD2') {\n                            editable = 'fb'\n                        }\n                    }\n                    if (editable === 'editable') {\n                        this.$emit('setFormationState', 'taskedit', this.selectedRows.map(v => {\n                            v.divisionId = v.rowId\n                            return v\n                        }))\n                    } else if (editable === 'mc') {\n                        this.$message({\n                            type: 'warning',\n                            message: '所选内容含有未进行分类设置的物料,不能进行方案编制'\n                        })\n                    } else if (editable === 'packageNo') {\n                        this.$message({\n                            type: 'warning',\n                            message: '如果打包号非空，一次只能选择一个打包号的数据'\n                        })\n                    } else if (editable === 'fb') {\n                        this.$message({\n                            type: 'warning',\n                            message: '只能选择发布状态的数据'\n                        })\n                    }\n                } else {\n                    this.$message({\n                        type: 'warning',\n                        message: '请选择一条数据'\n                    })\n                }\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请选择一条数据'\n                })\n            }\n        },\n        handlePackage () {\n            let rowIds = []\n            this.selectedRows.forEach(item => {\n                rowIds.push(item.rowId)\n            })\n            let cdata = {\n                // packageNo: this.selectedRows[0].packageNo,\n                rowIds: rowIds,\n                method: \"PACK\"\n            }\n\n            api.handleRecords(cdata).then(res => {\n                console.log(res)\n                this.$message({ type: 'success', message: '打包成功' })\n                this.handleQuery()\n            })\n        },\n        handleunPackage () {\n            let rowIds = []\n            this.selectedRows.forEach(item => {\n                rowIds.push(item.rowId)\n            })\n            let cdata = {\n                // packageNo: this.selectedRows[0].packageNo,\n                rowIds: rowIds,\n                method: \"CANCEL_PACK\"\n            }\n\n            api.handleRecords(cdata).then(res => {\n                console.log(res)\n                this.$message({ type: 'success', message: '取消打包成功' })\n                this.handleQuery()\n            })\n        },\n        handleAbort () {\n            if (this.selectedRows.length === 1) {\n                let cdata = {\n                    packageNo: this.selectedRows[0].packageNo,\n                    method: \"REJECT\"\n                }\n\n                api.handleRecords(cdata).then(res => {\n                    console.log(res)\n                    this.$message({ type: 'success', message: '驳回成功' })\n                    this.handleQuery()\n                })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请选择一条数据'\n                })\n            }\n        },\n        setMC (mdata) {\n            let rowIds = []\n            this.selectedRows.forEach(item => {\n                rowIds.push(item.rowId)\n            })\n            let cdata = {\n                materielClassDTO: {\n                    materielClass: mdata[0].classCode,\n                    materielClassName: mdata[0].className,\n                    rowId: this.selectedRows[0].rowId\n                },\n                method: \"UPDATE_MATERIEL_CLASS\"\n            }\n\n            api.handleRecords(cdata).then(res => {\n                console.log(res)\n                this.$message({ type: 'success', message: '分类设置成功' })\n                this.handleQuery()\n            })\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                    // this.selectSameProp(this.dataList, \"packageNo\", val)\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                    // this.itemList = []\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n                // this.selectSameProp(this.dataList, \"packageNo\", val)\n            }\n        },\n        // selectSameProp (data, prop, val) {\n        //     this.selectedRows = []\n        //     for (let j = 0; j < val.length; j++) {\n        //         for (var i = 0; i < data.length; i++) {\n        //             if (data[i][prop] === val[j][prop]) {\n        //                 this.selectedRows.push(data[i])\n        //             }\n        //         }\n        //     }\n        // },\n        showGys () {\n            this.$refs.refGys.dialogVisible = true\n        },\n        //供应商确认\n        handleGysClick (gysRows) {\n            this.listQuery.supplierCode = gysRows[0].supplierCode\n            this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName)\n        }\n    }\n};\n",null]}