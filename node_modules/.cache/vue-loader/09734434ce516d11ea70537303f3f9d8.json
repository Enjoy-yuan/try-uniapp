{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/dataBase/mesSupplier/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/dataBase/mesSupplier/index.vue","mtime":1596610933559},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/mes/dataBase/supplier'\nimport Pagination from '@/components/Pagination'\nimport { validatorEmail } from '@/utils/validate'\nimport { mapState } from 'vuex'\nimport ImportFile from '@/components/mesImportFile'\n\nexport default {\n    name: 'gyszsj',\n    components: { Pagination, ImportFile },\n    data() {\n        return {\n            list: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                supplierCode: undefined,\n                supplierName: undefined,\n                supplierType: undefined\n            },\n            temp: {\n                supplierCode: undefined,\n                supplierName: undefined,\n                supplierType: undefined,\n                supplyClassify: undefined,\n                supplierGrade: undefined,\n                address: undefined,\n                contact: undefined,\n                contactNumber: undefined,\n                email: undefined,\n                remark: undefined\n            },\n            supplierCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            modalNo: 'EXTP-BAS-0006', //导入模板编号\n            importDialogVisible: false,\n            rules: {\n                supplierCode: [\n                    {\n                        required: true,\n                        message: '供应商编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[A-Z-_0-9]{1,50}$/,\n                        message: '由大写字母，数字，—和_组成，长度不能超过50',\n                        trigger: 'blur'\n                    }\n                ],\n                supplierName: [\n                    {\n                        required: true,\n                        message: '供应商名称不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        max: 100,\n                        message: this.$t('validate.max32'),\n                        trigger: 'blur'\n                    }\n                ],\n                contact: [\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                contactNumber: [\n                    { max: 11, message: '请输入11位手机号', trigger: 'blur' }\n                ],\n                email: [{ validator: validatorEmail, trigger: 'blur' }],\n                address: [\n                    { max: 512, message: '长度不能超过512', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 512, message: '描述长度为512内', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_supplier_type: state => state.mesDict.dt_supplier_type,\n            dt_supplier_level: state => state.mesDict.dt_supplier_level,\n            dt_materiel_classify: state => state.mesDict.dt_materiel_classify\n        })\n    },\n    mounted() {\n        this.$store.dispatch('mesDict/getDicData', [\n            'dt_supplier_type',\n            'dt_supplier_level',\n            'dt_materiel_classify'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    methods: {\n        getList() {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        handleImport() {\n            this.importDialogVisible = true\n            this.$nextTick(() => {\n                this.$refs.importDialog.getList()\n            })\n        },\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery() {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleSizeChange(val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        handleCurrentChange(val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate() {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        selectRow(val) {\n            if (val.length > 1) {\n                this.$refs.tb_a.clearSelection() //清除其他行的选中\n                this.$refs.tb_a.toggleRowSelection(\n                    val[val.length - 1],\n                    'selected'\n                ) //单击行绑定点击事件\n            } else if (val.length === 1) {\n                this.selectlistRow = val\n            }\n        },\n        rowClick(val) {\n            this.$refs.tb_a.clearSelection() //清除其他行的选中\n            this.$refs.tb_a.toggleRowSelection(val) //单击行绑定点击事件\n        },\n        handleUpdate() {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.readonly = true //组织编码不可以编写\n                this.temp = this.selectlistRow[0] // copy obj\n                api.getRecord(this.temp.supplierCode).then(res => {\n                    this.temp = res.data\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                    this.$nextTick(() => {\n                        this.$refs['temp'].clearValidate()\n                    })\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update() {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    api.updateRecord(this.temp.supplierCode, this.temp).then(\n                        () => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }\n                    )\n                }\n            })\n        },\n        handleDelete() {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.supplierCode\n                        })\n                        api.deleteRecord(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        create() {\n            this.$refs.temp.validate(valid => {\n                if (valid) {\n                    api.addRecord(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetTemp() {\n            this.temp = {\n                supplierCode: undefined,\n                supplierName: undefined,\n                supplierType: undefined,\n                supplyClassify: undefined,\n                supplierGrade: undefined,\n                address: undefined,\n                contact: undefined,\n                contactNumber: undefined,\n                email: undefined,\n                remark: undefined\n            }\n        },\n        handleClose() {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        }\n    }\n}\n",null]}