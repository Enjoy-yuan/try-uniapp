{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/measureManage/instrumentFailure/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/measureManage/instrumentFailure/index.vue","mtime":1596610933518},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/deviceManagement/measureManage/instrumentFailure.js'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport throttle from 'lodash/throttle'\nexport default {\n    name: 'instrumentFailure', //计量仪表故障\n    components: { Pagination },\n    data () {\n        return {\n            modalnum: null, //模板编号，非模板页面可删\n            theight: 0, //表格高度\n            isSingle: true, //表格是否单选 点击各按钮根据流程逻辑控制单多选\n            list: [],\n            modelList: [],\n            modelSubList: [],\n            total: 0,\n            modelTotal: 0,\n            modelSubTotal: 0,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                modelName: undefined\n            },\n            modelListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                equipTypeCode: 'meter',\n                energyTypeCode: undefined,\n                modelName: undefined\n            },\n            modelSubListQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                equipTypeCode: 'product',\n                modelName: undefined\n            },\n            temp: {\n                rowId: undefined,\n                modelCode: undefined,\n                errType: undefined,\n                errInfo: undefined,\n                remark: undefined,\n                statusName: undefined\n            },\n            tempb: {\n                modelName: undefined\n            },\n            dialogFormVisible: false,\n            dialogModelVisible: false, // 仪表\n            dialogStatus: '',\n            currentSelectedRow: null, //当前选中的行\n            currentSelectedRowModel: null, //当前选中的行\n            currentSelectedRowModelSub: null, //当前选中的行\n            selectedRows: null, //多选时选中的所有行\n            selectedRowsModel: null,\n            selectedRowsModelSub: null,\n            tableKey: 0, //表格索引\n            subTableKey: 1,\n            subTableKeySub: 2,\n            rules: {\n                modelCode: [\n                    { required: true, message: '请选择仪表名称' },\n                    { max: 50, message: '长度不能超过50' }\n                ],\n                errInfo: [\n                    {\n                        required: true,\n                        message: '异常信息不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                errType: [\n                    {\n                        required: true,\n                        message: '请选择异常类型',\n                        trigger: 'blur'\n                    },\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ],\n                remark: [\n                    { max: 50, message: '长度不能超过50', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_model_err_info: state => state.emsDict.dt_model_err_info,\n            dt_sb_modelList: state => state.businessComponent.dt_sb_modelList,\n            dt_nh_energyType_list: state =>\n                state.businessComponent.dt_nh_energyType_list\n        })\n    },\n    mounted () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_model_err_info'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_sb_modelList',\n            'dt_nh_energyType_list'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n    },\n    destroyed () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_model_err_info'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_sb_modelList',\n            'dt_nh_energyType_list'\n        ])\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        deleteQuery () {\n            // 清除查询条件\n            this.listQuery.currentPage = 1\n            this.listQuery.modelName = undefined\n            this.getList()\n        },\n        //获取表格数据\n        getList () {\n            api.query(this.listQuery).then(response => {\n                response.data.list.map((v, i) => {\n                    v.serial = i + 1\n                })\n                this.list = response.data.list\n                this.total = response.data.pages.count\n            })\n        },\n        // 查询仪表\n        getModelList () {\n            api.queryeQuipmentLedger(this.modelListQuery).then(res => {\n                this.modelList = res.data.list\n                this.modelTotal = res.data.pages.count\n            })\n        },\n        // 查询设备\n        getModelSubList () {\n            api.queryeQuipmentLedger(this.modelSubListQuery).then(res => {\n                this.modelSubList = res.data.list\n                this.modelSubTotal = res.data.pages.count\n            })\n        },\n        resetTemp () {\n            this.temp.modelCode = undefined\n            this.tempb.modelName = undefined\n            this.temp.errInfo = undefined\n            this.temp.errType = undefined\n            this.temp.remark = undefined\n        },\n        //表格查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        // 弹出层搜索\n        handleModelQuery () {\n            this.modelListQuery.currentPage = 1\n            this.getModelList()\n        },\n        handleModelSubQuery () {\n            this.modelSubListQuery.currentPage = 1\n            this.getModelSubList()\n        },\n        //表格显示条数变化\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val\n            this.getList()\n        },\n        //表格当前页变化\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val\n            this.getList()\n        },\n        handleCreate () {\n            //新增按钮单击事件方法\n            this.resetTemp()\n            this.temp.modelCode = this.modelCode\n            this.temp.modelName = this.modelName\n            this.temp.errInfo = this.errInfo\n            this.temp.remark = this.remark\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        // 选择仪表\n        focus () {\n            this.getModelList()\n            this.dialogModelVisible = true\n        },\n        // 选择仪表带回\n        addMeasure () {\n            if (this.selectedRowsModel.length == 1) {\n                this.temp.modelCode = this.selectedRowsModel[0].modelCode\n                this.tempb.modelName = this.selectedRowsModel[0].modelName\n                this.dialogModelVisible = false\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //新增确认\n        create: throttle(\n            function () {\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        api.create(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //编辑按钮单击事件方法\n        handleUpdate () {\n            //编辑弹窗\n            if (this.currentSelectedRow && this.selectedRows.length == 1) {\n                api.queryItem(this.currentSelectedRow.rowId).then(res => {\n                    this.temp = res.data\n                    this.tempb.modelName = res.data.modelCode\n                    this.dialogStatus = 'update'\n                    this.dialogFormVisible = true\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //编辑确认\n        update: throttle(\n            function () {\n                this.$refs['temp'].validate(valid => {\n                    if (valid) {\n                        api.update(this.temp.rowId, this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        handleDelete () {\n            //删除按钮单击事件方法\n            if (this.selectedRows && this.selectedRows.length >= 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectedRows.forEach((val, index) => {\n                            ids[index] = val.rowId\n                        })\n                        api.deleteItems(ids).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            // if (this.isSingle) {\n            //     if (val.length > 1) {\n            //         this.$refs.tb.clearSelection() //清除其他行的选中\n            //         this.$refs.tb.toggleRowSelection(\n            //             val[val.length - 1],\n            //             'selected'\n            //         ) //单击行绑定点击事件\n            //     } else if (val.length === 1) {\n            //         this.selectedRows = val\n            //         this.currentSelectedRow = val[val.length - 1]\n            //     }\n            // } else {\n            //     this.selectedRows = val\n            //     this.currentSelectedRow = val[val.length - 1]\n            // }\n            this.selectedRows = val\n            this.currentSelectedRow = val[val.length - 1]\n        },\n        // 弹出层表格选择\n        selectModelChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.modelTb.clearSelection() //清除其他行的选中\n                    this.$refs.modelTb.toggleRowSelection(\n                        val[val.length - 1],\n                        'selected'\n                    ) //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRowsModel = val\n                    this.currentSelectedRowModel = val[val.length - 1]\n                }\n            } else {\n                this.selectedRowsModel = val\n                this.currentSelectedRowModel = val[val.length - 1]\n            }\n        },\n        selectModelSubChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.modelSubTb.clearSelection() //清除其他行的选中\n                    this.$refs.modelSubTb.toggleRowSelection(\n                        val[val.length - 1],\n                        'selected'\n                    ) //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRowsModelSub = val\n                    this.currentSelectedRowModelSub = val[val.length - 1]\n                }\n            } else {\n                this.selectedRowsModelSub = val\n                this.currentSelectedRowModelSub = val[val.length - 1]\n            }\n        },\n        //点击表格某一行\n        rowClick (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        rowModelClick (val) {\n            this.$refs.modelTb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        rowModelSubClick (val) {\n            this.$refs.modelSubTb.toggleRowSelection(val, 'selected') //单击行绑定点击事件\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        // 清除搜索条件\n        deleteModelQuery () {\n            this.modelListQuery.currentPage = 1\n            this.modelListQuery.energyTypeCode = undefined\n            this.modelListQuery.modelName = undefined\n            this.getModelList()\n        },\n        deleteModelSubQuery () {\n            this.modelSubListQuery.currentPage = 1\n            this.modelSubListQuery.modelName = undefined\n            this.getModelSubList()\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        }\n    }\n}\n",null]}