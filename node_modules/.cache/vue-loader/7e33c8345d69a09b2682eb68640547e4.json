{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/enableRules/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/enableRules/index.vue","mtime":1600927611446},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/data-base/enable-rules\";\nimport Pagination from \"@/components/Pagination\";\nimport orgSelect from \"@/components/Select/orgSelect.vue\";\nimport { DT_ORG_TYPE } from \"@/utils/constant\";\nimport * as api1 from \"@/api/data-base/warehouse\";\nimport materielDictItemTable from \"@/components/Table/materiel-dict-item-table.vue\";\nimport wlxzbyzsj from \"@/components/Select/wlxzbyzsj.vue\";\n\n\nexport default {\n    name: \"enableRules\",\n    components: {\n        Pagination,\n        orgSelect,\n        materielDictItemTable,\n        wlxzbyzsj\n    },\n    data () {\n        return {\n            list: null,\n            list1: null,\n            list2: null,\n            list3: null,\n            listSub: null,\n            tableKey: [0, 1, 2],//表格索引，虚拟dom渲染表格时使用\n            theight: 0,\n            stheight: 0,//右子表高度\n            tableKeysub: 0,\n            total: 0,\n            total1: 0,\n            total2: 0,\n            total3: 0,\n            totalSub: 0,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                orgName: undefined,\n                warehouseCode: undefined\n            },\n            listQuery1: {\n                currentPage: 1,\n                pageSize: 10,\n                warehouseCode: undefined,\n                batchRuleId: undefined\n            },\n            listQuery2: {\n                currentPage: 1,\n                pageSize: 10\n            },\n            listQuery3: {\n                currentPage: 1,\n                pageSize: 10\n            },\n            dto: {\n                batchRuleDiff: undefined,\n                batchRulePreparation: undefined\n            },\n            dtoupdate: {\n                batchRuleDiff: undefined,\n                batchRulePreparation: undefined\n            },\n            parentsRows3: null,\n            temp: {\n                orgName: undefined,\n                warehouseCode: undefined,\n                warehouseName: undefined,\n                ruleDivision: undefined,\n                ruleType: undefined,\n                ruleCode: undefined,\n                batchRule: undefined,\n                dataItem: undefined,\n                objCode: undefined,\n                remark: undefined,\n                typeCode: undefined,\n                typeName: undefined,\n                batchEnabled: undefined\n            },\n            dialogFormVisible: false,\n            dialogFormVisible1: false,\n            dialogFormVisible2: false,\n            typeDialogVisible: false,\n            partDialogVisible: false,\n            dialogStatus: \"\",\n\n            // DICT_CODE: DICT_CODE,\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            // TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n            rules: {}\n        };\n    },\n    created () {\n        this.getList();\n    },\n    mounted () {\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        };\n    },\n    methods: {\n        getList () {\n            this.list1 = []\n            this.listSub = []\n            api1.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list;\n                this.total = res.data.pages.count;\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            });\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() + 52;\n            this.stheight = this.theight / 2 - 23;\n        },\n        checked () {\n            this.$refs.tb.toggleRowSelection(this.list[0], true);//官网方法，重点\n        },\n        getList1 () {\n            this.listQuery1.warehouseCode = this.selectlistRow.warehouseCode;\n            api.queryRecords(this.listQuery1).then(res => {\n                this.list1 = res.data;\n                this.total1 = res.data.length;\n            });\n        },\n        getListSub () {\n            api.queryItems(this.selectlistRow3.rowId).then(res => {\n                this.listSub = res.data\n                this.totalSub = res.data.length\n            })\n        },\n\n        materialxz () { //物料选中中弹窗确认按钮\n            if (this.$refs.wlxzRef.listSelected.length > 0) {\n                const temp = this.$refs.wlxzRef.listSelected.map(v => {\n                    let temp = {\n                        warehouseCode: this.selectlistRow.warehouseCode,\n                        objectCode: v.materielCode,\n                        objectDescribe: v.materielName,\n                        batchRuleId: this.selectlistRow3.rowId\n                    };\n                    return temp;\n                });\n                this.createByActiveName(temp);\n                // this.partDialogVisible = false;\n            } else {\n                this.$message({\n                    title: this.$t(\"message.warning\"),\n                    message: this.$t(\"message.checkedplease\"),\n                    type: \"warning\"\n                });\n            }\n        },\n        //  selectPartRow(rows) { //父子通信\n        //     this.parentsRows = rows\n        // },\n        selectPartRow (rows) {\n            this.parentsRows = rows\n\n        },\n        selectRow (val) { //表一复选框选中方法\n            this.selectlistRow = val[val.length - 1];\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection();\n                this.$refs.tb.toggleRowSelection(val.pop());\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow);\n            if (this.selectlistRow) {\n                this.getList1();\n                this.listSub = []\n            }\n        },\n\n        selectRow1 (val) {//表一单击行选中方法\n            this.selectlistRow1 = val;\n            this.$refs.tb.clearSelection();\n            this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n        },\n\n        selectRow2 (val) { //新增编辑弹窗\n            this.selectlistRow2 = val;\n        },\n        selectRow3 (val) {//表二复选框选中方法\n            this.selectlistRow3 = val[val.length - 1];\n            if (val.length > 1) {\n                this.$refs.tb1.clearSelection();\n                this.$refs.tb1.toggleRowSelection(val.pop());\n            }\n            if (this.selectlistRow3) {\n                this.getListSub()\n            }\n        },\n        selectRowSub (val) {//表二单击行选中方法\n            this.selectlistRowSub = val;\n            this.$refs.tb1.clearSelection();\n            this.$refs.tb1.toggleRowSelection(val); //单击行绑定点击事件\n        },\n        selectRowfl (val) {\n            this.selectlistRowfl = val;\n        },\n        selectTypeRow (rows) {\n            const temp = rows.map(v => {\n                let temp = {\n                    warehouseCode: this.selectlistRow.warehouseCode,\n                    objectCode: v.dictItemKey,\n                    objectDescribe: v.dictItemValue,\n                    batchRuleId: this.selectlistRow3.rowId\n\n                };\n                return temp;\n            });\n            this.createByActiveName1(temp);\n        },\n\n\n        createByActiveName (temp) {\n            this.createBatch(temp);\n        },\n        createByActiveName1 (temp) {\n            this.createfl(temp);\n        },\n\n        createfl (temp) {\n            api.addRecordpc(this.selectlistRow3.rowId, temp).then(() => {\n                this.getList3();\n                this.typeDialogVisible = false;\n                this.partDialogVisible = false;\n                this.$notify({\n                    title: \"成功\",\n                    message: \"新增成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n            });\n        },\n        createBatch (temp) {\n            api.addRecordpc(this.selectlistRow3.rowId, temp).then(() => {\n                this.getList3();\n                this.typeDialogVisible = false;\n                this.partDialogVisible = false;\n                this.$notify({\n                    title: \"成功\",\n                    message: \"新增成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n                this.getListSub()\n            });\n        },\n        handleCreate () {\n            this.resetTemp();\n            if (this.selectlistRow) {\n                this.dialogStatus = \"create\";\n                this.temp.batchRuleDiffName = this.selectlistRow.batchRuleDiffName;\n                api.queryRecordsbz(this.selectlistRow).then(res => {\n                    this.list2 = res.data;\n                    this.total2 = res.data.length;\n                });\n                this.dialogFormVisible = true;\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        create () {\n            if (this.selectlistRow2) {\n                this.dto.batchRuleDiff = this.selectlistRow.batchRuleDiff;\n                this.dto.batchRulePreparation = this.selectlistRow2;\n\n                api.addRecord(this.selectlistRow.warehouseCode, this.dto).then(() => {\n                    this.getList1();\n                    this.dialogFormVisible = false;\n                    this.$notify({\n                        title: \"成功\",\n                        message: \"新增成功\",\n                        type: \"success\",\n                        duration: 2000\n                    });\n                });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择新增信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n\n        getList3 () {\n            api.queryRecordsbfl(this.selectlistRow3.rowId).then(res => {\n                this.list3 = res.data;\n                this.total = res.data.length;\n            });\n        },\n        handleType () {\n            this.resetTemp();\n            if (this.selectlistRow3) {\n                this.dialogStatus = \"create\";\n                this.dialogFormVisible1 = true;\n                this.temp.batchEnabled = this.selectlistRow3.batchRuleDiffName;\n                api.queryRecordsbfl(this.selectlistRow3.rowId).then(res => {\n                    this.list3 = res.data;\n                    this.total = res.data.length;\n                });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        handleUpdate () {\n            this.resetTemp();\n            if (this.selectlistRow3) {\n                this.dialogStatus = \"update\";\n                api.queryRecordsbz1(this.selectlistRow3.rowId).then(res => {\n                    let b = [];\n                    let a = res.data\n                    api.queryRecordsbz(this.selectlistRow).then(res => {\n                        b = res.data\n                        this.temp.batchRuleDiffName = this.selectlistRow3.batchRuleDiffName;\n                        this.dialogFormVisible = true;\n                        this.list2 = res.data;\n                        this.total2 = res.data.length;\n                        this.$nextTick(function () {\n                            // //在渲染之后执行toggleRowSelection方法\n                            // this.$refs.dd.toggleRowSelection(this.list2[b.indexOf(a[0])]); //判断a的值是不是在b数组里并返回索引\n                            b.forEach((val, index) => {\n                                a.forEach((val1) => {\n                                    if (val.rulePrepCode == val1.rulePrepCode) {\n                                        this.$refs.dd.toggleRowSelection(this.list2[index])\n                                    }\n                                })\n                            })\n                        });\n                    });\n                });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        update () {\n            // this.dtoupdate.batchRuleId=this.selectlistRow3.rowId\n            this.dtoupdate.batchRuleDiff = this.selectlistRow3.batchRuleDiff;\n            this.dtoupdate.batchRulePreparation = this.selectlistRow2;\n            api.updateRecord(this.selectlistRow3.rowId, this.dtoupdate).then(() => {\n                this.getList1();\n                this.dialogFormVisible = false;\n                this.$notify({\n                    title: \"成功\",\n                    message: \"编辑成功\",\n                    type: \"success\",\n                    duration: 2000\n                });\n            });\n        },\n\n        handleDelete () {\n            if (this.selectlistRow3) {\n                this.$confirm(\"此操作将永久删除该文件,是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    api.deleteRecord(this.selectlistRow3.rowId).then(() => {\n                        this.getList1();\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    });\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\"\n                    });\n                });\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        handleDeletefl () {\n            if (this.selectlistRowfl && this.selectlistRowfl.length == 1) {\n                this.$confirm(\"此操作将永久删除该文件,是否继续?\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    api.deleteRecordfl(this.selectlistRow3.rowId, this.selectlistRowfl[0].objectCode).then(() => {\n                        this.getList3();\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    });\n                }).catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\"\n                    });\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                });\n            }\n        },\n        handleMateriel () {\n            if (this.temp.batchEnabled == \"按物料分类\") {\n                this.typeDialogVisible = true;\n            }\n            if (this.temp.batchEnabled == \"全作用\") {\n                this.typeDialogVisible = true;\n            } else if (this.temp.batchEnabled == \"按物料编码\") {\n                this.partDialogVisible = true;\n                // this.$nextTick(()=>{\n                //     this.$refs.wlxzRef.listSelected = [...this.list3];\n                //     this.$refs.wlxzRef.getList();\n                // })\n\n            }\n        },\n        handleLead () { },\n\n        update1 () { },\n\n        handleQuery () {\n            this.listQuery.currentPage = 1;\n            this.getList();\n        },\n        handleSizeChange (val) {\n            this.listQuery.pageSize = val;\n            this.getList();\n        },\n        handleCurrentChange (val) {\n            this.listQuery.currentPage = val;\n            this.getList();\n        },\n        handleClose () {\n            this.resetTemp();\n        },\n        toggleSelection (rows) {\n            if (rows) {\n                rows.forEach(row => {\n                    this.$refs.dd.toggleRowSelection(row);\n                });\n            } else {\n                this.$refs.dd.clearSelection();\n            }\n        },\n        resetTemp () {\n            this.temp = {\n                orgName: undefined,\n                warehouseCode: undefined,\n                warehouseName: undefined,\n                ruleDivision: undefined,\n                ruleType: undefined,\n                ruleCode: undefined,\n                batchRule: undefined,\n                dataItem: undefined,\n                objCode: undefined,\n                remark: undefined\n            };\n        }\n    }\n};\n",null]}