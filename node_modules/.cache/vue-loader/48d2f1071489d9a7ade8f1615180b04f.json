{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/PM/equipmentProducts/tabs/mainInfo.vue?vue&type=template&id=ef1aa58c&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/PM/equipmentProducts/tabs/mainInfo.vue","mtime":1600927611518},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-card\",\n        { staticClass: \"box-card\" },\n        [\n          _c(\n            \"div\",\n            { attrs: { slot: \"header\" }, slot: \"header\" },\n            [\n              _c(\"span\", [_vm._v(\"基本信息\")]),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"filter-item\",\n                  attrs: { size: \"small\", type: \"text\", icon: \"el-icon-edit\" },\n                  on: { click: _vm.handleUpdate }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.edit\")))]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form\",\n            { ref: \"form\", attrs: { model: _vm.form, \"label-width\": \"120px\" } },\n            [\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\"iot.typeName\"),\n                            prop: \"typeName\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { disabled: \"\" },\n                            model: {\n                              value: _vm.form.typeName,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"typeName\", $$v)\n                              },\n                              expression: \"form.typeName\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\"iot.typeCode\"),\n                            prop: \"typeCode\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { disabled: \"\" },\n                            model: {\n                              value: _vm.form.typeCode,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"typeCode\", $$v)\n                              },\n                              expression: \"form.typeCode\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\"iot.createTime\"),\n                            prop: \"createTime\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { disabled: \"\" },\n                            model: {\n                              value: _vm.form.createTime,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"createTime\", $$v)\n                              },\n                              expression: \"form.createTime\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: { label: _vm.$t(\"iot.ctacle\"), prop: \"ctacle\" }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { disabled: \"\" },\n                            model: {\n                              value: _vm.form.ctacleCN,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"ctacleCN\", $$v)\n                              },\n                              expression: \"form.ctacleCN\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\"iot.industry\"),\n                            prop: \"industry\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { disabled: \"\" },\n                            model: {\n                              value: _vm.form.industryCN,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"industryCN\", $$v)\n                              },\n                              expression: \"form.industryCN\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 22 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: { label: _vm.$t(\"iot.remark\"), prop: \"remark\" }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled: \"\",\n                              type: \"textarea\",\n                              rows: 2,\n                              placeholder: \"请输入内容\"\n                            },\n                            model: {\n                              value: _vm.form.remark,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"remark\", $$v)\n                              },\n                              expression: \"form.remark\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"br\" }),\n      _vm._v(\" \"),\n      _c(\"el-card\", [\n        _c(\n          \"div\",\n          {\n            staticClass: \"clearfix\",\n            attrs: { slot: \"header\" },\n            slot: \"header\"\n          },\n          [\n            _c(\"span\", [_vm._v(\"铭牌标签\")]),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"filter-item\",\n                attrs: { size: \"small\", type: \"text\", icon: \"el-icon-edit\" },\n                on: { click: _vm.handleUpdateName }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"btn.edit\")))]\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _vm.listLength\n          ? _c(\n              \"div\",\n              { staticClass: \"list-car-box\" },\n              _vm._l(_vm.namePlate, function(val) {\n                return _c(\"list-car\", {\n                  key: val.rowId,\n                  attrs: { name: val.tagName, code: val.tagCode }\n                })\n              }),\n              1\n            )\n          : _c(\"div\", { staticClass: \"message-car-box\" }, [\n              _vm._v(\"\\n            暂无铭牌标签信息\\n        \")\n            ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          attrs: {\n            \"close-on-click-modal\": false,\n            \"close-on-press-escape\": false,\n            title: \"编辑铭牌标签\",\n            visible: _vm.dialogFormVisibleName,\n            \"custom-class\": \"dialog-custom\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisibleName = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"namePlateFromRef\",\n              staticClass: \"demo-dynamic\",\n              attrs: { model: _vm.namePlateFrom, \"label-width\": \"80px\" }\n            },\n            [\n              _vm._l(_vm.namePlateFrom.data, function(val, index) {\n                return _c(\n                  \"el-form-item\",\n                  { key: index },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"请输入铭牌名称\" },\n                      model: {\n                        value: val.tagName,\n                        callback: function($$v) {\n                          _vm.$set(val, \"tagName\", $$v)\n                        },\n                        expression: \"val.tagName\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"请输入铭牌编码\" },\n                      model: {\n                        value: val.tagCode,\n                        callback: function($$v) {\n                          _vm.$set(val, \"tagCode\", $$v)\n                        },\n                        expression: \"val.tagCode\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function($event) {\n                            $event.preventDefault()\n                            return _vm.removeDomain(val)\n                          }\n                        }\n                      },\n                      [_vm._v(\"删除\")]\n                    )\n                  ],\n                  1\n                )\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"text\", icon: \"el-icon-plus\" },\n                      on: { click: _vm.addDomain }\n                    },\n                    [_vm._v(\"新增标签\")]\n                  )\n                ],\n                1\n              )\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.dialogFormVisibleName = false\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.updateName()\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          directives: [{ name: \"dialogDrag\", rawName: \"v-dialogDrag\" }],\n          attrs: {\n            \"close-on-click-modal\": false,\n            \"close-on-press-escape\": false,\n            title: \"编辑设备产品\",\n            visible: _vm.dialogFormVisible,\n            \"custom-class\": \"dialog-custom\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"tempRef\",\n              staticClass: \"demo-form-inline\",\n              staticStyle: { width: \"auto\" },\n              attrs: {\n                inline: true,\n                model: _vm.temp,\n                rules: _vm.rules,\n                \"label-width\": \"120px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.typeName\"), prop: \"typeName\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { disabled: \"\" },\n                    model: {\n                      value: _vm.temp.typeName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"typeName\", $$v)\n                      },\n                      expression: \"temp.typeName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.typeCode\"), prop: \"typeCode\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { disabled: \"\" },\n                    model: {\n                      value: _vm.temp.typeCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"typeCode\", $$v)\n                      },\n                      expression: \"temp.typeCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.industry\"), prop: \"industry\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择\" + _vm.$t(\"iot.industry\") },\n                      model: {\n                        value: _vm.temp.industry,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"industry\", $$v)\n                        },\n                        expression: \"temp.industry\"\n                      }\n                    },\n                    _vm._l(_vm.iot_locked_industry, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.ctacle\"), prop: \"ctacle\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择\" + _vm.$t(\"iot.ctacle\") },\n                      model: {\n                        value: _vm.temp.ctacle,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"ctacle\", $$v)\n                        },\n                        expression: \"temp.ctacle\"\n                      }\n                    },\n                    _vm._l(_vm.iot_trial_scenario, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.dictItemKey,\n                        attrs: {\n                          label: item.dictItemValue,\n                          value: item.dictItemKey\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: _vm.$t(\"iot.remark\"), prop: \"remark\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      type: \"textarea\",\n                      rows: 2,\n                      placeholder: \"请输入内容\"\n                    },\n                    model: {\n                      value: _vm.temp.remark,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"remark\", $$v)\n                      },\n                      expression: \"temp.remark\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.dialogFormVisible = false\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n                \" +\n                      _vm._s(_vm.$t(\"btn.cancel\")) +\n                      \"\\n            \"\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.update()\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"btn.confirm\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}