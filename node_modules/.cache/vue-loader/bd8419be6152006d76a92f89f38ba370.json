{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/planManagement/dispatchOrderManagement/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/planManagement/dispatchOrderManagement/index.vue","mtime":1596610933582},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryRecords } from '@/api/project/mes/planManagement/productionOrdersMaintain'\nimport * as api from '@/api/project/mes/planManagement/dispatchOrderManagement'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'dispatchOrderManagement',\n    components: { Pagination },\n    data() {\n        return {\n            list: null,\n            listSub: null,\n            materiaList: [],\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                excludeState: 'product_order10'\n            },\n            materialDialogVisible: false,\n            tableKey: [0, 1],\n            selectlistRow: []\n        }\n    },\n    created() {\n        this.getList()\n    },\n    filters: {\n        splitState: function(e) {\n            if (e === '1') {\n                return '是'\n            } else {\n                return '否'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_product_order_stat: state =>\n                state.mesDict.dt_product_order_stat.filter(\n                    item => item.dictItemKey != 'product_order10'\n                ),\n            dt_product_order_resource: state =>\n                state.mesDict.dt_product_order_resource,\n            dt_work_order_split: state => state.mesDict.dt_work_order_split\n        })\n    },\n    mounted() {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        this.$store.dispatch('mesDict/getDicData', [\n            'dt_product_order_stat',\n            'dt_product_order_resource',\n            'dt_work_order_split'\n        ])\n    },\n    methods: {\n        getList() {\n            queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        getListSub() {\n            let productOrderCode = {\n                productOrderCode: this.selectlistRow[0].productOrderCode\n            }\n            api.searchRecords(productOrderCode).then(res => {\n                this.listSub = res.data\n            })\n        },\n        getMateriaList() {\n            api.queryRecordNeeds(this.selectlistSubRow.workOrderCode).then(\n                res => {\n                    this.materiaList = res.data\n                }\n            )\n        },\n        value() {},\n        //表格高度计算\n        setTableHeight() {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        handleQuery() {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n\n        // 获取表格选中时的数据\n        selectRow(val) {\n            this.$refs.mainList.toggleRowSelection(val, 'selected')\n        },\n        //主表行点击\n        showSubTable(val) {\n            this.selectlistRow = val\n            if (val.length == 0) {\n                this.selectlistRow = []\n                this.listSub = []\n                return false\n            }\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(val[val.length - 1])\n            }\n            this.$refs.mainList.setCurrentRow(this.selectlistRow[0])\n            if (this.selectlistRow.length) {\n                this.getListSub()\n            }\n        },\n        //副表选择\n        handleDetail(val) {\n            this.selectlistSubRow = val\n            this.materialDialogVisible = true\n            this.getMateriaList()\n        },\n        handleSplit() {\n            //拆分\n            if (this.selectlistRow[0]) {\n                if (this.selectlistRow[0].splitState == 0) {\n                    let dto = {\n                        productOrderCode: this.selectlistRow[0]\n                            .productOrderCode,\n                        splitValue: this.listQuery.splitValue\n                    }\n                    api.splitRecord(dto).then(() => {\n                        this.getList(),\n                            this.$message({\n                                title: '成功',\n                                message: '拆分成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                    })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '订单已拆分无法再次拆分',\n                        type: 'warning'\n                    })\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleDelete() {\n            //删除列表\n            if (this.selectlistRow.length) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecord(\n                            this.selectlistRow[0].productOrderCode\n                        ).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleCompleted() {\n            if (this.selectlistRow.length) {\n                api.completeRecord(this.selectlistRow[0].productOrderCode).then(\n                    () => {\n                        this.getList(),\n                            this.$message({\n                                title: '成功',\n                                message: '强制完工成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                    }\n                )\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        }\n    }\n}\n",null]}