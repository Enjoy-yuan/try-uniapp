{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/materialClassify/materialMaintain/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/materialClassify/materialMaintain/index.vue","mtime":1596610933646},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from \"@/api/project/srm/materialClassify/materialMaintain\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport Pagination from \"@/components/Pagination\" // Secondary package based on el-pagination\nimport { mapState } from \"vuex\"\n// import AuthoType from \"@/components/Select/AuthoType.vue\"; //权限类型下拉组件\nimport addMain from \"./diaLog/addMain\"\nimport supplierTransfer from \"./diaLog/supplierTransfer\"\n\nexport default {\n    name: \"materialMaintain\",\n    components: { caiGou, Pagination, addMain, supplierTransfer },\n    data () {\n        return {\n            DICT_CODE: DICT_CODE,\n            treeData: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"className\"\n            },\n            tableKey: [0, 1],\n            personTitle: \"\",\n            theight: 0,//表格高度\n            list: [],\n            subList: [],\n            total: 0,\n            totalsub: 0,\n            person: undefined,\n            parentId: null,\n            parentRowId: null,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: 'dtcg0001'\n            },\n            listQuerySub: {},\n            dialogFormVisible: false,\n            dialogCodeVisible: false,\n            dialogPersonVisible: false,\n            dialoggysVisible: false,\n            dialogStatus: \"\",\n            contentStyleObj: {\n                height: \"\"\n            },\n\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_p0: state => state.dict.dt_srm_p0,\n            dt_srm_pa1: state => state.dict.dt_srm_pa1,\n            dt_srm_pa6: state => state.dict.dt_srm_pa6,\n            dt_srm_pb8: state => state.dict.dt_srm_pb8,\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\", \"dt_srm_pa1\", \"dt_srm_pa6\", \"dt_srm_pb8\"])\n        this.getTree()\n        this.getList()\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n            this.setTreeHeight()\n        }\n        this.setTreeHeight()\n    },\n    filters: {\n        platformFilter: function (a) {\n            if (a === false) {\n                return \"否\"\n            } else {\n                return \"是\"\n            }\n        }\n    },\n    methods: {\n        treeGetList (rowId) {\n            //点击树查询\n            let dto = {\n                classCode: rowId,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: 'dtcg0001'\n            }\n            api.queryRecords(dto).then(res => {\n                let options = [this.dt_srm_p0]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state'])\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n        },\n        refresh () {\n            this.getTree()\n            this.getList()\n        },\n        getTree () {\n            let a = {\n                orgCode: this.listQuery.orgCode\n            }\n            api.queryRecords(a).then(res => {\n                this.treeData = this.$myFun.addRoot(res.data, 'rowId', 'parentRowId')\n            })\n        },\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                let options = [this.dt_srm_p0]\n                res.data.list = this.$myFun.srmCodeToName(res.data.list, options, ['state'])\n                this.list = res.data.list\n                this.total = res.data.pages.count\n            })\n\n        },\n        getListSub () {\n            let a = {\n                materielClass: this.selectlistRow.classCode\n            }\n            api.queryRecordSupplier(a).then(res => {\n                let options = [this.dt_srm_pa1, this.dt_srm_pa6, this.dt_srm_p0, this.dt_srm_pb8]\n                res.data = this.$myFun.srmCodeToName(res.data, options, ['supplierType', 'grade', 'state', 'enterMethod'])\n                this.subList = res.data.map(v => {\n                    v.className = this.selectlistRow.className\n                    return v\n                })\n            })\n        },\n        handleQuery () {\n            this.getTree()\n            this.getList()\n        },\n        handleClassifyCode () {\n            this.dialogCodeVisible = true\n        },\n        handleTransfer () {\n            this.dialoggysVisible = true\n        },\n\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() / 2 - 60\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight()\n        },\n\n        handleCreate () {\n            //新增弹窗调用\n            if (this.parentId || this.parentId == 0) {\n                this.$refs.addMain.resetTemp()\n                this.$refs.addMain.dialogStatus = 'create'\n                this.$refs.addMain.temp.parentRowId = this.parentId\n                this.$refs.addMain.dialogVisible = true\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择上级菜单\",\n                    type: \"warning\"\n                })\n            }\n\n        },\n        handleUpdate (index, val) {\n            console.log(index)\n            this.$refs.addMain.dialogStatus = 'update'\n            this.$refs.addMain.temp = { ...val }\n            this.$refs.addMain.rowId = val.rowId\n            this.$refs.addMain.dialogVisible = true\n        },\n        //生效按钮单击事件\n        handleEffect () {\n            if (this.selectlistRow) {\n                let dto = {\n                    method: \"EFFECT\",\n                    materielClassDTO: this.selectlistRow\n                }\n                api.updateRecord(this.selectlistRow.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '生效成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        //注销按钮单击事件\n        handleCancel () {\n            if (this.selectlistRow) {\n                let dto = {\n                    method: \"CANCEL\",\n                    materielClassDTO: this.selectlistRow\n                }\n                api.updateRecord(this.selectlistRow.rowId, dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '注销成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleSupplier () {\n            if (this.selectlistRow) {\n                this.$refs.transfer.dialoggysVisible = true\n                this.$refs.transfer.listQuery.className = this.selectlistRow.className\n                this.$refs.transfer.listQuery.materielClass = this.selectlistRow.classCode\n                this.$refs.transfer.orgCode = this.selectlistRow.orgCode\n                this.$refs.transfer.getList()\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请选择一条信息\",\n                    type: \"warning\"\n                })\n            }\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.tb.clearSelection()\n                this.$refs.tb.toggleRowSelection(val.pop())\n            }\n            if (this.selectlistRow) {\n                this.getListSub()\n            }\n            this.$refs.tb.setCurrentRow(this.selectlistRow)\n        },\n        rowClick (val) {\n            this.$refs.tb.clearSelection()\n            this.$refs.tb.toggleRowSelection(val)\n        },\n        // 获取表格选中时的数据\n        selectRowSub (val) {\n            this.selectRows = val\n        },\n        //删除按钮单击事件\n        handleDelete (index, val) {\n            this.$confirm(\"是否删除该信息\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(() => {\n                api.deleteRecord(val.rowId).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getTree()\n                    this.getList()\n                })\n            }).catch(() => {\n                this.$message({\n                    type: \"info\",\n                    message: \"已取消\"\n                })\n            })\n\n        },\n        handleRevoke () {\n            if (this.selectRows && this.selectRows.length > 0) {\n                let dto = {\n                    materielClass: this.selectRows[0].materielClass,\n                    orgCode: this.selectRows[0].orgCode,\n                    supplierCodes: []\n                }\n                this.selectRows.forEach((val, index) => {\n                    dto.supplierCodes[index] = val.supplierCode\n                })\n                api.revoke(dto).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '撤销成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getListSub()\n                })\n            } else {\n                this.$message({\n                    title: \"警告\",\n                    message: \"请勾选记录\",\n                    type: \"warning\"\n                })\n            }\n        },\n        handleNodeClick (data) {\n            //点击树查询\n            this.parentId = data.rowId\n            this.treeGetList(data.classCode)\n        }\n    }\n};\n",null]}