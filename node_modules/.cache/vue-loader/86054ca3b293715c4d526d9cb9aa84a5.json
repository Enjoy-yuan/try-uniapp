{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/expBaseSelect/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/expBaseSelect/index.vue","mtime":1596610933436},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/rf/exBase'\nimport * as deviceApi from '@/api/project/eas/el/equipmentArchives'\nimport * as failureOrder from '@/api/project/eas/fm/failureRegister'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex'\nimport deviceType from '../../components/deviceTypeSelect'\nimport faultType from '../../components/faultTypeSelect'\n\nexport default {\n    name: 'expBase',\n    components: { Pagination, faultType, deviceType },\n    props: {\n        isTick: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data () {\n        return {\n            list: [],\n            listSub: [],\n            baseList: [],\n            parts: [],\n            device: [],\n            workOrder: [],\n            faultCodes: [],\n            selectlistRow: [],\n            imgs: [],\n            total: 0,\n            total2: 0,\n            theight: 0, //表格高度\n            theight2: 0,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            listQuery2: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10\n            },\n            tabName: 'sbtp',\n\n            files: [],\n            fileList: [],\n            importDialogVisible: false,\n            dialogStatus: 'create',\n            tableKey: [0, 1, 2]\n        }\n    },\n    watch: {\n        'listQuery.deviceTypeCode' (value) {\n            this.queryParts(value)\n            this.listQuery.partCode = undefined\n        },\n        'temp.deviceTypeCode' (val, oldVal) {\n            this.queryFaultCode()\n            if (oldVal) {\n                this.temp.faultCode = ''\n            }\n        },\n        'dt_experience_type' () {\n            if (this.list && this.list.length) {\n                let options = [this.dt_experience_state, this.dt_experience_type]\n                this.list = this.$myFun.srmCodeToName(\n                    this.list,\n                    options,\n                    ['state', 'experienceType']\n                )\n            }\n\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_experience_state: state => state.eamDict.dt_experience_state,\n            dt_experience_type: state => state.eamDict.dt_experience_type,\n            dt_file_type: state => state.eamDict.dt_file_type\n        })\n    },\n    created () {\n        // this.getSetDefaults()\n    },\n    mounted () {\n        this.$store.dispatch('eamDict/getDicData', [\n            'dt_experience_state',\n            'dt_experience_type',\n            'dt_file_type'\n        ])\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n        this.queryDevice()\n        this.queryFaultCode()\n    },\n    methods: {\n        forceUpdate () {\n            this.$forceUpdate()\n        },\n        getWorkOrder (val) {\n            if (!val) {\n                this.temp.deviceCode = undefined\n                this.temp.deviceName = undefined\n            }\n            this.workOrder.forEach(item => {\n                if (item.faultNumber == val) {\n                    this.temp.deviceCode = item.deviceCode\n                    this.temp.deviceName = item.deviceName\n                    return false\n                }\n            })\n        },\n        queryParts (typeCode) {\n            api.queryParts(typeCode).then(res => {\n                this.parts = res.data\n            })\n        },\n        queryFaultCode () {\n            // api.queryFaultCode({\n            //     deviceTypeCode: this.temp.deviceTypeCode\n            // }).then(res => {\n            //     this.faultCodes = res.data\n            // })\n        },\n        queryDevice () {\n            deviceApi.queryRecords().then(res => {\n                this.device = res.data\n            })\n            // 查询待修故障单\n            failureOrder\n                .queryRecords({\n                    state: 'fs20'\n                })\n                .then(res => {\n                    this.workOrder = res.data\n                })\n            // 查询故障代码\n        },\n        //查主表\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                let options = [this.dt_experience_state, this.dt_experience_type]\n                this.list = this.$myFun.srmCodeToName(\n                    this.list,\n                    options,\n                    ['state', 'experienceType']\n                )\n                this.total = res.data.pages.count\n            })\n        },\n        selectRow (val) {\n            if (this.isTick) {\n                this.selectlistRow = val\n                this.$emit(\"change\", this.selectlistRow)\n            } else {\n                this.selectlistRow = val[val.length - 1]\n                if (val.length > 1) {\n                    this.$refs.mainList.clearSelection()\n                    this.$refs.mainList.toggleRowSelection(val[val.length - 1])\n                }\n                this.$refs.mainList.setCurrentRow(this.selectlistRow)\n                this.$emit(\"change\", this.selectlistRow)\n            }\n        },\n        rowClick (val) {\n            this.$refs.mainList.toggleRowSelection(val)\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 200\n            this.theight2 = this.$myFun.getSingleTbHeight() - 200 + 43\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        }\n    }\n}\n",null]}