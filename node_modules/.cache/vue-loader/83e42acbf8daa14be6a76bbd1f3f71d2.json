{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/productionMaterial/pullerFormation/dialog/DialogAddMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/WMS/productionMaterial/pullerFormation/dialog/DialogAddMain.vue","mtime":1596610934157},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createRecords, updateRecords } from \"@/api/project/wms/productionMaterial/pullMaterial\";\nimport { mapState } from 'vuex';\nimport { DT_ORG_TYPE, DT_ORG_FUNCTION } from '@/utils/constant'\nimport warehouseSelect from '@/components/Select/warehouse-select.vue'//下拉组件\nimport caiGou from '@/components/Select/caigou.vue'//下拉组件\nimport orgSelect from \"@/components/Select/orgSelect.vue\"\n\nexport default {\n    name: 'addMain',\n    components: { warehouseSelect, caiGou, orgSelect },\n    data () {\n        let compareDate = (rule, value, callback) => {\n            if (value < this.AddMainlist.stockTime) {\n                return callback(new Error('送达时间不能小于备货时间'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            AddMainlist: {\n                method: null,\n                pullOrderCode: null,\n                purchaseOrgCode: null,\n                supplierCode: null,\n                supplierName: null,\n                pullMaterialType: null,\n                thirdPartyWarehouse: null,\n                stockTime: null,\n                arrivalTime: null,\n                arrivalOrgCode: null,\n                warehouseCode: null,\n                note: null,\n                pullOrderDetails: []\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            DT_ORG_FUNCTION: DT_ORG_FUNCTION,\n            curdialogStatus: 0,\n            dialogFormVisible: false,\n            rules: {\n                purchaseOrgCode: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                pullMaterialType: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                supplierName: [\n                    { required: true, message: '请选择', trigger: 'blur' },\n                ],\n                stockTime: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                arrivalTime: [\n                    { required: true, message: '请选择', trigger: 'blur' },\n                    { validator: compareDate, trigger: 'blur' }\n                ],\n                arrivalOrgCode: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n                warehouseCode: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ],\n\n            },\n            selectRows: []\n        }\n    },\n    created () {\n\n    },\n    computed: {\n        ...mapState({\n            dt_pullmaterial_type: state => state.dict.dt_pullmaterial_type,\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_pullmaterial_type']);\n    },\n    methods: {\n        resetForm () {\n            this.AddMainlist = {\n                method: null,\n                pullOrderCode: null,\n                purchaseOrgCode: null,\n                supplierCode: null,\n                supplierName: null,\n                pullMaterialType: null,\n                thirdPartyWarehouse: null,\n                stockTime: null,\n                arrivalTime: null,\n                arrivalOrgCode: null,\n                warehouseCode: null,\n                note: null,\n                pullOrderDetails: [],\n                purchaseOrgName: null,\n                arrivalOrgName: null\n            }\n        },\n        handleName (val) {\n            this.AddMainlist.purchaseOrgName = val\n        },\n        arrivalOrgName (val) {\n            this.AddMainlist.arrivalOrgName = val\n        },\n        addMainConfirm () {\n            this.$refs.AddMainlist.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        this.AddMainlist.method = 'MODIFY';\n                        createRecords(this.AddMainlist).then(() => {\n                            this.$emit('refresh');\n                            this.dialogFormVisible = false;\n                            this.$message({\n                                type: 'success',\n                                message: '保存成功'\n                            });\n                        });\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消'\n                        });\n                    });\n                }\n            });\n        },\n        updateMainConfirm () {\n            this.$refs.AddMainlist.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        this.AddMainlist.method = 'MODIFY';\n                        updateRecords(this.AddMainlist.pullOrderCode, this.AddMainlist).then(() => {\n                            this.$emit('refresh');\n                            this.dialogFormVisible = false;\n                            this.$message({\n                                type: 'success',\n                                message: '保存成功'\n                            });\n                        });\n                    });\n                }\n            });\n\n        },\n        setGys (supplierCode, supplierName) {\n            this.$set(this.AddMainlist, 'supplierCode', supplierCode);\n            this.$set(this.AddMainlist, 'supplierName', supplierName);\n        },\n        setDetails (data) {\n            data.forEach(item => {\n                item.snp = item.snp2;\n            });\n            this.AddMainlist.pullOrderDetails = data;\n            this.$set(this.AddMainlist, 'pullOrderDetails', this.AddMainlist.pullOrderDetails);\n        },\n        titleShow (val) {\n            this.curdialogStatus = val;\n        },\n        //添加项\n        addSub () {\n            if (this.AddMainlist.purchaseOrgCode && this.AddMainlist.supplierCode && this.AddMainlist.arrivalOrgCode) {\n                let selectedwl = [...this.AddMainlist.pullOrderDetails];\n                this.$emit('showWlxz', this.AddMainlist.supplierCode, this.AddMainlist.purchaseOrgCode, this.AddMainlist.arrivalOrgCode, selectedwl);\n                this.$set(this.AddMainlist, 'pullOrderDetails', this.AddMainlist.pullOrderDetails);\n            } else {\n                this.$message.warning(\"请先选择供应商,采购组织和到货单位！\");\n            }\n        },\n        showGys () {\n            this.$emit('showGysxz', 'add');\n        },\n        //删除内容某一行\n        deleteContent () {\n            if (this.selectRows.length !== 0) {\n                this.$confirm('确认要删除该数据项吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.AddMainlist.pullOrderDetails = this.AddMainlist.pullOrderDetails.filter(item => {\n                        let isD = true;\n                        this.selectRows.forEach((itemr) => {\n                            if (itemr.materielCode === item.materielCode) {\n                                isD = false;\n                            }\n                        });\n                        return isD;\n                    })\n\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    });\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消'\n                    });\n                });\n            } else {\n                this.$message.warning(\"请勾选记录！\");\n                return;\n            }\n        },\n        addSelectChange (val) {\n            this.selectRows = val;\n        }\n    }\n}\n",null]}