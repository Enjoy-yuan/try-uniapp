{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/maintenancePlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/ER/maintenancePlan/index.vue","mtime":1596610933405},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/eas/er/maintenancePlan'\nimport { queryRecords } from '@/api/project/eas/database/groups' //班组\nimport teamEmployeeSelect from '../../components/teamEmployeeSelect' //下拉组件\nimport Pagination from '@/components/Pagination'\nimport { parseTime } from '@/utils'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou' //下拉组件\nimport wxjh from './wxjh'\nimport wxjh2 from './wxjh2'\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'maintenancePlan',\n    components: { Pagination, wxjh, wxjh2, caiGou, teamEmployeeSelect },\n    data () {\n        return {\n            pickerOptions: {\n                disabledDate (time) {\n                    return time.getTime() <= Date.now() - 8.64e6\n                }\n            },\n            list: [],\n            groupList: [],\n            classList: [],\n            total: 0,\n            theight: 0, //表格高度\n            timerange: undefined,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 15,\n                organizationCode: undefined,\n                classCode: undefined,\n                planTimeStart: undefined,\n                planTimeEnd: undefined\n            },\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15\n            },\n            listQuery2: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                orgCode: undefined\n            },\n            temp: {\n                classCode: undefined,\n                className: undefined,\n                maintainerCode: undefined,\n                maintainerName: 'aaa',\n                organizationName: undefined,\n                organizationCode: undefined\n            },\n            timeTemp: {\n                planTime: undefined\n            },\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            importDialogVisible: undefined,\n            importDialogVisible2: undefined,\n            repairDialogFormVisible: undefined,\n            timeDialogFormVisible: undefined,\n            teamEmployeeVisible: undefined,\n            listSelected: [],\n            colorCode: undefined,\n            selectCode: [],\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            timeRule: {\n                planTime: [\n                    {\n                        required: true,\n                        message: '选择日期不能为空',\n                        trigger: ['blur', 'change']\n                    }\n                ]\n            },\n            rules: {\n                organizationCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                classCode: [\n                    {\n                        required: true,\n                        message: '维修班组不能为空',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                maintainerCode: [\n                    {\n                        required: true,\n                        message: '维修人不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        }\n    },\n    watch: {\n        timerange (val) {\n            if (val) {\n                this.listQuery.planTimeStart = val[0]\n                this.listQuery.planTimeEnd = val[1]\n            } else {\n                this.listQuery.planTimeStart = undefined\n                this.listQuery.planTimeEnd = undefined\n            }\n        },\n        'listQuery.organizationCode' (val) {\n            if (val) {\n                this.listQuery1.orgCode = val\n            } else {\n                this.listQuery1.orgCode = undefined\n            }\n            this.getGroup()\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getGroup()\n        let p1 = new Promise((resolve) => {\n            resolve(this.$store.dispatch('eamDict/getDicData', ['dt_maintain_plan_state', 'dt_maintain_type', 'dt_urgency_degree']))\n        })\n        Promise.all([p1]).then(() => {\n            this.getList()\n        })\n\n    },\n    computed: {\n        ...mapState({\n            dt_maintain_plan_state: state => state.eamDict.dt_maintain_plan_state,\n            dt_maintain_type: state => state.eamDict.dt_maintain_type,\n            dt_urgency_degree: state => state.eamDict.dt_urgency_degree\n        })\n    },\n    methods: {\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                if (this.dt_urgency_degree) {\n                    let options = [this.dt_maintain_plan_state, this.dt_maintain_type, this.dt_urgency_degree]\n                    this.list = this.$myFun.srmCodeToName(\n                        res.data.list,\n                        options,\n                        ['state', 'maintainType', 'urgencyDegree']\n                    )\n                }\n\n                this.total = res.data.pages.count\n            })\n        },\n        //获取班组\n        getGroup () {\n            queryRecords(this.listQuery1).then(res => {\n                this.groupList = res.data.list\n            })\n        },\n        getName (val) {\n            this.temp.organizationName = val\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        handleQuery () {\n            //查询\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            //新增\n            this.resetTemp()\n            this.importDialogVisible = true\n        },\n        handleEdit () {\n            if (!this.listSelected.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (\n                this.listSelected[this.listSelected.length - 1].state == 'mps20'\n            ) {\n                this.$message({\n                    title: '警告',\n                    message: '计划已派工，无法修改',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.resetTemp()\n            this.importDialogVisible2 = true\n            setTimeout(() => {\n                this.$refs.wxjh2.temp = this.listSelected[\n                    this.listSelected.length - 1\n                ]\n                this.$refs.wxjh2.temp.details = this.listSelected\n            }, 0)\n        },\n        create () {\n            if (this.$refs.wxjh.getTemp()) {\n                if (this.$refs.wxjh.temp.ifOuterHelp != 'N') {\n                    if (!this.$refs.wxjh.temp.outerHelpOrgCode) {\n                        this.$message({\n                            title: '警告',\n                            message: '请填写外协单位',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    if (!this.$refs.wxjh.temp.outerHelpLaborHour) {\n                        this.$message({\n                            title: '警告',\n                            message: '请填写外协工时',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    if (\n                        !(\n                            Number.isInteger(\n                                Number(\n                                    this.$refs.wxjh.temp.outerHelpLaborHour\n                                )\n                            ) &&\n                            Number(\n                                this.$refs.wxjh.temp.outerHelpLaborHour\n                            ) > 0\n                        )\n                    ) {\n                        this.$message({\n                            title: '警告',\n                            message: '外协工时必须是正整数',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                }\n                if (this.$refs.wxjh.temp.details.length == 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '请添加设备',\n                        type: 'warning'\n                    })\n                    return\n                }\n                //新增确认按钮\n                api.addRecords(this.$refs.wxjh.temp).then(res => {\n                    // this.$refs.wxjh.clearValidate()\n                    this.$refs.wxjh.resetTemp()\n                    this.importDialogVisible = false\n                    this.getList()\n                    if (res.status == 201) {\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.listSelected = []\n                    }\n                })\n            }\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.listSelected = val\n        },\n        //主表行点击\n        showSubTable (val) {\n            this.$refs.tb.toggleRowSelection(val, 'selected')\n        },\n        update () {\n            if (this.$refs.wxjh2.getTemp()) {\n                if (this.$refs.wxjh2.temp.ifOuterHelp != 'N') {\n                    if (!this.$refs.wxjh2.temp.outerHelpOrgCode) {\n                        this.$message({\n                            title: '警告',\n                            message: '请填写外协单位',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    if (!this.$refs.wxjh2.temp.outerHelpLaborHour) {\n                        this.$message({\n                            title: '警告',\n                            message: '请填写外协工时',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    if (\n                        !(\n                            Number.isInteger(\n                                Number(\n                                    this.$refs.wxjh2.temp.outerHelpLaborHour\n                                )\n                            ) &&\n                            Number(\n                                this.$refs.wxjh2.temp.outerHelpLaborHour\n                            ) > 0\n                        )\n                    ) {\n                        this.$message({\n                            title: '警告',\n                            message: '外协工时必须是正整数',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                }\n                if (this.$refs.wxjh2.temp.details.length == 0) {\n                    this.$message({\n                        title: '警告',\n                        message: '请添加设备',\n                        type: 'warning'\n                    })\n                    return\n                }\n                var tmp = []\n                this.$refs.wxjh2.temp.details.forEach(item => {\n                    tmp.push(item.maintainPlanNumber)\n                })\n                this.$refs.wxjh2.temp.maintainPlanNumbers = tmp\n                delete this.$refs.wxjh2.temp.details\n                //新增确认按钮\n                api.patchRecords(this.$refs.wxjh2.temp).then(res => {\n                    this.getList()\n                    this.importDialogVisible2 = false\n                    if (res.status == 200) {\n                        this.$message({\n                            title: '成功',\n                            message: '修改成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n\n                        this.listSelected = []\n                    }\n                })\n            }\n            // this.$refs.wxjh2.$refs.temp.validate(valid => {\n            //     if (valid) {\n\n            //     }\n            // })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.listSelected.length) {\n                if (this.listSelected.some(item => item.state == 'mps20')) {\n                    this.$message({\n                        title: '警告',\n                        message: '已选包含已派工计划，已派工计划无法删除',\n                        type: 'warning'\n                    })\n                    return false\n                }\n                this.$confirm('此操作将永久删除所选计划, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        var tmp = this.listSelected.map(item => {\n                            return item.maintainPlanNumber\n                        })\n                        api.deleteRecords(tmp).then(res => {\n                            if (res.status == 200) {\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                                this.getList()\n                                this.listSelected = []\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n\n        handlePersonnel () {\n            if (!this.listSelected.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (\n                this.listSelected[this.listSelected.length - 1].state == 'mps20'\n            ) {\n                this.$message({\n                    title: '警告',\n                    message: '计划已派工，无法修改',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.repairDialogFormVisible = true\n            this.temp = this.listSelected[\n                this.listSelected.length - 1\n            ]\n            this.listQuery2.orgCode = this.temp.organizationCode\n            queryRecords(this.listQuery2).then(res => {\n                this.classList = res.data.list\n            })\n        },\n        changeOrg (val) {\n            this.listQuery2.orgCode = val\n            this.temp.classCode = undefined\n            this.temp.maintainerCode = undefined\n            queryRecords(this.listQuery2).then(res => {\n                this.classList = res.data.list\n            })\n        },\n        changeClass (val) {\n            let name = this.classList\n                .filter(v => v.teamCode == val)\n                .find(value => value)\n            if (name) {\n                this.temp.className = name.teamName\n            }\n            this.temp.maintainerCode = undefined\n        },\n        handleMaintainer () {\n            if (!this.temp.classCode) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择维修班组',\n                    type: 'warning'\n                })\n                return\n            }\n            this.teamEmployeeVisible = true\n            setTimeout(() => {\n                this.$refs.teamEmployeeSelect.getList()\n            }, 0)\n        },\n        handleTeamEmployee () {\n            var tmp = this.$refs.teamEmployeeSelect.selectlistRow\n            if (tmp) {\n                this.temp.maintainerCode = tmp.employeeCode\n                this.temp.maintainerName = tmp.employeeName\n            } else {\n                this.temp.maintainerCode = undefined\n                this.temp.maintainerName = undefined\n            }\n            this.teamEmployeeVisible = false\n        },\n        repairCreate () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    var tmp = this.listSelected.map(item => {\n                        return item.maintainPlanNumber\n                    })\n                    this.temp.maintainPlanNumbers = tmp\n                    api.patchMaintainer(this.temp).then(res => {\n                        if (res.status == 200) {\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                            this.resetTemp()\n                            this.repairDialogFormVisible = false\n                            this.listSelected = []\n                        }\n                    })\n                }\n            })\n        },\n        handleTime () {\n            if (!this.listSelected.length) {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n                return false\n            }\n            if (\n                this.listSelected[this.listSelected.length - 1].state == 'mps20'\n            ) {\n                this.$message({\n                    title: '警告',\n                    message: '计划已派工，无法修改',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.resetTimeTemp()\n            this.timeDialogFormVisible = true\n        },\n        timeCreate () {\n            var tmp = this.listSelected.map(item => {\n                return item.maintainPlanNumber\n            })\n            this.timeTemp.maintainPlanNumbers = tmp\n            this.$refs['timeTemp'].validate(valid => {\n                if (valid) {\n                    api.patchPlanTime(this.timeTemp).then(res => {\n                        if (res.status == 200) {\n                            this.$message({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                            this.resetTemp()\n                            this.timeDialogFormVisible = false\n                            this.listSelected = []\n                        }\n                    })\n                }\n            })\n        },\n        handleDispatch () {\n            if (this.listSelected.some(item => item.state == 'mps20')) {\n                this.$message({\n                    title: '警告',\n                    message: '已选包含已派工计划，已派工计划无法继续派工',\n                    type: 'warning'\n                })\n                return false\n            }\n            this.$confirm('确定要派工所选计划?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    var tmp = this.listSelected.map(item => {\n                        return item.maintainPlanNumber\n                    })\n                    api.dispatch(tmp).then(res => {\n                        if (res.status == 200) {\n                            this.$message({\n                                title: '成功',\n                                message: '派工成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            this.getList()\n                            this.resetTemp()\n                            this.timeDialogFormVisible = false\n                            this.listSelected = []\n                        }\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消派工'\n                    })\n                })\n        },\n        resetTemp () {\n            this.temp = {\n                classCode: undefined,\n                maintainerCode: undefined,\n                maintainerName: 'aaa',\n                planTime: undefined\n            }\n        },\n        resetTimeTemp () {\n            this.timeTemp = {\n                planTime: undefined\n            }\n        },\n        handleDownload () {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = [\n                    '颜色编码',\n                    '颜色名称',\n                    '颜色简称',\n                    '状态',\n                    '备注'\n                ]\n                const filterVal = [\n                    'colorCode',\n                    'colorName',\n                    'colorAbbreviation',\n                    'state',\n                    'remark'\n                ]\n                const data = this.formatJson(filterVal, this.list)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson (filterVal, jsonData) {\n            return jsonData.map(v =>\n                filterVal.map(j => {\n                    if (j === 'timestamp') {\n                        return parseTime(v[j])\n                    } else {\n                        return v[j]\n                    }\n                })\n            )\n        }\n    }\n}\n",null]}