{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/userManagement/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/userManagement/index.vue","mtime":1600927611552},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { selectlists, authorizationrole, relation } from '@/api/system/user'\nimport { selecttree } from '@/api/system/organization'\nimport { selectrole } from '@/api/system/role'\n\nimport { getDomainName } from '@/utils/auth'\nimport { mapState } from 'vuex'\n\n\nexport default {\n    name: 'userManagement',\n    components: { Pagination },\n    data () {\n        return {\n            data1: [],\n            tableKey: 0,\n            list: [\n            ],\n            theight: 0,//表格高度\n            listunrole: [],\n            listrole: [],\n            treeData: [],\n            total: 0,\n            total1: 0,\n            total2: 0,\n            activeName2: 'first',\n            listLoading: true,\n            listQuery: {\n                orgId: '',\n                currentPage: 1,\n                pageSize: 15,\n                page: 1\n            },\n            listQuery1: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                domainScope: getDomainName().toUpperCase()\n            },\n            listQuery2: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n            },\n            readonly: false,\n            temp: {\n\n            },\n            dialogFormVisible: false,\n            dialogFormVisible1: false,\n            dialogFormUser: false,\n            dialogStatus: '',\n            rules: {\n                realName: [\n                    { required: true, message: '真实姓名不能为空', trigger: 'blur' },\n                    { max: 100, message: this.$t('validate.max32'), trigger: 'blur' },\n                    { type: 'string', message: '请输入字符串 \"张三\" ', trigger: 'blur' }\n                ],\n                userName: [\n                    { required: true, message: '用户名称不能为空', trigger: 'blur' },\n                    { max: 100, message: this.$t('validate.max32'), trigger: 'blur' }\n                ],\n            },\n            dialogPvVisible: false,\n            pvData: [],\n            defaultProps: {\n                children: 'children',\n                label: 'organizationName'\n            },\n            defaultProps1: {\n                children: 'children',\n                label: 'catalogName'\n            },\n            contentStyleObj: {\n                height: null,\n            },\n        };\n    },\n    computed: {\n        ...mapState({\n            dt_domainScope_type: state => state.dict.dt_domainScope_type,\n        })\n    },\n    mounted () {\n        this.$store.dispatch('dict/getDicData', ['dt_domainScope_type']);\n        this.setTableHeight();\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight();\n            this.setTreeHeight();\n        };\n        this.getList();\n        this.setTreeHeight();\n    },\n    created () {\n        window.addEventListener('resize', this.getHeight);\n        this.getHeight();\n\n    },\n    methods: {\n        handleClose () {\n            this.resetTemp()\n        },\n        cancel () {//弹窗取消按钮\n            this.dialogFormVisible = false\n            this.dialogFormVisible1 = false\n        },\n        getHeight () {\n            this.contentStyleObj.height = document.body.scrollHeight - 110 + 'px';\n        },\n        destroyed () {\n            window.removeEventListener('resize', this.getHeight)\n        },\n        treeGetList () {//获取树数据\n            this.listLoading = true\n            selectlists(this.listQuery).then(response => {\n                this.list = response.data.list\n                this.total = response.data.pages.count\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight();\n        },\n        //树高度设置\n        setTreeHeight () {\n            this.contentStyleObj.height = this.$myFun.getTreehHeight();\n        },\n        getList () {//查询数据\n            this.listLoading = true\n            selectlists(this.listQuery).then(response => {\n                this.list = response.data.list\n                this.total = response.data.pages.count\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            }),\n                selecttree().then(response => {//获取树数据\n                    this.treeData = this.$myFun.addTreeRoot(response.data)\n                    setTimeout(() => {\n                        this.listLoading = false\n                    }, 1.5 * 100)\n                })\n        },\n        getListRelation () {//查询关联的数据\n            this.listQuery2.type = 1\n            relation(this.selectlistRow[0].userName, this.listQuery2).then(response => {\n                this.listrole = response.data.list\n                this.total2 = response.data.pages.count\n            })\n        },\n        getListUnelation () {//查询未关联的数据\n            this.listQuery1.type = 2\n            this.listQuery1.userName = this.selectlistRow[0].realName\n\n            relation(this.selectlistRow[0].userName, this.listQuery1).then(response => {\n                this.listunrole = response.data.list\n                this.total1 = response.data.pages.count\n            })\n        },\n        handleTabClick (tab) {//选项卡切换\n            if (tab.name == \"first\") {\n                this.getListUnelation()\n            } else {\n                this.getListRelation()\n            }\n\n        },\n        handleFilter () {\n            this.listQuery.page = 1\n            this.listLoading = true\n            //查询组织列表\n            selectlists(this.listQuery).then(response => {\n                this.list = response.data.list\n                this.total = response.data.pages.count\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        resetTemp () {\n            this.temp = {\n                employeeCode: undefined,\n                employeeName: undefined,\n                sex: 1,\n                organizationId: undefined,\n                state: '启用',\n                mobile: undefined,\n                email: undefined,\n                officePhone: undefined,\n                birthday: undefined,\n                hireDate: undefined,\n                idNumber: undefined,\n                address: undefined,\n                remarks: undefined,\n                isLog: '是'\n            }\n        },\n        //角色维护\n        handleUser () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.getListUnelation()\n                this.dialogFormUser = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条用户信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        deleRole () {//删除关联角色\n            let fun = 'REMOVE'\n            if (this.selectlistRowUser1 && this.selectlistRowUser1.length > 0) {\n                let roleCodes = []\n                for (let i = 0; i < this.selectlistRowUser1.length; i++) {\n                    roleCodes[i] = this.selectlistRowUser1[i].roleCode\n                }\n                authorizationrole(this.selectlistRow[0].userName, roleCodes, fun).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n\n                    })\n                    this.getListRelation()\n                })\n                this.dialogFormUser = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条角色信息',\n                    type: 'warning'\n                })\n            }\n        },\n        // handleFun() {//功能授权按钮单击事件方法\n        //   // if(this.selectlistRow && this.selectlistRow.length==1){\n        //   //   selectRecord(this.listQuery).then(res => {\n        //   //   this.dialogStatus = 'create'\n        //   //   this.dialogFormVisible1 = true\n        //   //   this.data1=this.$myFun.reDataToTree(res.data.list)\n        //   // })\n        //   // }else{\n        //   //   this.$message({\n        //   //     title: '警告',\n        //   //     message: '请选择一条信息',\n        //   //     type: 'warning'\n        //   //   })\n        //   // }\n        // },\n        handleCheckChange () {\n            return this.$refs.tree.getCheckedNodes().concat(this.$refs.tree.getHalfCheckedNodes())//获取选中和半选中状态下的数据\n        },\n        create1 () {//功能授权弹窗确定按钮单击事件方法\n            // let catalogs=this.handleCheckChange().map(function(item,index,array){ \n            //   return item.catalogCode\n            // })\n            // addMenu(this.selectlistRow[0].roleCode,{catalogCodes:catalogs}).then(res =>{\n            //   this.$notify({\n            //         title: '成功',\n            //         message: '授权成功',\n            //         type: 'success',\n            //         duration: 2000\n            //       })\n            // })\n\n            this.dialogFormVisible1 = false\n        },\n        handsearchsole () {\n            selectrole(this.listQuery1).then(response => {\n                if (this.activeName2 == \"first\") {\n                    this.listunrole = response.data.list\n                    this.total = response.data.pages.count\n                } else {\n                    this.listrole = response.data.list\n                    this.total = response.data.pages.count\n                }\n\n\n            })\n            // this.handleUser()\n        },\n        addrole () {//角色授权\n            let fun = 'SAVE'\n            if (this.selectlistRowUser && this.selectlistRowUser.length > 0) {\n                let roleCodes = []\n                for (let i = 0; i < this.selectlistRowUser.length; i++) {\n                    roleCodes[i] = this.selectlistRowUser[i].roleCode\n                }\n                authorizationrole(this.selectlistRow[0].userName, roleCodes, fun).then(() => {\n                    this.$message({\n                        title: '成功',\n                        message: '授权成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.handleUser()\n                })\n                this.dialogFormUser = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条角色信息',\n                    type: 'warning'\n                })\n            }\n\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            if (val.length > 1) {\n                this.$refs.tb_a.clearSelection()//清除其他行的选中\n                this.$refs.tb_a.toggleRowSelection(val[val.length - 1], 'selected')//单击行绑定点击事件\n            } else if (val.length === 1) {\n                this.selectlistRow = val\n            }\n        },\n        rowClick (val) {\n            this.$refs.tb_a.clearSelection()//清除其他行的选中\n            this.$refs.tb_a.toggleRowSelection(val)//单击行绑定点击事件\n        },\n        selectRowUser (val) {\n            this.selectlistRowUser = val\n        },\n        selectRowUser1 (val) {\n            this.selectlistRowUser1 = val\n        },\n        handleNodeClick (data) {//点击树查询\n            this.listQuery.orgId = data.rowId;\n            this.treeGetList();\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                let ids = []\n                this.selectlistRow.forEach((val, index) => {\n                    ids[index] = val.employeeCode\n                })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n\n        }\n    },\n\n};\n",null]}