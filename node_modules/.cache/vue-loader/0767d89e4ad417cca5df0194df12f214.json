{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/FM/failureRegister/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/FM/failureRegister/index.vue","mtime":1596610933415},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport *  as api from '@/api/project/eas/fm/failureRegister'\nimport faultTypeSelect from '../../components/faultTypeSelect'\nimport employeesSelect from \"@/components/Select/employeesSelect.vue\" //操作人\nimport Pagination from '@/components/Pagination'\nimport teamSelect from '../../components/teamSelect'\nimport { mapState } from \"vuex\"\nimport selectTree from \"@/components/Select/selectTree\" //下拉组件\nimport { queryRecords } from '@/api/project/eas/database/faultType'\nimport equipmentSelect from \"./equipmentSelect.vue\" //操作人\nimport imgUpload from '../../components/imgUpload'\nimport fileUpload from '../../components/fileUpload'\nimport tab3 from \"./tab3\"\n\nexport default {\n    name: 'failureRegister',\n    components: { Pagination, employeesSelect, equipmentSelect, selectTree, tab3, faultTypeSelect, imgUpload, fileUpload, teamSelect },\n    data () {\n        return {\n            list: null,\n            equipmentRow: [],\n            disposerRow: undefined,\n            dialogStatus: '',\n            dialogFormVisible: false,\n            employeeDialogVisible: false,\n            equipmentDialogVisible: false,\n            workOrderNumberA: undefined,\n            total: 0,\n            theight: 0, //表格高度\n            ids: [],\n            faultNumbers: [],\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                deviceCode: undefined,\n                state: undefined,\n                faultTypeCode: undefined,\n                faultNumber: undefined,\n            },\n            listQuery1: {\n                faultCode: undefined\n            },\n            temp: {\n                classCode: undefined,\n                className: undefined,\n                description: undefined,\n                address: undefined,\n                deviceCode: undefined,\n                deviceName: undefined,\n                faultCode: undefined,\n                faultGrade: undefined,\n                faultTypeCode: undefined,\n                happenTime: undefined,\n                ifMachineHalt: undefined,\n                machineHaltTime: undefined,\n                mobile: undefined,\n                operator: undefined,\n                operatorName: undefined,\n                partCode: undefined,\n            },\n            faultList: [],\n            partCodeOption: [],\n            optionData: [],\n            clickChange: false, //if click another row\n            currentSelectedRow: null, //当前选中行\n            selectlistRow: [],\n            isClearable: true, // 可清空（可选）\n            isAccordion: true, // 可收起（可选）\n            valueId: undefined, // 初始ID（可选）\n            props: {\n                // 配置项（必选）\n                rowId: 'rowId', // 父级唯一标识\n                children: 'children',\n                label: 'faultName'\n            },\n            gw: undefined,\n            tabName: 'sbtp',\n            tabConfig: [\n                { label: '故障图片', name: 'sbtp', prop: 'sbtp' },\n                { label: '故障附件', name: 'sbfj', prop: 'sbfj' },\n                { label: '处理记录', name: 'bjqd', prop: 'bjqd' },\n            ],\n            tableKey: [0],\n            rules: {\n                happenTime: [\n                    {\n                        required: true,\n                        message: '发生时间不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                operator: [\n                    {\n                        required: true,\n                        message: '操作人不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                mobile: [\n                    {\n                        required: true,\n                        message: '电话不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^1(3|4|5|7|8)\\d{9}$/,\n                        message: '有数字组成，1开头34578其中一位为第二位，长度为11',\n                        trigger: 'blur'\n                    }\n                ],\n                faultTypeCode: [\n                    {\n                        required: true,\n                        message: '故障类型不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                partCode: [\n                    {\n                        required: true,\n                        message: '故障部位不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                deviceCode: [\n                    {\n                        required: true,\n                        message: '设备编号不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                urgencyDegree: [\n                    {\n                        required: true,\n                        message: '紧急程度不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                faultGrade: [\n                    {\n                        required: true,\n                        message: '故障等级不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                description: [\n                    {\n                        required: true,\n                        message: '故障描述不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n\n\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_fault_state: state => state.eamDict.dt_fault_state,\n            dt_urgency_degree: state => state.eamDict.dt_urgency_degree,\n            dt_fault_grade: state => state.eamDict.dt_fault_grade,\n            dt_yes_or_no: state => state.eamDict.dt_yes_or_no,\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n\n        let p = new Promise((resolve) => {\n            resolve(\n                this.$store.dispatch(\"eamDict/getDicData\", [\n                    \"dt_fault_state\", \"dt_urgency_degree\", \"dt_fault_grade\", \"dt_file_equipment\",\n                    \"dt_yes_or_no\"\n                ])\n            )\n        })\n        Promise.all([p]).then(() => {\n            this.getList()\n        })\n        this.getOptionData()\n    },\n    destroyed () {\n        this.getList()\n        this.getOptionData()\n    },\n    methods: {\n        getClass (val) {\n            this.temp.className = val ? val.teamName : undefined\n        },\n        clear () {\n            this.$refs.tempR.clearValidate()\n        },\n        checked () {\n            if (this.list && this.list.length) {\n                this.$refs.mainList.toggleRowSelection(this.list[0], true)\n            }\n        },\n        //故障类型\n        getValue (value) {\n            this.listQuery.faultTypeCode = value ? value.faultCode : undefined\n        },\n        buildTree: (array, id, parent_id) => {\n            // 创建临时对象\n            let temp = {}\n            // 创建需要返回的树形对象\n            let tree = []\n            // 先遍历数组，将数组的每一项添加到temp对象中\n            for (let i in array) {\n                temp[array[i][id]] = array[i]\n            }\n            // 遍历temp对象，将当前子节点与父节点建立连接\n            for (let i in temp) {\n                // 判断是否是根节点下的项\n                if (temp[i][parent_id] != 0) {\n                    if (!temp[temp[i][parent_id]].children) {\n                        temp[temp[i][parent_id]].children = []\n                    }\n                    temp[temp[i][parent_id]].children.push(temp[i])\n                } else {\n                    tree.push(temp[i])\n                }\n            }\n            return tree\n        },\n        getOptionData () {\n            queryRecords().then(res => {\n                this.optionData = [\n                    {\n                        faultName: '故障类型',\n                        faultCode: 0,\n                        rowId: 0,\n                        children: this.buildTree(\n                            res.data,\n                            'faultCode',\n                            'preFaultCode'\n                        )                    }\n                ][0].children\n            })\n        },\n        //查询主表\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                let options = [this.dt_fault_state, this.dt_yes_or_no, this.dt_urgency_degree, this.dt_fault_grade]\n                this.list = this.$myFun.srmCodeToName(\n                    res.data.list,\n                    options,\n                    ['state', 'ifMachineHalt', 'urgencyDegree', 'faultGrade']\n                )\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        changeShutdown (val) {\n            if (val == 'N') {\n                this.temp.machineHaltTime = []\n            }\n        },\n        //操作人传值\n        handleEmployee (row) {\n            this.employeeRow = row\n        },\n        //操作人弹窗\n        handleClickEmployee () {\n            this.employeeDialogVisible = true\n        },\n        //操作人获取值\n        employeeCreate () {\n            this.temp.operator = this.employeeRow.employeeCode\n            this.temp.operatorName = this.employeeRow.employeeName\n            this.temp.mobile = this.employeeRow.mobile\n            this.employeeDialogVisible = false\n        },\n        //设备编码\n        handleClickDevice () {\n            this.equipmentDialogVisible = true\n        },\n        handleEquipment (row) {\n            this.equipmentRow = row\n        },\n        equipmentUpdate () {\n            this.temp.deviceCode = this.equipmentRow.deviceCode\n            this.temp.deviceName = this.equipmentRow.deviceName\n            this.temp.typeCode = this.equipmentRow.typeCode\n            this.temp.typeName = this.equipmentRow.typeName\n            this.temp.modelNumber = this.equipmentRow.modelNumber\n            this.temp.useDept = this.equipmentRow.useDept\n            this.temp.useDeptName = this.equipmentRow.useDeptName\n            this.temp.address = this.equipmentRow.address\n            this.temp.addressName = this.equipmentRow.addressName\n            this.$set(this.temp, 'partCode', undefined)\n            api.queryFaultCode(this.temp.deviceCode).then(re => {\n                re.data.forEach((v, index) => {\n                    this.faultList[index] = v.faultCode\n                })\n            })\n            this.equipmentDialogVisible = false\n            this.getPart()\n        },\n        faultCodeChange (val) {\n            if (val) {\n                this.listQuery1.faultCode = val\n                api.queryFaultCode(this.listQuery1).then(Response => {\n                    this.$set(this.temp, 'faultTypeCode', Response.data[0].faultTypeCode)\n                    this.$set(this.temp, 'partCode', Response.data[0].partCode)\n                    this.$set(this.temp, 'description', Response.data[0].description)\n                    this.$refs.faultType.valueTitle = Response.data[0].faultTypeCode\n\n                })\n            }\n        },\n        getPart () {\n            api.querypart(this.temp.typeCode).then(res => {\n                this.partCodeOption = res.data\n            })\n        },\n        value () {\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 185\n        },\n        //查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.$nextTick(() => {\n                this.$refs.faultType.valueTitle = undefined\n            })\n            this.dialogFormVisible = true\n            if (!this.temp.ifMachineHalt) {\n                this.temp.ifMachineHalt = 'N'\n            }\n        },\n        //新增方法\n        create () {\n            this.$refs['tempR'].validate(valid => {\n                if (valid) {\n                    this.temp.machineHaltTime = parseInt(this.temp.machineHaltTime)\n                    api.addRecords(this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '新增成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        //编辑\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                if (this.selectlistRow[0].state === \"fs10\" || this.selectlistRow[0].state === \"fs70\") {\n                    this.dialogFormVisible = true\n                    api.numberRecords(this.selectlistRow[0].faultNumber).then(res => {\n                        this.temp = res.data\n                        this.temp.typeName = res.data.deviceTypeName\n                        this.temp.type = res.data.deviceType\n                        api.queryFaultCode(this.listQuery1).then(Response => {\n                            this.$refs.faultType.valueTitle = Response.data[0].faultTypeCode\n                        })\n                        this.dialogStatus = 'update'\n                    })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已录入或驳回状态的数据编辑',\n                        type: 'warning'\n                    })\n\n                }\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //编辑方法\n        update () {\n            this.$refs['tempR'].validate(valid => {\n                if (valid) {\n                    api.updateRecords(this.selectlistRow[0].faultNumber, this.temp).then(() => {\n                        this.getList()\n                        this.dialogFormVisible = false\n                        this.$message({\n                            title: '成功',\n                            message: '更新成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            this.selectlistRow.forEach((v, index) => {\n                this.ids[index] = v.faultNumber\n            })\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                if (this.selectlistRow[0].state === \"fs10\" || this.selectlistRow[0].state === \"fs70\") {\n                    this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    })\n                        .then(() => {\n                            api.deleteRecords(this.ids).then(() => {\n                                this.getList(),\n                                    this.$message({\n                                        title: '成功',\n                                        message: '删除成功',\n                                        type: 'success',\n                                        duration: 2000\n                                    })\n                            })\n                        })\n                        .catch(() => {\n                            this.$message({\n                                type: 'info',\n                                message: '已取消删除'\n                            })\n                        })\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: '只针对已录入或驳回状态的数据删除',\n                        type: 'warning'\n                    })\n\n                }\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        handleRepair () {\n            if (this.selectlistRow && this.selectlistRow.length > 0) {\n                this.selectlistRow.forEach((v, index) => {\n                    this.faultNumbers[index] = v.faultNumber\n                })\n                api.repairsRecords(this.faultNumbers).then(() => {\n                    this.getList(),\n                        this.$message({\n                            title: '成功',\n                            message: '报修成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                })\n\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择故障编码信息',\n                    type: 'warning'\n                })\n\n            }\n\n        },\n        checkSelectStatus (rows, row) {\n            let checkStatus = false\n            if (rows) {\n                if (\n                    this.selectlistRow.length <= rows.length &&\n                    rows.length != 0\n                ) {\n                    checkStatus = true\n                }\n            }\n            if (row) {\n                if (\n                    JSON.stringify(this.selectlistRow).indexOf(JSON.stringify(row)) == -1\n                ) {\n                    checkStatus = true\n                }\n            }\n            return checkStatus\n        },\n        rowClick (row) {\n            if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n                this.clickChange = false\n            } else {\n                this.clickChange = true\n            }\n            this.currentClickRow = row\n            let selectStatus = this.checkSelectStatus(null, row)\n            if (selectStatus) {\n                this.currentSelectedRow = row\n                this.$refs.mainList.toggleRowSelection(row, true)\n                this.workOrderNumberA = this.currentClickRow.faultNumber\n                setTimeout(() => {\n                    this.$refs.tab2[0].getList()\n                    this.$refs.tab1[0].getList()\n                    this.$refs.tab3[0].getList()\n                }, 1000)\n            } else {\n                if (this.clickChange) {\n                    this.$refs.mainList.setCurrentRow(this.currentClickRow)\n                    this.workOrderNumberA = this.currentClickRow.faultNumber\n                    setTimeout(() => {\n                        this.$refs.tab2[0].getList()\n                        this.$refs.tab1[0].getList()\n                        this.$refs.tab3[0].getList()\n                    }, 1000)\n                }\n            }\n        },\n        selectChange (val) {\n            this.selectlistRow = val\n            if (this.clickChange) {\n                this.$refs.mainList.setCurrentRow(this.currentClickRow)\n                this.workOrderNumberA = this.currentClickRow.faultNumber\n                setTimeout(() => {\n                    this.$refs.tab2[0].getList()\n                    this.$refs.tab1[0].getList()\n                    this.$refs.tab3[0].getList()\n                }, 1000)\n            }\n        },\n        tableSelect (rows, row) {\n            let selectStatus = this.checkSelectStatus(rows)\n            if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n                this.clickChange = false\n            } else {\n                this.clickChange = true\n                this.currentClickRow = row\n            }\n            if (selectStatus) {\n                this.currentSelectedRow = row\n            } else {\n                this.curChange = false\n            }\n        },\n        resetTemp () {\n            this.temp = {\n                faultCode: undefined,\n                description: undefined,\n                faultGrade: undefined,\n                deviceCode: undefined,\n                deviceName: undefined,\n                happenTime: undefined,\n                ifMachineHalt: undefined,\n                operator: undefined,\n                operatorName: undefined,\n                partCode: undefined,\n                category: undefined,\n                urgencyDegree: undefined,\n                mobile: undefined\n\n            }\n\n        }\n    }\n}\n",null]}