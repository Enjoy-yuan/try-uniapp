{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/supplierRFQ/supplierRFQAnswer/dialog/dialogQuoteTotal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/supplierRFQ/supplierRFQAnswer/dialog/dialogQuoteTotal.vue","mtime":1596610934110},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createQuote, updateQuote } from \"@/api/project/srm/supplierSelect/supplierRFQ/supplierRFQAnswer\"\nimport { mapState } from \"vuex\"\nimport { DICT_CODE } from '@/utils/constant'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport dialogQuoteTotalRef from './dialogQuoteTotalRef' //参照报价\n\n\nexport default {\n    name: 'dialogQuoteTotal',\n    props: ['title'],\n    methodType: 'add',\n    components: { caiGou, dialogQuoteTotalRef },\n    data () {\n        return {\n            isSingle: true,\n            dialogVisible: false,\n            DICT_CODE: DICT_CODE,\n            formData: {\n                rowId: null,\n                rfqNo: null,\n                supplierCode: null,\n                supplierName: null,\n                quotedDate: null,\n                settlementMethod: null,\n                otherMethod: null,\n                currency: null,\n                remark: null\n            },\n            totalQuotationItems: {\n                fifthYearDecline: 0,\n                firstYearDecline: 0,\n                forthYearDecline: 0,\n                materielCode: null,\n                materielName: null,\n                modeCost: 0,\n                modeQuantity: 0,\n                quotedDate: null,\n                remark: null,\n                secondYearDecline: 0,\n                taxFree: 0,\n                taxFreePrice: 0,\n                thirdYearDecline: 0,\n                version: 0\n            },\n            rules: {\n                currency: [\n                    { required: true, message: '请填写', trigger: 'blur' }\n                ],\n                otherMethod: [\n                    { required: true, message: '请选择', trigger: 'blur' }\n                ]\n            },\n            formConfig: [\n                { type: 'commonInput', disabled: true, label: '供应商编码', prop: 'supplierCode', width: '' },\n                { type: 'commonInput', disabled: true, label: '供应商名称', prop: 'supplierName', width: '' },\n                { type: 'date', label: '报价时间', prop: 'quotedDate', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pdr', label: '结算方式', prop: 'settlementMethod', width: '' },//wu dict dt_srm_pdr\n                { type: 'commonInput', label: '其它方式说明', prop: 'otherMethod', width: '' },\n                { type: 'dictSelect', dType: 'dt_srm_pdk', label: '币种', prop: 'currency', width: '' },\n                { type: 'textarea', label: '备注', prop: 'remark', width: '780px', rows: \"2\" }\n            ],\n            tableData: [],\n            tableConfig: [\n                { label: '产品', prop: 'no1', align: 'center', width: 'auto' },\n                { label: '物料编码', prop: 'materielCode', align: 'center', width: '100' },\n                { label: '物料名称', prop: 'materielName', align: 'center', width: '120' },\n                { type: 'commonInput', label: '不含税(无模摊)', prop: 'taxFree', align: 'center', width: '120' },\n                { type: 'commonInput', label: '模摊费', prop: 'modeCost', align: 'center', width: 'auto' },\n                { type: 'commonInput', label: '模摊数量', prop: 'modeQuantity', align: 'center', width: 'auto' },\n                { label: '不含税价', prop: 'taxFree', align: 'center', width: 'auto' },\n                {\n                    type: 'inputArr', label: '承诺降幅', prop: 'prop4', width: '', inputArr: [\n                        { type: 'commonInput', label: '第一年', prop: 'firstYearDecline', width: '' },\n                        { type: 'commonInput', label: '第二年', prop: 'secondYearDecline', width: '' },\n                        { type: 'commonInput', label: '第三年', prop: 'thirdYearDecline', width: '' },\n                        { type: 'commonInput', label: '第四年', prop: 'forthYearDecline', width: '' },\n                        { type: 'commonInput', label: '第五年', prop: 'fifthYearDecline', width: '' },\n                    ]\n                },\n                { label: '报价版本', prop: 'version', align: 'center', width: 'auto' },\n                { label: '备注', prop: 'remark', align: 'center', width: 'auto' }\n            ],\n            dialogConfig: [\n                { title: '参照报价', unMutiple: false }\n            ],\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_srm_pdr: state => state.dict.dt_srm_pdr,//结算方式\n            dt_srm_pdk: state => state.dict.dt_srm_pdk,//币种\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pdr\", \"dt_srm_pdk\"])\n    },\n    methods: {\n        handleConfirm () {\n            this.$refs.formData.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认保存吗?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        this.tableData[0].quotedDate = this.formData.quotedDate\n                        if (this.methodType === 'add' && !this.formData.rowId) {\n                            let cdata = {\n                                method: \"TOTAL\",\n                                quotationSource: 'rfq',\n                                totalQuotedProposalDTO: this.formData\n                            }\n                            //后面注释掉\n                            cdata.totalQuotedProposalDTO.quotationSource = 'rfq'\n                            this.setTable()\n                            cdata.totalQuotedProposalDTO.totalQuotationItems = this.tableData.map(v => {\n                                v.taxFreePrice = v.taxFree\n                                v.firstYearDecline = parseFloat(v.firstYearDecline)\n                                return v\n                            })\n                            console.log(cdata, 'yyyy')\n                            createQuote(cdata).then(res => {\n                                this.methodType = 'edit'\n                                this.formData.rowId = res.data\n                                this.$message({\n                                    type: 'success',\n                                    message: '新增报价成功'\n                                })\n                                this.dialogVisible = false\n                                this.$emit('refresh')\n                            })\n                        } else {\n                            let cdata = {\n                                method: \"TOTAL\",\n                                quotationSource: 'rfq',\n                                totalQuotedProposalDTO: this.formData\n                            }\n                            //后面注释掉\n                            cdata.totalQuotedProposalDTO.quotationSource = 'rfq'\n                            cdata.totalQuotedProposalDTO.totalQuotationItems = this.tableData.map(v => {\n                                v.taxFreePrice = v.taxFree\n                                v.firstYearDecline = parseFloat(v.firstYearDecline)\n                                return v\n                            })\n                            updateQuote(cdata).then(() => {\n                                this.$message({\n                                    type: 'success',\n                                    message: '编辑报价成功'\n                                })\n                                this.dialogVisible = false\n                                this.$emit('refresh')\n                            })\n                        }\n                    })\n                }\n            })\n        },\n        handleQuoteRef () {\n            if (this.selectedRows && this.selectedRows.length > 0) {\n                this.$refs.refQuoteTotal.dialogVisible = true\n                this.$refs.refQuoteTotal.getList(this.selectedRows[0])\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请勾选一条信息'\n                })\n            }\n\n        },\n        setTable () {\n            this.tableData.forEach((item, index) => {\n                this.$set(this.tableData[index], 'quotedDate', this.formData.quotedDate)\n            })\n        },\n        handleClose () {\n            this.$refs['formData'].resetFields()\n            this.$refs['formData'].clearValidate()\n        },\n        initForm (fdata, row, tdata) {\n            this.tableData = []\n            if (row && row.length > 0) {\n                this.tableData = row\n                this.formData.quotedDate = row[0].quotedDate\n                this.formData.settlementMethod = row[0].settlementMethod\n                this.formData.otherMethod = row[0].otherMethod\n                this.formData.currency = row[0].currency\n                this.formData.remark = row[0].remark\n                console.log(this.tableData)\n            } else {\n                tdata.forEach((item, index) => {\n                    this.tableData.push(JSON.parse(JSON.stringify(this.totalQuotationItems)))\n                    for (let key in item) {\n                        for (let par in fdata) {\n                            if (key === par) {\n                                this.$set(this.tableData[index], key, item[key])\n                            }\n                        }\n                    }\n                    this.$set(this.tableData, index, this.tableData[index])\n                })\n            }\n            if (row) {\n                for (let key in this.formData) {\n                    for (let par in row) {\n                        if (key === par) {\n\n                            this.$set(this.formData, key, row[key])\n                        }\n                    }\n                }\n            } else {\n                for (let key in this.formData) {\n                    this.$set(this.formData, key, null)\n                }\n            }\n            if (fdata) {\n                for (let key in this.formData) {\n                    for (let par in fdata) {\n                        if (key === par) {\n                            this.$set(this.formData, key, fdata[key])\n                        }\n                    }\n                }\n            }\n        },\n        // 表格选择框选中 注:参数为选中的所有行的数组\n        selectChange (val) {\n            if (this.isSingle) {\n                if (val.length > 1) {\n                    this.$refs.tb.clearSelection() //清除其他行的选中\n                    this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n    }\n}\n",null]}