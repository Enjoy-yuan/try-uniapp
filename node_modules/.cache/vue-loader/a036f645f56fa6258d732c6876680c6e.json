{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTRW/RWTabs/timeData.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTRW/RWTabs/timeData.vue","mtime":1597995949007},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryDeviceBinds, updateDeliver, queryCurve } from \"@/api/project/iot/IOT/db\"\nimport { mapState } from 'vuex'\nexport default {\n    name: \"DBTimeData\",\n    props: {\n        itemData: {\n            type: Object,\n            default: undefined\n        },\n        code: {\n            type: String,\n            default: undefined\n        }\n    },\n    watch: {\n        itemData (val) {\n            if (val) {\n                this.getList()\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            iot_state: state => state.iotDict.iot_state,\n        })\n    },\n    data () {\n        return {\n            listLoading: false,\n            theight: 0,//表格高度\n            list: [],\n            tableKey: 0,//表格索引\n            pointCode: undefined,\n            listQuery: {\n                pointEndTime: undefined,\n                pointStartTime: undefined\n            },\n            dialogFormVisible: false,\n            chartList: null\n        }\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n    },\n    methods: {\n        stateClass (state) {\n            if (state == '0') {\n                return 'iot-warning'\n            } else if (state == '1') {\n                return 'iot-success'\n            } else if (state == '2') {\n                return 'iot-info'\n            }\n        },\n        //获取表格数据\n        getList () {\n            this.listLoading = true\n            queryDeviceBinds(this.code, this.itemData.gatewayCode, this.itemData.deviceCode).then(response => {\n                this.$emit('getSubList', response.data)\n                this.list = response.data\n                let options = [this.iot_state]\n                this.list = this.$myFun.srmCodeToName(\n                    response.data,\n                    options,\n                    ['deliveryState']\n                )\n                setTimeout(() => {\n                    this.listLoading = false\n                }, 1.5 * 100)\n            })\n        },\n        // 交付\n        pay (row, pointCode) {\n            this.$confirm('此操作将交付所选中数据, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            })\n                .then(() => {\n                    updateDeliver(this.code, this.itemData.gatewayCode, this.itemData.deviceCode, pointCode).then(() => {\n                        this.getList()\n                        this.$message({\n                            title: '成功',\n                            message: '交付成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消交付'\n                    })\n                })\n\n        },\n        // 查看曲线\n        handleViewCurves (pointCode) {\n            //获取当前时间\n            var day = new Date()\n            var now = new Date()\n            day.setTime(day.getTime() - 2 * 60 * 60 * 1000)\n            this.listQuery.pointStartTime = getDate(day)\n            this.listQuery.pointEndTime = getDate(now)\n            function getDate (day) {\n                var year = day.getFullYear()//得到年份\n                var month = day.getMonth() + 1 > 10 ? day.getMonth() + 1 : '0' + (day.getMonth() + 1)//得到月份\n                var date = day.getDate() > 10 ? day.getDate() : '0' + day.getDate()//得到日期\n                var hour = day.getHours() > 10 ? day.getHours() : '0' + day.getHours()//得到小时\n                var minu = day.getMinutes() > 10 ? day.getMinutes() : '0' + day.getMinutes()//得到分钟\n                var sec = day.getSeconds() > 10 ? day.getSeconds() : '0' + day.getSeconds()//得到秒\n                return `${year}-${month}-${date} ${hour}:${minu}:${sec}`\n            }\n            this.pointCode = pointCode\n            this.dialogFormVisible = true\n            this.handleQuery()\n        },\n        // 搜索曲线\n        handleQuery () {\n            queryCurve(this.code, this.itemData.gatewayCode, this.itemData.deviceCode, this.pointCode, this.listQuery).then(res => {\n                this.chartList = res.data\n                this.drawLine()\n            })\n        },\n        drawLine () {\n            let xAxisData = this.chartList.map(item => {\n                return item.pointTime\n            })\n            let data = this.chartList.map(item => {\n                return {\n                    value: item.pointValue,\n                    name: item.pointName,\n                }\n            })\n            // 基于准备好的dom，初始化echarts实例\n            let myChart = this.$echarts.init(this.$refs.myChart)\n            // 绘制图表\n            myChart.setOption({\n                title: { text: '' },\n                tooltip: {\n                    formatter: '{b}<br/>{c}'\n                },\n                xAxis: {\n                    data: xAxisData\n                },\n                yAxis: {},\n                series: [\n                    {\n                        name: '',\n                        type: 'line',\n                        data: data\n                    }\n                ]\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 30\n        },\n    }\n};\n",null]}