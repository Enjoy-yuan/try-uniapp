{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/equipmentArchives/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/equipmentArchives/index.vue","mtime":1596610933376},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport *  as api from '@/api/project/eas/el/equipmentArchives'\nimport { queryRecords } from '@/api/project/eas/database/eqmt'\nimport caiGou from '@/components/Select/xtpt/caigou'//下拉组件\nimport workCenterSelect from \"@/components/Select/work-center-select.vue\" //下拉组件\nimport vendorMainSelect from \"@/components/Select/vendorMainSelect.vue\" //厂家\nimport employeesSelect from \"@/components/Select/employeesSelect.vue\" //操作人\nimport suppierSelect from \"@/components/Select/suppierSelect.vue\" //供应商\nimport deviceType from '../../components/deviceTypeSelect'\nimport { DT_ORG_TYPE } from '@/utils/constant'\nimport qrcode from \"@/components/QRCode\"\nimport Pagination from '@/components/Pagination'\nimport { mapState } from \"vuex\"\nimport imgUpload from '../../components/imgUpload'\nimport fileUpload from '../../components/fileUpload'\nimport tab3 from \"./tab3\"\nimport tab4 from \"./tab4\"\nimport tab5 from \"./tab5\"\n\n\nexport default {\n    name: 'equipmentArchives',\n    components: {        Pagination, imgUpload, fileUpload, tab3, tab4, tab5, caiGou,\n        workCenterSelect, vendorMainSelect, employeesSelect,\n        suppierSelect, qrcode, deviceType,    },\n    data () {\n        return {\n            dt_device_stateS: [],\n            pickerOptionsLeaveFactoryDate: {\n                disabledDate: time => {\n                    let endDateVal = this.temp.buyDate\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                }\n            },\n            // 自购  buyDate\n            pickerOptionsBuyDate: {\n                disabledDate: time => {\n                    let beginDateVal = this.temp.leaveFactoryDate\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                    let endDateVal = this.temp.installDate\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                },\n            },\n            // 初装 installDate\n            pickerOptionsInstallDate: {\n                disabledDate: time => {\n                    let beginDateVal = this.temp.buyDate\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                    let endDateVal = this.temp.productionDate\n                    if (endDateVal) {\n                        return time.getTime() > new Date(endDateVal).getTime()\n                    }\n                }\n            },\n            // 投产 productionDate\n            pickerOptionsProductionDate: {\n                disabledDate: time => {\n                    let beginDateVal = this.temp.installDate\n                    if (beginDateVal) {\n                        return (\n                            time.getTime() <\n                            new Date(beginDateVal).getTime()\n                        )\n                    }\n                }\n            },\n            list: null,\n            listSub: null,\n            options: [],\n            groupList: [],\n            deviceCodeA: undefined,\n            typeCodeA: undefined,\n            selectlistRowA: undefined,\n            stateOptions: [{\n                value: 'device_state40',\n                label: '空闲'\n            }, {\n                value: 'device_state30',\n                label: '使用'\n            }],\n            isClearable: true, // 可清空（可选）\n            isAccordion: true, // 可收起（可选）\n            valueId: undefined, // 初始ID（可选）\n            props: {\n                // 配置项（必选）\n                rowId: 'rowId', // 父级唯一标识\n                children: 'children',\n                label: 'typeName'\n                // disabled:true\n            },\n            optionData: [],\n            disposerRow: undefined,\n            materiaList: [],\n            dialogStatus: '',\n            dialogFormVisible: false,\n            vendorMainDialogVisible: false,\n            employeeDialogStatus: '',\n            employeeDialogVisible: false,\n            suppierDialogVisible: false,\n            checkUponDialogFormVisible: false,\n            dialogPrintVisible: false,\n            disposerDialogVisible: false,\n            selectlistRow: [],\n            total: 0,\n            printData: {},\n            theight: 0, //表格高度\n            DT_ORG_TYPE: DT_ORG_TYPE,\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 10,\n                deviceCode: undefined,\n                typeCode: undefined,\n                deviceName: undefined,\n                modelNumber: undefined,\n            },\n            listQuery1: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n            },\n            temp: {\n                organizationCode: undefined,\n                organizationName: undefined,\n                useDept: undefined,\n                useDeptName: undefined,\n                address: undefined,\n                deviceCode: undefined,\n                deviceName: undefined,\n                assetAffiliation: undefined,\n                assetCode: undefined,\n                assetManager: undefined,\n                assetManagerName: undefined,\n                assetNetWorth: undefined,\n                time_: undefined,\n                buyDate: undefined,\n                category: undefined,\n                complexityCoefficient: undefined,\n                contractNumber: undefined,\n                depreciationYear: undefined,\n                installDate: undefined,\n                leaveFactoryDate: undefined,\n                lifetime: undefined,\n                maintainGroup: undefined,\n                manufacturersCode: undefined,\n                manufacturersName: undefined,\n                modelNumber: undefined,\n                originalValue: undefined,\n                productionDate: undefined,\n                productionNumber: undefined,\n                supplierCode: undefined,\n                supplierName: undefined,\n                totalPower: undefined,\n                typeCode: undefined,\n                weight: undefined,\n                operationer: undefined,\n                operationerName: undefined,\n                remark: undefined\n            },\n            tempCheckUpon: {\n                time_: undefined,\n                deviceCode: undefined,\n                orderNumber: undefined,\n                disposerName: undefined,\n                remark: undefined,\n                disposer: undefined,\n                type_: undefined\n            },\n            gw: undefined,\n            tabName: 'sbtp',\n            tabConfig: [\n                { label: '设备图片', name: 'sbtp', prop: 'sbtp' },\n                { label: '设备附件', name: 'sbfj', prop: 'sbfj' },\n                { label: '备件清单', name: 'bjqd', prop: 'bjqd' },\n                { label: '关联子设备', name: 'glzsb', prop: 'glzsb' },\n                { label: '设备履历', name: 'sbll', prop: 'sbll' },\n            ],\n            tableKey: [0],\n            rules: {\n                organizationCode: [\n                    {\n                        required: true,\n                        message: '组织编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                typeCode: [\n                    {\n                        required: true,\n                        message: '设备类型编码不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                state: [\n                    {\n                        required: true,\n                        message: '设备状态不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                category: [\n                    {\n                        required: true,\n                        message: '设备类别不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                deviceCode: [\n                    {\n                        required: true,\n                        message: '设备编号不能为空',\n                        trigger: 'blur',\n                    },\n                    { pattern: /^[A-Z-_0-9]{1,50}$/, message: '由大写字母，数字，—和_组成，长度不能超过50', trigger: 'blur' }\n                ],\n                deviceName: [\n                    {\n                        required: true,\n                        message: '设备名称不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                modelNumber: [\n                    {\n                        required: true,\n                        message: '设备型号不能为空',\n                        trigger: 'blur'\n                    },\n                    { pattern: /^[A-Z-_0-9]{1,50}$/, message: '由大写字母，数字，—和_组成，长度不能超过50', trigger: 'blur' }\n                ],\n                lifetime: [\n                    {\n                        pattern: /^[0-9]{0,3}(\\.\\d{1,1})?$/,\n                        message: '保留1位小数，长度不能超过4',\n                        trigger: 'blur'\n                    }\n                ],\n                originalValue: [\n                    {\n                        pattern: /^[0-9]{0,10}(\\.\\d{1,2})?$/,\n                        message: '保留2位小数，长度不能超过12',\n                        trigger: 'blur'\n                    }\n                ],\n                weight: [{\n                    pattern: /^[0-9]{0,5}(\\.\\d{1,2})?$/,\n                    message: '保留2位小数，长度不能超过7',\n                    trigger: 'blur'\n                }],\n                assetNetWorth: [\n                    {\n                        pattern: /^[0-9]{0,10}(\\.\\d{1,2})?$/,\n                        message: '保留2位小数，长度不能超过12',\n                        trigger: 'blur'\n                    }\n                ],\n                totalPower: [\n                    {\n                        pattern: /^[0-9]{0,10}(\\.\\d{1,2})?$/,\n                        message: '保留2位小数，长度不能超过12',\n                        trigger: 'blur'\n                    }\n                ],\n                depreciationYear: [\n                    {\n                        pattern: /^[0-9]{0,3}(\\.\\d{1,1})?$/,\n                        message: '保留1位小数，长度不能超过3',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            checrules: {\n                time_: [\n                    {\n                        required: true,\n                        message: '验收日期不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                state: [\n                    {\n                        required: true,\n                        message: '设备状态不能为空',\n                        trigger: 'blur'\n                    }\n                ],\n                disposer: [\n                    {\n                        required: true,\n                        message: '验收人不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n\n            }\n        }\n    },\n    created () {\n        this.getList()\n    },\n    computed: {\n        ...mapState({\n            dt_device_state: state => state.eamDict.dt_device_state,\n            dt_asset_affiliation: state => state.eamDict.dt_asset_affiliation,\n            dt_device_category: state => state.eamDict.dt_device_category,\n            dt_device_record_type: state => state.eamDict.dt_device_record_type,\n            dt_img_equipment: state => state.eamDict.dt_img_equipment,\n            dt_file_equipment: state => state.eamDict.dt_file_equipment\n\n        })\n    },\n    mounted () {\n        this.setTableHeight()\n        //表格高度自适应\n        window.onresize = () => {\n            this.setTableHeight()\n        }\n        this.getList()\n\n        let p = new Promise((resolve) => {\n            resolve(\n                this.$store.dispatch(\"eamDict/getDicData\", [\n                    \"dt_asset_affiliation\", \"dt_device_category\", \"dt_device_record_type\", \"dt_device_state\", \"dt_img_equipment\", \"dt_file_equipment\"\n                ])\n            )\n        })\n        Promise.all([p]).then(() => {\n            this.getList()\n        })\n        this.getTypeCode()\n\n        queryRecords().then(res => {\n            this.optionData = this.$myFun.buildTree(\n                res.data,\n                'typeCode',\n                'superiorCode'\n            )[0].children\n        })\n    },\n    watch: {\n        'dt_device_state' (val) {\n            this.dt_device_stateS = val.filter(i => { return i.dictItemValue !== '已删除' })\n        }\n    },\n    methods: {\n        getUseDept (val) {\n            let arr = this.gw.filter(i => {\n                return i.stationCode == val\n            })\n            this.temp.addressName = arr[0].stationName\n        },\n        org (val) {\n            this.temp.organizationName = val\n        },\n        checked () {\n            this.$refs.mainList.toggleRowSelection(this.list[0], true)\n        },\n        //查设备类型\n        getTypeCode () {\n            api.queryTypeCode().then(res => {\n                this.options = res.data\n            })\n        },\n        getAddress (val) {\n            this.temp.useDeptName = val\n            this.cxgw()\n        },\n        //查询工位\n        cxgw () {\n            api.queryRecordsgw(this.temp.useDept).then(response => {\n                response = response.data\n                this.gw = response\n            })\n        },\n        //查询主表\n        getList () {\n            api.queryRecords(this.listQuery).then(res => {\n                this.list = res.data.list\n                this.list = this.$myFun.srmCodeToName(\n                    res.data.list,\n                    [this.dt_device_category, this.dt_asset_affiliation, this.dt_device_state],\n                    ['category', 'assetAffiliation', 'state']\n                )\n                this.total = res.data.pages.count\n                this.$nextTick(function () {\n                    this.checked()\n                })\n            })\n        },\n        getValue (value) {\n            if (value) {\n                this.listQuery.typeCode = value.typeCode\n            } else {\n                this.listQuery.typeCode = undefined\n            }\n        },\n        getValue1 (value) {\n            if (value) {\n                this.temp.typeCode = value.typeCode\n            } else {\n                this.temp.typeCode = undefined\n            }\n        },\n        value () {\n        },\n        //获取班组\n        getGroup () {\n            api.groupRecords(this.listQuery1).then(res => {\n                this.groupList = res.data.list\n            })\n        },\n        //表格高度计算\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight() - 180\n        },\n        //查询\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        //厂家弹窗选择\n        handleClickVendorMain () {\n            this.vendorMainDialogVisible = true\n        },\n        //厂家父子传值\n        handleVendorMain (row) {\n            this.vendorMainRow = row\n        },\n        //厂家获取值\n        vendorMainCreate () {\n            this.temp.manufacturersCode = this.vendorMainRow.manufacturersCode\n            this.temp.manufacturersName = this.vendorMainRow.manufacturersName\n            this.vendorMainDialogVisible = false\n        },\n        //验收人\n        handleClickDisposer () {\n            this.disposerDialogVisible = true\n        },\n        //验收人父子传值\n        handleDisposer (row) {\n            this.disposerRow = row\n        },\n        //验收人确认\n        disposerUpdate () {\n            this.tempCheckUpon.disposer = this.disposerRow.employeeCode\n            this.tempCheckUpon.disposerName = this.disposerRow.employeeName\n            this.disposerDialogVisible = false\n        },\n        //员工父子传值\n        handleEmployee (row) {\n            this.employeeRow = row\n        },\n        //员工弹窗\n        handleClickEmployee () {\n            this.employeeDialogVisible = true\n            this.employeeDialogStatus = 'employeeCreate'\n        },\n        //员工获取值\n        employeeCreate () {\n            this.temp.operationer = this.employeeRow.employeeCode\n            this.temp.operationerName = this.employeeRow.employeeName\n            this.$refs.emp.getList()\n            this.employeeDialogVisible = false\n        },\n        //资产负责人弹窗\n        handleClickAssetManager () {\n            this.employeeDialogVisible = true\n            this.employeeDialogStatus = 'assetManagerUpdate'\n        },\n        //资产负责人获取值\n        assetManagerUpdate () {\n            this.temp.assetManager = this.employeeRow.employeeCode\n            this.temp.assetManagerName = this.employeeRow.employeeName\n            this.employeeDialogVisible = false\n            this.$refs.emp.getList()\n        },\n        //打开供应商弹窗\n        handleClickSupplier () {\n            this.suppierDialogVisible = true\n        },\n        //供应商父子传值\n        handleSuppier (row) {\n            this.suppierRow = row\n        },\n        //供应商获取值\n        suppierCreate () {\n            this.temp.supplierCode = this.suppierRow.supplierCode\n            this.temp.supplierName = this.suppierRow.supplierName\n            this.suppierDialogVisible = false\n        },\n        //新增按钮单击事件方法\n        handleCreate () {\n            this.resetTemp()\n            this.getGroup()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        //新增方法\n        create () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    let leaveFactoryDate = new Date(this.temp.leaveFactoryDate)\n                    let buyDate = new Date(this.temp.buyDate)\n                    let installDate = new Date(this.temp.installDate)\n                    let productionDate = new Date(this.temp.productionDate)\n                    if (leaveFactoryDate < buyDate < installDate < productionDate) {\n                        api.createRecords(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        this.$message({\n                            title: '警告',\n                            message: '时间选择错误',\n                            type: 'warning'\n                        })\n                    }\n                }\n            })\n\n        },\n        //编辑\n        handleUpdate () {\n            if (this.selectlistRow) {\n                this.temp = this.selectlistRow\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //编辑方法\n        update () {\n            this.$refs['temp'].validate(valid => {\n                if (valid) {\n                    let leaveFactoryDate = new Date(this.temp.leaveFactoryDate)\n                    let buyDate = new Date(this.temp.buyDate)\n                    let installDate = new Date(this.temp.installDate)\n                    let productionDate = new Date(this.temp.productionDate)\n                    if (leaveFactoryDate < buyDate < installDate < productionDate) {\n                        api.updateRecords(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        this.$message({\n                            title: '警告',\n                            message: '时间选择错误',\n                            type: 'warning'\n                        })\n                    }\n\n                }\n            })\n        },\n        handleDelete () {\n            //删除列表\n            if (this.selectlistRow) {\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        api.deleteRecords(this.selectlistRow.deviceCode).then(() => {\n                            this.getList(),\n                                this.$message({\n                                    title: '成功',\n                                    message: '删除成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        //打开条码打印弹窗\n        handleBarcode () {\n            if (this.selectlistRow) {\n                this.dialogPrintVisible = true\n                this.dialogStatus = \"print\"\n                this.printData = this.selectlistRow\n                this.$nextTick(() => {\n                    this.$refs.childQRcode.qrCreate(this.printData.deviceName)\n                })\n\n            } else {\n                this.$message.warning(this.$t('message.checkedplease'))\n                return false\n            }\n\n        },\n        //打印执行\n        doReceiptPrint () {\n            let newWin = window.open(\"\")\n            var newstr = document.getElementById('receipt').innerHTML\n            newWin.document.write(newstr)\n            newWin.document.close()//IE添加\n\n            setTimeout(function () {\n                newWin.print()\n                newWin.close()\n            }, 100)\n        },\n        handleCheckUpon () {\n            if (this.selectlistRow) {\n                if (this.selectlistRow.state == 'device_state10') {\n                    this.checkUponDialogFormVisible = true\n                    this.tempCheckUpon.deviceCode = this.selectlistRow.deviceCode\n                    this.tempCheckUpon.deviceName = this.selectlistRow.deviceName\n                    this.tempCheckUpon.type_ = this.selectlistRow.typeName\n                } else {\n                    this.$message({\n                        title: '警告',\n                        message: \"只针对'未验收入账'验收\",\n                        type: 'warning'\n                    })\n\n                }\n\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        tempCheckUponCreate () {\n            this.$refs['tempCheckUpon'].validate(valid => {\n                if (valid) {\n                    api.CheckUponRecords(this.tempCheckUpon.state, this.tempCheckUpon).then(() => {\n                        this.getList()\n                        this.checkUponDialogFormVisible = false\n                        this.this.tempCheckUpon = {}\n                        this.$message({\n                            title: '成功',\n                            message: '验证成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n\n                }\n            })\n\n        },\n        handleClick () {\n\n\n        },\n        // 获取表格选中时的数据\n        selectRow (val) {\n            this.selectlistRow = val[val.length - 1]\n            if (val.length > 1) {\n                this.$refs.mainList.clearSelection()\n                this.$refs.mainList.toggleRowSelection(val.pop())\n            }\n            this.$refs.mainList.setCurrentRow(this.selectlistRow)\n            if (this.selectlistRow) {\n                this.deviceCodeA = this.selectlistRow.deviceCode\n                this.typeCodeA = this.selectlistRow.typeCode\n                this.selectlistRowA = this.selectlistRow\n                this.$nextTick(() => {\n                    this.$refs.tab4[0].getList()\n                    this.$refs.tab5[0].getList()\n                    this.$refs.tab2[0].getList()\n                    this.$refs.tab1[0].getList()\n                    this.$refs.tab3[0].getList()\n                })\n            }\n\n        },\n        //主表行点击\n        showSubTable (val) {\n            this.$refs.mainList.clearSelection()\n            this.$refs.mainList.toggleRowSelection(val)\n        },\n\n        resetTemp () {\n            this.temp = {\n                organizationCode: undefined,\n                useDept: undefined,\n                address: undefined,\n                deviceCode: undefined,\n                deviceName: undefined,\n                assetAffiliation: undefined,\n                assetCode: undefined,\n                assetManager: undefined,\n                assetNetWorth: undefined,\n                buyDate: undefined,\n                category: undefined,\n                complexityCoefficient: undefined,\n                contractNumber: undefined,\n                depreciationYear: undefined,\n                installDate: undefined,\n                leaveFactoryDate: undefined,\n                lifetime: undefined,\n                maintainGroup: undefined,\n                manufacturersCode: undefined,\n                modelNumber: undefined,\n                originalValue: undefined,\n                productionDate: undefined,\n                productionNumber: undefined,\n                supplierCode: undefined,\n                totalPower: undefined,\n                typeCode: undefined,\n                weight: undefined,\n                operationer: undefined,\n                remark: undefined\n            }\n        }\n    }\n}\n",null]}