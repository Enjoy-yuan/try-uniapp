{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/energyNetwork/energyItem/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/energyNetwork/energyItem/index.vue","mtime":1596610933505},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/api/project/ems/dataBase/energyItem'\nimport Pagination from '@/components/Pagination'\nimport { mapState } from 'vuex' // 基本数据引入\nimport throttle from 'lodash/throttle'\n\nexport default {\n    name: 'workCenter',\n    components: { Pagination },\n    data () {\n        return {\n            list: null,\n            parList: null,\n            total: 0,\n            theight: 0, //表格高度\n            listQuery: {\n                page: true,\n                currentPage: 1,\n                pageSize: 15,\n                energyItemName: undefined,\n                energyItemPid: undefined\n            },\n            temp: {\n                energyItemCode: undefined,\n                energyItemName: undefined,\n                energyItemRank: undefined,\n                energyItemPcode: undefined,\n                upEnergyItemName: undefined,\n                energyTypeCode: undefined,\n                remark: undefined\n            },\n            dialogFormVisible: false,\n            dialogStatus: '',\n            tableKey: 0,\n            rules: {\n                energyItemCode: [\n                    {\n                        required: true,\n                        message: '能耗分项编码不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^[A-Z-_0-9]{0,32}$/,\n                        message: '由大写字母、数字、-和_组成，长度为32',\n                        trigger: 'blur'\n                    }\n                ],\n                energyItemName: [\n                    {\n                        required: true,\n                        message: '能耗分项名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' }\n                ],\n                energyTypeCode: [\n                    {\n                        required: true,\n                        message: '能耗分类名称不能为空',\n                        trigger: 'blur'\n                    },\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' }\n                ],\n                energyItemRank: [\n                    {\n                        required: true,\n                        message: '请选择能耗等级',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: [\n                    { max: 100, message: '长度不能超过100', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_ems_energy_item_rank: state =>\n                state.emsDict.dt_ems_energy_item_rank,\n            dt_nh_energyType_list: state =>\n                state.businessComponent.dt_nh_energyType_list\n        })\n    },\n    mounted () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_ems_energy_item_rank'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_nh_energyType_list'\n        ])\n        this.setTableHeight()\n        this.getList()\n    },\n    destroyed () {\n        this.$store.dispatch('emsDict/getDicData', ['dt_ems_energy_item_rank'])\n        this.$store.dispatch('businessComponent/getBusinessComponentData', [\n            'dt_nh_energyType_list'\n        ])\n        this.setTableHeight()\n        this.getList()\n    },\n    methods: {\n        getList () {\n            api.queryEnergyItem(this.listQuery).then(res => {\n                if (res.data) {\n                    res.data.list.map((v, i) => {\n                        v.serial = i + 1\n                    })\n                    this.list = res.data.list\n                    this.total = res.data.pages.count\n                }\n            })\n        },\n        getParList () {\n            api.queryRankId(this.temp.energyItemRank).then(res => {\n                this.parList = res.data\n                let ret = res.data.find((v) => {\n                    return v.energyItemCode == this.temp.energyItemPcode\n                })\n                if (res.data.length) {\n                    if (!ret) {\n                        this.temp.energyItemPcode = res.data[0].energyItemCode\n                    }\n                } else {\n                    this.temp.energyItemPcode = undefined\n                }\n            })\n        },\n        handleQuery () {\n            this.listQuery.currentPage = 1\n            this.getList()\n        },\n        handleCreate () {\n            this.resetTemp()\n            this.parList = null\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n        },\n        rankChange () {\n            if (this.temp.energyItemRank !== 'rank_1') {\n                this.getParList()\n\n            } else {\n                this.temp.energyItemPcode = undefined\n                this.parList = null\n            }\n        },\n        create: throttle(\n            function () {\n                this.$refs.temp.validate(valid => {\n                    if (valid) {\n                        if (this.temp.energyItemPcode) {\n                            let arr = this.parList.filter(res => {\n                                return (\n                                    res.energyItemCode ==\n                                    this.temp.energyItemPcode\n                                )\n                            })\n                            this.temp.upEnergyItemName = arr[0].energyItemName\n                        }\n\n                        api.createEnergyItem(this.temp).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$refs['temp'].clearValidate()\n                            this.$notify({\n                                title: '成功',\n                                message: '新增成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //编辑弹窗\n        handleUpdate () {\n            if (this.selectlistRow && this.selectlistRow.length == 1) {\n                this.temp = JSON.parse(JSON.stringify(this.selectlistRow[0])) // copy obj\n                if (this.temp.energyItemRank !== 'rank_1') {\n                    this.getParList()\n                }\n                this.parList = null\n                this.dialogStatus = 'update'\n                this.dialogFormVisible = true\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        update: throttle(\n            function () {\n                this.$refs['temp'].validate(valid => {\n                    if (valid) {\n                        if (this.temp.energyItemPcode) {\n                            let arr = this.parList.filter(res => {\n                                return (\n                                    res.energyItemCode ==\n                                    this.temp.energyItemPcode\n                                )\n                            })\n                            this.temp.upEnergyItemName = arr[0].energyItemName\n                        }\n\n                        api.updateEnergyItem(\n                            this.temp.energyItemCode,\n                            this.temp\n                        ).then(() => {\n                            this.getList()\n                            this.dialogFormVisible = false\n                            this.$refs['temp'].clearValidate()\n                            this.$message({\n                                title: '成功',\n                                message: '更新成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                    }\n                })\n            },\n            2000,\n            {\n                leading: true,\n                trailing: false\n            }\n        ),\n        //删除列表\n        handleDelete () {\n            if (this.selectlistRow && this.selectlistRow.length >= 1) {\n                this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                })\n                    .then(() => {\n                        let ids = []\n                        this.selectlistRow.forEach((val, index) => {\n                            ids[index] = val.energyItemCode\n                        })\n                        api.deleteEnergyItem(ids).then(() => {\n                            this.getList()\n                            this.$message({\n                                title: '成功',\n                                message: '删除成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        }).catch(() => {\n                            this.getList()\n                        })\n                    })\n                    .catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        })\n                    })\n            } else {\n                this.$message({\n                    title: '警告',\n                    message: '请选择一条信息',\n                    type: 'warning'\n                })\n            }\n        },\n        deleteQuery () {\n            this.listQuery.currentPage = 1\n            this.listQuery.energyItemName = undefined\n            this.listQuery.energyItemPid = undefined\n            this.getList()\n        },\n        resetTemp () {\n            this.temp = {}\n        },\n        handleClose () {\n            this.resetTemp()\n            this.$refs.temp.resetFields()\n        },\n        setTableHeight () {\n            this.theight = this.$myFun.getSingleTbHeight()\n        },\n        selectRow (val) {\n            this.selectlistRow = val\n        }\n    }\n}\n",null]}