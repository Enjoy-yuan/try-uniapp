{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogOrgSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogOrgSelect.vue","mtime":1596610933151},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\"\nimport Tree from \"@/components/Tree\"\nimport { DICT_CODE } from '@/utils/constant'\nimport { selectlists } from \"@/api/system/organization\"\nimport Pagination from '@/components/Pagination'\n\nexport default {\n    name: 'personSelect',\n    components: { Pagination, Tree },\n    props: ['unMutiple', 'title', 'required'],\n    data () {\n        return {\n            treeStyleObj: {\n                height: '437px'\n            },\n            treeType: 'org',\n            activeName: 'first',\n            DICT_CODE: DICT_CODE,\n            tableKey: [0, 1, 2],\n            dialogVisible: false,\n            list: [],\n            total: 0,\n            listLoading: true,\n            listQuery: {\n                currentPage: 1,\n                pageSize: 10,\n                page: 1,\n                parentOrgCode: null,\n                organizationCode: undefined,\n                organizationName: undefined,\n                businessFunction: null\n            },\n            treeParams: {\n                orgcode: null\n            },\n            selectedRows: [],\n            currentSelectedRow: null,\n            filterConfig: [\n                { type: 'commonInput', label: '组织编码', prop: 'orgCode', width: '', class: 'filter-item ml_5' },\n                { type: 'commonInput', label: '组织名称', prop: 'supplierName', width: '', class: 'ml_5' },\n                { type: 'dictSelect', dType: 'dt_org_type', label: '组织类型', prop: 'type', width: '', class: 'filter-item ml_5' },\n                { type: 'dictSelect', dType: 'dt_org_function', label: '业务职能', prop: 'businessFunction', width: '', class: 'filter-item ml_5' },\n            ],\n            mainTitle: [\n                { width: null, align: 'left', label: '组织编码', prop: 'organizationCode' },\n                { width: null, align: 'left', label: '组织名称', prop: 'organizationName' },\n                { width: null, align: 'left', label: '组织类型', prop: 'type' },\n                { width: null, align: 'left', label: '上级组织', prop: 'parentName' },\n                { width: null, align: 'left', label: '地址', prop: 'adress' },\n                { width: null, align: 'left', label: '邮编', prop: 'par2' },\n                { width: null, align: 'left', label: '联系人', prop: 'contact' },\n                { width: null, align: 'left', label: '电话', prop: 'mobile' },\n                { width: null, align: 'left', label: '邮箱', prop: 'email' },\n                { width: null, align: 'left', label: '业务职能', prop: 'businessFunction' },\n                { width: null, align: 'left', label: '状态', prop: 'state' },\n                { width: null, align: 'left', label: '备注', prop: 'remark' }\n            ]\n        }\n    },\n    computed: {\n        ...mapState({\n            dt_org_type: state => state.dict.dt_org_type,\n            dt_org_function: state => state.dict.dt_org_function\n        })\n    },\n    mounted () {\n        this.$store.dispatch(\"dict/getDicData\", [\"dt_org_type\", \"dt_org_function\"])//创建时加载备选项\n        this.handleQuery()\n    },\n    methods: {\n        //选中某一行\n        checked (i) {\n            this.$refs.tbselect.toggleRowSelection(this.list[i], true)\n        },\n        setTreeDatas (rowId) {\n            this.listQuery.parentOrgCode = rowId\n            this.handleQuery()\n        },\n        handleQuery () {\n            this.listQuery.page = 1\n            selectlists(this.listQuery).then(response => {\n                // let options = [this.dt_org_type, this.dt_org_function]\n                // res.data = this.$myFun.codeToName(res.data, options, [\n                //     'platformState', 'classification'\n                // ])\n                this.list = response.data.list\n                this.total = response.data.pages.count\n\n                if (!this.unMutiple) {\n                    if (this.selectedRows) {\n                        this.selectedRows.forEach(items => {\n                            this.list.forEach((item, index) => {\n                                if (item.organizationCode === items.organizationCode) {\n                                    this.$nextTick(function () {\n                                        this.checked(index)\n                                    })\n                                }\n                            })\n                        })\n                    }\n                }\n            })\n        },\n        selectChange (val) {//备选项选中行\n            if (this.unMutiple) {\n                if (val.length > 1) {\n                    this.$refs.tbselect.clearSelection() //清除其他行的选中\n                    this.$refs.tbselect.toggleRowSelection(val[val.length - 1], \"selected\") //单击行绑定点击事件\n                } else if (val.length === 1) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = val[val.length - 1]\n                } else if (val.length === 0) {\n                    this.selectedRows = val\n                    this.currentSelectedRow = null\n                }\n            } else {\n                this.selectedRows = val\n                this.currentSelectedRow = val[val.length - 1]\n            }\n        },\n        handleConfirm () {\n            if (this.required && this.selectedRows) {\n                if (this.selectedRows.length === 0) {\n                    this.$message({ type: 'warning', message: '请选择一条数据' })\n                } else {\n                    this.$emit('handleConfirm', this.selectedRows)\n                    this.dialogVisible = false\n                }\n            } else {\n                if (this.selectedRows) {\n                    if (this.selectedRows.length === 0) {\n                        this.$emit('handleConfirm', [])\n                    } else {\n                        this.$emit('handleConfirm', this.selectedRows)\n                    }\n                } else {\n                    this.$emit('handleConfirm', [])\n                }\n                this.dialogVisible = false\n            }\n        }\n    }\n}\n",null]}