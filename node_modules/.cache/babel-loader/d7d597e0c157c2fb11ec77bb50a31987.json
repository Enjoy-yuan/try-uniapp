{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/measureUnit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/measureUnit/index.vue","mtime":1600927611456},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/data-base/measure-unit';\nimport Pagination from '@/components/Pagination';\nimport { DICT_CODE, TWO_STATE_OPTIONS } from '@/utils/constant';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'MeasureUnit',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      theight: 0,\n      //表格高度\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        measureCode: undefined,\n        measureName: undefined,\n        dimension: undefined\n      },\n      temp: {\n        measureCode: undefined,\n        measureName: undefined,\n        dimension: undefined,\n        transferRate: undefined,\n        isBase: 0,\n        isEnabled: 1,\n        remark: undefined\n      },\n      selectCode: [],\n      dialogFormVisible: false,\n      dialogStatus: '',\n      tableKey: 0,\n      DICT_CODE: DICT_CODE,\n      TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n      rules: {\n        measureCode: [{\n          required: true,\n          message: '计量编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z-_0-9]{1,50}$/,\n          message: '由大写字母，数字，—和_组成，长度不能超过50',\n          trigger: 'blur'\n        }],\n        measureName: [{\n          required: true,\n          message: '计量名称长度不能超过100',\n          trigger: 'blur'\n        }],\n        dimension: [{\n          required: true,\n          message: '所属量纲不能为空',\n          trigger: 'blur'\n        }],\n        isBase: [{\n          required: true,\n          message: '是否基础单位不能为空',\n          trigger: 'blur'\n        }],\n        transferRate: [{\n          required: true,\n          message: '转换率不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/,\n          message: '由正数组成，保留两位有效数，长度不能超过14',\n          trigger: 'blur'\n        }],\n        isEnabled: [{\n          required: true,\n          message: '计量名称长度不能超过100',\n          trigger: 'blur'\n        }],\n        remark: [{\n          max: 512,\n          message: '备注长度为512内',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_dimension: function dt_dimension(state) {\n      return state.dict.dt_dimension;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('dict/getDicData', ['dt_dimension']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleDelete: function handleDelete() {\n      var _this3 = this;\n\n      // 删除列表\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n\n          _this3.selectlistRow.forEach(function (val, index) {\n            ids[index] = val.measureCode;\n          });\n\n          api.deleteRecord(ids).then(function () {\n            _this3.getList(), _this3.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this3.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      }\n    },\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    handleDeleteBatch: function handleDeleteBatch() {\n      if (this.selectCode.length == 0) {\n        this.$message.warning('请勾选记录！');\n        return;\n      }\n\n      this.delete(this.selectCode);\n    },\n    handleUpdate: function handleUpdate() {\n      var _this4 = this;\n\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.readonly = true;\n        this.temp = this.selectlistRow[0];\n        api.getRecord(this.temp.measureCode).then(function (res) {\n          _this4.temp = res.data;\n          _this4.dialogStatus = 'update';\n          _this4.dialogFormVisible = true;\n\n          _this4.$nextTick(function () {\n            _this4.$refs['temp'].clearValidate();\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update: function update() {\n      var _this5 = this;\n\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this5.temp.measureCode, _this5.temp).then(function () {\n            _this5.getList();\n\n            _this5.dialogFormVisible = false;\n\n            _this5.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    // 获取表格选中时的数据\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val;\n    },\n    create: function create() {\n      var _this6 = this;\n\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this6.temp).then(function () {\n            _this6.getList();\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.dialogFormVisible = false;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        measureCode: undefined,\n        measureName: undefined,\n        dimension: undefined,\n        transferRate: undefined,\n        isBase: 0,\n        isEnabled: 1,\n        remark: undefined\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.selectCode = selection.map(function (v) {\n        return v.measureCode;\n      });\n    }\n  }\n};",null]}