{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/supplierRFQ/supplierRFQAnswer/tab/tabBZcost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/supplierRFQ/supplierRFQAnswer/tab/tabBZcost.vue","mtime":1599136050910},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryQuoteItem, createQuoteItem, updateQuoteItem, deleteQuoteItem, queryQuoteDetails } from \"@/api/project/srm/supplierSelect/supplierRFQ/supplierRFQAnswer\";\nimport { mapState } from 'vuex';\nexport default {\n  name: 'tabBZcost',\n  props: ['parentRowId'],\n  data: function data() {\n    return {\n      tableData: [],\n      rules: {\n        packingName: [{\n          required: true,\n          message: '请填写',\n          trigger: 'blur'\n        }],\n        sizeSpecification: [{\n          required: true,\n          message: '请填写',\n          trigger: 'blur'\n        }]\n      },\n      formData: {\n        parentRowId: null,\n        rowId: null,\n        packingType: null,\n        packingName: null,\n        sizeSpecification: null,\n        packingMaterial: null,\n        unitPrice: null,\n        packingPerNumber: null,\n        packingQuantity: null,\n        totalPackingCost: null,\n        serviceLife: null,\n        annualMaintenanceCost: null,\n        annualAllocatedQuantity: null,\n        singlePartCost: null\n      },\n      //不可回收PDL1 可回收PDL0\n      formConfig: [{\n        type: 'dictSelect',\n        dType: 'dt_srm_pdl',\n        required: true,\n        label: '包装类型',\n        prop: 'packingType',\n        width: ''\n      }, //dictType wu\n      {\n        type: 'commonInput',\n        required: true,\n        label: '包装名称',\n        prop: 'packingName',\n        width: ''\n      }, {\n        type: 'commonInput',\n        required: true,\n        label: '尺寸规格',\n        prop: 'sizeSpecification',\n        width: ''\n      }, {\n        type: 'commonInput',\n        label: '包装材质',\n        prop: 'packingMaterial',\n        width: ''\n      }, {\n        type: 'commonInput',\n        label: '单价',\n        prop: 'unitPrice',\n        width: ''\n      }, //H1  H4\n      {\n        type: 'commonInput',\n        label: '每包件数',\n        prop: 'packingPerNumber',\n        width: ''\n      }, //H2\n      {\n        type: 'commonInput',\n        label: '包装数量',\n        prop: 'packingQuantity',\n        width: ''\n      }, //   H5\n      {\n        type: 'commonInput',\n        disabled: true,\n        label: '包装总费用',\n        prop: 'totalPackingCost',\n        width: ''\n      }, //   H6  H4*H5\n      {\n        type: 'commonInput',\n        label: '使用年限',\n        prop: 'serviceLife',\n        width: ''\n      }, //H7\n      {\n        type: 'commonInput',\n        label: '年维护费',\n        prop: 'annualMaintenanceCost',\n        width: ''\n      }, //H8\n      {\n        type: 'commonInput',\n        label: '年分摊数量',\n        prop: 'annualAllocatedQuantity',\n        width: ''\n      }, //H3=H2/H1 H9\n      {\n        type: 'commonInput',\n        disabled: true,\n        label: '单零件成本',\n        prop: 'singlePartCost',\n        width: '' //H3=H2/H1  H10=(H6+H7*H8)/H7/H9\n\n      }],\n      tableConfig: [{\n        label: '包装类型',\n        prop: 'packingTypeCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '包装名称',\n        prop: 'packingName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '包装尺寸规格',\n        prop: 'sizeSpecification',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '包装材质',\n        prop: 'packingMaterial',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '单价',\n        prop: 'unitPrice',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '每包件数',\n        prop: 'packingPerNumber',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '包装数量',\n        prop: 'packingQuantity',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '包装总费用',\n        prop: 'totalPackingCost',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '使用年限',\n        prop: 'serviceLife',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '年维修费用',\n        prop: 'annualMaintenanceCost',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '年分摊数量',\n        prop: 'annualAllocatedQuantity',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '单零件成本',\n        prop: 'singlePartCost',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '备注',\n        prop: 'remark',\n        align: 'center',\n        width: 'auto' //wu\n\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pdl: function dt_srm_pdl(state) {\n      return state.dict.dt_srm_pdl;\n    }\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pdl\"]);\n    this.getItems();\n  },\n  watch: {\n    'formData.unitPrice': function formDataUnitPrice() {\n      this.calculate('unitPrice', this.formData);\n    },\n    'formData.packingPerNumber': function formDataPackingPerNumber() {\n      this.calculate('packingPerNumber', this.formData);\n    },\n    'formData.packingQuantity': function formDataPackingQuantity() {\n      this.calculate('packingQuantity', this.formData);\n    },\n    'formData.serviceLife': function formDataServiceLife() {\n      this.calculate('serviceLife', this.formData);\n    },\n    'formData.annualMaintenanceCost': function formDataAnnualMaintenanceCost() {\n      this.calculate('annualMaintenanceCost', this.formData);\n    },\n    'formData.totalPackingCost': function formDataTotalPackingCost() {\n      this.calculate('totalPackingCost', this.formData);\n    },\n    'formData.annualAllocatedQuantity': function formDataAnnualAllocatedQuantity() {\n      this.calculate('annualAllocatedQuantity', this.formData);\n    }\n  },\n  methods: {\n    calculate: function calculate(prop, row) {\n      var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (row.packingType === 'PDL1') {\n        switch (prop) {\n          case 'unitPrice':\n          case 'packingPerNumber':\n            {\n              if (!index) {\n                this.$set(this.formData, 'singlePartCost', (row.packingPerNumber / row.unitPrice).toFixed(4));\n              } else {\n                this.$set(this.tableData[index], 'singlePartCost', (row.packingPerNumber / row.unitPrice).toFixed(4));\n              }\n\n              break;\n            }\n        }\n      } else if (row.packingType === 'PDL0') {\n        switch (prop) {\n          case 'unitPrice':\n          case 'packingQuantity':\n            {\n              if (!index) {\n                this.$set(this.formData, 'totalPackingCost', (row.unitPrice * row.packingQuantity).toFixed(4));\n              } else {\n                this.$set(this.tableData[index], 'totalPackingCost', (row.unitPrice * row.packingQuantity).toFixed(4));\n              }\n\n              break;\n            }\n\n          case 'totalPackingCost':\n          case 'serviceLife':\n          case 'annualMaintenanceCost':\n          case 'annualAllocatedQuantity':\n            {\n              if (!index) {\n                this.$set(this.formData, 'singlePartCost', ((row.totalPackingCost + row.serviceLife * row.annualMaintenanceCost) / row.serviceLife / row.annualAllocatedQuantity).toFixed(4));\n              } else {\n                this.$set(this.tableData[index], 'singlePartCost', ((row.totalPackingCost + row.serviceLife * row.annualMaintenanceCost) / row.serviceLife / row.annualAllocatedQuantity).toFixed(4));\n              }\n\n              break;\n            }\n        }\n      }\n    },\n    getItems: function getItems() {\n      var _this = this;\n\n      if (this.parentRowId) {\n        queryQuoteDetails({\n          parentRowId: this.parentRowId,\n          method: 'PACKING_COST'\n        }).then(function (res) {\n          var options = [_this.dt_srm_pdl];\n          res.data = _this.$myFun.codeToName(res.data, options, ['packingType']);\n          _this.tableData = res.data;\n\n          _this.calculateSum();\n        });\n      }\n    },\n    calculateSum: function calculateSum() {\n      var singlePartCosts = 0;\n      this.tableData.forEach(function (item) {\n        singlePartCosts += item.singlePartCost;\n      });\n      var dataSum = {\n        key: 'sum',\n        packingTypeCN: '合计',\n        singlePartCost: singlePartCosts\n      };\n      this.tableData.push(dataSum);\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this2 = this;\n\n      queryQuoteItem({\n        rowId: row.rowId,\n        method: 'PACKING_COST'\n      }).then(function (res) {\n        _this2.formData = res.data;\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this3 = this;\n\n      this.$confirm('确认删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        deleteQuoteItem({\n          parentRowId: _this3.parentRowId,\n          rowId: row.rowId,\n          method: 'PACKING_COST'\n        }).then(function () {\n          _this3.getItems();\n\n          _this3.$emit('getTotalQuotation');\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n    resetForm: function resetForm() {\n      for (var par in this.formData) {\n        if (par !== 'parentRowId') {\n          this.$set(this.formData, par, null);\n        }\n      }\n\n      this.$refs['refForm'].resetFields();\n      this.$refs['refForm'].clearValidate();\n    },\n    handleConfirm: function handleConfirm() {\n      var _this4 = this;\n\n      this.$refs.refForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确认保存吗?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            //packingCostDTO\t包装费用 DTO(PACKING_COST)\n            _this4.formData.parentRowId = _this4.parentRowId;\n\n            if (_this4.formData.rowId) {\n              var cdata = {\n                packingCostDTO: _this4.formData,\n                method: \"PACKING_COST\"\n              };\n              updateQuoteItem(_this4.formData.rowId, cdata).then(function () {\n                _this4.getItems();\n\n                _this4.$message({\n                  type: 'success',\n                  message: '编辑成功'\n                });\n\n                _this4.$emit('getTotalQuotation');\n\n                _this4.resetForm();\n              });\n            } else {\n              var _cdata = {\n                packingCostDTO: _this4.formData,\n                method: \"PACKING_COST\"\n              };\n              createQuoteItem(_cdata).then(function () {\n                _this4.getItems();\n\n                _this4.$emit('getTotalQuotation');\n\n                _this4.resetForm();\n\n                _this4.$message({\n                  type: 'success',\n                  message: '新增成功'\n                });\n              });\n            }\n          }).catch(function () {\n            _this4.$message({\n              type: 'info',\n              message: '已取消'\n            });\n          });\n        }\n      });\n    }\n  }\n};",null]}