{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/color/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/color/index.vue","mtime":1596610933323},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/data-base/color';\nimport Pagination from '@/components/Pagination';\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'color',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      theight: 0,\n      //表格高度\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        colorCode: undefined,\n        colorName: undefined\n      },\n      temp: {\n        colorCode: undefined,\n        colorName: undefined,\n        colorAbbreviation: undefined,\n        state: 1,\n        remark: undefined\n      },\n      colorCode: undefined,\n      selectCode: [],\n      dialogFormVisible: false,\n      dialogStatus: '',\n      tableKey: 0,\n      rules: {\n        colorCode: [{\n          required: true,\n          message: '颜色编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z-_0-9]{0,32}$/,\n          message: '由大写字母、数字、-和_组成，长度为32',\n          trigger: 'blur'\n        }],\n        colorName: [{\n          required: true,\n          message: '编码名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '颜色名称长度不能超过100',\n          trigger: 'blur'\n        }],\n        colorAbbreviation: [{\n          max: 50,\n          message: '颜色简称长度不能超过50',\n          trigger: 'blur'\n        }],\n        remark: [{\n          max: 512,\n          message: '备注长度为512内',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleQuery: function handleQuery() {\n      //查询\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      //新增\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    // 获取表格选中时的数据\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val;\n    },\n    handleUpdate: function handleUpdate() {\n      var _this3 = this;\n\n      //编辑弹窗\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.readonly = true; //组织编码不可以编写\n\n        this.temp = this.selectlistRow[0]; // copy obj\n\n        api.getRecord(this.temp.colorCode).then(function (res) {\n          _this3.temp = res.data;\n          _this3.dialogStatus = 'update';\n          _this3.dialogFormVisible = true; // this.$nextTick(() => {\n          //     this.$refs[\"temp\"].clearValidate();\n          // });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update: function update() {\n      var _this4 = this;\n\n      //编辑提交\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this4.temp.colorCode, _this4.temp).then(function () {\n            _this4.getList();\n\n            _this4.dialogFormVisible = false;\n\n            _this4.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      //删除列表\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n\n          _this5.selectlistRow.forEach(function (val, index) {\n            ids[index] = val.colorCode;\n          });\n\n          api.deleteRecord(ids).then(function () {\n            _this5.getList(), _this5.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this5.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    create: function create() {\n      var _this6 = this;\n\n      //新增确认按钮\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this6.temp).then(function () {\n            _this6.getList();\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$message({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    cancel: function cancel() {\n      //取消弹窗按钮\n      this.dialogFormVisible = false;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        colorCode: undefined,\n        colorName: undefined,\n        colorAbbreviation: undefined,\n        state: 1,\n        remark: undefined\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.selectCode = selection.map(function (v) {\n        return v.colorCode;\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this7 = this;\n\n      this.downloadLoading = true;\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var tHeader = ['颜色编码', '颜色名称', '颜色简称', '状态', '备注'];\n        var filterVal = ['colorCode', 'colorName', 'colorAbbreviation', 'state', 'remark'];\n\n        var data = _this7.formatJson(filterVal, _this7.list);\n\n        excel.export_json_to_excel({\n          header: tHeader,\n          data: data,\n          filename: 'table-list'\n        });\n        _this7.downloadLoading = false;\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          if (j === 'timestamp') {\n            return parseTime(v[j]);\n          } else {\n            return v[j];\n          }\n        });\n      });\n    }\n  }\n};",null]}