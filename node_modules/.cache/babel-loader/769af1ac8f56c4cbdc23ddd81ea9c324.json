{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/delivery_Publish/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/OA/purchase/delivery_Publish/index.vue","mtime":1596610933590},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/oa/purchase/delivery_Publish\";\nimport { getSelectedDetail } from \"@/api/data-base/bar_code_rules\";\nimport Pagination from \"@/components/Pagination\";\nimport orgSelect from \"@/components/Select/orgSelect.vue\";\nimport qrcode from \"@/components/QRCode\";\nimport JsBarcode from 'jsbarcode';\nimport gysxz from '@/components/Select/xtpt/gysxz'; //供应商选择\n\nimport { getRecord } from '@/api/data-base/supplier';\nimport { DICT_CODE, DT_ORG_TYPE, TWO_STATE_OPTIONS } from \"@/utils/constant\";\nimport { mapState, mapGetters } from 'vuex';\nexport default {\n  name: \"delivery_Publish\",\n  components: {\n    Pagination: Pagination,\n    orgSelect: orgSelect,\n    qrcode: qrcode,\n    gysxz: gysxz\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      list: null,\n      listRow: null,\n      packDataList: null,\n      packPrintList: [],\n      updatePacklist: {\n        barCode: [],\n        method: '',\n        supplierBatch: '',\n        supplierRemark: ''\n      },\n      total: 0,\n      rangeTime: \"\",\n      selectRows: [],\n      selectPackRows: [],\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        supplierCode: '',\n        //供应商编号,\n        arrivalCompany: '',\n        orderNumber: undefined,\n        //订单号\n        releaseDateStart: undefined,\n        //订单状态\n        releaseDateEnd: undefined,\n        state: undefined //订单状态\n\n      },\n      sublistQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        supplierCode: '',\n        //供应商编号\n        orderNumber: undefined //订单号\n\n      },\n      listQueryPack: {\n        orderNumber: '',\n        materielCode: '',\n        orderNumbers: [],\n        barcodeRuleDetails: []\n      },\n      temp: {\n        supplierCode: '',\n        orderNumber: '',\n        contact: '',\n        mobile: '',\n        plateNumber: '',\n        method: ''\n      },\n      printData: {},\n      //打印数据\n      selectCode: [],\n      dialogFormVisible: false,\n      dialogPrintVisible: false,\n      dialogPrintTagVisible: false,\n      dialogPack: false,\n      //包装标签tag\n      dialogPackSet: false,\n      //包装标签设置\n      dialogPackPrintVisible: false,\n      //打印弹框显示\n      isGysRequired: false,\n      //供应商非必选\n      gysMutiple: true,\n      //供应商单选\n      dialogStatus: \"\",\n      tableKey: 0,\n      DICT_CODE: DICT_CODE,\n      DT_ORG_TYPE: DT_ORG_TYPE,\n      TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n      isPublish: true,\n      rules: {\n        contact: [{\n          max: 32,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        mobile: [{\n          max: 32,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        plateNumber: [{\n          max: 32,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }]\n      },\n      packData: {\n        detailDTOS: [],\n        dicType: \"LB01\",\n        dicTypeName: \"外购件\",\n        sourceType: \"source_type01\",\n        sourceTypeName: \"交货单\"\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_delivery_state: function dt_delivery_state(state) {\n      return state.dict.dt_delivery_state;\n    }\n  }), mapGetters(['domainName', 'domainId'])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.listQuery.state = 'CREATE';\n\n    if (this.domainName === 'supplier') {\n      getRecord(this.domainId).then(function (res) {\n        _this.listQuery.supplierName = res.supplierName;\n        _this.listQuery.supplierCode = res.supplierCode;\n\n        _this.$store.dispatch('dict/getDicData', ['dt_delivery_state']);\n\n        _this.getDelivery();\n      });\n    } else {\n      this.$store.dispatch('dict/getDicData', ['dt_delivery_state']);\n      this.getDelivery();\n    }\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 194;\n    },\n    //主表数据获取\n    getDelivery: function getDelivery() {\n      var _this2 = this;\n\n      if (this.listQuery.supplierCode) {\n        api.getDelivery(this.listQuery).then(function (res) {\n          var options = [_this2.dt_delivery_state];\n          res = _this2.$myFun.codeToName(res.data, options, ['state']);\n          _this2.list = res.list;\n          _this2.total = res.pages.count;\n\n          _this2.setFirstLine();\n\n          if (_this2.list[0]) {\n            _this2.getSubList(_this2.list[0]);\n          }\n        });\n      }\n    },\n    //显示主表\n    getList: function getList() {\n      if (this.rangeTime) {\n        var d1 = this.rangeTime[0];\n        var d2 = this.rangeTime[1];\n        this.listQuery.releaseDateStart = d1;\n        this.listQuery.releaseDateEnd = d2;\n      } else {\n        this.listQuery.releaseDateStart = '';\n        this.listQuery.releaseDateEnd = '';\n      }\n\n      this.getDelivery();\n    },\n    //显示从表\n    getSubList: function getSubList(row) {\n      var _this3 = this;\n\n      this.sublistQuery.supplierCode = row.supplierCode;\n      this.sublistQuery.orderNumber = row.orderNumber;\n      api.getDeliveryDetail(this.sublistQuery).then(function (res) {\n        _this3.listRow = res.data.deliveryOrderItemDTOList;\n      });\n    },\n    //显示供应商\n    showGys: function showGys() {\n      this.$refs.dialogRefgys.dialogVisible = true;\n    },\n    //供应商确认\n    handleGysClick: function handleGysClick(gysRows) {\n      this.temp.supplierCode = gysRows[0].supplierCode;\n      this.temp.supplierName = gysRows[0].supplierName;\n      this.listQuery.supplierCode = gysRows[0].supplierCode;\n      this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName);\n    },\n    //发布\n    handlePublish: function handlePublish() {\n      var _this4 = this;\n\n      if (this.selectRows) {\n        if (this.selectRows.state) {\n          this.$confirm(this.$t('message.isPublishOrder'), this.$t('message.prompt'), {\n            confirmButtonText: this.$t('message.yes'),\n            cancelButtonText: this.$t('message.no'),\n            type: 'warning'\n          }).then(function () {\n            _this4.isPublish = true;\n\n            _this4.resetTemp();\n\n            _this4.dialogFormVisible = true;\n            _this4.dialogStatus = \"publish\";\n          }).catch(function () {\n            _this4.$message({\n              type: 'info',\n              message: _this4.$t('message.canceledPublish')\n            });\n          });\n        } else {\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      } else {\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n    },\n    //发布提交\n    publishConfirm: function publishConfirm() {\n      var _this5 = this;\n\n      this.temp.supplierCode = this.selectRows.supplierCode;\n      this.temp.orderNumber = this.selectRows.orderNumber;\n      this.temp.state = 'RELEASE';\n      this.temp.method = 'RELEASE';\n      api.updateDelivery(this.temp).then(function () {\n        _this5.dialogFormVisible = false;\n\n        _this5.$message.success(_this5.$t('message.publishSuccess'));\n\n        _this5.getDelivery();\n      });\n    },\n    //发布前修改车辆信息\n    updateCar: function updateCar() {\n      this.isPublish = false;\n      this.dialogFormVisible = true;\n    },\n    updateCarConfirm: function updateCarConfirm() {\n      var _this6 = this;\n\n      this.$confirm(this.$t('message.isDeleteContinue'), this.$t('message.prompt'), {\n        confirmButtonText: this.$t('message.confirm'),\n        cancelButtonText: this.$t('message.cancel'),\n        type: 'warning'\n      }).then(function () {\n        console.log('修改车辆信息');\n        _this6.dialogFormVisible = true;\n      }).catch(function () {\n        _this6.$message({\n          type: 'info',\n          message: _this6.$t('message.deleteCanceled')\n        });\n      });\n    },\n    //删除\n    handleDelete: function handleDelete() {\n      var _this7 = this;\n\n      if (this.selectRows) {\n        if (this.selectRows.state) {\n          var state = this.selectRows.state;\n\n          if (state !== 'CREATE') {\n            this.$message({\n              type: 'warning',\n              message: this.$t('message.cannotDeleteUnCreateOrder')\n            });\n          } else {\n            this.$confirm(this.$t('message.isDeleteContinue'), this.$t('message.prompt'), {\n              confirmButtonText: this.$t('message.confirm'),\n              cancelButtonText: this.$t('message.cancel'),\n              type: 'warning'\n            }).then(function () {\n              var datas = {};\n              datas.supplierCode = _this7.selectRows.supplierCode;\n              datas.orderNumber = _this7.selectRows.orderNumber;\n              api.deleteDelivery(datas).then(function () {\n                _this7.getDelivery();\n\n                _this7.$message({\n                  type: 'success',\n                  message: _this7.$t('message.deleteSuccessed')\n                });\n              });\n            }).catch(function () {\n              _this7.$message({\n                type: 'info',\n                message: _this7.$t('message.deleteCanceled')\n              });\n            });\n          }\n        } else {\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      } else {\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n    },\n    //单据打印\n    receiptPrint: function receiptPrint() {\n      var _this8 = this;\n\n      if (this.selectRows) {\n        if (this.selectRows.state) {\n          this.dialogPrintVisible = true;\n          this.dialogStatus = \"print\";\n          this.printData = this.selectRows;\n          this.$nextTick(function () {\n            _this8.$refs.childQRcode.qrCreate(_this8.printData.orderNumber);\n          });\n        } else {\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      } else {\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n    },\n    //单据打印执行\n    doReceiptPrint: function doReceiptPrint() {\n      var newWin = window.open(\"\");\n      var newstr = document.getElementById('receipt').innerHTML;\n      newWin.document.write(newstr);\n      newWin.document.close(); //IE添加\n\n      setTimeout(function () {\n        newWin.print();\n        newWin.close();\n      }, 100);\n    },\n    //关闭交货单\n    handleClose: function handleClose() {\n      var _this9 = this;\n\n      if (this.selectRows) {\n        if (this.selectRows.state) {\n          var state = this.selectRows.state;\n\n          if (state !== 'RELEASE') {\n            this.$message({\n              type: 'warning',\n              message: this.$t('message.cannotCloseUnPublishOrder')\n            });\n          } else {\n            this.$confirm(this.$t('message.isCloseOrderContinue'), this.$t('message.prompt'), {\n              confirmButtonText: this.$t('message.confirm'),\n              cancelButtonText: this.$t('message.cancel'),\n              type: 'warning'\n            }).then(function () {\n              var datas = {};\n              datas.supplierCode = _this9.selectRows.supplierCode;\n              datas.orderNumber = _this9.selectRows.orderNumber;\n              datas.state = 'CLOSE';\n              datas.method = 'CLOSE';\n              api.updateDelivery(datas).then(function () {\n                _this9.getDelivery();\n\n                _this9.$message({\n                  title: \"\",\n                  message: _this9.$t('message.closed'),\n                  type: \"success\"\n                });\n              });\n            }).catch(function () {\n              _this9.$message({\n                type: 'info',\n                message: _this9.$t('message.cancelClose')\n              });\n            });\n          }\n        } else {\n          this.$message.warning(this.$t('message.checkedplease'));\n          return false;\n        }\n      } else {\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n    },\n    //查询\n    handleQuery: function handleQuery() {\n      this.listRow = [];\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //查询包装标签列表\n    handleQueryPack: function handleQueryPack() {},\n    //每页大小变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    //主表勾选框选中\n    selectRow: function selectRow(val) {\n      this.selectRows = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tbmain.clearSelection();\n        this.$refs.tbmain.toggleRowSelection(val[val.length - 1], 'selected');\n      }\n\n      this.$refs.tbmain.setCurrentRow(this.selectRows);\n\n      if (val.length !== 0) {\n        this.getSubList(val[val.length - 1]);\n      }\n    },\n    //主表点击显示从表\n    showSubTable: function showSubTable(val) {\n      this.selectRows = val;\n      this.$refs.tbmain.clearSelection();\n      this.$refs.tbmain.toggleRowSelection(val, 'selected');\n      this.getSubList(val);\n    },\n    //重置联系人输入框\n    resetTemp: function resetTemp() {\n      this.temp = {\n        contact: '',\n        mobile: '',\n        plateNumber: ''\n      };\n    },\n    //加载时默认选中第一行\n    setFirstLine: function setFirstLine() {\n      var _this10 = this;\n\n      this.$nextTick(function () {\n        _this10.$refs.tbmain.setCurrentRow(_this10.list[0]);\n      });\n    },\n    //包装标签点击事件\n    packTag: function packTag() {\n      var _this11 = this;\n\n      if (this.selectRows) {\n        if (this.selectRows.state === 'RELEASE') {\n          this.packData.detailDTOS = [];\n          var commonD = {\n            arrivalCompany: this.selectRows.arrivalCompany,\n            arrivalCompanyName: this.selectRows.arrivalCompanyName,\n            arrivalRepository: this.selectRows.arrivalRepository,\n            arrivalRepositoryName: this.selectRows.arrivalRepositoryName,\n            supplierCode: this.selectRows.supplierCode,\n            supplierName: this.selectRows.supplierName,\n            purchaseOrderNumber: this.selectRows.purchaseOrderNumber\n          };\n          this.listRow.forEach(function (item, index) {\n            var arr = Object.assign({}, commonD);\n\n            _this11.packData.detailDTOS.push(arr);\n\n            for (var key in item) {\n              if (key === \"deliverQuantity\") {\n                _this11.packData.detailDTOS[index][\"receiveNum\"] = item[key];\n              } else if (key === \"rowNo\") {\n                _this11.packData.detailDTOS[index][\"orderRowNo\"] = item[key];\n              } else {\n                _this11.packData.detailDTOS[index][key] = item[key];\n              }\n            }\n          });\n          api.createPackTag(this.packData).then(function () {\n            var rulesQuery = {\n              ruleType: _this11.packData.dicType,\n              arrivalCompany: _this11.selectRows.arrivalCompany\n            };\n            getSelectedDetail(rulesQuery).then(function (resr) {\n              var codearr = [];\n              resr.data.barcodeRuleDetails.forEach(function (ritem) {\n                codearr.push(ritem.rulePrepCode);\n              });\n              var orderNumbers = [];\n              orderNumbers.push(_this11.selectRows.orderNumber);\n              _this11.listQueryPack.orderNumbers = orderNumbers;\n              _this11.listQueryPack.barcodeRuleDetails = codearr;\n              api.queryPackTag(_this11.listQueryPack).then(function (resq) {\n                _this11.packDataList = resq.data;\n              });\n            });\n          });\n        } else {\n          this.$message.warning('无法对非发布状态的订单进行标签打印');\n          return false;\n        }\n      } else {\n        this.$message.warning(this.$t('message.checkedplease'));\n        return false;\n      }\n\n      this.dialogPack = true;\n    },\n    //选中标签列表\n    selectPackRow: function selectPackRow(val) {\n      this.selectPackRows = val;\n    },\n    //标签打印设置\n    handlePackSetting: function handlePackSetting() {\n      if (this.selectPackRows.length > 0) {\n        this.dialogPackSet = true;\n      } else {\n        this.$message({\n          title: this.$t('message.warning'),\n          message: this.$t('message.checkedoneplease'),\n          type: \"warning\"\n        });\n      }\n    },\n    //批量打印\n    handleBulkPrint: function handleBulkPrint() {\n      var _this12 = this;\n\n      if (this.selectPackRows.length === 0) {\n        this.$message({\n          title: this.$t('message.warning'),\n          message: '请选择要打印的标签',\n          type: \"warning\"\n        });\n      } else {\n        var printable = true;\n\n        try {\n          this.selectPackRows.forEach(function (item) {\n            if (item.printSign === 1) {\n              printable = false;\n\n              _this12.$message({\n                title: _this12.$t('message.warning'),\n                message: '所选项包含已打印过的标签，不能进行批量打印',\n                type: \"warning\"\n              });\n\n              throw '';\n            }\n          });\n\n          if (printable) {\n            this.updateMethod = 'batchPrint';\n            this.createPrintPack();\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    },\n    //补打\n    handleFillPrint: function handleFillPrint() {\n      var _this13 = this;\n\n      if (this.selectPackRows.length === 0) {\n        this.$message({\n          title: this.$t('message.warning'),\n          message: '请选择要打印的标签',\n          type: \"warning\"\n        });\n      } else {\n        var printable = true;\n\n        try {\n          this.selectPackRows.forEach(function (item) {\n            if (item.printSign === 0) {\n              printable = false;\n\n              _this13.$message({\n                title: _this13.$t('message.warning'),\n                message: '所选项包含未打印过的标签，不能进行补打',\n                type: \"warning\"\n              });\n            }\n          });\n\n          if (printable) {\n            this.updateMethod = 'makeUpPrint';\n            this.createPrintPack();\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    },\n    initUpdatePacklist: function initUpdatePacklist() {\n      var barcodes = new Array();\n      this.selectPackRows.forEach(function (item) {\n        barcodes.push(item.barCode);\n      });\n      this.updatePacklist.barCode = barcodes;\n      this.updatePacklist.method = this.updateMethod;\n\n      if (this.updateMethod !== 'setUp') {\n        this.updatePacklist.supplierBatch = '';\n        this.updatePacklist.supplierRemark = '';\n      }\n    },\n    //生成打印内容\n    createPrintPack: function createPrintPack() {\n      var _this14 = this;\n\n      this.dialogPackPrintVisible = true;\n      this.packPrintList = this.selectPackRows;\n      this.$nextTick(function () {\n        _this14.packPrintList.forEach(function (item) {\n          _this14.$refs['childQRcode' + item.rowId][0].qrCreate(item.qrCode);\n\n          JsBarcode(\"#barcode\" + item.rowId, item.barCode);\n        });\n      });\n    },\n    //标签设置确认提交\n    confirmPackBatch: function confirmPackBatch() {\n      var _this15 = this;\n\n      this.updateMethod = 'setUp';\n      this.initUpdatePacklist();\n      api.updatePackTag(this.updatePacklist).then(function () {\n        api.queryPackTag(_this15.listQueryPack).then(function (resq) {\n          _this15.packDataList = resq.data;\n        });\n\n        _this15.$message.success('设置成功');\n      });\n    },\n    //执行包装标签打印\n    doPackPrint: function doPackPrint() {\n      var _this16 = this;\n\n      this.$confirm('是否进行打印操作？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this16.dialogPackPrintVisible = false;\n\n        _this16.initUpdatePacklist();\n\n        api.updatePackTag(_this16.updatePacklist).then(function () {\n          api.queryPackTag(_this16.listQueryPack).then(function (resq) {\n            _this16.packDataList = resq.data;\n          });\n\n          _this16.$message.success('设置成功');\n        });\n        var newWin = window.open(\"\");\n        var newstr = document.getElementById('packprint').innerHTML;\n        newWin.document.write(newstr);\n        newWin.document.close(); //IE添加\n\n        setTimeout(function () {\n          newWin.print();\n          newWin.close();\n        }, 100);\n      });\n    }\n  }\n};",null]}