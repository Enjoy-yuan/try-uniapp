{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/dataBase/dictMaintenance/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/dataBase/dictMaintenance/index.vue","mtime":1599136050790},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/srm/dataBase/dictMaintenance\";\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\n\nimport addMain from \"./dialog/addMain\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"dictMaintenance\",\n  components: {\n    caiGou: caiGou,\n    Pagination: Pagination,\n    addMain: addMain\n  },\n  data: function data() {\n    return {\n      DICT_CODE: DICT_CODE,\n      treeData: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"name\"\n      },\n      tableKey: 0,\n      theight: 0,\n      //表格高度\n      list: [],\n      total: 0,\n      parentId: null,\n      parentRowId: null,\n      parentName: null,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 15,\n        orgCode: undefined\n      },\n      contentStyleObj: {\n        height: \"\"\n      },\n      dialogVisibleEffect: false,\n      dialogStatus: '',\n      temp: {\n        synchronization: 'yes'\n      },\n      status: false\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_p0: function dt_srm_p0(state) {\n      return state.dict.dt_srm_p0;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.getTree();\n    this.setTableHeight();\n    this.$store.dispatch('dict/getDicData', ['dt_srm_p0']); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.setTreeHeight();\n    this.getList();\n  },\n  watch: {\n    'dt_srm_p0': function dt_srm_p0() {\n      this.getList();\n    }\n  },\n  methods: {\n    //点击树查询\n    treeGetList: function treeGetList(code) {\n      var _this2 = this;\n\n      var dto = {\n        currentPage: 1,\n        pageSize: 15,\n        parentCode: code\n      };\n      api.queryRecords(dto).then(function (res) {\n        var options = [_this2.dt_srm_p0];\n        res.data.list = _this2.$myFun.srmCodeToName(res.data.list, options, ['state']);\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    refresh: function refresh() {\n      this.getTree();\n      this.getList();\n    },\n    //获取树\n    getTree: function getTree() {\n      var _this3 = this;\n\n      api.queryRecords().then(function (res) {\n        res = res.data;\n        _this3.treeData = _this3.$myFun.buildTree(res, 'code', 'parentCode');\n      });\n    },\n    //查询表数据\n    getList: function getList() {\n      var _this4 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        var options = [_this4.dt_srm_p0];\n        res.data.list = _this4.$myFun.srmCodeToName(res.data.list, options, ['state']);\n        _this4.list = res.data.list;\n        _this4.total = res.data.pages.count;\n      });\n    },\n    handleQuery: function handleQuery() {\n      this.getTree();\n      this.getList();\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    handleCreate: function handleCreate() {\n      //新增弹窗调用\n      if (this.parentId) {\n        this.$refs.addMain.resetTemp();\n        this.$refs.addMain.dialogStatus = 'create';\n        this.$refs.addMain.temp.parentCode = this.parentId;\n        this.$refs.addMain.temp.parentName = this.parentName;\n        this.$refs.addMain.dialogVisible = true;\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择上级菜单\",\n          type: \"warning\"\n        });\n      }\n    },\n    handleUpdate: function handleUpdate(index, val) {\n      console.log(index);\n      this.$refs.addMain.dialogStatus = 'update';\n      this.$refs.addMain.temp = _objectSpread({}, val);\n      this.$refs.addMain.dialogVisible = true;\n    },\n    //生效按钮单击事件\n    handleEffect: function handleEffect() {\n      if (this.selectlistRow && this.selectlistRow.length > 0) {\n        this.status = this.selectlistRow.every(function (val) {\n          return val.state === 'P001';\n        });\n\n        if (this.status) {\n          this.dialogStatus = 'effect';\n          this.dialogVisibleEffect = true;\n        } else {\n          this.$message({\n            title: \"警告\",\n            message: \"仅编制状态可生效\",\n            type: \"warning\"\n          });\n        }\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请勾选记录\",\n          type: \"warning\"\n        });\n      }\n    },\n    //生效确定按钮单击事件\n    effect: throttle(function () {\n      var _this5 = this;\n\n      var dto = {\n        method: \"effect\",\n        rowIds: [],\n        synchronization: this.temp.synchronization\n      };\n      this.selectlistRow.forEach(function (val, index) {\n        dto.rowIds[index] = val.rowId;\n      });\n      api.updateEffect(dto).then(function () {\n        _this5.$message({\n          title: '成功',\n          message: '生效成功',\n          type: 'success',\n          duration: 2000\n        });\n\n        _this5.dialogVisibleEffect = false;\n\n        _this5.getList();\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //失效确定按钮单击事件\n    cancelEffect: throttle(function () {\n      var _this6 = this;\n\n      var dto = {\n        method: \"invalid\",\n        rowIds: [],\n        synchronization: this.temp.synchronization\n      };\n      this.selectlistRow.forEach(function (val, index) {\n        dto.rowIds[index] = val.rowId;\n      });\n      api.updateEffect(dto).then(function () {\n        _this6.$message({\n          title: '成功',\n          message: '失效成功',\n          type: 'success',\n          duration: 2000\n        });\n\n        _this6.dialogVisibleEffect = false;\n\n        _this6.getList();\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //失效按钮单击事件\n    handleLostEffect: function handleLostEffect() {\n      if (this.selectlistRow && this.selectlistRow.length > 0) {\n        this.status = this.selectlistRow.every(function (val) {\n          return val.state === 'P002';\n        });\n\n        if (this.status) {\n          this.dialogStatus = 'cancelEffect';\n          this.dialogVisibleEffect = true;\n        } else {\n          this.$message({\n            title: \"警告\",\n            message: \"仅生效状态可失效\",\n            type: \"warning\"\n          });\n        }\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请勾选记录\",\n          type: \"warning\"\n        });\n      }\n    },\n    // 获取表格选中时的数据\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val;\n    },\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val);\n    },\n    // 获取表格选中时的数据\n    selectRowSub: function selectRowSub(val) {\n      this.selectRows = val;\n    },\n    //删除按钮单击事件\n    handleDelete: function handleDelete(index, val) {\n      var _this7 = this;\n\n      this.$confirm(\"是否删除该信息\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        api.deleteRecord(val.rowId).then(function () {\n          _this7.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this7.getTree();\n\n          _this7.getList();\n        });\n      }).catch(function () {\n        _this7.$message({\n          type: \"info\",\n          message: \"已取消\"\n        });\n      });\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.parentId = data.code;\n      this.parentName = data.name;\n      this.treeGetList(data.code);\n    }\n  }\n};",null]}