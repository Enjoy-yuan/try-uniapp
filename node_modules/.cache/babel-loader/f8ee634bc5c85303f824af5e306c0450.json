{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuan/Documents/大唐广电/cf_web/src/api/project/iot/IOT/em.js","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/api/project/iot/IOT/em.js","mtime":1600927611051},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//设备建模\nimport request from '@/utils/request'; // 查询设备建模信息列表\n\nexport function queryProjectCodes(projectCode, query) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel\"),\n    method: 'get',\n    params: query\n  });\n} // 查询单个设备建模信息\n\nexport function queryProjectCode(projectCode, deviceCode) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode),\n    method: 'get'\n  });\n} // 创建设备建模信息\n\nexport function addProjectCode(projectCode, data) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel\"),\n    method: 'post',\n    data: data\n  });\n} //更新设备建模信息\n\nexport function updateProjectCode(projectCode, deviceCode, data) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode),\n    method: 'patch',\n    data: data\n  });\n} // 删除设备建模信息\n\nexport function deleteProjectCode(projectCode, deviceCode) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode),\n    method: 'delete'\n  });\n} // 查询设备模型铭牌信息\n\nexport function queryNamePlate(projectCode, deviceCode) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/nameplate\"),\n    method: 'get'\n  });\n} // 编辑设备模型铭牌信息\n\nexport function updateNamePlate(projectCode, deviceCode, data) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/nameplate\"),\n    method: 'patch',\n    data: data\n  });\n} // 查询设备全部属性信息\n\nexport function queryCollects(projectCode, deviceCode, query) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/collect\"),\n    method: 'get',\n    params: query\n  });\n} // 查询单个设备采集点属性信息\n\nexport function queryCollect(projectCode, deviceCode, attributeCode) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/collect/\").concat(attributeCode),\n    method: 'get'\n  });\n} //  创建自定义属性信息\n\nexport function addCollect(projectCode, deviceCode, data) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/collect\"),\n    method: 'POST',\n    data: data\n  });\n} // 创建标准属性信息\n\nexport function updatestandardCollect(projectCode, deviceCode, data) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/collect\"),\n    method: 'patch',\n    data: data\n  });\n} //  编辑设备采集点属性信息\n\nexport function updateCollect(projectCode, deviceCode, attributeCode, data) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/collect/\").concat(attributeCode),\n    method: 'patch',\n    data: data\n  });\n} // 删除设备建模信息\n\nexport function deleteCollect(projectCode, deviceCode, attributeCode) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/collect/\").concat(attributeCode),\n    method: 'delete'\n  });\n} // 查询设备标准属性信息(已经关联)\n\nexport function queryStandardCollect(projectCode, deviceCode, query) {\n  return request({\n    url: \"/iotIot/iot/\".concat(projectCode, \"/deviceModel/\").concat(deviceCode, \"/standardCollect\"),\n    method: 'get',\n    params: query\n  });\n} // 获取设备厂商\n\nexport function queryManufacturers() {\n  var query = {\n    currentPage: 1,\n    pageSize: 1000\n  };\n  return request({\n    url: \"/base-modeling/manufacturers\",\n    method: 'get',\n    params: query\n  });\n}",null]}