{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/myProject/EMTabs/attribute.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/myProject/EMTabs/attribute.vue","mtime":1597024864338},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/IOT/em\";\nimport Pagination from '@/components/Pagination';\nimport { mapState } from 'vuex';\nimport attributeSelect from '@/components/Select/attributeSelect';\nimport attributeFrom from \"../../../components/attributeFrom\";\nexport default {\n  name: \"attributeInfo\",\n  props: ['code', 'row'],\n  data: function data() {\n    return {\n      isTick: true,\n      // 多选\n      theight: 0,\n      //表格高度\n      listLoading: false,\n      list: [],\n      total: 0,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        attributeName: undefined\n      },\n      attributeList: null,\n      //查询出已选的\n      subAttributeList: null,\n      // 选中的\n      temp: {\n        attributeCode: undefined,\n        attributeName: undefined,\n        attributeType: undefined,\n        attributeTypeName: undefined,\n        company: undefined,\n        companyName: undefined,\n        dataType: undefined,\n        dataTypeName: undefined,\n        enumValue: undefined,\n        // 暂不需要\n        max: undefined,\n        min: undefined,\n        readType: undefined,\n        readTypeName: undefined,\n        remark: undefined\n      },\n      dialogFormType: undefined,\n      dialogFormVisible: false,\n      subDialogFormVisible: false,\n      tableKey: [0, 1] //表格索引\n\n    };\n  },\n  components: {\n    attributeFrom: attributeFrom,\n    attributeSelect: attributeSelect,\n    Pagination: Pagination\n  },\n  computed: _objectSpread({}, mapState({\n    iot_attribute_type: function iot_attribute_type(state) {\n      return state.iotDict.iot_attribute_type;\n    },\n    iot_attribute_company: function iot_attribute_company(state) {\n      return state.iotDict.iot_attribute_company;\n    },\n    iot_data_type: function iot_data_type(state) {\n      return state.iotDict.iot_data_type;\n    },\n    iot_read_type: function iot_read_type(state) {\n      return state.iotDict.iot_read_type;\n    },\n    iot_is_standard: function iot_is_standard(state) {\n      return state.iotDict.iot_is_standard;\n    },\n    iot_state: function iot_state(state) {\n      return state.iotDict.iot_state;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 30;\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      api.queryCollects(this.code, this.row.deviceCode, this.listQuery).then(function (response) {\n        _this2.list = response.data.records;\n        _this2.list = _this2.$myFun.srmCodeToName(response.data.records, [_this2.iot_attribute_type, _this2.iot_data_type, _this2.iot_read_type, _this2.iot_attribute_company, _this2.iot_is_standard, _this2.iot_state], ['attributeType', 'dataType', 'readType', 'company', 'isStandard', 'iotState']);\n        _this2.total = response.data.total;\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.dialogFormType = 'create';\n      this.dialogFormVisible = true;\n    },\n    create: function create(val) {\n      var _this3 = this;\n\n      api.addCollect(this.code, this.row.deviceCode, val).then(function () {\n        _this3.getList();\n\n        _this3.dialogFormVisible = false;\n\n        _this3.resTemp();\n\n        _this3.$notify({\n          title: '成功',\n          message: '新增成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate(attributeCode) {\n      var _this4 = this;\n\n      api.queryCollect(this.code, this.row.deviceCode, attributeCode).then(function (res) {\n        _this4.temp = res.data;\n        _this4.temp.min = parseInt(res.data.min);\n        _this4.temp.max = parseInt(res.data.max);\n        _this4.dialogFormType = 'update';\n        _this4.dialogFormVisible = true;\n      });\n    },\n    update: function update(val) {\n      var _this5 = this;\n\n      api.updateCollect(this.code, this.row.deviceCode, val.attributeCode, val).then(function () {\n        _this5.getList();\n\n        _this5.dialogFormVisible = false;\n\n        _this5.resTemp();\n\n        _this5.$notify({\n          title: '成功',\n          message: '修改成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(attributeCode) {\n      var _this6 = this;\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteCollect(_this6.code, _this6.row.deviceCode, attributeCode).then(function () {\n          _this6.getList();\n\n          _this6.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this6.getList();\n        });\n      }).catch(function () {\n        _this6.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    // 查询标准属性列表\n    handleStandardCollect: function handleStandardCollect() {\n      var _this7 = this;\n\n      api.queryStandardCollect(this.code, this.row.deviceCode).then(function (res) {\n        _this7.attributeList = res.data;\n        _this7.subDialogFormVisible = true;\n\n        _this7.$nextTick(function () {\n          this.$refs.attributeSelect.getList();\n        });\n      });\n    },\n    getAttribute: function getAttribute(val) {\n      this.subAttributeList = val;\n    },\n    updateStandardCollect: function updateStandardCollect() {\n      var _this8 = this;\n\n      var getRow = new Promise(function (resolve) {\n        for (var i = 0; i < _this8.subAttributeList.length; i++) {\n          for (var j = 0; j < _this8.attributeList.length; j++) {\n            if (_this8.subAttributeList[i].attributeCode == i.attributeCode) {\n              _this8.subAttributeList[i].rowId = _this8.attributeList[j].rowId;\n              break;\n            } else {\n              delete _this8.subAttributeList[i].rowId;\n            }\n          }\n        }\n\n        _this8.subAttributeList.forEach(function (item) {\n          _this8.attributeList.forEach(function (i) {\n            if (item.attributeCode == i.attributeCode) {\n              item.rowId = i.rowId;\n            } else {\n              delete item.rowId;\n            }\n          });\n        });\n\n        resolve(_this8.subAttributeList);\n      });\n      getRow.then(function () {\n        api.updatestandardCollect(_this8.code, _this8.row.deviceCode, _this8.subAttributeList).then(function () {\n          _this8.getList();\n\n          _this8.subDialogFormVisible = false;\n\n          _this8.$notify({\n            title: '成功',\n            message: '修改成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    },\n    resTemp: function resTemp() {\n      this.temp = {\n        attributeCode: undefined,\n        attributeName: undefined,\n        attributeType: undefined,\n        attributeTypeName: undefined,\n        company: undefined,\n        companyName: undefined,\n        dataType: undefined,\n        dataTypeName: undefined,\n        enumValue: undefined,\n        // 暂不需要\n        max: undefined,\n        min: undefined,\n        readType: undefined,\n        readTypeName: undefined,\n        remark: undefined\n      };\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isTick) {\n        this.selectedRows = val;\n      } else {\n        this.selectlistRow = val[val.length - 1];\n\n        if (val.length > 1) {\n          this.$refs.subTb.clearSelection();\n          this.$refs.subTb.toggleRowSelection(val[val.length - 1]);\n        }\n\n        this.$refs.subTb.setCurrentRow(this.selectlistRow);\n      }\n    }\n  }\n};",null]}