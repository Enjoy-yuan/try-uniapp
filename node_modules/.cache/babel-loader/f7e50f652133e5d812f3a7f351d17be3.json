{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/investigatePlan/tab/addTab/tabProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/investigatePlan/tab/addTab/tabProject.vue","mtime":1596610933930},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryRecordTree as queryModel } from \"@/api/project/srm/contractManage/evaluationModel\";\nimport { deleteProject } from \"@/api/project/srm/supplierManage/supplierAccess/investigatePlan\";\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport { DICT_CODE } from '@/utils/constant';\nimport { mapState } from \"vuex\";\nexport default {\n  name: 'tabProject',\n  props: ['orgCode'],\n  components: {\n    caiGou: caiGou\n  },\n  data: function data() {\n    return {\n      DICT_CODE: DICT_CODE,\n      tableData: [],\n      modelArr: [],\n      //模型选择框\n      modelPar: {\n        method: 'combobox',\n        level: 1,\n        type: 'PAK1',\n        purchaseOrg: null,\n        category: 'PB20',\n        state: 'PAS0',\n        evaluationItem: null\n      },\n      oprateBtnConfig: [{\n        id: 0,\n        class: 'filter-item',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleAdd',\n        name: '新增'\n      }, {\n        id: 1,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleRefresh',\n        name: '刷新'\n      }],\n      tableConfig: [{\n        label: '考察项',\n        dType: 'dt_srm_pb4',\n        prop: 'item',\n        align: 'center',\n        width: '120',\n        type: 'dictSelect',\n        optionArr: []\n      }, {\n        label: '是否反馈',\n        prop: 'feedback',\n        align: 'center',\n        width: 'auto',\n        type: 'checkbox'\n      }, {\n        label: '是否考察',\n        prop: 'investigate',\n        align: 'center',\n        width: 'auto',\n        type: 'checkbox'\n      }, {\n        label: '考察部门',\n        prop: 'department',\n        align: 'center',\n        width: '120',\n        type: 'selectcaiGou',\n        copmNum: 0\n      }, {\n        label: '任务接收人',\n        prop: 'taskUserName',\n        propCode: 'taskUser',\n        propName: 'taskUserName',\n        align: 'center',\n        width: '120',\n        type: 'inputBtnPerson',\n        copmNum: 1\n      }, {\n        label: '考察人',\n        prop: 'investigateUser',\n        align: 'center',\n        width: '120',\n        type: 'commonInput',\n        copmNum: 1\n      }, {\n        label: '评价人',\n        prop: 'evaluateUserName',\n        propCode: 'evaluateUser',\n        propName: 'evaluateUserName',\n        align: 'center',\n        width: '120',\n        type: 'inputBtnPerson',\n        copmNum: 1\n      }, {\n        label: '评价模型号',\n        dType: 'dt_yw_pjmx',\n        prop: 'evaluateModel',\n        align: 'center',\n        width: '200',\n        type: 'bisSelect',\n        key: 'classificationCode',\n        value: 'classificationCode',\n        optionArr: []\n      }, {\n        label: '考察理由',\n        prop: 'reason',\n        align: 'center',\n        width: '220',\n        type: 'commonInput'\n      }],\n      dataIndex: null\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pb1: function dt_srm_pb1(state) {\n      return state.dict.dt_srm_pb1;\n    },\n    //评价分类\n    dt_srm_pb4: function dt_srm_pb4(state) {\n      return state.dict.dt_srm_pb4;\n    } //考察项\n\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pb1\", \"dt_srm_pb4\"]);\n  },\n  watch: {\n    'orgCode': function orgCode() {\n      this.getModelNoArray();\n    }\n  },\n  methods: {\n    //评价模型号异步获取处理\n    getModelNoArray: function () {\n      var _getModelNoArray = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var _loop, index;\n\n        return regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _loop =\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _loop(index) {\n                  var modelpar;\n                  return regeneratorRuntime.wrap(function _loop$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          modelpar = _this.modelPar;\n                          modelpar.purchaseOrg = _this.orgCode;\n                          modelpar.evaluationItem = _this.tableData[index].item;\n                          _context.next = 5;\n                          return queryModel(modelpar).then(function (res) {\n                            _this.modelArr[index] = res.data;\n\n                            _this.modelArr[index].map(function (item) {\n                              item.evaluateModel = item.classificationCode;\n                            });\n\n                            var options = [_this.dt_srm_pb1];\n                            _this.modelArr[index] = _this.$myFun.codeToName(_this.modelArr[index], options, ['classification']);\n                            var changeValue = true;\n\n                            _this.modelArr[index].forEach(function (item) {\n                              if (item.classificationCode === _this.tableData[index].evaluateModel) {\n                                changeValue = false;\n                              }\n                            });\n\n                            _this.$set(_this.modelArr, index, _this.modelArr[index]);\n\n                            if (changeValue) {\n                              if (_this.modelArr[index].length > 0) {\n                                _this.tableData[index].evaluateModel = _this.modelArr[index][0].classificationCode;\n                              } else {\n                                _this.tableData[index].evaluateModel = null;\n                              }\n                            }\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                index = 0;\n\n              case 2:\n                if (!(index < this.tableData.length)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.delegateYield(_loop(index), \"t0\", 4);\n\n              case 4:\n                index++;\n                _context2.next = 2;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getModelNoArray() {\n        return _getModelNoArray.apply(this, arguments);\n      }\n\n      return getModelNoArray;\n    }(),\n    // setModelNo () {\n    //     this.tableData.forEach((item, index) => {\n    //         this.getModelNo(index, item.item)\n    //     })\n    // },\n    getModelNo: function getModelNo(index, evaluationItem) {\n      var _this2 = this;\n\n      var modelpar = this.modelPar;\n      modelpar.purchaseOrg = this.orgCode;\n      modelpar.evaluationItem = evaluationItem;\n      queryModel(modelpar).then(function (res) {\n        _this2.modelArr[index] = res.data;\n\n        _this2.modelArr[index].map(function (item) {\n          item.evaluateModel = item.classificationCode;\n        });\n\n        var options = [_this2.dt_srm_pb1];\n        _this2.modelArr[index] = _this2.$myFun.codeToName(_this2.modelArr[index], options, ['classification']);\n        var changeValue = true;\n\n        _this2.modelArr[index].forEach(function (item) {\n          if (item.classificationCode === _this2.tableData[index].evaluateModel) {\n            changeValue = false;\n          }\n        });\n\n        _this2.$set(_this2.modelArr, index, _this2.modelArr[index]);\n\n        if (changeValue) {\n          if (_this2.modelArr[index].length > 0) {\n            _this2.tableData[index].evaluateModel = _this2.modelArr[index][0].classificationCode;\n          } else {\n            _this2.tableData[index].evaluateModel = null;\n          }\n        }\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.$emit('checkAdd', 'project');\n    },\n    oprateAdd: function oprateAdd() {\n      var obj = {\n        item: null,\n        orgCode: null,\n        feedback: false,\n        investigate: false,\n        department: null,\n        departmentName: null,\n        taskUser: null,\n        investigateUser: null,\n        evaluateUser: null,\n        evaluateModel: null,\n        position: null\n      };\n      this.tableData.push(obj);\n      this.modelArr.push([]);\n    },\n    handleRefresh: function handleRefresh() {\n      console.log('刷新');\n    },\n    handleDelete: function handleDelete(index, row) {\n      var _this3 = this;\n\n      this.modelArr.splice(index, 1);\n\n      if (row.rowId) {\n        deleteProject(row.investigateNo, row.rowId).then(function () {\n          _this3.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n\n          _this3.tableData = _this3.tableData.filter(function (item, indexf) {\n            _this3.modelArr.splice(indexf, 1);\n\n            return item.rowId !== row.rowId;\n          });\n        });\n      } else {\n        this.tableData = this.tableData.filter(function (item, indexf) {\n          return indexf !== index;\n        });\n      }\n    },\n    initTable: function initTable(data) {\n      var _this4 = this;\n\n      this.tableData = data;\n      this.tableData.forEach(function () {\n        _this4.modelArr.push([]);\n      });\n      this.getModelNoArray();\n    },\n    showPerson: function showPerson(propCode, propName, index) {\n      var title = '';\n\n      switch (propCode) {\n        case 'taskUser':\n          {\n            title = '任务接收人选择';\n            break;\n          }\n\n        case 'evaluateUser':\n          {\n            title = '评价人选择';\n            break;\n          }\n      }\n\n      this.dataIndex = index;\n      this.$emit('showPerson', title, propCode, propName);\n    },\n    personConfirm: function personConfirm(propCode, propName, val) {\n      if (propCode === 'taskUser') {\n        this.$set(this.tableData[this.dataIndex], 'investigateUser', val[0].employeeName);\n        this.$set(this.tableData[this.dataIndex], 'evaluateUser', val[0].employeeCode);\n        this.$set(this.tableData[this.dataIndex], 'evaluateUserName', val[0].employeeName);\n      }\n\n      this.$set(this.tableData[this.dataIndex], propCode, val[0].employeeCode);\n      this.$set(this.tableData[this.dataIndex], propName, val[0].employeeName);\n    },\n    changeItem: function changeItem(index, value) {\n      this.getModelNo(index, value);\n    },\n    setCaigou: function setCaigou(options) {\n      if (options) {\n        if (options.length > 0) {\n          this.listQuery.orgCode = options[0].organizationCode;\n          this.getList();\n        }\n      }\n    },\n    selectName: function selectName(name, index) {\n      this.tableData[index].departmentName = name;\n    }\n  }\n};",null]}