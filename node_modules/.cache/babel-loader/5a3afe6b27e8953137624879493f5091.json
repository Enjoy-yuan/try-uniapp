{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/equipmentTransfers/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/equipmentTransfers/index.vue","mtime":1596610933384},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _toConsumableArray from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/el/equipmentTransfers';\nimport * as org from '@/api/system/organization';\nimport * as employees from '@/api/system/employees';\nimport eqmtSelect from \"../../components/eqmtSelect\";\nimport Pagination from '@/components/Pagination';\nimport { mapState } from 'vuex'; // 基本数据引入\n\nexport default {\n  name: 'equipmentTransfers',\n  components: {\n    Pagination: Pagination,\n    eqmtSelect: eqmtSelect\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      list: [],\n      subList: [],\n      devModelList: [],\n      total: 0,\n      totalDev: 0,\n      tableKey: [0, 1, 2, 3],\n      //表格索引\n      orgList: [],\n      //组织选择\n      workList: [],\n      //工作中心选择\n      transferDepartmentList: [],\n      //部门选择\n      employeesList: [],\n      //员工列表\n      employeesListSub: [],\n      // 人员列表\n      listQuery: {\n        materielCode: undefined,\n        //查询\n        orgCode: undefined,\n        state: undefined,\n        applicationTimeStart: undefined,\n        applicationTimeEnd: undefined,\n        currentPage: 1,\n        pageSize: 15\n      },\n      listQueryDev: {\n        currentPage: 1,\n        pageSize: 15\n      },\n      temp: {\n        allocationApplyCode: undefined,\n        //  设备调拨单号\n        equipmentCode: undefined,\n        //设备代码\n        orgCode: undefined,\n        //组织编码\n        transferDepartment: undefined,\n        //调往部门\n        transferAddress: undefined,\n        //调往地址\n        applicant: undefined,\n        //申请人\n        applicationTime: undefined,\n        //申请时间\n        leadCadre: undefined,\n        // 新资产负责人\n        reasonExplan: undefined,\n        //原因说明\n        remark: undefined,\n        deviceAllocationDetailList: null //设备分配列表\n\n      },\n      subTemp: {\n        confirmPeople: undefined,\n        confirmTime: undefined,\n        allocationState: undefined\n      },\n      dialogStatus: '',\n      //新增/修改\n      dialogFormVisible: false,\n      fromDialogFormVisibleDev: false,\n      // 设备\n      selectedRowsDev: null,\n      //选择的设备\n      selectedRowsDelDev: null,\n      //预选择删除的设备\n      fromDialogStatus: '',\n      fromDialogFormVisible: false,\n      // 调入调出弹出层\n      workStationDialogVisible: false,\n      selectedRows: null,\n      //主表选中\n      selectFromList: null,\n      //从表选中\n      rules: {\n        orgCode: [{\n          required: true,\n          message: '请选择组织编码',\n          trigger: ['blur', 'change']\n        }],\n        transferDepartment: [{\n          required: true,\n          message: '请选择调往部门',\n          trigger: ['blur', 'change']\n        }],\n        transferAddress: [{\n          required: true,\n          message: '请选择调往地址',\n          trigger: ['blur', 'change']\n        }],\n        applicant: [{\n          required: true,\n          message: '请选择申请人',\n          trigger: ['blur', 'change']\n        }],\n        applicationTime: [{\n          required: true,\n          message: '请选择申请时间',\n          trigger: ['blur', 'change']\n        }],\n        leadCadre: [{\n          required: true,\n          message: '请选择新资产负责人',\n          trigger: ['blur', 'change']\n        }],\n        reasonExplan: [{\n          required: true,\n          message: '请输入原因说明',\n          trigger: ['blur', 'change']\n        }],\n        //原因说明\n        remark: undefined,\n        confirmPeople: [{\n          required: true,\n          message: '请选择',\n          trigger: ['blur', 'change']\n        }],\n        confirmTime: [{\n          required: true,\n          message: '请选择',\n          trigger: ['blur', 'change']\n        }],\n        deviceAllocationDetailList: null //设备分配列表\n\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n    this.getOrg();\n  },\n  computed: _objectSpread({}, mapState({\n    dt_allocation_state: function dt_allocation_state(state) {\n      return state.eamDict.dt_allocation_state;\n    },\n    dt_device_state: function dt_device_state(state) {\n      return state.eamDict.dt_device_state;\n    }\n  })),\n  watch: {\n    'temp.orgCode': function tempOrgCode(value) {\n      var _this = this;\n\n      if (value) {\n        api.queryWork(value).then(function (res) {\n          _this.workList = res.data;\n          var ret = res.data.find(function (v) {\n            return v.workCenterCode == _this.temp.transferDepartment;\n          });\n\n          if (res.data.length) {\n            if (!ret) {\n              _this.temp.transferDepartment = res.data[0].workCenterCode;\n            }\n          } else {\n            _this.temp.transferDepartment = undefined;\n          }\n        });\n        var query = {\n          orgCode: value\n        };\n        employees.selectlists(query).then(function (res) {\n          _this.employeesList = res.data; // leadCadre 资产负责人\n\n          var ret = res.data.find(function (v) {\n            return v.employeeCode == _this.temp.leadCadre;\n          }); // applicant 申请人\n\n          var ret2 = res.data.find(function (v) {\n            return v.employeeCode == _this.temp.applicant;\n          });\n\n          if (res.data.length) {\n            if (!ret) {\n              _this.temp.leadCadre = res.data[0].employeeCode;\n            }\n\n            if (!ret2) {\n              _this.temp.applicant = res.data[0].employeeCode;\n            }\n          } else {\n            _this.temp.leadCadre = undefined;\n            _this.temp.applicant = undefined;\n          }\n        });\n      } else {\n        this.temp.transferDepartment = undefined;\n        this.temp.leadCadre = undefined;\n        this.temp.applicant = undefined;\n      }\n    },\n    'temp.transferDepartment': function tempTransferDepartment(value) {\n      var _this2 = this;\n\n      if (value) {\n        api.queryStations(value).then(function (res) {\n          _this2.transferDepartmentList = res.data;\n          var ret = res.data.find(function (v) {\n            return v.stationCode == _this2.temp.transferAddress;\n          });\n\n          if (res.data.length) {\n            if (!ret) {\n              _this2.temp.transferAddress = res.data[0].stationCode;\n            }\n          } else {\n            _this2.temp.transferAddress = undefined;\n          }\n        });\n      } else {\n        this.temp.transferAddress = undefined;\n      }\n    } //\n\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.$store.dispatch('eamDict/getDicData', ['dt_allocation_state', 'dt_device_state']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this3.setTableHeight();\n    };\n  },\n  methods: {\n    cancelDevice: function cancelDevice() {\n      this.$refs.eqmtSelect.listQuery.page = 1;\n      this.fromDialogFormVisibleDev = false;\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    //获取主表数据\n    getList: function getList() {\n      var _this4 = this;\n\n      api.queryOcation(this.listQuery).then(function (res) {\n        _this4.list = res.data.list;\n        _this4.total = res.data.pages.count;\n      });\n    },\n    getOrg: function getOrg() {\n      var _this5 = this;\n\n      var query = {\n        currentPage: 1,\n        pageSize: 1000\n      };\n      org.selectlists(query).then(function (res) {\n        _this5.orgList = res.data.list;\n      });\n    },\n    // 获取人员列表\n    getEmployees: function getEmployees() {\n      var _this6 = this;\n\n      employees.selectlists().then(function (res) {\n        _this6.employeesListSub = res.data;\n      });\n    },\n    // 获取从表\n    getSubList: function getSubList() {\n      var _this7 = this;\n\n      api.queryAllocationsDetails(this.selectedRows.allocationApplyCode).then(function (res) {\n        _this7.subList = res.data;\n      });\n    },\n    // 新增预选设备\n    createDev: function createDev() {\n      var obj = {};\n      this.devModelList = this.devModelList.concat(this.$refs.eqmtSelect.currentSelect);\n      this.devModelList = this.devModelList.reduce(function (cur, next) {\n        obj[next.deviceCode] ? '' : obj[next.deviceCode] = true && cur.push(next);\n        return cur;\n      }, []);\n      this.fromDialogFormVisibleDev = false;\n    },\n    // 删除预选设备\n    handleDelFromDev: function handleDelFromDev() {\n      if (this.selectedRowsDelDev) {\n        var a = this.selectedRowsDelDev;\n        var b = this.devModelList;\n\n        var arr = _toConsumableArray(b).filter(function (x) {\n          return _toConsumableArray(a).every(function (y) {\n            return y.deviceCode !== x.deviceCode;\n          });\n        });\n\n        this.devModelList = arr;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n        return false;\n      }\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        allocationApplyCode: undefined,\n        //  设备调拨单号\n        equipmentCode: undefined,\n        //设备代码\n        orgCode: undefined,\n        //组织编码\n        transferDepartment: undefined,\n        //调往部门\n        transferAddress: undefined,\n        //调往地址\n        applicant: undefined,\n        //申请人\n        applicationTime: undefined,\n        //申请时间\n        leadCadre: undefined,\n        // 新资产负责人\n        reasonExplan: undefined,\n        //原因说明\n        remark: undefined,\n        deviceAllocationDetailList: null //设备分配列表\n\n      };\n    },\n    // 表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n      this.subList = [];\n    },\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.resetTemp();\n      this.devModelList = [];\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    // 新增\n    create: function create() {\n      var _this8 = this;\n\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          if (_this8.devModelList) {\n            _this8.temp.deviceAllocationDetailList = _this8.devModelList.map(function (res) {\n              return {\n                equipmentCode: res.deviceCode\n              };\n            });\n          }\n\n          api.creatAllocation(_this8.temp).then(function () {\n            _this8.getList();\n\n            _this8.dialogFormVisible = false;\n\n            _this8.$message({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate() {\n      var _this9 = this;\n\n      if (this.selectedRows) {\n        this.temp = JSON.parse(JSON.stringify(this.selectedRows));\n        Promise.all([api.queryAllocations(this.selectedRows.allocationApplyCode), api.queryAllocationsDetails(this.selectedRows.allocationApplyCode)]).then(function (res) {\n          _this9.temp = res[0].data;\n          res[1].data.forEach(function (i) {\n            i.deviceName = i.equipmentName;\n            i.deviceCode = i.equipmentCode;\n            i.modelNumber = i.equipmentMode;\n            i.categoryName = i.equipmentType;\n            i.useDeptName = i.lineCode;\n            i.addressName = i.equipmentStation;\n          });\n          _this9.devModelList = res[1].data;\n          _this9.dialogStatus = 'update';\n          _this9.dialogFormVisible = true;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    // 更新\n    update: function update() {\n      var _this10 = this;\n\n      //编辑确认\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          if (_this10.selectedRowsDev) {\n            _this10.temp.deviceAllocationDetailList = _this10.selectedRowsDev.map(function (res) {\n              return {\n                equipmentCode: res.deviceCode\n              };\n            });\n          }\n\n          api.updataAllocation(_this10.temp.allocationApplyCode, _this10.temp).then(function () {\n            _this10.getList();\n\n            _this10.clearValidate('temp');\n\n            _this10.dialogFormVisible = false;\n\n            _this10.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete() {\n      var _this11 = this;\n\n      if (this.selectedRows) {\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteAllocation(_this11.selectedRows.allocationApplyCode).then(function () {\n            _this11.subList = [];\n            _this11.getList(), _this11.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this11.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //发布\n    handlePublish: function handlePublish() {\n      var _this12 = this;\n\n      if (this.selectedRows) {\n        api.updataAllocationState(this.selectedRows.allocationApplyCode).then(function () {\n          _this12.getList(), _this12.$message({\n            title: '成功',\n            message: '发布成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    // 打开新增预选设备弹出层\n    handleCreateFromDev: function handleCreateFromDev() {\n      var _this13 = this;\n\n      if (!this.temp.orgCode) {\n        this.$message({\n          title: '警告',\n          message: '请选择组织编码',\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.fromDialogFormVisibleDev = true;\n      setTimeout(function () {\n        _this13.$refs.eqmtSelect.getList();\n      }, 0);\n    },\n    // 设备调出\n    handleOutFrom: function handleOutFrom() {\n      this.getEmployees();\n      this.resetSubTemp();\n\n      if (this.selectFromList) {\n        this.fromDialogStatus = 'out';\n        this.fromDialogFormVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择组织编码',\n          type: 'warning'\n        });\n      }\n    },\n    // 调出确认\n    createOutFrom: function createOutFrom() {\n      var _this14 = this;\n\n      this.$refs['subTemp'].validate(function (valid) {\n        if (valid) {\n          var data = {\n            allocationState: _this14.subTemp.allocationState,\n            equipmentCode: _this14.selectFromList[0].equipmentCode,\n            outConfirmPeople: _this14.subTemp.confirmPeople,\n            outConfirmTime: _this14.subTemp.confirmTime\n          };\n          api.comfirmOut(_this14.selectFromList[0].allocationApplyCode, data).then(function () {\n            _this14.getSubList();\n\n            _this14.fromDialogFormVisible = false;\n\n            _this14.clearValidate('subTemp');\n\n            _this14.$message({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    // 设备调入\n    handleCreateFrom: function handleCreateFrom() {\n      this.getEmployees();\n      this.resetSubTemp();\n\n      if (Array.isArray(this.selectFromList) && this.selectFromList[0]) {\n        this.fromDialogStatus = 'enter';\n        this.fromDialogFormVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条数据',\n          type: 'warning'\n        });\n      }\n    },\n    // 调入确认\n    createCreateFrom: function createCreateFrom() {\n      var _this15 = this;\n\n      var data = {\n        allocationState: this.subTemp.allocationState,\n        equipmentCode: this.selectFromList[0].equipmentCode,\n        enterConfirmPeople: this.subTemp.confirmPeople,\n        enterConfirmTime: this.subTemp.confirmTime\n      };\n      api.comfirmIn(this.selectFromList[0].allocationApplyCode, data).then(function () {\n        _this15.getSubList();\n\n        _this15.fromDialogFormVisible = false;\n\n        _this15.$message({\n          title: '成功',\n          message: '新增成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectChange: function selectChange(val) {\n      if (!val.length) {\n        this.subList = [];\n        return false;\n      }\n\n      this.selectedRows = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val[val.length - 1]);\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectedRows);\n\n      if (this.selectedRows) {\n        this.getSubList();\n      }\n    },\n    //\n    rowClickDev: function rowClickDev(val) {\n      this.$refs.tbDev.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectChangeDev: function selectChangeDev(val) {\n      this.selectedRowsDev = val;\n    },\n    //从表选择框选中\n    rowClickFrom: function rowClickFrom(val) {\n      this.$refs.tb2.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectFromChange: function selectFromChange(val) {\n      this.selectFromList = val;\n\n      if (val.length > 1) {\n        this.$refs.tb2.clearSelection();\n        this.$refs.tb2.toggleRowSelection(val[val.length - 1]);\n      }\n\n      this.$refs.tb2.setCurrentRow(this.selectFromList[0]);\n    },\n    // 预选设备列表\n    rowClickFromDev: function rowClickFromDev(val) {\n      this.$refs.tbYxDev.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectFromChangeDev: function selectFromChangeDev(val) {\n      this.selectedRowsDelDev = val;\n    },\n    resetSubTemp: function resetSubTemp() {\n      this.subTemp = {\n        confirmPeople: undefined,\n        confirmTime: undefined,\n        allocationState: undefined\n      };\n    }\n  }\n};",null]}