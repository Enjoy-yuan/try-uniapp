{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/procurementDemand/divisionNeeds/divisionNeed/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/procurementDemand/divisionNeeds/divisionNeed/index.vue","mtime":1596610933854},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport * as api from \"@/api/project/srm/procurementDemand/divisionNeeds/divisionNeed\";\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport Pagination from \"@/components/Pagination\"; // import dialogDivide from './dialog/dialogDivide'\n\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'; //选择人\n\nexport default {\n  name: \"divisionNeed\",\n  components: {\n    caiGou: caiGou,\n    Pagination: Pagination,\n    dialogPersonSelect: dialogPersonSelect\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      spanArr: [],\n      pos: 0,\n      dataList: [],\n      itemList: [],\n      //从表数据\n      total: 0,\n      totalItem: 0,\n      listQuery: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        state: null,\n        orgCode: null,\n        classification: null,\n        materialName: null,\n        purchasePeople: null,\n        purchasePeopleName: null\n      },\n      DICT_CODE: DICT_CODE,\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: [],\n      //多选时选中的所有行\n      tableKey: 0,\n      //表格索引\n      filterConfig: [{\n        type: 'selectcaiGou',\n        label: '采购组织',\n        prop: 'orgCode',\n        width: '',\n        copmNum: 0,\n        class: 'filter-item'\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_srm_pbd',\n        label: '状态',\n        prop: 'state',\n        width: '',\n        optionArr: [],\n        class: 'filter-item ml_5'\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_materiel_type',\n        label: '物料类型',\n        prop: 'classification',\n        width: '',\n        class: 'filter-item ml_5'\n      }, {\n        type: 'commonInput',\n        label: '物料名称',\n        prop: 'materialName',\n        width: '',\n        class: 'filter-item ml_5'\n      }, {\n        type: 'inputBtnPerson',\n        label: '责任人',\n        prop: 'purchasePeopleName',\n        copmNum: 1,\n        class: 'ml_5'\n      }],\n      oprateBtnConfig: [{\n        id: 0,\n        class: 'filter-item',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleDivide',\n        name: '分工'\n      }, {\n        id: 1,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-plus',\n        clickMethod: 'handlePublish',\n        name: '发布'\n      }],\n      tableConfig: [{\n        label: '打包号',\n        prop: 'packageNo',\n        align: 'center',\n        width: '180'\n      }, {\n        label: '状态',\n        prop: 'stateCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料图号',\n        prop: 'mapNo',\n        align: 'center',\n        width: '180'\n      }, {\n        label: '特殊区分',\n        prop: 'specialDistinction',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料编码',\n        prop: 'materielCode',\n        align: 'center',\n        width: '180'\n      }, {\n        label: '物料名称',\n        prop: 'materielName',\n        align: 'center',\n        width: '180'\n      }, {\n        label: '分配责任人',\n        prop: 'purchasePeopleName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '上次分配人',\n        prop: 'lastAssignPeopleName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料分类',\n        prop: 'materielClassName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商',\n        prop: 'supplierName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '规格',\n        prop: 'specifications',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '材质',\n        prop: 'materialTexture',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '重量',\n        prop: 'weight',\n        align: 'center',\n        width: 'auto'\n      }, //wu\n      {\n        label: '物料类型',\n        prop: 'materialType',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '是否关重件',\n        prop: 'heavyParts',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '关联单号',\n        prop: 'associatedNo',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '计量单位',\n        prop: 'measurement',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '确定目标价',\n        prop: 'targetPrice',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '要求完成时间',\n        prop: 'completionTime',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '组织编码',\n        prop: 'orgCode',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '项目号',\n        prop: 'projectNo',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '来源方式',\n        prop: 'sourceType',\n        align: 'center',\n        width: 'auto'\n      }, //wu\n      {\n        label: '关联物料编码',\n        prop: 'associatedMaterial',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '设计师',\n        prop: 'designer',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '任务分配人',\n        prop: 'assignPersonName',\n        align: 'center',\n        width: 'auto'\n      }],\n      dialogConfig: [{\n        title: '人员分工',\n        propCode: \"purchasePeople\",\n        propName: \"purchasePeopleName\",\n        unMutiple: true,\n        required: false\n      }]\n    };\n  },\n  created: function created() {},\n  computed: _objectSpread({}, mapState({\n    dt_materiel_type: function dt_materiel_type(state) {\n      return state.dict.dt_materiel_type;\n    },\n    //物料类型\n    dt_materiel_classify: function dt_materiel_classify(state) {\n      return state.dict.dt_materiel_classify;\n    },\n    //物料分类\n    dt_srm_pbd: function dt_srm_pbd(state) {\n      return state.dict.dt_srm_pbd;\n    } //分工状态\n\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_materiel_type\", \"dt_srm_pbd\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 10;\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        var options = [_this2.dt_materiel_type, _this2.dt_srm_pbd];\n        res.data = _this2.$myFun.codeToName(res.data, options, ['classification', 'state']);\n        _this2.dataList = res.data.list;\n        _this2.total = res.data.pages.count;\n        _this2.spanArr = [];\n        _this2.pos = 0;\n\n        _this2.getSpanArr(_this2.dataList);\n      });\n    },\n    handleView: function handleView() {},\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //表格显示条数变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //表格当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    //操作按钮事件\n    oprateClick: function oprateClick(id) {\n      switch (id) {\n        case 0:\n          {\n            this.handleDivide();\n            break;\n          }\n\n        case 1:\n          {\n            this.handlePublish();\n            break;\n          }\n      }\n    },\n    //分工操作\n    handleDivide: function handleDivide() {\n      if (this.selectedRows) {\n        if (this.selectedRows.length > 0) {\n          this.showPerson(\"divide\");\n        } else {\n          this.$message({\n            type: 'warning',\n            message: '请至少选择一条数据'\n          });\n        }\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请至少选择一条数据'\n        });\n      }\n    },\n    publish: function publish() {},\n    handlePublish: function handlePublish() {\n      var _this3 = this;\n\n      if (this.selectedRows) {\n        if (this.selectedRows.length > 0) {\n          var cdata = {\n            packageNo: this.selectedRows[0].packageNo,\n            method: \"RELEASE\"\n          };\n          api.handleRecords(cdata).then(function () {\n            _this3.$message({\n              type: 'success',\n              message: '发布成功'\n            });\n\n            _this3.getList();\n          });\n        } else {\n          this.$message({\n            type: 'warning',\n            message: '请至少选择一条数据'\n          });\n        }\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请至少选择一条数据'\n        });\n      }\n    },\n    getSpanArr: function getSpanArr(data) {\n      data.sort(this.compareObj(\"packageNo\"));\n\n      for (var i = 0; i < data.length; i++) {\n        if (i === 0) {\n          this.spanArr.push(1);\n          this.pos = 0;\n        } else {\n          // 判断当前元素与上一个元素是否相同\n          if (data[i].packageNo === data[i - 1].packageNo) {\n            this.spanArr[this.pos] += 1;\n            this.spanArr.push(0);\n          } else {\n            this.spanArr.push(1);\n            this.pos = i;\n          }\n        }\n      }\n    },\n    compareObj: function compareObj(prop) {\n      return function (obj1, obj2) {\n        var val1 = obj1[prop];\n        var val2 = obj2[prop];\n\n        if (val1 < val2) {\n          return -1;\n        } else if (val1 > val2) {\n          return 1;\n        } else {\n          return 0;\n        }\n      };\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (columnIndex === 2) {\n        var _row = this.spanArr[rowIndex];\n\n        var _col = _row > 0 ? 1 : 0;\n\n        return {\n          rowspan: _row,\n          colspan: _col\n        };\n      }\n    },\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1]; // this.selectSameProp(this.dataList, \"packageNo\", val)\n        } else if (val.length === 0) {\n          this.selectedRows = val;\n          this.currentSelectedRow = null; // this.itemList = []\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1]; // this.selectSameProp(this.dataList, \"packageNo\", val)\n      }\n    },\n    // selectSameProp (data, prop, val) {\n    //     this.selectedRows = []\n    //     for (let j = 0; j < val.length; j++) {\n    //         for (var i = 0; i < data.length; i++) {\n    //             if (data[i][prop] === val[j][prop]) {\n    //                 this.selectedRows.push(data[i])\n    //             }\n    //         }\n    //     }\n    // },\n    showPerson: function showPerson(propCode, propName) {\n      switch (propCode) {\n        case 'purchasePeople':\n          {\n            this.dialogConfig[0].required = false;\n            this.dialogConfig[0].title = '选择责任人';\n            break;\n          }\n\n        case 'divide':\n          {\n            this.dialogConfig[0].required = true;\n            this.dialogConfig[0].title = '人员分工';\n            break;\n          }\n      }\n\n      this.dialogConfig[0].propCode = propCode;\n      this.dialogConfig[0].propName = propName;\n      this.$refs.refPerson.dialogVisible = true;\n    },\n    personConfirm: function personConfirm(val, propCode, propName) {\n      var _this4 = this;\n\n      switch (propCode) {\n        case 'purchasePeople':\n          {\n            this.$set(this.listQuery, propCode, val[0].employeeCode);\n            this.$set(this.listQuery, propName, val[0].employeeName);\n            break;\n          }\n\n        case 'divide':\n          {\n            console.log(val[0], '分工提交'); //分工提交\n\n            var cdata = {\n              divideDTO: {\n                assignPerson: val[0].employeeCode,\n                assignPersonName: val[0].employeeName,\n                packageNo: this.selectedRows[0].packageNo\n              },\n              packageNo: this.selectedRows[0].packageNo,\n              method: \"DIVIDE\"\n            };\n            api.handleRecords(cdata).then(function (res) {\n              console.log(res);\n\n              _this4.$message({\n                type: 'success',\n                message: '分工提交成功'\n              });\n            });\n            break;\n          }\n      }\n    }\n  }\n};",null]}