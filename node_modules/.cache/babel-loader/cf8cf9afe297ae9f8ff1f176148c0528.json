{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/dialog/dialogErrorFeedBack.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierSelection/options/optionsFormation/dialog/dialogErrorFeedBack.vue","mtime":1599136050908},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/srm/supplierSelect/options/option\";\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: 'dialogFeedBack',\n  components: {\n    Pagination: Pagination\n  },\n  props: ['unMutiple', 'title'],\n  data: function data() {\n    return {\n      tableData: [],\n      total: 0,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      formData: {\n        rowId: null,\n        businessType: null,\n        problemType: null,\n        stage: null,\n        occurrenceTime: null,\n        problem: null,\n        plannedSettlementDate: null,\n        problemDesc: null,\n        problemInfluence: null,\n        solution: null,\n        effectValidation: null\n      },\n      listSelected: null,\n      //已选项\n      selectRowData: null,\n      dialogVisible: false,\n      rules: {\n        businessType: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        problemType: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }]\n      },\n      oprateBtnConfig: [{\n        id: 0,\n        class: 'filter-item',\n        icon: 'el-icon-plus',\n        clickMethod: 'showGys',\n        name: '新增'\n      }, {\n        id: 1,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleRefresh',\n        name: '刷新'\n      }],\n      formConfig: [{\n        type: 'dictSelect',\n        dType: 'dt_srm_pdo',\n        label: '业务域',\n        prop: 'businessType',\n        width: ''\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_srm_pap',\n        label: '问题类型',\n        prop: 'problemType',\n        width: ''\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_srm_pdp',\n        label: '所处阶段',\n        prop: 'stage',\n        width: ''\n      }, {\n        type: 'datetime',\n        label: '发生时间',\n        prop: 'occurrenceTime',\n        width: ''\n      }, {\n        type: 'commonInput',\n        label: '问题',\n        prop: 'problem',\n        width: ''\n      }, {\n        type: 'date',\n        label: '计划解决日期',\n        prop: 'plannedSettlementDate',\n        width: ''\n      }, {\n        type: 'textarea',\n        label: '问题描述',\n        prop: 'problemDesc',\n        width: '800px',\n        rows: \"2\"\n      }, {\n        type: 'textarea',\n        label: '问题影响',\n        prop: 'problemInfluence',\n        width: '800px',\n        rows: \"2\"\n      }, {\n        type: 'textarea',\n        label: '解决措施',\n        prop: 'solution',\n        width: '800px',\n        rows: \"2\"\n      }, {\n        type: 'textarea',\n        label: '效果验证',\n        prop: 'effectValidation',\n        width: '800px',\n        rows: \"2\"\n      }],\n      tableConfig: [{\n        label: '状态',\n        prop: 'stateCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '业务域',\n        prop: 'businessTypeCN',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '所处阶段',\n        prop: 'stageCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '发生时间',\n        prop: 'occurrenceTime',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '问题',\n        prop: 'problem',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '问题描述',\n        prop: 'problemDesc',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '影响分析',\n        prop: 'problemInfluence',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '解决措施',\n        prop: 'solution',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '效果验证',\n        prop: 'effectValidation',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '计划完成时间',\n        prop: 'plannedSettlementDate',\n        align: 'center',\n        width: '150'\n      }],\n      dialogConfig: [{\n        title: '供应商信息',\n        isRequired: false,\n        unMutiple: false\n      }, {\n        title: '申请人选择',\n        unMutiple: true,\n        propCode: 'creator',\n        propName: 'creatorName'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_p0: function dt_srm_p0(state) {\n      return state.dict.dt_srm_p0;\n    },\n    dt_srm_pdo: function dt_srm_pdo(state) {\n      return state.dict.dt_srm_pdo;\n    },\n    //业务域\n    dt_srm_pdp: function dt_srm_pdp(state) {\n      return state.dict.dt_srm_pdp;\n    },\n    //所处阶段\n    dt_srm_pap: function dt_srm_pap(state) {\n      return state.dict.dt_srm_pap;\n    } //问题类型\n\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\", \"dt_srm_pdo\", \"dt_srm_pdp\", \"dt_srm_pap\"]);\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      api.queryFeedback(this.listQuery).then(function (res) {\n        var options = [_this.dt_srm_p0, _this.dt_srm_pdo, _this.dt_srm_pdp];\n        res.data = _this.$myFun.codeToName(res.data, options, ['state', 'businessType', 'stage']);\n        _this.tableData = res.data.list;\n        _this.total = res.data.pages.count;\n      });\n    },\n    resetForm: function resetForm() {\n      for (var par in this.formData) {\n        this.$set(this.formData, par, null);\n      }\n\n      this.$refs['refForm'].resetFields();\n      this.$refs['refForm'].clearValidate();\n    },\n    handleConfirm: function handleConfirm() {\n      var _this2 = this;\n\n      this.$refs.refForm.validate(function (valid) {\n        if (valid) {\n          _this2.$confirm('确认保存吗?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            console.log(_this2.formData.rowId);\n\n            if (_this2.formData.rowId) {\n              var cdata = {\n                abnormalFeedbackDTO: _this2.formData,\n                method: \"UPDATE\"\n              };\n              api.updateFeedback(_this2.formData.rowId, cdata).then(function () {\n                _this2.getList();\n\n                _this2.$message({\n                  type: 'success',\n                  message: '编辑成功'\n                });\n\n                _this2.resetForm();\n              });\n            } else {\n              api.createFeedback(_this2.formData).then(function () {\n                _this2.getList();\n\n                _this2.resetForm();\n\n                _this2.$message({\n                  type: 'success',\n                  message: '新增成功'\n                });\n              });\n            }\n          }).catch(function () {\n            _this2.$message({\n              type: 'info',\n              message: '已取消'\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this3 = this;\n\n      // this.formData = JSON.parse(JSON.stringify(row))\n      api.queryFeedbackRow(row.rowId).then(function (res) {\n        res = res.data;\n\n        for (var key in res) {\n          for (var par in _this3.formData) {\n            if (par === key) {\n              _this3.$set(_this3.formData, par, res[key]);\n            }\n          }\n        }\n      });\n    },\n    //表格操作删除\n    handleDelete: function handleDelete(row) {\n      var _this4 = this;\n\n      this.$confirm('确认要删除该数据项吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteFeedback(row.rowId).then(function () {\n          _this4.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n\n          _this4.getList();\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    }\n  }\n};",null]}