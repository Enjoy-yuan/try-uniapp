{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/attributeInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/attributeInfo.vue","mtime":1599641855630},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\";\nimport { mapState } from 'vuex';\nimport attributeFrom from \"../../../components/attributeFrom\";\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"attributeInfo\",\n  props: ['code'],\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      listLoading: false,\n      list: [],\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        attributeName: undefined\n      },\n      dialogFormVisible: false,\n      dialogFormType: undefined,\n      temp: {\n        attributeCode: undefined,\n        attributeName: undefined,\n        attributeType: undefined,\n        attributeTypeName: undefined,\n        company: undefined,\n        companyName: undefined,\n        dataType: undefined,\n        dataTypeName: undefined,\n        enumValue: undefined,\n        // 暂不需要\n        max: undefined,\n        min: undefined,\n        readType: undefined,\n        readTypeName: undefined,\n        remark: undefined\n      },\n      fileList: [],\n      tableKey: 0 //表格索引\n\n    };\n  },\n  components: {\n    attributeFrom: attributeFrom\n  },\n  computed: _objectSpread({}, mapState({\n    iot_attribute_type: function iot_attribute_type(state) {\n      return state.iotDict.iot_attribute_type;\n    },\n    iot_attribute_company: function iot_attribute_company(state) {\n      return state.iotDict.iot_attribute_company;\n    },\n    iot_data_type: function iot_data_type(state) {\n      return state.iotDict.iot_data_type;\n    },\n    iot_read_type: function iot_read_type(state) {\n      return state.iotDict.iot_read_type;\n    }\n  }), {\n    myHeader: function myHeader() {\n      return {\n        authToken: window.sessionStorage.getItem('authToken')\n      };\n    }\n  }),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getAttributeType: function getAttributeType(val) {\n      var arr = this.iot_attribute_type.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.attributeTypeName = arr[0].dictItemValue;\n    },\n    getCompany: function getCompany(val) {\n      var arr = this.iot_attribute_company.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.companyName = arr[0].dictItemValue;\n    },\n    getDataType: function getDataType(val) {\n      var arr = this.iot_data_type.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.dataTypeName = arr[0].dictItemValue;\n    },\n    getReadType: function getReadType(val) {\n      var arr = this.iot_read_type.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.readTypeName = arr[0].dictItemValue;\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      api.queryAttributes(this.code, this.listQuery).then(function (res) {\n        _this2.list = res.data;\n        _this2.list = _this2.$myFun.srmCodeToName(res.data, [_this2.iot_attribute_type, _this2.iot_data_type, _this2.iot_read_type, _this2.iot_attribute_company], ['attributeType', 'dataType', 'readType', 'company']);\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    //表格查询\n    handleQuery: throttle(function () {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.dialogFormType = 'create';\n      this.dialogFormVisible = true;\n    },\n    create: function create(val) {\n      var _this3 = this;\n\n      api.addAttribute(this.code, val).then(function () {\n        _this3.getList();\n\n        _this3.dialogFormVisible = false;\n\n        _this3.resTemp();\n\n        _this3.$notify({\n          title: '成功',\n          message: '新增成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate(attributeCode) {\n      var _this4 = this;\n\n      api.queryAttribute(this.code, attributeCode).then(function (res) {\n        _this4.temp = res.data;\n        _this4.temp.min = parseInt(res.data.min);\n        _this4.temp.max = parseInt(res.data.max);\n        _this4.dialogFormType = 'update';\n        _this4.dialogFormVisible = true;\n      });\n    },\n    update: function update(val) {\n      var _this5 = this;\n\n      api.updateAttribute(this.code, this.temp.attributeCode, val).then(function () {\n        _this5.getList();\n\n        _this5.dialogFormVisible = false;\n\n        _this5.resTemp();\n\n        _this5.$notify({\n          title: '成功',\n          message: '修改成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(attributeCode) {\n      var _this6 = this;\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteAttribute(_this6.code, attributeCode).then(function () {\n          _this6.getList();\n\n          _this6.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this6.getList();\n        });\n      }).catch(function () {\n        _this6.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //导出属性\n    handleExport: function handleExport() {\n      var _this7 = this;\n\n      var params = {\n        nativeRequest: {},\n        nativeResponse: {}\n      };\n      var data = {};\n      api.downloadModal('EXTP-IOT-0001', params, data).then(function (res) {\n        var filename = decodeURI(res.headers['content-disposition'].split(';')[1].split('=')[1]) || 'excel.xlsx';\n\n        _this7.download(res.data, filename);\n      });\n    },\n    //导入属性\n    handleImport: function handleImport() {\n      var _this8 = this;\n\n      var params = {\n        nativeRequest: {},\n        nativeResponse: {},\n        params: {}\n      };\n\n      if (!this.fileList) {\n        this.$message.warning('请选择要上传的文件！');\n        return false;\n      }\n\n      var fileFormData = new FormData();\n      fileFormData.append('file', this.fileList[0]); //filename是键，file是值，就是要传的文件，test.zip是要传的文件名\n\n      api.uploadExcel('EXTP-IOT-0001', this.fileList[0], params).then(function (res) {\n        if (res.status === 200) {\n          _this8.$message.success('上传成功');\n        }\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 30;\n    },\n    resTemp: function resTemp() {\n      this.temp = {\n        attributeCode: undefined,\n        attributeName: undefined,\n        attributeType: undefined,\n        attributeTypeName: undefined,\n        company: undefined,\n        companyName: undefined,\n        dataType: undefined,\n        dataTypeName: undefined,\n        enumValue: undefined,\n        // 暂不需要\n        max: 100,\n        min: 0,\n        readType: undefined,\n        readTypeName: undefined,\n        remark: undefined\n      };\n    },\n    // 下载文件\n    download: function download(data, filename) {\n      if (!data) {\n        return;\n      }\n\n      var url = window.URL.createObjectURL(new Blob([data]));\n      var link = document.createElement('a');\n      link.style.display = 'none';\n      link.href = url;\n      link.setAttribute('download', filename);\n      document.body.appendChild(link);\n      link.click();\n    },\n    //自定义上传\n    uploadFile: function uploadFile(item) {\n      var _this9 = this;\n\n      if (!item) {\n        this.$message.warning('请选择要上传的文件！');\n        return false;\n      }\n\n      var timestamp = new Date().getTime();\n      var params = {\n        nativeRequest: {},\n        nativeResponse: {},\n        params: {},\n        timestamp: timestamp\n      };\n      var fileFormData = new FormData();\n      fileFormData.append('file', item.file); //filename是键，file是值，就是要传的文件，test.zip是要传的文件名\n\n      api.uploadExcel('EXTP-IOT-0001', fileFormData, params).then(function (res) {\n        if (res.status === 200) {\n          _this9.$message.success('上传成功');\n        }\n      });\n    }\n  }\n};",null]}