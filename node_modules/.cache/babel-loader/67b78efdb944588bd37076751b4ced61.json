{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/equipmentMaintain/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/equipmentMaintain/index.vue","mtime":1596611178208},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import * as api from '@/api/data-base/bom' // 增、删、改api引入\nimport * as api from '@/api/project/eas/em/equipmentMaintain'; // 增、删、改api引入\n\nimport employeeSelect from '@/components/Select/employeesSelect';\nimport { DT_ORG_TYPE } from '@/utils/constant';\nimport expBaseSelect from \"../../components/expBaseSelect\";\nimport maintainPartSelect from \"../../components/maintainPartSelect\"; //保养部位\n\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport Pagination from '@/components/Pagination';\nimport teamSelect from \"../../components/teamSelect\";\nimport { selectlists } from '@/api/system/employees';\nimport { mapState } from 'vuex'; // 基本数据引入\n\nimport moment from 'moment';\nimport wxbj from \"./wxbj\";\nimport fileUpload from \"../../components/fileUpload\";\nimport { getName } from '@/utils/auth';\nexport default {\n  name: 'equipmentMaintain',\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    teamSelect: teamSelect,\n    maintainPartSelect: maintainPartSelect,\n    expBaseSelect: expBaseSelect,\n    employeeSelect: employeeSelect,\n    wxbj: wxbj,\n    fileUpload: fileUpload\n  },\n  data: function data() {\n    var _this = this;\n\n    var money = function money(rule, value, callback) {\n      if (value) {\n        var reg = /((^[1-9]\\d*)|^0)(\\.\\d{0,1}){0,1}$/;\n\n        if (reg.test(value)) {\n          callback();\n        } else {\n          return callback(new Error('由正数组成，保留1位小数，长度不能超过11'));\n        }\n      }\n    };\n\n    return {\n      pickerStartDate: {\n        disabledDate: function disabledDate(time) {\n          var endDateVal = _this.temp.realityEndTime;\n\n          if (_this.temp.realityEndTime) {\n            return time.getTime() > new Date(endDateVal).getTime();\n          }\n        }\n      },\n      pickerCloseDate: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = _this.temp.realityStartTime;\n          return time.getTime() < new Date(beginDateVal).getTime();\n        }\n      },\n      upkeepWorkOrderNumber: undefined,\n      selectlistRowA: null,\n      organizationCodeA: undefined,\n      currentTab: 'tab1',\n      timeRange: undefined,\n      checkList: [],\n      textarea: '',\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      materielData: [],\n      list: [],\n      subList: [],\n      emplList: [],\n      fromList: [],\n      total: 0,\n      totalSub: 0,\n      tableKey: [0, 1, 2, 3, 4, 5],\n      //表格索引\n      listQuery: {\n        materielCode: undefined,\n        applicant: undefined,\n        //保养负责人 auth.getName()\n        teamCode: undefined,\n        orgCode: undefined,\n        createTimeStart: undefined,\n        createTimeEnd: undefined,\n        //查询\n        currentPage: 1,\n        pageSize: 15\n      },\n      states: [],\n      listQuerySub: {\n        //查询\n        currentPage: 1,\n        pageSize: 15,\n        applicant: getName(),\n        workOrderNumber: undefined\n      },\n      temp: {\n        organizationCodeA: undefined,\n        teamCode: undefined,\n        teamName: undefined,\n        applicant: undefined,\n        applicantName: undefined,\n        //\n        entrustOuterCompanyCode: undefined,\n        //委外单位\n        entrustOuterCompanyName: undefined,\n        experienceCode: undefined,\n        //经验\n        disposeDescribe: undefined,\n        //描述\n        ifMachineHalt: undefined,\n        machineHaltTime: 0,\n        maintainLevel: undefined,\n        upkeepSpendTimeHour: undefined,\n        upkeepSpendTimeMinute: undefined,\n        upkeepCost: 0,\n        //保养费用\n        positionList: [],\n        spareList: [],\n        //备件\n        personList: [],\n        realityEndTime: undefined,\n        realityStartTime: undefined\n      },\n      positionList: [],\n      //保养部位\n      spareList: [],\n      //备件\n      personList: [],\n      //保养工时\n      subTemp: {\n        orgCode: undefined,\n        deviceCode: undefined,\n        deviceName: undefined,\n        addressName: undefined,\n        useDeptName: undefined\n      },\n      dialogFormVisible: false,\n      fromDialogStatus: '',\n      fromDialogFormVisible: false,\n      maintainDialogFormVisible: false,\n      //保养部位\n      expBaseDialogVisible: false,\n      //经验库\n      employeeDialogVisible: false,\n      //人员\n      selectFromList: null,\n      //从表选中\n      expBaseRow: null,\n      //经验库选择\n      employRow: null,\n      //人员选择\n      curChange: false,\n      //if the current row change\n      clickChange: false,\n      //if click another row\n      currentSelectedRow: null,\n      //当前选中行\n      selectedRows: [],\n      //多选时选中的所有行\n      selectEmpList: [],\n      // 维修工时选择行\n      selectPositionList: [],\n      DT_ORG_TYPE: DT_ORG_TYPE,\n      rules: {\n        disposeDescribe: [{\n          required: true,\n          message: '处理描述不能为空',\n          trigger: ['blur', 'change']\n        }],\n        experienceCode: [{\n          required: true,\n          message: '经验代码不能为空',\n          trigger: ['blur', 'change']\n        }],\n        personList: [{\n          required: true\n        }],\n        upkeepCost: [{\n          validator: money,\n          message: '由正数组成，保留1位小数，长度不能超过11',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_upkeep_worder_state: function dt_upkeep_worder_state(state) {\n      return state.eamDict.dt_upkeep_worder_state;\n    },\n    dt_upkeep_level: function dt_upkeep_level(state) {\n      return state.eamDict.dt_upkeep_level;\n    },\n    dt_bom_rank: function dt_bom_rank(state) {\n      return state.eamDict.dt_bom_rank;\n    },\n    dt_yes_or_no: function dt_yes_or_no(state) {\n      return state.eamDict.dt_yes_or_no;\n    },\n    dt_file_equipment: function dt_file_equipment(state) {\n      return state.eamDict.dt_file_equipment;\n    }\n  })),\n  watch: {\n    // 监听时间区间数组 写入到对应字段\n    'timeRange': function timeRange(value) {\n      if (value) {\n        this.listQuery.createTimeStart = value[0];\n        this.listQuery.createTimeEnd = value[1];\n      }\n    },\n    'dt_upkeep_worder_state': function dt_upkeep_worder_state(val) {\n      var value = JSON.parse(JSON.stringify(val));\n      var state = value.map(function (i) {\n        return i.dictItemKey;\n      });\n      this.states = state.filter(function (item) {\n        return item != 'ukwos_10';\n      });\n      this.getList();\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.getList();\n    this.getEmpl();\n    this.$store.dispatch('eamDict/getDicData', ['dt_yes_or_no', 'dt_bom_rank', 'dt_upkeep_worder_state', 'dt_upkeep_level', 'dt_file_equipment']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this2.setTableHeight();\n    };\n  },\n  filters: {\n    normalFilter: function normalFilter(val) {\n      return val == 'Y' ? '正常' : val == 'N' ? '异常' : '';\n    }\n  },\n  methods: {\n    // 所选维修工时\n    selectEmp: function selectEmp(val) {\n      this.selectEmpList = val;\n    },\n    selectPosition: function selectPosition(val) {\n      this.selectPositionList = val;\n    },\n    // 维修工时 删除\n    handleDeleEmp: function handleDeleEmp() {\n      var _this3 = this;\n\n      // personList\n      var arr = this.personList.filter(function (x) {\n        return _this3.selectEmpList.every(function (y) {\n          return y.rowId !== x.rowId;\n        });\n      });\n      this.personList = arr;\n    },\n    // 删除保养部位\n    handleDelePosition: function handleDelePosition() {\n      var _this4 = this;\n\n      var arr = this.positionList.filter(function (x) {\n        return _this4.selectPositionList.every(function (y) {\n          return y.rowId !== x.rowId;\n        });\n      });\n      this.positionList = arr;\n    },\n    // 维修工时 保存\n    handleSaveEmp: function handleSaveEmp() {\n      var _this5 = this;\n\n      var arr = this.personList.filter(function (i) {\n        return i.maintainSpendTime == undefined || '';\n      });\n\n      if (!arr.length) {\n        api.addSpare(this.currentSelectedRow.workOrderNumber, this.personList).then(function () {\n          _this5.$message({\n            title: '成功',\n            message: '保存成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '开始和结束时间不能为空',\n          type: 'warning'\n        });\n      }\n    },\n    // 备件使用保存\n    spareSave: function spareSave() {\n      var _this6 = this;\n\n      api.saveSpar(this.temp.spareList).then(function () {\n        _this6.$message({\n          title: '成功',\n          message: '保存成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    // 计算保养用时\n    getLaborHour: function getLaborHour(row) {\n      if (row.startTime && row.endTime) {\n        var date1 = moment(row.startTime);\n        var date2 = moment(row.endTime);\n        var diff = date2.diff(date1, 'hours');\n\n        if (diff >= 0) {\n          this.personList.forEach(function (item) {\n            if (item.maintainerCode == row.maintainerCode) {\n              item.maintainSpendTime = diff;\n            }\n          });\n        } else {\n          var target = this.personList.filter(function (item) {\n            return row.rowId === item.rowId;\n          })[0];\n          target.endTime = undefined;\n          this.$message({\n            title: '警告',\n            message: '请重新选择时间',\n            type: 'warning'\n          });\n          return;\n        }\n      }\n    },\n    // 更新保养工单\n    maintainStart: function maintainStart() {\n      var _this7 = this;\n\n      var value = 'UPKEEP_START';\n\n      if (this.selectedRows.length == 1) {\n        if (this.selectedRows[0].state !== 'ukwos_20') {\n          this.$message({\n            title: '警告',\n            message: '请选择派工状态工单',\n            type: 'warning'\n          });\n          return;\n        }\n\n        var arr = this.selectedRows.map(function (res) {\n          return res.workOrderNumber;\n        });\n        api.patchRecord(value, arr).then(function (res) {\n          if (res.status == 201) {\n            _this7.$message({\n              title: '成功',\n              message: '操作成功',\n              type: 'success'\n            });\n\n            _this7.getList();\n\n            _this7.subList = [];\n          }\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条数据',\n          type: 'warning'\n        });\n      }\n    },\n    maintainEnd: function maintainEnd() {\n      var _this8 = this;\n\n      var value = 'UPKEEP_END';\n\n      if (this.selectedRows.length == 1) {\n        if (this.selectedRows[0].state !== \"ukwos_30\") {\n          this.$message({\n            title: '警告',\n            message: '请选择已开始的工单',\n            type: 'warning'\n          });\n          return;\n        }\n\n        var arr = this.selectedRows.map(function (res) {\n          return res.workOrderNumber;\n        });\n        api.patchRecord(value, arr).then(function (res) {\n          if (res.status == 201) {\n            _this8.$message({\n              title: '成功',\n              message: '操作成功',\n              type: 'success'\n            });\n\n            _this8.getList();\n\n            _this8.subList = [];\n          }\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条数据',\n          type: 'warning'\n        });\n      }\n    },\n    //打开经验代码弹窗\n    handleExperience: function handleExperience() {\n      this.expBaseDialogVisible = true;\n    },\n    //经验父子传值\n    handleExpBase: function handleExpBase(row) {\n      this.expBaseRow = row;\n    },\n    //经验代码确认\n    expBaseCreate: function expBaseCreate() {\n      this.$set(this.temp, 'experienceCode', this.expBaseRow.experienceCode); // this.temp.experienceCode = this.expBaseRow[0].experienceCode\n\n      this.temp.disposeDescribe = this.expBaseRow.disposeDescription;\n      this.expBaseDialogVisible = false;\n    },\n    //新增经验\n    experienceCreate: function experienceCreate() {\n      var _this9 = this;\n\n      var dto = {\n        experienceType: \"et20\",\n        disposeDescription: this.temp.disposeDescribe,\n        faultDescription: '设备保养',\n        // this.temp.faultDescription\n        deviceCode: this.temp.deviceCode,\n        deviceName: this.temp.deviceName,\n        deviceType: this.temp.deviceType,\n        faultTypeName: this.temp.faultTypeName,\n        faultTypeCode: this.temp.faultTypeCode,\n        workOrderNumber: this.temp.workOrderNumber\n      };\n\n      if (this.temp.disposeDescribe) {\n        api.addExperience(dto).then(function (res) {\n          _this9.$set(_this9.temp, 'experienceCode', res.data);\n\n          _this9.$message({\n            title: '成功',\n            message: '新增经验成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请输入处理描述',\n          type: 'warning'\n        });\n        return;\n      }\n    },\n    // 人员新增\n    employeeCreate: function employeeCreate() {\n      var arr = this.employRow.map(function (item) {\n        return {\n          maintainerCode: item.employeeCode,\n          maintainerName: item.employeeName,\n          startTime: undefined,\n          endTime: undefined,\n          maintainSpendTime: undefined,\n          realitySpendTime: undefined,\n          remark: undefined\n        };\n      });\n      this.personList = this.personList.concat(arr);\n      var newArr = this.personList.filter(function (x) {\n        return arr.some(function (y) {\n          return y.employeeCode === x.employeeCode;\n        });\n      });\n      this.personList = newArr;\n      this.employeeDialogVisible = false;\n    },\n    //员工管理父子传值\n    handleEmployee: function handleEmployee(row) {\n      this.employRow = row;\n    },\n    // 获取人员下拉框信息\n    getEmpl: function getEmpl() {\n      var _this10 = this;\n\n      selectlists().then(function (res) {\n        _this10.emplList = res.data;\n      });\n    },\n    // 保养结束\n    changeTab: function changeTab() {},\n    handleCheckRow: function handleCheckRow() {},\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this11 = this;\n\n      api.queryRecords(this.listQuery, this.states).then(function (res) {\n        _this11.list = _this11.$myFun.codeToName(res.data, [_this11.dt_upkeep_worder_state, _this11.dt_yes_or_no], ['state', 'ifNormal']).list;\n\n        _this11.$nextTick(function () {\n          _this11.$refs.tb.toggleRowSelection(_this11.list[0], true);\n        });\n\n        _this11.total = res.data.pages.count;\n      });\n    },\n    getSubList: function getSubList() {\n      var _this12 = this;\n\n      api.queryRecordSub(this.listQuerySub).then(function (res) {\n        // ifNormalCN\n        _this12.subList = res.data.list;\n        _this12.totalSub = res.data.pages.count;\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {};\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n      this.subList = undefined;\n    },\n    // 保养记录\n    handleCreate: function handleCreate() {\n      var _this13 = this;\n\n      //新增按钮单击事件方法\n      this.resetTemp();\n\n      if (this.currentSelectedRow) {\n        var row = JSON.parse(JSON.stringify(this.currentSelectedRow));\n        this.subTemp = row;\n        Promise.all([api.queryOrder(row.workOrderNumber), api.querySp(this.currentSelectedRow.workOrderNumber), api.queryPerson(this.currentSelectedRow.workOrderNumber), api.queryPosition(this.currentSelectedRow.workOrderNumber)]).then(function (res) {\n          _this13.temp = res[0].data;\n          _this13.positionList = res[3].data;\n          _this13.personList = res[2].data;\n          _this13.temp.spareList = res[1].data;\n          _this13.dialogFormVisible = true;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n        return;\n      }\n    },\n    // 保养记录\n    update: function update() {\n      var _this14 = this;\n\n      this.$refs['refTemp'].validate(function (valid) {\n        if (valid) {\n          var spareList = [];\n\n          _this14.temp.spareList.forEach(function (i) {\n            {\n              spareList.push({\n                useQuantity: i.useQuantity,\n                returnQuantity: i.returnQuantity,\n                rowId: i.rowId,\n                remark: i.remark\n              });\n            }\n          });\n\n          var positionList = []; // temp.\n\n          _this14.positionList.forEach(function (i) {\n            {\n              positionList.push({\n                ifNormal: i.ifNormal,\n                maintenanceCode: i.maintenanceCode,\n                serialNumber: i.serialNumber\n              });\n            }\n          });\n\n          if (!_this14.personList.length || !positionList.length || !_this14.temp.spareList.length) {\n            _this14.$message({\n              title: '警告',\n              message: '列表不能为空',\n              type: 'warning'\n            });\n\n            return;\n          }\n\n          _this14.temp.personList = _this14.personList;\n\n          var arr = _this14.personList.filter(function (i) {\n            return i.maintainSpendTime == undefined || '';\n          });\n\n          if (arr.length) {\n            _this14.$message({\n              title: '警告',\n              message: '保养工时时间不能为空',\n              type: 'warning'\n            });\n\n            return;\n          }\n\n          _this14.temp.spareList = spareList;\n          _this14.temp.positionList = positionList;\n          api.patchRecordContent(_this14.temp.workOrderNumber, _this14.temp).then(function () {\n            _this14.dialogFormVisible = false; // this.getList()\n\n            _this14.getSubList();\n\n            _this14.$refs.tab2.getList();\n\n            _this14.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.refTemp.resetFields();\n    },\n    //从表选择框选中\n    selectFromChange: function selectFromChange(val) {\n      this.selectFromList = val;\n\n      if (val.length > 1) {\n        this.$refs.tb2.clearSelection();\n        this.$refs.tb2.toggleRowSelection(val[val.length - 1]);\n      }\n\n      this.$refs.tb2.setCurrentRow(this.selectFromList[0]);\n    },\n    handleCreateFrom: function handleCreateFrom() {\n      this.resetFromTemp();\n\n      if (this.selectedRows) {\n        this.fromDialogStatus = 'create';\n        this.fromDialogFormVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择产品',\n          type: 'warning'\n        });\n      }\n    },\n    createMaintain: function createMaintain() {\n      var val = JSON.parse(JSON.stringify(this.$refs.maintainPartSelect.currentSelect));\n      this.maintainDialogFormVisible = false;\n      this.$refs.maintainPartSelect.currentSelect = [];\n\n      if (val) {\n        this.positionList = this.positionList.concat(val);\n        var newArr = this.positionList.filter(function (x) {\n          return val.some(function (y) {\n            return y.maintenanceCode === x.maintenanceCode;\n          });\n        });\n        this.positionList = newArr;\n      } else {\n        return;\n      }\n    },\n    // 删除备件使用\n    handleDelectSpareFrom: function handleDelectSpareFrom() {},\n    rowClickFrom: function rowClickFrom(val) {\n      this.$refs.tb2.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    //点击表格某一行\n    rowClick: function rowClick(row) {\n      if (JSON.stringify(this.currentSelectedRow) === JSON.stringify(row)) {\n        this.clickChange = false;\n      } else {\n        this.clickChange = true;\n      }\n\n      this.currentSelectedRow = row;\n      var selectStatus = this.checkSelectStatus(null, row);\n\n      if (!this.currentSelectedRow) {\n        this.subList = null;\n        return;\n      } else {\n        if (selectStatus) {\n          this.currentSelectedRow = row;\n          this.$refs.tb.toggleRowSelection(row, true);\n          this.listQuerySub.workOrderNumber = this.currentSelectedRow.workOrderNumber;\n          this.upkeepWorkOrderNumber = this.currentSelectedRow.workOrderNumber;\n          this.selectlistRowA = this.currentSelectedRow;\n          this.organizationCodeA = this.currentSelectedRow.orgCode;\n          this.getSubList();\n        } else {\n          if (this.clickChange) {\n            if (this.currentSelectedRow) {\n              this.$refs.tb.setCurrentRow(this.currentSelectedRow);\n              this.listQuerySub.workOrderNumber = this.currentSelectedRow.workOrderNumber;\n              this.upkeepWorkOrderNumber = this.currentSelectedRow.workOrderNumber;\n              this.selectlistRowA = this.currentSelectedRow;\n              this.organizationCodeA = this.currentSelectedRow.orgCode;\n              this.getSubList();\n            }\n          }\n        }\n      }\n    },\n    selectChange: function selectChange(val) {\n      if (val.length > 0 && this.currentSelectedRow) {\n        this.selectedRows = val;\n\n        if (this.clickChange) {\n          this.upkeepWorkOrderNumber = this.currentSelectedRow.workOrderNumber;\n          this.selectlistRowA = this.currentSelectedRow;\n          this.$refs.tb.setCurrentRow(this.currentSelectedRow);\n          this.organizationCodeA = this.currentSelectedRow.orgCode;\n          this.listQuerySub.workOrderNumber = this.currentSelectedRow.workOrderNumber;\n          this.getSubList();\n        } else {\n          this.subList = null;\n        }\n      }\n    },\n    tableSelect: function tableSelect(rows, row) {\n      var selectStatus = this.checkSelectStatus(rows);\n\n      if (JSON.stringify(this.currentSelectedRow) === JSON.stringify(row)) {\n        this.clickChange = false;\n      } else {\n        this.clickChange = true;\n        this.currentSelectedRow = row;\n      }\n\n      if (selectStatus) {\n        this.currentSelectedRow = row;\n      } else {\n        this.curChange = false;\n      }\n    },\n    checkSelectStatus: function checkSelectStatus(rows, row) {\n      var checkStatus = false;\n\n      if (rows) {\n        if (this.selectedRows.length <= rows.length && rows.length != 0) {\n          checkStatus = true;\n        }\n      }\n\n      if (row) {\n        if (JSON.stringify(this.selectedRows).indexOf(JSON.stringify(row)) == -1) {\n          checkStatus = true;\n        }\n      }\n\n      return checkStatus;\n    }\n  }\n};",null]}