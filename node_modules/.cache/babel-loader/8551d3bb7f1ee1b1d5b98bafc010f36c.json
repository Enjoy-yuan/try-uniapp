{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuan/Documents/大唐广电/dt-web/src/store/modules/user.js","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/store/modules/user.js","mtime":1597366839795},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { getTokenId, getCatalog } from '@/api/login';\nimport * as auth from '@/utils/auth';\nimport router, { resetRouter } from '@/router';\nimport { changeUserInfo, relation } from '@/api/system/user';\nvar state = {\n  user: '',\n  status: '',\n  code: '',\n  tokenTime: auth.getTokenTime(),\n  token: auth.getToken(),\n  addRouters: '',\n  name: auth.getName(),\n  passWord: auth.getPassWord(),\n  menu: auth.getCatalogs(),\n  avatar: '',\n  introduction: '',\n  superRoles: false,\n  roles: [],\n  domainId: auth.getDomainId(),\n  domainName: auth.getDomainName(),\n  IssuedAt: auth.getIssuedAt(),\n  RealName: auth.getRealName(),\n  domainCode: auth.getDomainCode(),\n  domainCodeName: auth.getDomainCodeName(),\n  setting: {\n    articlePlatform: []\n  },\n  theme: auth.getTheme()\n};\nvar mutations = {\n  SET_CODE: function SET_CODE(state, code) {\n    state.code = code;\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_TOKENTIME: function SET_TOKENTIME(state, tokenTime) {\n    state.tokenTime = tokenTime;\n  },\n  SET_MENU: function SET_MENU(state, menu) {\n    state.menu = menu;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_SETTING: function SET_SETTING(state, setting) {\n    state.setting = setting;\n  },\n  SET_STATUS: function SET_STATUS(state, status) {\n    state.status = status;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_PASSWORD: function SET_PASSWORD(state, password) {\n    state.passWord = password;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_SUPER_ROLES: function SET_SUPER_ROLES(state, superRoles) {\n    state.superRoles = superRoles;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  },\n  SET_DOMAINID: function SET_DOMAINID(state, domainId) {\n    state.domainId = domainId;\n  },\n  SET_DOMAINNAME: function SET_DOMAINNAME(state, domainName) {\n    state.domainName = domainName;\n  },\n  SET_ISSUEDAT: function SET_ISSUEDAT(state, issuedAt) {\n    state.issuedAt = issuedAt;\n  },\n  SET_DOMAINCODE: function SET_DOMAINCODE(state, domainCode) {\n    state.domainCode = domainCode;\n  },\n  SET_DOMAINCODENAME: function SET_DOMAINCODENAME(state, domainCodeName) {\n    state.domainCodeName = domainCodeName;\n  },\n  SET_THEME: function SET_THEME(state, theme) {\n    state.theme = theme;\n  }\n};\nvar actions = {\n  // user login\n  // login({ commit }, userInfo) {\n  //     const { username, password } = userInfo\n  //     return new Promise((resolve, reject) => {\n  //     login({ username: username.trim(), password: password }).then(response => {\n  //         const { data } = response\n  //         commit('SET_TOKEN', data.token)\n  //         setToken(data.token)\n  //         resolve()\n  //     }).catch(error => {\n  //         reject(error)\n  //     })\n  //     })\n  // },\n  //用户登录\n  LoginByUsername: function LoginByUsername(_ref, userInfo) {\n    var commit = _ref.commit;\n    var auths = {\n      auth: {\n        identity: {\n          methods: ['password'],\n          password: {\n            user: {\n              name: userInfo.username,\n              password: userInfo.password\n            }\n          }\n        }\n      }\n    };\n    commit('SET_NAME', userInfo.username);\n    commit('SET_PASSWORD', userInfo.password);\n    return new Promise(function (resolve, reject) {\n      //获取刷新token\n      getTokenId(auths).then(function (res) {\n        commit('SET_DOMAINID', res.data.token.domainId);\n        commit('SET_DOMAINNAME', res.data.token.domainName);\n        commit('SET_ISSUEDAT', res.data.token.issuedAt);\n        commit('SET_DOMAINCODE', res.data.token.domainCode);\n        commit('SET_DOMAINCODENAME', res.data.token.domainCodeName);\n        commit('SET_THEME', res.data.token.theme);\n        auth.setDomainId(res.data.token.domainId);\n        auth.setDomainName(res.data.token.domainName);\n        auth.setIssuedAt(res.data.token.issuedAt);\n        auth.setRealName(res.data.token.realName);\n        auth.setDomainCode(res.data.token.domainCode);\n        auth.setDomainCodeName(res.data.token.domainCodeName);\n        auth.setTheme(res.data.token.theme);\n        var userToken = {\n          auth: {\n            identity: {\n              methods: ['token'],\n              token: {\n                id: res.headers['x-subject-token']\n              }\n            }\n          } //获取访问token\n\n        };\n        getTokenId(userToken).then(function (response) {\n          commit('SET_TOKEN', response.headers['x-subject-token']);\n          commit('SET_TOKENTIME', response.data.token.expireAt);\n          auth.setTokenTime(response.data.token.expireAt);\n          auth.setToken(response.headers['x-subject-token']);\n          auth.setName(userInfo.username);\n          auth.setPassWord(userInfo.password);\n          var queryRole = {\n            type: 1,\n            currentPage: 1,\n            pageSize: 1000,\n            page: 1\n          };\n          relation(userInfo.username, queryRole).then(function (resr) {\n            // commit('SET_ROLES', resr.data.list);\n            var superRole = false;\n            resr.data.list.forEach(function (item) {\n              if (item.roleCode === 'WMS-SUPER') {\n                commit('SET_SUPER_ROLES', true);\n                superRole = true;\n              }\n            });\n\n            if (!superRole) {\n              commit('SET_SUPER_ROLES', false);\n            }\n          });\n          resolve();\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  //获取菜单资源\n  GetMenu: function GetMenu() {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      getCatalog(auth.getName()).then(function (response) {\n        // console.log(response.data.catalogVMs[0])\n        // auth.setCatalogs(response.data.catalogVMs[0])\n        // console.log(auth.getCatalogs())\n        // console.log('SET_MENU存在')\n        resolve(response.data.catalogVMs);\n      }).catch(function (error) {\n        auth.removeToken();\n\n        _this.$router.push({\n          path: '/'\n        }); //重定向到首页\n\n\n        reject(error);\n      });\n    });\n  },\n  // 用户退出\n  logout: function logout(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      auth.removeToken();\n      auth.removeAll();\n      resetRouter();\n      resolve(); //   logout(state.token).then(() => {\n      //     commit('SET_TOKEN', '')\n      //     commit('SET_ROLES', [])\n      //     removeToken()\n      //     resetRouter()\n      //     resolve()\n      //   }).catch(error => {\n      //     reject(error)\n      //   })\n    });\n  },\n  // 删除token\n  resetToken: function resetToken(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      auth.removeToken();\n      resolve();\n    });\n  },\n  // 动态修改权限\n  changeRoles: function changeRoles(_ref4, role) {\n    var commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _ref6, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                auth.setToken(token);\n                _context.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _ref6 = _context.sent;\n                roles = _ref6.roles;\n                resetRouter(); // generate accessible routes map based on roles\n\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n                // dynamically add accessible routes\n                router.addRoutes(accessRoutes); // reset visited views and cached views\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  },\n  //修改用户信息\n  ChangeUserInfo: function ChangeUserInfo(_ref7, userDTO) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      changeUserInfo(userDTO).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        console.log(commit);\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}