{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/productionExecution/productionDone/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/MES/productionExecution/productionDone/index.vue","mtime":1596610933585},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/mes/dataBase/completionOfProduction';\nimport Pagination from '@/components/Pagination';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'completionOfProduction',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      list: [],\n      options: [],\n      productionOptions: [{\n        value: '贴片',\n        label: 'PASTER'\n      }, {\n        value: '涂覆',\n        label: 'DEPOSITING'\n      }, {\n        value: '组装',\n        label: 'ASSEMBLE'\n      }],\n      listPaster: [],\n      listDepositing: [],\n      listAssemble: [],\n      materiaList: [],\n      hiddenPatch: false,\n      hiddenCoating: false,\n      hiddenAssemble: false,\n      total: 0,\n      total1: 0,\n      total2: 0,\n      theight: 0,\n      //表格高度\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        productionSegment: undefined,\n        workOrderCode: undefined\n      },\n      temp: {\n        workOrderCode: undefined,\n        productCode: undefined,\n        planNum: undefined,\n        completeNum: undefined,\n        unCompleteNum: undefined,\n        waitFixNum: undefined,\n        fixQualifiedNum: undefined,\n        scrapNum: undefined\n      },\n      listCount: [],\n      showPaster: true,\n      showDepositing: false,\n      showAssemble: false,\n      tableKey: [0, 1, 2]\n    };\n  },\n  created: function created() {// this.getList()\n  },\n  filters: {\n    splitState: function splitState(e) {\n      if (e === '1') {\n        return '是';\n      } else {\n        return '否';\n      }\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    dt_production_section: function dt_production_section(state) {\n      return state.mesDict.dt_production_section;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n    this.getOptions();\n    this.$store.dispatch('mesDict/getDicData', ['dt_production_section']);\n  },\n  methods: {\n    getList: function getList() {},\n    getTemp: function getTemp() {\n      var _this2 = this;\n\n      if (this.listQuery.productionSegment == 'PASTER') {\n        var stationCode = 'paster-tf003';\n        api.getRecord(this.listQuery.workOrderCode, stationCode).then(function (res) {\n          _this2.temp = res.data;\n        });\n      } else if (this.listQuery.productionSegment == 'DEPOSITING') {\n        var _stationCode = 'smear-tf004';\n        api.getRecord(this.listQuery.workOrderCode, _stationCode).then(function (res) {\n          _this2.temp = res.data;\n        });\n      } else if (this.listQuery.productionSegment == 'ASSEMBLE') {\n        var _stationCode2 = 'assemble-tf002';\n        api.getRecord(this.listQuery.workOrderCode, _stationCode2).then(function (res) {\n          _this2.temp = res.data;\n        });\n      }\n    },\n    getSummaries: function getSummaries(param) {\n      var _this3 = this;\n\n      var columns = param.columns;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计'; //这里就是显示你要写的啥名字,是合计还是汇总什么\n\n          return;\n        }\n\n        switch (column.property) {\n          //column.property是prop=\"highQuality\" prop里面的东西,实在不知道可以打印出来是什么\n          case 'pcb_b':\n            //这是是根据prop来判断是那一列的数据\n            sums[index] = _this3.listCount.pcb_b; //sums[index]是固定写法  this.getAllTotalData.levelOneTotal 表示的是每一空格是要写什么内容,this.getAllTotalData就是后台的数据\n\n            break;\n\n          case 'solderPastePrint_b':\n            sums[index] = _this3.listCount.solderPastePrint_b;\n            break;\n\n          case 'solderPasteDetection_b':\n            sums[index] = _this3.listCount.solderPasteDetection_b;\n            break;\n\n          case 'paster_b':\n            sums[index] = _this3.listCount.paster_b;\n            break;\n\n          case 'reflowSoldering_b':\n            sums[index] = _this3.listCount.reflowSoldering_b;\n            break;\n\n          case 'opticsDetection_b':\n            sums[index] = _this3.listCount.opticsDetection_b;\n            break;\n\n          case 'downBoard_b':\n            sums[index] = _this3.listCount.downBoard_b;\n            break;\n\n          case 'pcb_a':\n            sums[index] = _this3.listCount.pcb_a;\n            break;\n\n          case 'solderPastePrint_a':\n            sums[index] = _this3.listCount.solderPastePrint_a;\n            break;\n\n          case 'solderPasteDetection_a':\n            sums[index] = _this3.listCount.solderPasteDetection_a;\n            break;\n\n          case 'paster_a':\n            sums[index] = _this3.listCount.paster_a;\n            break;\n\n          case 'reflowSoldering_a':\n            sums[index] = _this3.listCount.reflowSoldering_a;\n            break;\n\n          case 'opticsDetection_a':\n            sums[index] = _this3.listCount.opticsDetection_a;\n            break;\n\n          case 'downBoard_a':\n            sums[index] = _this3.listCount.downBoard_a;\n            break;\n\n          case 'depositing_a':\n            sums[index] = _this3.listCount.depositing_a;\n            break;\n\n          case 'depositingDetection':\n            sums[index] = _this3.listCount.depositingDetection;\n            break;\n\n          case 'divideBoard':\n            sums[index] = _this3.listCount.divideBoard;\n            break;\n\n          case 'moduleMeasure':\n            sums[index] = _this3.listCount.moduleMeasure;\n            break;\n\n          case 'labourPlugIn':\n            sums[index] = _this3.listCount.labourPlugIn;\n            break;\n\n          case 'waveSoldering':\n            sums[index] = _this3.listCount.waveSoldering;\n            break;\n\n          case 'weldingSpotDetection':\n            sums[index] = _this3.listCount.weldingSpotDetection;\n            break;\n\n          case 'depositing_b':\n            sums[index] = _this3.listCount.depositing_b;\n            break;\n\n          case 'radiatorDepositingTcg':\n            sums[index] = _this3.listCount.radiatorDepositingTcg;\n            break;\n\n          case 'depositingRiveting':\n            sums[index] = _this3.listCount.depositingRiveting;\n            break;\n\n          case 'shellRiveting':\n            sums[index] = _this3.listCount.shellRiveting;\n            break;\n\n          case 'functionDetection':\n            sums[index] = _this3.listCount.functionDetection;\n            break;\n\n          case 'optesthesiaDetection':\n            sums[index] = _this3.listCount.optesthesiaDetection;\n            break;\n\n          default:\n            break;\n        }\n      });\n      return sums;\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleQuery: function handleQuery() {\n      //查询\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    selectOption: function selectOption() {},\n    getOptions: function getOptions() {\n      var _this4 = this;\n\n      var workOrderState = 'work_order20';\n      api.queryWorkOrderCode(workOrderState).then(function (res) {\n        _this4.options = res.data;\n      });\n    },\n    handleCertain: function handleCertain() {\n      var _this5 = this;\n\n      if (!this.listQuery.productionSegment) {\n        this.$message({\n          title: '警告',\n          message: '请选择工段',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      if (this.listQuery.productionSegment == 'PASTER') {\n        this.showPaster = true;\n        this.showDepositing = false;\n        this.showAssemble = false;\n        api.queryRecords(this.listQuery).then(function (res) {\n          _this5.listPaster = res.data.list;\n          _this5.listCount = res.data.count;\n        });\n      } else if (this.listQuery.productionSegment == 'DEPOSITING') {\n        this.showDepositing = true;\n        this.showPaster = false;\n        this.showAssemble = false;\n        api.queryRecords(this.listQuery).then(function (res) {\n          _this5.listDepositing = res.data.list;\n          _this5.listCount = res.data.count;\n        });\n      } else if (this.listQuery.productionSegment == 'ASSEMBLE') {\n        this.showAssemble = true;\n        this.showDepositing = false;\n        this.showPaster = false;\n        api.queryRecords(this.listQuery).then(function (res) {\n          _this5.listAssemble = res.data.list;\n          _this5.listCount = res.data.count;\n        });\n      }\n\n      if (this.listQuery.workOrderCode) {\n        this.getTemp();\n      } else {\n        this.temp = {\n          workOrderCode: undefined,\n          productCode: undefined,\n          planNum: undefined,\n          completeNum: undefined,\n          unCompleteNum: undefined,\n          waitFixNum: undefined,\n          fixQualifiedNum: undefined,\n          scrapNum: undefined\n        };\n      }\n    },\n    handleCompletion: function handleCompletion() {\n      var _this6 = this;\n\n      if (this.listQuery.workOrderCode && this.temp.workOrderCode) {\n        var dto = {\n          method: 'COMPLETED',\n          qualifiedNumber: this.temp.qualifiedNum,\n          scrapNumber: this.temp.scrapNum,\n          unCompleteNumber: this.temp.unCompleteNum\n        };\n        api.addRecord(this.listQuery.workOrderCode, dto).then(function () {\n          _this6.$message({\n            title: '成功',\n            message: '完工成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this6.listQuery.workOrderCode = undefined;\n\n          _this6.getOptions();\n\n          _this6.resetTemp();\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择随工单号',\n          type: 'warning'\n        });\n      }\n    },\n    handleCompulsoryCompletion: function handleCompulsoryCompletion() {\n      var _this7 = this;\n\n      if (this.listQuery.workOrderCode && this.temp.workOrderCode) {\n        var dto = {\n          method: 'FORCED_COMPLETED',\n          qualifiedNumber: this.temp.qualifiedNum,\n          scrapNumber: this.temp.scrapNum,\n          unCompleteNumber: this.temp.unCompleteNum\n        };\n        api.addRecord(this.listQuery.workOrderCode, dto).then(function () {\n          _this7.$message({\n            title: '成功',\n            message: '完工成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this7.listQuery.workOrderCode = undefined;\n\n          _this7.getOptions();\n\n          _this7.resetTemp();\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择随工单号',\n          type: 'warning'\n        });\n      }\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        workOrderCode: undefined,\n        productCode: undefined,\n        planNum: undefined,\n        completeNum: undefined,\n        unCompleteNum: undefined,\n        waitFixNum: undefined,\n        fixQualifiedNum: undefined,\n        scrapNum: undefined\n      };\n      this.listPaster = [];\n      this.listDepositing = [];\n      this.listAssemble = [];\n    }\n  }\n};",null]}