{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/actuarialList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/actuarialList.vue","mtime":1599136050802},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/srm/priceManage/actuarialDetailCost\";\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport costActuarial from '@/components/Dialog/costActuarial'; //供应商选择\n// import * as api from \"@/api/system/role\"\n\nimport Pagination from \"@/components/Pagination\";\nimport dialogPreview from \"./dialog/dialogPreview\";\nimport { mapState } from 'vuex'; // import { mapState } from \"vuex\"\n\nexport default {\n  name: \"actuarialList\",\n  components: {\n    caiGou: caiGou,\n    Pagination: Pagination,\n    dialogPreview: dialogPreview,\n    costActuarial: costActuarial\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      isSingle: false,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      dataList: [],\n      total: 0,\n      listQuery: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        orgCode: null,\n        supplierCode: null,\n        supplierName: null,\n        quoteNo: null,\n        state: null,\n        materielName: null,\n        materielCode: null\n      },\n      DICT_CODE: DICT_CODE,\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: [],\n      //多选时选中的所有行\n      tableKey: 0,\n      //表格索引\n      oprateBtnConfig: [{\n        id: 0,\n        class: 'filter-item',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleAdd',\n        name: '新增'\n      }, {\n        id: 1,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-edit-outline',\n        clickMethod: 'handlePublish',\n        name: '发布'\n      }, {\n        id: 2,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-plus',\n        clickMethod: 'handlePreview',\n        name: '精算预览'\n      }],\n      tableConfig: [{\n        label: '序号',\n        prop: 'rowId',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '状态',\n        prop: 'stateCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '精算单号',\n        prop: 'actuarialNo',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '报价单号',\n        prop: 'quotationNo',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '零件图号',\n        prop: 'mapNo',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '特殊区分',\n        prop: 'specialDistinction',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '零件名称',\n        prop: 'materielName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料分类',\n        prop: 'materielClassName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商',\n        prop: 'supplierCode',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商名称',\n        prop: 'supplierName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商报价',\n        prop: 'supplierQuote',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '精算价格',\n        prop: 'actuarialPrice',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '要求价格',\n        prop: 'prop12',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '报价日期',\n        prop: 'quotedDate',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '价格生效日期',\n        prop: 'validTimeStart',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '价格失效日期',\n        prop: 'validTimeEnd',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商确认时间',\n        prop: 'supplierConfirmationTime',\n        align: 'center',\n        width: '120'\n      }]\n    };\n  },\n  created: function created() {},\n  computed: _objectSpread({}, mapState({\n    dt_srm_p0: function dt_srm_p0(state) {\n      return state.dict.dt_srm_p0;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_p0\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 2;\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecordsMain(this.listQuery).then(function (res) {\n        var options = [_this2.dt_srm_p0];\n        res.data.list = _this2.$myFun.srmCodeToName(res.data.list, options, ['state']);\n        _this2.dataList = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n      console.log(this.listQuery);\n    },\n    //表格显示条数变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //表格当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    //操作按钮事件\n    oprateClick: function oprateClick(id) {\n      switch (id) {\n        case 0:\n          {\n            //新增\n            this.handleAdd();\n            break;\n          }\n\n        case 1:\n          {\n            //发布\n            console.log('发布');\n            this.handlePublish();\n            break;\n          }\n\n        case 2:\n          {\n            //预览\n            this.handlePreview();\n            break;\n          }\n      }\n    },\n    //新增按钮\n    handleAdd: function handleAdd() {\n      console.log('新增');\n      this.$emit('setFormationState', 'add');\n    },\n    //发布按钮\n    handlePublish: function handlePublish() {\n      var _this3 = this;\n\n      if (this.selectedRows && this.selectedRows.length > 0) {\n        console.log('发布');\n        this.$confirm('发布后将向相关供应商推送报价通知,是否发布勾选的报价通知?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var dto = {\n            rowIds: []\n          };\n\n          _this3.selectedRows.forEach(function (val, index) {\n            dto.rowIds[index] = val.rowId;\n          });\n\n          api.effectRecords(dto).then(function () {\n            _this3.$message({\n              title: '成功',\n              message: '发布成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this3.getList();\n          });\n        }).catch(function () {\n          _this3.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先选择信息'\n        });\n      }\n    },\n    //表格操作编辑\n    handleUpdate: function handleUpdate(index, row) {\n      console.log('编辑', index, row);\n      this.$emit('setFormationState', 'edit', row);\n    },\n    //表格操作删除\n    handleDelete: function handleDelete(index, row) {\n      var _this4 = this;\n\n      console.log('删除', index, row);\n      this.$confirm('确认要删除该数据项吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        //api\n        api.deleteRecord(row.rowId).then(function () {\n          _this4.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n\n          _this4.getList();\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n    //表格操作预览\n    handlePreview: function handlePreview() {\n      console.log('预览', this.selectedRows);\n\n      if (this.selectedRows && this.selectedRows.length == 1) {\n        this.$refs.cost.dialogVisible = true;\n        this.$refs.cost.initData(this.selectedRows);\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先选择一条信息'\n        });\n      }\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        } else if (val.length === 0) {\n          this.selectedRows = val;\n          this.currentSelectedRow = null;\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    showGys: function showGys() {\n      this.$refs.refGys.dialogVisible = true;\n    },\n    //供应商确认\n    handleGysClick: function handleGysClick(gysRows) {\n      console.log(gysRows);\n      this.listQuery.supplierCode = gysRows[0].supplierCode;\n      this.$set(this.listQuery, 'supplierName', gysRows[0].supplierName);\n    }\n  }\n};",null]}