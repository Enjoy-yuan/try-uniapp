{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/projectCenter/tabs/mainInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/projectCenter/tabs/mainInfo.vue","mtime":1596611178232},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/PM/gatewayProducts\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"gatewayProductsMainInfo\",\n  props: ['code'],\n  data: function data() {\n    return {\n      dialogFormVisible: false,\n      form: {\n        gatewayCode: undefined,\n        gatewayName: undefined,\n        authentication: undefined,\n        dataFormat: undefined,\n        nodeType: undefined,\n        isTls: 0,\n        remark: undefined\n      },\n      temp: {\n        gatewayCode: undefined,\n        gatewayName: undefined,\n        authentication: undefined,\n        dataFormat: undefined,\n        nodeType: undefined,\n        isTls: undefined,\n        remark: undefined\n      },\n      rules: {\n        gatewayCode: [{\n          required: true,\n          message: '网关产品编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字组成，长度为32',\n          trigger: 'blur'\n        }],\n        gatewayName: [{\n          required: true,\n          message: '网关产品名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[\\u4e00-\\u9fa5a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字及中文组成',\n          trigger: 'blur'\n        }],\n        authentication: [{\n          required: true,\n          message: '请选择认证方式',\n          trigger: 'change'\n        }],\n        dataFormat: [{\n          required: true,\n          message: '请选择数据格式',\n          trigger: 'change'\n        }],\n        nodeType: [{\n          required: true,\n          message: '请选择节点类型',\n          trigger: 'change'\n        }],\n        remark: [{\n          max: 100,\n          message: '长度不大于100字',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_authentication: function iot_authentication(state) {\n      return state.iotDict.iot_authentication;\n    },\n    iot_data_type: function iot_data_type(state) {\n      return state.iotDict.iot_data_type;\n    },\n    iot_node_type: function iot_node_type(state) {\n      return state.iotDict.iot_node_type;\n    }\n  })),\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      if (this.$route.name == \"gatewayProducts\") {\n        api.queryRecord(this.code).then(function (res) {\n          var options = [_this.iot_authentication, _this.iot_data_type, _this.iot_node_type];\n          res.data = _this.$myFun.codeToNameS(res.data, options, ['authentication', 'dataFormat', 'nodeType']);\n          _this.form = res.data;\n          _this.form.isTlsCN = _this.form.isTls == 1 ? '是' : '否';\n        });\n      }\n    },\n    handleUpdate: function handleUpdate() {\n      this.dialogFormVisible = true;\n      this.temp = JSON.parse(JSON.stringify(this.form));\n    },\n    update: throttle(function () {\n      var _this2 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this2.code, _this2.temp).then(function () {\n            _this2.getList();\n\n            _this2.dialogFormVisible = false;\n\n            _this2.resetTemp();\n\n            _this2.$notify({\n              title: '成功',\n              message: '修改成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    handleUpdateFile: function handleUpdateFile() {\n      this.$message({\n        title: this.$t('message.warning'),\n        message: \"此功能暂未开放,敬请期待!\",\n        type: \"warning\"\n      });\n      return;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {};\n    }\n  }\n};",null]}