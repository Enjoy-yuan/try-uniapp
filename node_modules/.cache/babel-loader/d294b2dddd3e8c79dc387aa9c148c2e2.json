{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/tab/tabDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/tab/tabDetail.vue","mtime":1596610933943},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { getPropsalDetail, recommendSc, createRecords } from \"@/api/project/srm/supplierManage/supplierAccess/platformNote\";\nimport Pagination from \"@/components/Pagination\"; // 分页组件\n\nexport default {\n  name: 'tabDetail',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      spanArr: [],\n      theight: 0,\n      total: 0,\n      listQuery: {\n        pageSize: 10,\n        currentPage: 1\n      },\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: [],\n      //多选时选中的所有行\n      tableData: [],\n      setData: null,\n      oprateBtnConfig: [{\n        id: 0,\n        class: 'filter-item',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleSet',\n        name: '批量设置'\n      }, {\n        id: 1,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleCreate',\n        name: '生成'\n      }],\n      tableConfig: [{\n        label: '提案号',\n        prop: 'proposalNo',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '供应商名称',\n        prop: 'supplierName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料分类',\n        prop: 'materielClassName',\n        align: 'center',\n        width: 'auto'\n      }, //wu\n      {\n        label: '系列',\n        prop: 'platformSeriesCN',\n        align: 'center',\n        width: 'auto'\n      }, //wu\n      {\n        label: '定位',\n        prop: 'positionCN',\n        align: 'center',\n        width: 'auto'\n      }, //wu\n      {\n        label: '评价结论',\n        prop: 'evaluateModel',\n        width: '130',\n        align: 'center'\n      }, {\n        type: 'checkbox',\n        label: '资质是否合格',\n        prop: 'qualification',\n        align: 'center'\n      }, {\n        type: 'checkbox',\n        label: '是否引入',\n        prop: 'introduction',\n        align: 'center'\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_srm_pae',\n        label: '资质类型',\n        prop: 'qualifiedType',\n        align: 'center',\n        width: '130'\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_srm_pao',\n        label: '引入类型',\n        prop: 'introduceType',\n        align: 'center',\n        width: '130'\n      }, {\n        type: 'inputBtnRecommend',\n        label: '分配供应商编码',\n        prop: 'supplierCode',\n        align: 'center',\n        width: '180'\n      }, //wu\n      {\n        label: '准入评价时间',\n        prop: 'no3',\n        align: 'center',\n        width: '150'\n      }, //wu\n      {\n        label: '准入评价分数',\n        prop: 'score',\n        align: 'center',\n        width: '120'\n      }, //wu\n      {\n        label: '准入评价等级',\n        prop: 'grade',\n        align: 'center',\n        width: '120'\n      }, //wu\n      {\n        label: '准入评价人',\n        prop: 'evaluationPerson',\n        align: 'center',\n        width: '120' //wu\n\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pam: function dt_srm_pam(state) {\n      return state.dict.dt_srm_pam;\n    },\n    //综合评价等级\n    dt_srm_pae: function dt_srm_pae(state) {\n      return state.dict.dt_srm_pae;\n    },\n    //资质类型\n    dt_cate_platformSeries: function dt_cate_platformSeries(state) {\n      return state.srmBisSelect.dt_cate_platformSeries;\n    },\n    //平台系列\n    dt_srm_pad: function dt_srm_pad(state) {\n      return state.dict.dt_srm_pad;\n    },\n    //定位\n    dt_srm_pao: function dt_srm_pao(state) {\n      return state.dict.dt_srm_pao;\n    } //引入类型\n\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pam\", \"dt_srm_pae\", \"dt_srm_pad\", \"dt_srm_pao\"]);\n    this.$store.dispatch(\"srmBisSelect/getBisData\", [\"dt_cate_platformSeries\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 70;\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      getPropsalDetail(this.listQuery).then(function (res) {\n        var options = [_this2.dt_cate_platformSeries.data, _this2.dt_srm_pad];\n        res.data = _this2.$myFun.transCodeToName(res.data, options, [['platformSeries', 'code', 'name'], 'position']);\n        _this2.tableData = res.data.list;\n        _this2.total = res.data.pages.count;\n\n        _this2.getSpanArr(_this2.tableData);\n      });\n    },\n    getSpanArr: function getSpanArr(data) {\n      data.sort(this.compareObj(\"supplierRowId\"));\n\n      for (var i = 0; i < data.length; i++) {\n        if (i === 0) {\n          this.spanArr.push(1);\n          this.pos = 0;\n        } else {\n          // 判断当前元素与上一个元素是否相同\n          if (data[i].supplierRowId === data[i - 1].supplierRowId) {\n            this.spanArr[this.pos] += 1;\n            this.spanArr.push(0);\n          } else {\n            this.spanArr.push(1);\n            this.pos = i;\n          }\n        }\n      }\n    },\n    compareObj: function compareObj(prop) {\n      return function (obj1, obj2) {\n        var val1 = obj1[prop];\n        var val2 = obj2[prop];\n\n        if (val1 < val2) {\n          return -1;\n        } else if (val1 > val2) {\n          return 1;\n        } else {\n          return 0;\n        }\n      };\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (columnIndex === 1 || columnIndex === 4 || columnIndex === 9 || columnIndex === 10 || columnIndex === 11 || columnIndex === 12 || columnIndex === 13) {\n        var _row = this.spanArr[rowIndex];\n\n        var _col = _row > 0 ? 1 : 0;\n\n        return {\n          rowspan: _row,\n          colspan: _col\n        };\n      }\n    },\n    //操作按钮事件\n    oprateClick: function oprateClick(id) {\n      switch (id) {\n        case 0:\n          {\n            this.handleSet();\n            break;\n          }\n\n        case 1:\n          {\n            this.handleCreate();\n            break;\n          }\n      }\n    },\n    handleSet: function handleSet() {\n      this.$emit('handleSet');\n    },\n    handleSetData: function handleSetData(sdata) {\n      var _this3 = this;\n\n      this.setData = sdata;\n      this.tableData.forEach(function (item, index) {\n        for (var obj in sdata) {\n          _this3.$set(_this3.tableData[index], obj, sdata[obj]);\n        }\n      });\n    },\n    handleCreate: function handleCreate() {\n      var _this4 = this;\n\n      if (this.selectedRows) {\n        if (this.selectedRows.length > 0) {\n          var createable = true;\n          this.selectedRows.forEach(function (item) {\n            if (!item.supplierCode || !item.qualifiedType || !item.introduceType) {\n              createable = false;\n            }\n          });\n\n          if (createable) {\n            var rowIdArr = [];\n            var oprateArr = [];\n            this.selectedRows.forEach(function (item, index) {\n              if (index === 0) {\n                rowIdArr.push(item.supplierRowId);\n                oprateArr.push([]);\n                oprateArr[0].push(item);\n              } else {\n                var rindex = rowIdArr.indexOf(item.supplierRowId);\n\n                if (rindex === -1) {\n                  rowIdArr.push(item.supplierRowId);\n                  oprateArr.push([]);\n                  oprateArr[rowIdArr.length - 1].push(item);\n                } else {\n                  oprateArr[rindex].push(item);\n                }\n              }\n            });\n            oprateArr.forEach(function (oitem, oindex) {\n              if (!oitem.qualification) {\n                oitem.qualification = false;\n              } else {\n                oitem.qualification = true;\n              }\n\n              if (!oitem.introduction) {\n                oitem.introduction = false;\n              } else {\n                oitem.introduction = true;\n              }\n\n              var cdata = {\n                noticeItemDTOs: []\n              };\n              cdata.auditState = oitem[oindex].auditState;\n              cdata.completionDate = oitem[oindex].completionDate || _this4.setData.completionDate;\n              cdata.feedbackDate = oitem[oindex].feedbackDate || _this4.setData.feedbackDate;\n              cdata.introduceType = oitem[oindex].introduceType;\n              cdata.noticeExplain = oitem[oindex].noticeExplain;\n              cdata.orgCode = oitem[oindex].orgCode;\n              cdata.orgName = oitem[oindex].orgName;\n              cdata.qualifiedType = oitem[oindex].qualifiedType || _this4.setData.qualifiedType;\n              cdata.questionDesc = oitem[oindex].questionDesc || _this4.setData.questionDesc;\n              cdata.questionType = oitem[oindex].questionType || _this4.setData.questionType;\n              cdata.state = oitem[oindex].state;\n              cdata.supplierCode = oitem[oindex].supplierCode;\n              cdata.supplierName = oitem[oindex].supplierName;\n              cdata.supplierRowId = oitem[oindex].supplierRowId;\n              oitem.forEach(function (item, index) {\n                cdata.noticeItemDTOs.push({});\n                cdata.noticeItemDTOs[index].introduction = oitem[oindex].introduction || _this4.setData.introduction;\n                cdata.noticeItemDTOs[index].qualification = oitem[oindex].qualification || _this4.setData.qualification;\n                cdata.noticeItemDTOs[index].proposalNo = item.proposalNo;\n                cdata.noticeItemDTOs[index].materielClass = item.materielClass;\n                cdata.noticeItemDTOs[index].materielClassName = item.materielClassName;\n                cdata.noticeItemDTOs[index].remark = item.remark;\n              });\n              console.log(cdata, '生成数据');\n              createRecords(cdata).then(function () {\n                _this4.$message({\n                  type: 'success',\n                  message: '生成操作成功'\n                });\n\n                _this4.$emit('getList');\n              });\n            });\n          } else {\n            this.$message({\n              type: 'warning',\n              message: '请先选完所选内容对应的资质类型，引入类型，推荐分配供应商编码再生成'\n            });\n          }\n        } else {\n          this.$message({\n            type: 'warning',\n            message: '请先选择要生成入平台通知的数据'\n          });\n        }\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先选择要生成入平台通知的数据'\n        });\n      }\n    },\n    handleDelete: function handleDelete(index, row) {\n      console.log(index, row);\n      this.tableData = this.tableData.filter(function (item, indexf) {\n        console.log(item);\n        return indexf !== index;\n      });\n    },\n    // initTableData (data) {\n    //     data.forEach((item, index) => {\n    //         for (let key in item) {\n    //             if (key === 'introduction' || key === 'qualification') {\n    //                 if (!item[key]) {\n    //                     item[key] = false\n    //                 }\n    //             }\n    //         }\n    //     })\n    //     this.tableData = data\n    // },\n    initTable: function initTable(data) {\n      this.tableData = data;\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.selectSameProp(this.tableData, \"supplierRowId\", val);\n        } else if (val.length === 0) {\n          this.selectedRows = val; // this.itemList = []\n        }\n      } else {\n        this.selectSameProp(this.tableData, \"supplierRowId\", val); // this.selectedRows = val\n      }\n    },\n    selectSameProp: function selectSameProp(data, prop, val) {\n      this.selectedRows = [];\n\n      for (var j = 0; j < val.length; j++) {\n        for (var i = 0; i < data.length; i++) {\n          if (data[i][prop] === val[j][prop]) {\n            this.selectedRows.push(data[i]);\n          }\n        }\n      }\n    },\n    recommendScode: function recommendScode(index, row) {\n      var _this5 = this;\n\n      if (row.introduceType && row.qualifiedType) {\n        var params = {\n          introduceType: row.introduceType,\n          qualifiedType: row.qualifiedType\n        };\n        recommendSc(params).then(function (res) {\n          _this5.$set(_this5.tableData[index], 'supplierCode', res.data);\n        });\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先选择资质类型和引入类型'\n        });\n      }\n    }\n  }\n};",null]}