{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/mainInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/mainInfo.vue","mtime":1597803787605},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\";\nimport listCar from \"../../../components/listCar\";\nimport throttle from 'lodash/throttle';\nimport { mapState } from 'vuex';\nexport default {\n  name: \"EPMainInfo\",\n  props: ['code'],\n  data: function data() {\n    return {\n      form: {\n        ctacle: undefined,\n        industry: undefined,\n        remark: undefined,\n        typeCode: undefined,\n        typeName: undefined\n      },\n      temp: {\n        ctacle: undefined,\n        industry: undefined,\n        remark: undefined,\n        typeCode: undefined,\n        typeName: undefined\n      },\n      namePlate: null,\n      namePlateFrom: {\n        data: null\n      },\n      dialogFormVisible: false,\n      dialogFormVisibleName: false,\n      rules: {\n        ctacle: [{\n          required: true,\n          message: '请选择适用场景',\n          trigger: 'change'\n        }],\n        industry: [{\n          required: true,\n          message: '请选择所属行业',\n          trigger: 'change'\n        }],\n        typeCode: [{\n          required: true,\n          message: '设备类型编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字组成，长度为32',\n          trigger: 'blur'\n        }],\n        typeName: [{\n          required: true,\n          message: '设备类型名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }],\n        remark: undefined\n      }\n    };\n  },\n  components: {\n    listCar: listCar\n  },\n  computed: _objectSpread({}, mapState({\n    // code: state => state.goPage.code,\n    iot_locked_industry: function iot_locked_industry(state) {\n      return state.iotDict.iot_locked_industry;\n    },\n    iot_trial_scenario: function iot_trial_scenario(state) {\n      return state.iotDict.iot_trial_scenario;\n    }\n  }), {\n    listLength: function listLength() {\n      return this.namePlate ? this.namePlate.length : false;\n    }\n  }),\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      if (this.$route.name == \"equipmentProducts\") {\n        Promise.all([api.queryRecord(this.code), api.queryNamePlate(this.code)]).then(function (val) {\n          var options = [_this.iot_locked_industry, _this.iot_trial_scenario];\n          val[0].data = _this.$myFun.codeToNameS(val[0].data, options, ['industry', 'ctacle']);\n          _this.form = val[0].data;\n          _this.namePlate = val[1].data;\n        });\n      }\n    },\n    handleUpdate: function handleUpdate() {\n      this.temp = JSON.parse(JSON.stringify(this.form));\n      this.dialogFormVisible = true;\n    },\n    update: throttle(function () {\n      var _this2 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this2.code, _this2.temp).then(function () {\n            _this2.getList();\n\n            _this2.dialogFormVisible = false;\n\n            _this2.$notify({\n              title: '成功',\n              message: '修改成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    handleUpdateName: function handleUpdateName() {\n      this.namePlateFrom.data = JSON.parse(JSON.stringify(this.namePlate));\n      this.dialogFormVisibleName = true;\n    },\n    updateName: throttle(function () {\n      var _this3 = this;\n\n      var arr = this.namePlateFrom.data.filter(function (i) {\n        return !i.tagCode || !i.tagName;\n      });\n\n      if (arr.length || !this.namePlateFrom.data.length) {\n        this.$message({\n          title: this.$t('message.warning'),\n          message: \"铭牌编码或名称不能为空\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      var regArr = this.namePlateFrom.data.filter(function (i) {\n        return i.tagCode && i.tagName;\n      });\n      var reg = /^[\\u4e00-\\u9fa5]+$/;\n      var codeReg = /^[a-zA-Z0-9]+$/;\n      var getRes = new Promise(function (resolve, reject) {\n        regArr.forEach(function (i) {\n          var result = reg.exec(i.tagName);\n          var resultCode = codeReg.exec(i.tagCode);\n\n          if (!result) {\n            return reject('铭牌铭牌请输入中文');\n          }\n\n          if (!resultCode) {\n            return reject('编码请输入大小写英文及数字字符');\n          }\n        });\n        resolve(true);\n      });\n      getRes.then(function (res) {\n        if (res) {\n          api.updateNamePlate(_this3.code, _this3.namePlateFrom.data).then(function () {\n            _this3.getList();\n\n            _this3.dialogFormVisibleName = false;\n\n            _this3.$notify({\n              title: '成功',\n              message: '编辑成功',\n              type: 'success',\n              duration: 2000\n            });\n          }).catch(function (error) {\n            if (error.response.data.violations && error.response.data.violations.length) {\n              var message = error.response.data.violations[0].message;\n\n              _this3.$message({\n                message: message,\n                type: 'error',\n                duration: 5 * 1000\n              });\n            }\n          });\n        }\n      }).catch(function (error) {\n        _this3.$message({\n          title: _this3.$t('message.warning'),\n          message: error,\n          type: \"warning\"\n        });\n\n        return;\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    addDomain: function addDomain() {\n      this.namePlateFrom.data.push({\n        tagCode: undefined,\n        tagName: undefined\n      });\n    },\n    removeDomain: function removeDomain(item) {\n      var index = this.namePlateFrom.data.indexOf(item);\n\n      if (index !== -1) {\n        this.namePlateFrom.data.splice(index, 1);\n      }\n    }\n  }\n};",null]}