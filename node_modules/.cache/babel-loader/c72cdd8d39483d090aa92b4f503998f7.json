{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/IOT/IOTGR/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/IOT/IOTGR/main.vue","mtime":1600927611489},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/IOT/ga\";\nimport { queryCurve } from \"@/api/project/iot/IOT/db\";\nimport { queryProjectCodes, queryCollects } from \"@/api/project/iot/IOT/em\";\nimport Pagination from \"@/components/Pagination\";\nimport gatewaySelect from \"../../components/gatewaySelect\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"GRMain\",\n  props: ['code', 'projectList'],\n  components: {\n    Pagination: Pagination,\n    gatewaySelect: gatewaySelect\n  },\n  computed: _objectSpread({}, mapState({\n    iot_operator: function iot_operator(state) {\n      return state.iotDict.iot_operator;\n    },\n    iot_networking_way: function iot_networking_way(state) {\n      return state.iotDict.iot_networking_way;\n    },\n    iot_reporting_period: function iot_reporting_period(state) {\n      return state.iotDict.iot_reporting_period;\n    },\n    iot_state_gateway: function iot_state_gateway(state) {\n      return state.iotDict.iot_state_gateway;\n    }\n  })),\n  watch: {\n    projectList: function projectList(val) {\n      if (!this.projectCode) {\n        this.projectCode = val[0].projectCode;\n        this.getList();\n      }\n    },\n    code: function code(val) {\n      if (val) {\n        this.projectCode = val;\n        this.getList();\n      }\n    },\n    'listQuerySub.deviceCode': function listQuerySubDeviceCode(val) {\n      if (val) {\n        this.getAttribute();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      keyList: [],\n      listLoading: false,\n      theight: 0,\n      //表格高度\n      projectCode: this.code,\n      list: [],\n      deviceList: [],\n      attributeList: [],\n      total: 0,\n      row: undefined,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        gatewayName: undefined\n      },\n      listQuerySub: {\n        deviceCode: undefined,\n        pointCode: undefined,\n        pointEndTime: undefined,\n        pointStartTime: undefined\n      },\n      dialogFormVisible: false,\n      dialogFormVisibleSub: false,\n      temp: {\n        gatewayName: undefined,\n        gatewaySn: undefined,\n        gatewayType: undefined,\n        installationAddress: undefined,\n        networkingWay: undefined,\n        operator: undefined,\n        projectCode: undefined,\n        remark: undefined,\n        reportingPeriod: undefined\n      },\n      rules: {\n        gatewayName: [{\n          required: true,\n          message: '网关名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9#\\u4e00-\\u9fa5]+$/,\n          message: '支持大小写中英文及#符号',\n          trigger: 'blur'\n        }],\n        gatewaySn: [{\n          required: true,\n          message: '序列号名称不能为空',\n          trigger: ['blur', 'chnage']\n        }],\n        gatewayType: [{\n          required: true,\n          message: '请选择产品型号',\n          trigger: ['blur', 'chnage']\n        }],\n        networkingWay: [{\n          required: true,\n          message: '请选择联网方式',\n          trigger: ['blur', 'chnage']\n        }],\n        operator: [{\n          required: true,\n          message: '请选择上报周期',\n          trigger: ['blur', 'chnage']\n        }],\n        reportingPeriod: [{\n          required: true,\n          message: '请选择产品型号',\n          trigger: ['blur', 'chnage']\n        }]\n      },\n      tableKey: 0 //表格索引\n\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    stateClass: function stateClass(state) {\n      if (state == '0') {\n        return 'iot-warning';\n      } else if (state == '1') {\n        return 'iot-success';\n      } else if (state == '2') {\n        return 'iot-info';\n      }\n    },\n    // 获取设备列表\n    getDeviceList: function getDeviceList() {\n      var _this2 = this;\n\n      queryProjectCodes(this.row.projectCode).then(function (res) {\n        _this2.deviceList = res.data;\n\n        if (res.data && res.data) {\n          _this2.listQuerySub.deviceCode = res.data[0].deviceCode;\n        }\n      });\n    },\n    getAttribute: function getAttribute() {\n      var _this3 = this;\n\n      queryCollects(this.row.projectCode, this.listQuerySub.deviceCode).then(function (res) {\n        _this3.attributeList = res.data;\n\n        if (res.data && res.data.length) {\n          _this3.$set(_this3.listQuerySub, 'pointCode', _this3.attributeList[0].pointCode);\n        }\n      });\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this4 = this;\n\n      this.listLoading = true;\n      api.queryGateways(this.projectCode, this.listQuery).then(function (response) {\n        _this4.list = response.data.list;\n        _this4.list = _this4.$myFun.srmCodeToName(response.data.list, [_this4.iot_networking_way, _this4.iot_state_gateway], ['networkingWay', 'iotState']);\n        _this4.total = response.data.pages.count;\n        setTimeout(function () {\n          _this4.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    // 生成SN\n    getSN: throttle(function () {\n      var _this5 = this;\n\n      api.getGenerate(this.projectCode).then(function (res) {\n        _this5.temp.gatewaySn = res.data;\n      });\n    }, 3000, {\n      leading: true,\n      trailing: false\n    }),\n    // 获取型号\n    getGatewayType: function getGatewayType(val) {\n      this.temp.gatewayType = val;\n    },\n    //表格查询\n    handleQuery: throttle(function () {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.dialogFormVisible = true;\n    },\n    create: throttle(function () {\n      var _this6 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          _this6.temp.projectCode = _this6.projectCode;\n          api.addGateway(_this6.projectCode, _this6.temp).then(function () {\n            _this6.getList();\n\n            _this6.dialogFormVisible = false;\n\n            _this6.resTemp();\n\n            _this6.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    // 数据补招\n    DataSR: function DataSR() {\n      var _this7 = this;\n\n      api.getSR(this.row.projectCode, this.row.gatewayCode, this.listQuerySub.deviceCode, this.listQuerySub.pointStartTime, this.listQuerySub.pointEndTime).then(function (res) {\n        if (res.data == '1') {\n          return _this7.$message({\n            title: '成功',\n            message: '补招成功',\n            type: 'success',\n            duration: 2000\n          });\n        } else {\n          _this7.$message({\n            title: '失败',\n            message: '补招失败',\n            type: 'error',\n            duration: 2000\n          });\n        }\n      });\n    },\n    // 查看曲线\n    handleViewCurves: function handleViewCurves(row) {\n      this.row = row;\n      this.getDeviceList(); //获取当前时间\n\n      var day = new Date();\n      var now = new Date();\n      day.setTime(day.getTime() - 2 * 60 * 60 * 1000);\n      this.listQuerySub.pointStartTime = getDate(day);\n      this.listQuerySub.pointEndTime = getDate(now);\n\n      function getDate(day) {\n        var year = day.getFullYear(); //得到年份\n\n        var month = day.getMonth() + 1 > 10 ? day.getMonth() + 1 : '0' + (day.getMonth() + 1); //得到月份\n\n        var date = day.getDate() > 10 ? day.getDate() : '0' + day.getDate(); //得到日期\n\n        var hour = day.getHours() > 10 ? day.getHours() : '0' + day.getHours(); //得到小时\n\n        var minu = day.getMinutes() > 10 ? day.getMinutes() : '0' + day.getMinutes(); //得到分钟\n\n        var sec = day.getSeconds() > 10 ? day.getSeconds() : '0' + day.getSeconds(); //得到秒\n\n        return \"\".concat(year, \"-\").concat(month, \"-\").concat(date, \" \").concat(hour, \":\").concat(minu, \":\").concat(sec);\n      }\n\n      this.dialogFormVisibleSub = true;\n    },\n    // 搜索曲线\n    handleQuerySub: function handleQuerySub() {\n      var _this8 = this;\n\n      queryCurve(this.row.projectCode, this.row.gatewayCode, this.listQuerySub.deviceCode, this.listQuerySub.pointCode, this.listQuerySub).then(function (res) {\n        _this8.chartList = res.data;\n\n        _this8.drawLine();\n      });\n    },\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(gatewayCode, iotState) {\n      var _this9 = this;\n\n      if (iotState !== '2') {\n        return this.$message({\n          title: this.$t('message.warning'),\n          message: \"当前网关已物联，不能删除！\",\n          type: \"warning\"\n        });\n      }\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteGateway(_this9.projectCode, gatewayCode).then(function () {\n          _this9.getList();\n\n          _this9.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this9.getList();\n        });\n      }).catch(function () {\n        _this9.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      }); // \n    },\n    resTemp: function resTemp() {\n      this.temp = {\n        gatewayName: undefined,\n        gatewaySn: undefined,\n        gatewayType: undefined,\n        installationAddress: undefined,\n        networkingWay: undefined,\n        operator: undefined,\n        projectCode: undefined,\n        remark: undefined,\n        reportingPeriod: undefined\n      };\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    drawLine: function drawLine() {\n      var xAxisData = this.chartList.map(function (item) {\n        return item.pointTime;\n      });\n      var data = this.chartList.map(function (item) {\n        return {\n          value: item.pointValue,\n          name: item.pointName\n        };\n      }); // 基于准备好的dom，初始化echarts实例\n\n      var myChart = this.$echarts.init(this.$refs.myChart); // 绘制图表\n\n      myChart.setOption({\n        title: {\n          text: ''\n        },\n        tooltip: {\n          formatter: '{b}<br/>{c}'\n        },\n        xAxis: {\n          data: xAxisData\n        },\n        yAxis: {},\n        series: [{\n          name: '',\n          type: 'line',\n          data: data\n        }]\n      });\n    },\n    toInfo: function toInfo(row) {\n      this.$emit('setRow', row);\n      this.$emit('setCode', row.projectCode);\n      this.$emit('setPage', 'GR-Info');\n    }\n  }\n};",null]}