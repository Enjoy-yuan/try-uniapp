{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/planSelect/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/components/planSelect/index.vue","mtime":1596610933467},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/el/inventoryPlanning';\nimport Pagination from '@/components/Pagination';\nimport deviceType from \"../deviceTypeSelect\";\nimport { mapState } from 'vuex';\nexport default {\n  name: 'planSelect',\n  components: {\n    Pagination: Pagination,\n    deviceType: deviceType\n  },\n  props: {\n    // 是否禁用选择设备类型（需要在父组件中关联进行控制时使用）\n    deviceTypeDisable: {\n      type: Boolean,\n      default: false\n    },\n    // 父组件中已选记录集合\n    listSelected: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      // 设备列表（备选列表）\n      list: [],\n      // 设备类型\n      options: [],\n      total: 0,\n      // 查询条件\n      listQuery: {\n        currentPage: 1,\n        pageSize: 10,\n        typeCode: undefined,\n        deviceName: undefined\n      },\n      // 当前tab\n      activeName2: 'first',\n      // 当前弹框弹出后已选记录集合\n      currentSelect: [],\n      tableKey: 0\n    };\n  },\n  watch: {\n    // 设备类型改变时查询对应设备\n    'listQuery.typeCode': function listQueryTypeCode() {\n      this.getList();\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    dt_device_category: function dt_device_category(state) {\n      return state.eamDict.dt_device_category;\n    },\n    dt_inspect_method: function dt_inspect_method(state) {\n      return state.eamDict.dt_inspect_method;\n    },\n    dt_inspect_type: function dt_inspect_type(state) {\n      return state.eamDict.dt_inspect_type;\n    }\n  })),\n  created: function created() {\n    var _this = this;\n\n    //获取设备类型\n    api.queryEqmt().then(function (res) {\n      _this.options = res.data.filter(function (item) {\n        return item.typeName != '设备类型';\n      });\n    });\n  },\n  mounted: function mounted() {\n    this.$store.dispatch('eamDict/getDicData', ['dt_device_category', 'dt_inspect_method', 'dt_inspect_type']);\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listQuery.deviceCodes = this.listSelected.map(function (item) {\n        return item.deviceCode;\n      }).join(','); // 获取当前查询条件下的设备\n\n      api.queryPlan(this.listQuery).then(function (res) {\n        _this2.list = _this2.$myFun.codeToName(res.data, [_this2.dt_inspect_method, _this2.dt_inspect_type], ['inspectMethod', 'inspectType']).list;\n        _this2.total = res.data.pages.count;\n        setTimeout(function () {\n          _this2.getData();\n        }, 0);\n      });\n    },\n    handleQuery: function handleQuery() {\n      // 翻页\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    checkUnsel: function checkUnsel(val, row) {\n      // 当前选择记录是否已选\n      var isuncheck = true;\n      val.forEach(function (item) {\n        if (item.deviceCode === row.deviceCode) {\n          isuncheck = false;\n        }\n      });\n      return isuncheck;\n    },\n    selectMain: function selectMain(val, row) {\n      var _this3 = this;\n\n      // 点击备选记录\n      var isuncheck = this.checkUnsel(val, row);\n\n      if (!isuncheck) {\n        if (this.currentSelect) {\n          val.forEach(function (items, indexv) {\n            var isSelected = false;\n\n            _this3.currentSelect.forEach(function (item) {\n              if (item.deviceCode === items.deviceCode) {\n                isSelected = true;\n              }\n            });\n\n            if (!isSelected) {\n              _this3.currentSelect.push(val[indexv]);\n            }\n          });\n        } else {\n          this.currentSelect = val;\n        }\n      } else {\n        this.currentSelect = this.currentSelect.filter(function (item) {\n          return item.deviceCode !== row.deviceCode;\n        });\n      }\n    },\n    selectAll: function selectAll(val) {\n      var _this4 = this;\n\n      // 全选\n      if (val.length == 0) {\n        this.currentSelect = [];\n        this.$refs.tb_bx.clearSelection();\n        return false;\n      }\n\n      val.forEach(function (items, indexv) {\n        var isSelected = false;\n\n        _this4.currentSelect.forEach(function (item) {\n          if (item.deviceCode === items.deviceCode) {\n            isSelected = true;\n          }\n        });\n\n        if (!isSelected) {\n          _this4.currentSelect.push(val[indexv]);\n        }\n      });\n    },\n    getData: function getData() {\n      var _this5 = this;\n\n      this.$refs.tb_bx.clearSelection(); // 在备选中把父组件中的已选去除\n\n      this.listSelected.forEach(function (item) {\n        _this5.list = _this5.list.filter(function (item2) {\n          return item2.deviceCode != item.deviceCode;\n        });\n      });\n      this.currentSelect = [];\n    }\n  }\n};",null]}