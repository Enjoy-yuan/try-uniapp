{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/IOTScreen/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/IOTScreen/index.vue","mtime":1597749614148},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport china from 'echarts/map/json/china.json';\nimport getPageTitle from '@/utils/getPageName';\nimport Pie from \"./pie\";\nimport capsuleBar from \"./capsuleBar\";\nimport Bar from \"./bar\";\nimport { queryMapData } from \"@/api/project/iot/MOM/iotSence\";\nimport { mapState } from 'vuex';\nexport default {\n  name: \"IOTScreen\",\n  data: function data() {\n    return {\n      isAmain: true,\n      title: getPageTitle(this.$route.name),\n      theight: undefined,\n      chartsList: [],\n      deviceOnlineCount: undefined,\n      //设备在线\n      normCount: null,\n      //指标统计\n      projectTypeCount: undefined,\n      // 用户行业分布\n      deviceAlarmCount: undefined,\n      //设备报警趋势\n      deviceTypeCount: undefined,\n      // 设备数量统计\n      gatewayAlarm: null,\n      // 网关\n      data4: undefined,\n      center1: ['35%', '50%'],\n      radius1: ['50%', '70%'],\n      radius2: '75%',\n      roseType: 'area',\n      itemStyle: {\n        color: '#c23531',\n        shadowBlur: 10,\n        shadowColor: 'rgba(255, 255, 255, 0.5)'\n      },\n      myChart: undefined,\n      projectMap: null,\n      topY: 0,\n      timer: undefined\n    };\n  },\n  components: {\n    Pie: Pie,\n    capsuleBar: capsuleBar,\n    Bar: Bar\n  },\n  computed: _objectSpread({}, mapState({\n    iot_state_device: function iot_state_device(state) {\n      return state.iotDict.iot_state_device;\n    },\n    iot_state_gateway: function iot_state_gateway(state) {\n      return state.iotDict.iot_state_gateway;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('iotDict/getDicData', ['iot_state_device', 'iot_state_gateway']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.setData();\n    this.getMapList();\n    this.setTransform();\n  },\n  methods: {\n    getMapList: function getMapList() {\n      var _this2 = this;\n\n      queryMapData().then(function (res) {\n        _this2.projectMap = res.data.projectMap;\n\n        _this2.getMap(res.data.projectMap); // 设备在线 饼状图\n\n\n        var deviceOnlineCount = {\n          data: null,\n          legend: null\n        };\n        deviceOnlineCount.data = _this2.$myFun.srmCodeToName(res.data.deviceOnlineCount, [_this2.iot_state_device], ['iotState']).map(function (devres) {\n          return {\n            name: devres.iotStateCN,\n            value: devres.deviceAmount\n          };\n        });\n        deviceOnlineCount.legend = deviceOnlineCount.data.map(function (devres) {\n          return devres.name;\n        });\n        _this2.deviceOnlineCount = deviceOnlineCount; // 设备统计\n\n        var normCount = [{\n          name: '设备模型',\n          en: 'deviceModelCount',\n          value: 0\n        }, {\n          name: '网关数量',\n          en: 'deviceGatewayCount',\n          value: 0\n        }, {\n          name: '设备数量',\n          en: 'deviceCount',\n          value: 0\n        }, {\n          name: '企业用户',\n          en: 'enterpriseCount',\n          value: 0\n        }];\n        normCount.forEach(function (item) {\n          item.value = res.data.normCount[item.en];\n        });\n        _this2.normCount = normCount; // 用户行业分布\n\n        var projectTypeCount = {\n          data: null\n        };\n        projectTypeCount.data = res.data.projectTypeCount.map(function (project) {\n          return {\n            name: project.projectType,\n            value: project.projectCount\n          };\n        });\n        _this2.projectTypeCount = projectTypeCount; // 设备报警趋势\n\n        var deviceAlarmCount = {\n          data: null,\n          legend: null,\n          xAxisData: null\n        };\n        deviceAlarmCount.legend = Array.from(new Set(res.data.deviceAlarmCount.map(function (res) {\n          return res.alarmState;\n        })));\n        deviceAlarmCount.xAxisData = Array.from(new Set(res.data.deviceAlarmCount.map(function (res) {\n          return res.day;\n        })));\n        var deviceAlarmCountData = [];\n        deviceAlarmCount.legend.forEach(function (item, index) {\n          deviceAlarmCountData.push({\n            name: item,\n            data: []\n          });\n          res.data.deviceAlarmCount.forEach(function (j) {\n            if (j.alarmState == item) {\n              deviceAlarmCountData[index].data.push(j.alarmAmount);\n            }\n          });\n        });\n        deviceAlarmCount.data = deviceAlarmCountData;\n        _this2.deviceAlarmCount = deviceAlarmCount; // deviceTypeCount 设备统计数量\n\n        var deviceTypeCount = {\n          data: [],\n          yAxisData: []\n        };\n        deviceTypeCount.data = res.data.deviceTypeCount.map(function (res) {\n          return res.deviceAmount;\n        });\n        deviceTypeCount.yAxisData = res.data.deviceTypeCount.map(function (res) {\n          return res.typeCode;\n        });\n        _this2.deviceTypeCount = deviceTypeCount; // gatewayAlarm\n\n        _this2.gatewayAlarm = res.data.gatewayAlarm;\n      });\n    },\n    setData: function setData() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        _this3.data4 = {\n          data: [30, 60, 80, 70],\n          yAxisData: ['测试1', '测试2', '测试3', '测试4']\n        };\n      }, 500);\n    },\n    codeToName: function codeToName(code) {\n      this.iot_state_gateway.forEach(function (item) {\n        if (item.dictItemKey == code) {\n          return item.dictItemValue;\n        }\n      });\n    },\n    getMap: function getMap(projectMap) {\n      var data = projectMap.map(function (res) {\n        return {\n          name: res.county,\n          value: res.gatewayCount[0].gatewayAmount,\n          gatewayState: res.deviceAmount,\n          gatewayCount: res.gatewayCount,\n          projectName: res.projectName\n        };\n      }); //可能会用到的地方的经纬度\n\n      var geoCoordMap = {\n        '海门': [121.15, 31.89],\n        '鄂尔多斯': [109.781327, 39.608266],\n        '招远': [120.38, 37.35],\n        '舟山': [122.207216, 29.985295],\n        '齐齐哈尔': [123.97, 47.33],\n        '盐城': [120.13, 33.38],\n        '赤峰': [118.87, 42.28],\n        '青岛': [120.33, 36.07],\n        '乳山': [121.52, 36.89],\n        '金昌': [102.188043, 38.520089],\n        '泉州': [118.58, 24.93],\n        '莱西': [120.53, 36.86],\n        '日照': [119.46, 35.42],\n        '胶南': [119.97, 35.88],\n        '南通': [121.05, 32.08],\n        '拉萨': [91.11, 29.97],\n        '云浮': [112.02, 22.93],\n        '梅州': [116.1, 24.55],\n        '文登': [122.05, 37.2],\n        '上海': [121.48, 31.22],\n        '攀枝花': [101.718637, 26.582347],\n        '威海': [122.1, 37.5],\n        '承德': [117.93, 40.97],\n        '厦门': [118.1, 24.46],\n        '汕尾': [115.375279, 22.786211],\n        '潮州': [116.63, 23.68],\n        '丹东': [124.37, 40.13],\n        '太仓': [121.1, 31.45],\n        '曲靖': [103.79, 25.51],\n        '烟台': [121.39, 37.52],\n        '福州': [119.3, 26.08],\n        '瓦房店': [121.979603, 39.627114],\n        '即墨': [120.45, 36.38],\n        '抚顺': [123.97, 41.97],\n        '玉溪': [102.52, 24.35],\n        '张家口': [114.87, 40.82],\n        '阳泉': [113.57, 37.85],\n        '莱州': [119.942327, 37.177017],\n        '湖州': [120.1, 30.86],\n        '汕头': [116.69, 23.39],\n        '昆山': [120.95, 31.39],\n        '宁波': [121.56, 29.86],\n        '湛江': [110.359377, 21.270708],\n        '揭阳': [116.35, 23.55],\n        '荣成': [122.41, 37.16],\n        '连云港': [119.16, 34.59],\n        '葫芦岛': [120.836932, 40.711052],\n        '常熟': [120.74, 31.64],\n        '东莞': [113.75, 23.04],\n        '河源': [114.68, 23.73],\n        '淮安': [119.15, 33.5],\n        '泰州': [119.9, 32.49],\n        '南宁': [108.33, 22.84],\n        '营口': [122.18, 40.65],\n        '惠州': [114.4, 23.09],\n        '江阴': [120.26, 31.91],\n        '蓬莱': [120.75, 37.8],\n        '韶关': [113.62, 24.84],\n        '嘉峪关': [98.289152, 39.77313],\n        '广州': [113.23, 23.16],\n        '延安': [109.47, 36.6],\n        '太原': [112.53, 37.87],\n        '清远': [113.01, 23.7],\n        '中山': [113.38, 22.52],\n        '昆明': [102.73, 25.04],\n        '寿光': [118.73, 36.86],\n        '盘锦': [122.070714, 41.119997],\n        '长治': [113.08, 36.18],\n        '深圳': [114.07, 22.62],\n        '珠海': [113.52, 22.3],\n        '宿迁': [118.3, 33.96],\n        '咸阳': [108.72, 34.36],\n        '铜川': [109.11, 35.09],\n        '平度': [119.97, 36.77],\n        '佛山': [113.11, 23.05],\n        '海口': [110.35, 20.02],\n        '江门': [113.06, 22.61],\n        '章丘': [117.53, 36.72],\n        '肇庆': [112.44, 23.05],\n        '大连': [121.62, 38.92],\n        '临汾': [111.5, 36.08],\n        '吴江': [120.63, 31.16],\n        '石嘴山': [106.39, 39.04],\n        '沈阳': [123.38, 41.8],\n        '苏州': [120.62, 31.32],\n        '茂名': [110.88, 21.68],\n        '嘉兴': [120.76, 30.77],\n        '长春': [125.35, 43.88],\n        '胶州': [120.03336, 36.264622],\n        '银川': [106.27, 38.47],\n        '张家港': [120.555821, 31.875428],\n        '三门峡': [111.19, 34.76],\n        '锦州': [121.15, 41.13],\n        '南昌': [115.89, 28.68],\n        '柳州': [109.4, 24.33],\n        '三亚': [109.511909, 18.252847],\n        '自贡': [104.778442, 29.33903],\n        '吉林': [126.57, 43.87],\n        '阳江': [111.95, 21.85],\n        '泸州': [105.39, 28.91],\n        '西宁': [101.74, 36.56],\n        '宜宾': [104.56, 29.77],\n        '呼和浩特': [111.65, 40.82],\n        '成都': [104.06, 30.67],\n        '大同': [113.3, 40.12],\n        '镇江': [119.44, 32.2],\n        '桂林': [110.28, 25.29],\n        '张家界': [110.479191, 29.117096],\n        '宜兴': [119.82, 31.36],\n        '北海': [109.12, 21.49],\n        '西安': [108.95, 34.27],\n        '金坛': [119.56, 31.74],\n        '东营': [118.49, 37.46],\n        '牡丹江': [129.58, 44.6],\n        '遵义': [106.9, 27.7],\n        '绍兴': [120.58, 30.01],\n        '扬州': [119.42, 32.39],\n        '常州': [119.95, 31.79],\n        '潍坊': [119.1, 36.62],\n        '重庆': [106.54, 29.59],\n        '台州': [121.420757, 28.656386],\n        '南京': [118.78, 32.04],\n        '滨州': [118.03, 37.36],\n        '贵阳': [106.71, 26.57],\n        '无锡': [120.29, 31.59],\n        '本溪': [123.73, 41.3],\n        '克拉玛依': [84.77, 45.59],\n        '渭南': [109.5, 34.52],\n        '马鞍山': [118.48, 31.56],\n        '宝鸡': [107.15, 34.38],\n        '焦作': [113.21, 35.24],\n        '句容': [119.16, 31.95],\n        '北京': [116.46, 39.92],\n        '徐州': [117.2, 34.26],\n        '衡水': [115.72, 37.72],\n        '包头': [110, 40.58],\n        '绵阳': [104.73, 31.48],\n        '乌鲁木齐': [87.68, 43.77],\n        '枣庄': [117.57, 34.86],\n        '杭州': [120.19, 30.26],\n        '淄博': [118.05, 36.78],\n        '鞍山': [122.85, 41.12],\n        '溧阳': [119.48, 31.43],\n        '库尔勒': [86.06, 41.68],\n        '安阳': [114.35, 36.1],\n        '开封': [114.35, 34.79],\n        '济南': [117, 36.65],\n        '德阳': [104.37, 31.13],\n        '温州': [120.65, 28.01],\n        '九江': [115.97, 29.71],\n        '邯郸': [114.47, 36.6],\n        '临安': [119.72, 30.23],\n        '兰州': [103.73, 36.03],\n        '沧州': [116.83, 38.33],\n        '临沂': [118.35, 35.05],\n        '南充': [106.110698, 30.837793],\n        '天津': [117.2, 39.13],\n        '富阳': [119.95, 30.07],\n        '泰安': [117.13, 36.18],\n        '诸暨': [120.23, 29.71],\n        '郑州': [113.65, 34.76],\n        '哈尔滨': [126.63, 45.75],\n        '聊城': [115.97, 36.45],\n        '芜湖': [118.38, 31.33],\n        '唐山': [118.02, 39.63],\n        '平顶山': [113.29, 33.75],\n        '邢台': [114.48, 37.05],\n        '德州': [116.29, 37.45],\n        '济宁': [116.59, 35.38],\n        '荆州': [112.239741, 30.335165],\n        '宜昌': [111.3, 30.7],\n        '义乌': [120.06, 29.32],\n        '丽水': [119.92, 28.45],\n        '洛阳': [112.44, 34.7],\n        '秦皇岛': [119.57, 39.95],\n        '株洲': [113.16, 27.83],\n        '石家庄': [114.48, 38.03],\n        '莱芜': [117.67, 36.19],\n        '常德': [111.69, 29.05],\n        '保定': [115.48, 38.85],\n        '湘潭': [112.91, 27.87],\n        '金华': [119.64, 29.12],\n        '岳阳': [113.09, 29.37],\n        '长沙': [113, 28.21],\n        '衢州': [118.88, 28.97],\n        '廊坊': [116.7, 39.53],\n        '菏泽': [115.480656, 35.23375],\n        '合肥': [117.27, 31.86],\n        '武汉': [114.31, 30.52],\n        '大庆': [125.03, 46.58],\n        '甘孜藏族自治州': [101.97, 30.05],\n        '阿坝藏族羌族自治州': [103.60, 32.63],\n        '阿拉善盟': [105.67, 38.83],\n        '榆林': [110.50, 38.83],\n        '六安': [113.5, 31.77],\n        '黔南布依族苗族自治州': [107.52, 26.27],\n        '昭通': [103.72, 27.33]\n      };\n      projectMap.forEach(function (item) {\n        geoCoordMap[item.county] = [item.lng, item.lat];\n      });\n\n      var convertData = function convertData(data) {\n        var res = [];\n\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name];\n\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].value)\n            });\n          }\n        }\n\n        return res;\n      }; // var top5 = convertData(data.sort((a, b) => { b.value - a.value }).slice(0, 6))\n\n\n      var option = {\n        backgroundColor: 'transparent',\n        tooltip: {\n          trigger: 'item'\n        },\n        bmap: {\n          center: [114.31, 30.52],\n          zoom: 3,\n          roam: true,\n          mapStyle: {\n            styleJson: [{\n              \"featureType\": \"water\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"color\": \"#044161\"\n              }\n            }, {\n              \"featureType\": \"land\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"color\": \"#004981\"\n              }\n            }, {\n              \"featureType\": \"boundary\",\n              \"elementType\": \"geometry\",\n              \"stylers\": {\n                \"color\": \"#064f85\"\n              }\n            }, {\n              \"featureType\": \"railway\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"highway\",\n              \"elementType\": \"geometry\",\n              \"stylers\": {\n                \"color\": \"#004981\"\n              }\n            }, {\n              \"featureType\": \"highway\",\n              \"elementType\": \"geometry.fill\",\n              \"stylers\": {\n                \"color\": \"#005b96\",\n                \"lightness\": 1\n              }\n            }, {\n              \"featureType\": \"highway\",\n              \"elementType\": \"labels\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"arterial\",\n              \"elementType\": \"geometry\",\n              \"stylers\": {\n                \"color\": \"#004981\"\n              }\n            }, {\n              \"featureType\": \"arterial\",\n              \"elementType\": \"geometry.fill\",\n              \"stylers\": {\n                \"color\": \"#00508b\"\n              }\n            }, {\n              \"featureType\": \"poi\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"green\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"color\": \"#056197\",\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"subway\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"manmade\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"local\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"arterial\",\n              \"elementType\": \"labels\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }, {\n              \"featureType\": \"boundary\",\n              \"elementType\": \"geometry.fill\",\n              \"stylers\": {\n                \"color\": \"#029fd4\"\n              }\n            }, {\n              \"featureType\": \"building\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"color\": \"#1a5787\"\n              }\n            }, {\n              \"featureType\": \"label\",\n              \"elementType\": \"all\",\n              \"stylers\": {\n                \"visibility\": \"off\"\n              }\n            }]\n          }\n        },\n        geo: {\n          // 这个是重点配置区\n          map: 'china',\n          // 表示中国地图\n          roam: true,\n          zoom: 3,\n          center: [114.31, 30.52],\n          label: {\n            normal: {\n              show: true,\n              // 是否显示对应地名\n              textStyle: {\n                color: '#fff'\n              }\n            }\n          },\n          itemStyle: {\n            normal: {\n              areaColor: 'rgba(255,255,255,0)',\n              //地图默认的背景颜色\n              borderColor: '#22B6ED',\n              //地图默认的边线颜色\n              color: '#fff'\n            },\n            emphasis: {\n              areaColor: 'rgba(33,171,217,0.5)' //地图触发地区的背景颜色\n\n            }\n          },\n          tooltip: {\n            trigger: 'item',\n            //这是后来写的一个鼠标移上去的显示信息\n            formatter: function formatter(p) {\n              //自定义提示信息\n              var htmlStr = '<div>';\n              htmlStr += p.name + '<br/>'; //x轴的名称\n\n              htmlStr += \"访问量\" + '：' + p.value[2];\n              htmlStr += '</div>';\n              return htmlStr;\n            }\n          },\n          visualMap: {\n            show: true,\n            top: 0,\n            precision: 2,\n            pieces: [{\n              gt: 0.8,\n              color: '#fb8a33'\n            }, // (1500, Infinity]\n            {\n              gt: 0.6,\n              lte: 0.8,\n              color: '#ffdd54'\n            }, // (900, 1500]\n            {\n              gt: 0.4,\n              lte: 0.6,\n              color: '#4ddb9f'\n            }, // (310, 1000]\n            {\n              lt: 0.4,\n              color: '#e16bff'\n            }],\n            textStyle: {\n              color: '#fff'\n            }\n          }\n        },\n        series: [{\n          type: 'effectScatter',\n          //  scatter\n          name: '设备',\n          coordinateSystem: 'geo',\n          data: convertData(data),\n          symbolSize: function symbolSize(val) {\n            return val[2] * 10;\n          },\n          label: {\n            normal: {\n              formatter: '{b}',\n              position: 'right',\n              show: false\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: function formatter(params) {\n              var _this4 = this;\n\n              // console.log(params, 'params')\n              var gatewayCount = '';\n              params.gatewayCount.forEach(function (item) {\n                gatewayCount += _this4.codeToName(item.gatewayState) + ':' + item.gatewayAmount;\n              });\n              return \"<p >\".concat(params.projectName, \"</p>\\n                                        <p >\").concat(params.value[2], \"</p>\\n                                        <p > \\u7F51\\u5173\\u72B6\\u6001 \").concat(gatewayCount, \" </p>\"); // 项目名称、接入日期、接入设备数量、网关状态（在线：10 离线：3）\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#ddb926'\n            }\n          },\n          zlevel: 1\n        }]\n      };\n      this.$echarts.registerMap('china', china);\n      this.myChart = this.$echarts.init(document.getElementById('map'));\n      this.myChart.setOption(option, true);\n    },\n    setTableHeight: function setTableHeight() {\n      var wh = document.body.offsetHeight;\n      var fch = 0;\n\n      if (document.getElementsByClassName('fixed-header')[0]) {\n        fch = document.getElementsByClassName('fixed-header')[0].offsetHeight + 2;\n      }\n\n      this.theight = wh - fch;\n    },\n    setTransform: function setTransform() {\n      var _this5 = this;\n\n      this.timer = setInterval(function () {\n        var carouselHeight = _this5.$refs.carousel.offsetHeight; // let carouselBoxHeight = this.$refs.carouselBox.offsetHeight\n\n        _this5.topY += carouselHeight / 4; //carouselBoxHeight / 2\n\n        _this5.isAmain = true;\n\n        if (_this5.topY > carouselHeight) {\n          _this5.topY = 0;\n          _this5.isAmain = false;\n        }\n      }, 4000);\n    },\n    mouseOver: function mouseOver() {\n      clearInterval(this.timer);\n    },\n    mouseLeave: function mouseLeave() {\n      this.setTransform();\n    }\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.timer);\n  }\n};",null]}