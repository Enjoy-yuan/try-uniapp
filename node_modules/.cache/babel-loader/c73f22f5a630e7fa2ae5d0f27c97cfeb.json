{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationPlan/index.vue","mtime":1599136050785},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryRecords } from \"@/api/project/srm/dataBase/dictMaintenance\";\nimport * as api from \"@/api/project/srm/contractManage/evaluationPlan\";\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from \"vuex\";\nimport addMain from \"./dialog/addMain\";\nexport default {\n  name: \"evaluationPlan\",\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    addMain: addMain\n  },\n  data: function data() {\n    return {\n      dictList: null,\n      modalnum: null,\n      //模板编号，非模板页面可删\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      list: [],\n      total: 0,\n      DICT_CODE: DICT_CODE,\n      listQuery: {\n        //查询\n        orgCode: 'dtcg0001',\n        page: true,\n        currentPage: 1,\n        pageSize: 15\n      },\n      tableConfig: [{\n        label: '序号',\n        prop: 'rowId',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '组织编码',\n        prop: 'orgCode',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '计划号',\n        prop: 'evaluationPlanNo',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价类型',\n        prop: 'evaluationTypeCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价分类',\n        prop: 'evaluationClassificationCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价年度',\n        prop: 'evaluationYear',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价类别',\n        prop: 'evaluationCategoryCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价阶段',\n        prop: 'evaluationStageCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价周期起',\n        prop: 'periodStart',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价周期止',\n        prop: 'periodEnd',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '评价日期截止',\n        prop: 'endTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '状态',\n        prop: 'stateCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建人',\n        prop: 'creatorName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改人',\n        prop: 'updatorName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改时间',\n        prop: 'updateTime',\n        align: 'center',\n        width: 'auto'\n      }],\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      tableKey: 0 //表格索引\n\n    };\n  },\n  created: function created() {},\n  computed: _objectSpread({}, mapState({\n    dt_srm_pak: function dt_srm_pak(state) {\n      return state.dict.dt_srm_pak;\n    },\n    // 评价类型\n    dt_srm_p0: function dt_srm_p0(state) {\n      return state.dict.dt_srm_p0;\n    },\n    // 单据状态\n    dt_srm_pb1: function dt_srm_pb1(state) {\n      return state.dict.dt_srm_pb1;\n    },\n    // 评价分类\n    dt_srm_pb2: function dt_srm_pb2(state) {\n      return state.dict.dt_srm_pb2;\n    } // 评价类别\n\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    var dto = {\n      page: true,\n      currentPage: 1,\n      pageSize: 15\n    };\n    queryRecords(dto).then(function (response) {\n      _this.dictList = response.data.list;\n    });\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_pak\", 'dt_srm_p0', 'dt_srm_pb1', 'dt_srm_pb2']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //模板切换事件，非模板页面可删\n    changeMoudle: function changeMoudle(val) {\n      this.$emit('changeSelect', val);\n    },\n    selectName: function selectName(val) {\n      this.listQuery.orgName = val;\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    refresh: function refresh() {\n      this.getList();\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecord(this.listQuery).then(function (res) {\n        // console.log(res, '1')\n        var options = [_this2.dt_srm_pak, _this2.dt_srm_pb1, _this2.dt_srm_pb2, _this2.dt_srm_p0];\n        _this2.list = _this2.$myFun.srmCodeToName(res.data.list, options, ['evaluationType', 'evaluationClassification', 'evaluationCategory', 'state']);\n\n        _this2.list.forEach(function (v) {\n          if (_this2.dictList) {\n            _this2.dictList.forEach(function (val) {\n              if (v.evaluationStage == val.code) {\n                _this2.$set(v, 'evaluationStageCN', val.name);\n              }\n            });\n          }\n        });\n\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //表格显示条数变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //表格当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    //提交按钮单击事件\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      if (this.selectlistRow) {\n        this.$confirm(\"是否提交该信息\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          var dto = {\n            createTime: _this3.selectlistRow.createTime,\n            creator: _this3.selectlistRow.creator,\n            rowId: _this3.selectlistRow.rowId,\n            updateTime: _this3.selectlistRow.updateTime\n          };\n          api.submitRecord(dto).then(function () {\n            _this3.$message({\n              title: '成功',\n              message: '提交成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this3.getList();\n          });\n        }).catch(function () {\n          _this3.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择一条信息\",\n          type: \"warning\"\n        });\n      }\n    },\n    //关闭按钮单击事件\n    handleClose: function handleClose() {\n      var _this4 = this;\n\n      if (this.selectlistRow) {\n        this.$confirm(\"是否关闭该信息\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {// api.deleteRecord(val.rowId).then(() => {\n          //     this.$message({\n          //         title: '成功',\n          //         message: '关闭成功',\n          //         type: 'success',\n          //         duration: 2000\n          //     })\n          //     this.getList()\n          // })\n        }).catch(function () {\n          _this4.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择一条信息\",\n          type: \"warning\"\n        });\n      }\n    },\n    handleCreate: function handleCreate() {\n      //新增按钮单击事件方法\n      this.$refs.addMain.resetTemp();\n      this.$refs.addMain.dialogStatus = 'create';\n      this.$refs.addMain.dialogVisible = true;\n    },\n    handleUpdate: function handleUpdate(index, val) {\n      //编辑按钮单击事件方法\n      this.$refs.addMain.dialogStatus = 'update';\n      this.$refs.addMain.dialogVisible = true;\n      this.$refs.addMain.temp = _objectSpread({}, val);\n    },\n    // 行内删除\n    handleDelete: function handleDelete(index, val) {\n      var _this5 = this;\n\n      console.log(index, val); //删除按钮单击事件方法\n\n      this.$confirm(\"是否删除该信息\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        api.deleteRecord(val.rowId).then(function () {\n          _this5.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this5.getList();\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: \"info\",\n          message: \"已取消\"\n        });\n      });\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      this.selectlistRow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val.pop());\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectlistRow);\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.clearSelection();\n      this.$refs.tb.toggleRowSelection(val);\n    }\n  }\n};",null]}