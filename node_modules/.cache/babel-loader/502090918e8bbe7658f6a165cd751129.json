{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/measureManage/InstrumentStatistics/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/measureManage/InstrumentStatistics/index.vue","mtime":1596610933517},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/ems/deviceManagement/measureManage/InstrumentStatistics.js';\nimport Pagination from '@/components/Pagination';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'InstrumentStatistics',\n  //计量仪表数量分类安装统计\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      list: [],\n      total: 0,\n      listQuery: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 15\n      },\n      temp: {\n        rowId: undefined,\n        meterCode: undefined,\n        meterName: undefined,\n        installNum: undefined,\n        remark: undefined,\n        statusName: undefined\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      selectlistRow: null,\n      tableKey: 0,\n      //表格索引\n      rules: {\n        meterCode: [{\n          required: true,\n          message: '请选择仪表类别',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '长度不超过50',\n          trigger: 'blur'\n        }],\n        remark: [{\n          max: 50,\n          message: '长度不超过50',\n          trigger: 'blur'\n        }],\n        installNum: [{\n          required: true,\n          message: '请输入安装数量',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_sb_meterKind_list: function dt_sb_meterKind_list(state) {\n      return state.businessComponent.dt_sb_meterKind_list;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    // this.$store.dispatch('emsDict/getDicData', ['dt_role_type'])\n    this.$store.dispatch('businessComponent/getBusinessComponentData', ['dt_sb_meterKind_list']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  destroyed: function destroyed() {\n    var _this2 = this;\n\n    this.$store.dispatch('businessComponent/getBusinessComponentData', ['dt_sb_meterKind_list']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this2.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this3 = this;\n\n      api.query(this.listQuery).then(function (res) {\n        res.data.list.map(function (v, i) {\n          v.serial = i + 1;\n        });\n        _this3.list = res.data.list;\n        _this3.total = res.data.pages.count;\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp.modelCode = undefined;\n      this.temp.errInfo = undefined;\n      this.temp.remark = undefined;\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //表格显示条数变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //表格当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      //新增按钮单击事件方法\n      this.resetTemp();\n      this.temp.modelCode = this.modelCode;\n      this.temp.modelName = this.modelName;\n      this.temp.errInfo = this.errInfo;\n      this.temp.remark = this.remark;\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    //新增确认\n    create: function create() {\n      var _this4 = this;\n\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.create(_this4.temp).then(function () {\n            _this4.getList();\n\n            _this4.dialogFormVisible = false;\n\n            _this4.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate() {\n      //编辑弹窗\n      if (this.currentSelectedRow && this.selectedRows.length == 1) {\n        this.temp = JSON.parse(JSON.stringify(this.currentSelectedRow)); // copy obj\n\n        this.dialogStatus = 'update';\n        this.dialogFormVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //编辑确认\n    update: function update() {\n      var _this5 = this;\n\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.update(_this5.temp.rowId, _this5.temp).then(function () {\n            _this5.getList();\n\n            _this5.dialogFormVisible = false;\n\n            _this5.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      //删除按钮单击事件方法\n      if (this.selectedRows && this.selectedRows.length >= 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n\n          _this6.selectedRows.forEach(function (val, index) {\n            ids[index] = val.rowId;\n          });\n\n          api.deleteItems(ids).then(function () {\n            _this6.getList(), _this6.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this6.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      // if (this.isSingle) {\n      //     if (val.length > 1) {\n      //         this.$refs.tb.clearSelection() //清除其他行的选中\n      //         this.$refs.tb.toggleRowSelection(\n      //             val[val.length - 1],\n      //             'selected'\n      //         ) //单击行绑定点击事件\n      //     } else if (val.length === 1) {\n      //         this.selectedRows = val\n      //         this.currentSelectedRow = val[val.length - 1]\n      //     }\n      // } else {\n      //     this.selectedRows = val\n      //     this.currentSelectedRow = val[val.length - 1]\n      // }\n      this.selectedRows = val;\n      this.currentSelectedRow = val[val.length - 1];\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    }\n  }\n};",null]}