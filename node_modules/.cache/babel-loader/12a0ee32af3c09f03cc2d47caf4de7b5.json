{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/template/template2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/template/template2.vue","mtime":1596610933193},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport changeModuleSelect from '@/components/template/changeMoudleSelect';\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\n\nimport { selectlists, selecttree } from \"@/api/system/organization\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"zzjg\",\n  components: {\n    changeModuleSelect: changeModuleSelect,\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      modalnum: null,\n      //模板编号\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      //树高度样式\n      contentStyleObj: {\n        height: \"\"\n      },\n      treeData: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"organizationName\"\n      },\n      tableKey: 0,\n      //表格索引，虚拟dom渲染表格时使用\n      list: [],\n      total: 0,\n      orgName: [],\n      listLoading: true,\n      listQuery: {\n        parentOrgCode: undefined,\n        currentPage: 1,\n        pageSize: 10,\n        organizationCode: undefined,\n        organizationName: undefined\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_org_type: function dt_org_type(state) {\n      return state.dict.dt_org_type;\n    },\n    dt_org_function: function dt_org_function(state) {\n      return state.dict.dt_org_function;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_org_type\", \"dt_org_function\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.getList();\n    this.setTreeHeight();\n  },\n  methods: {\n    //模板变化\n    changeMoudle: function changeMoudle(val) {\n      this.$emit('changeSelect', val);\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    treeGetList: function treeGetList() {\n      var _this2 = this;\n\n      //点击树查询\n      selectlists(this.listQuery).then(function (response) {\n        _this2.list = response.data.list;\n        _this2.total = response.data.pages.count;\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      //查询组织列表\n      setTimeout(function () {\n        selectlists(_this3.listQuery).then(function (response) {\n          var options = [_this3.dt_org_type, _this3.dt_org_function];\n          response.data = _this3.$myFun.codeToName(response.data, options, [\"type\", \"businessFunction\"]);\n          _this3.list = response.data.list;\n          _this3.total = response.data.pages.count;\n        }), selecttree().then(function (response) {\n          //获取树数据\n          _this3.treeData = _this3.$myFun.addTreeRoot(response.data);\n          _this3.orgName = response.data.map(function (itmes) {\n            return [itmes.rowId, itmes.organizationName];\n          });\n        });\n      }, 1.5 * 100);\n    },\n    handleQuery: function handleQuery() {\n      var _this4 = this;\n\n      //查询\n      this.listQuery.page = 1;\n      selectlists(this.listQuery).then(function (response) {\n        var options = [_this4.dt_org_type, _this4.dt_org_function];\n        response.data = _this4.$myFun.codeToName(response.data, options, [\"type\", \"businessFunction\"]);\n        _this4.list = response.data.list;\n      });\n    },\n    //新增\n    handleCreate: function handleCreate() {},\n    //编辑\n    handleUpdate: function handleUpdate() {},\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击某行时执行\n    rowClick: function rowClick(val) {\n      if (this.isSingle) {\n        this.$refs.tb.clearSelection(); //清除其他行的选中\n      }\n\n      this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    handleDelete: function handleDelete() {//删除\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.temp.parentId = data.rowId;\n      this.listQuery.parentOrgCode = data.rowId;\n      this.treeGetList();\n    }\n  }\n};",null]}