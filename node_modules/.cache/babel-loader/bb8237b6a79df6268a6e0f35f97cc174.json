{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/barCodeRules/dialog/dialogAddMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/barCodeRules/dialog/dialogAddMain.vue","mtime":1596610933320},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/data-base/bar_code_rules';\nimport dialogAddSub from \"./dialogAddSub.vue\";\nimport AuthoType from '@/components/Select/AuthoType.vue'; //权限类型下拉组件\n\nimport { mapState } from 'vuex';\nexport default {\n  name: 'addMain',\n  components: {\n    dialogAddSub: dialogAddSub,\n    AuthoType: AuthoType\n  },\n  data: function data() {\n    return {\n      AddMainlist: {\n        ruleDescribe: '',\n        ruleType: '',\n        arrivalCompany: '',\n        barcodeRuleDetails: [] //所有的内容\n\n      },\n      barcodeRuleDetails: [],\n      //所有的内容\n      lastBarcodeRuleDetails: [],\n      //打开时的内容\n      selectedBarcodeRuleDetails: [],\n      //选中添加的内容\n      rowId: '',\n      dialogStatus: 0,\n      dialogFormVisible: false,\n      selectRows: [],\n      rules: {\n        ruleDescribe: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '颜色名称长度不能超过100',\n          trigger: 'blur'\n        }],\n        ruleType: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        arrivalCompany: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        seq: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_rules_type: function dt_rules_type(state) {\n      return state.dict.dt_rules_type;\n    }\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch('dict/getDicData', ['dt_rules_type']);\n  },\n  methods: {\n    //新增\n    addMainConfirm: function addMainConfirm() {\n      var _this = this;\n\n      this.$refs.AddMainlist.validate(function (valid) {\n        if (_this.checkSeq()) {\n          if (valid) {\n            _this.$confirm('确认保存吗?', '提示', {\n              confirmButtonText: '确定',\n              cancelButtonText: '取消',\n              type: 'warning'\n            }).then(function () {\n              _this.AddMainlist.barcodeRuleDetails = _this.barcodeRuleDetails;\n              api.addRules(_this.AddMainlist, _this.AddMainlist.ruleType).then(function () {\n                _this.$message({\n                  type: 'success',\n                  message: '保存成功'\n                });\n              });\n\n              _this.$emit('refreshTable');\n\n              _this.dialogFormVisible = false;\n            }).catch(function () {\n              _this.$message({\n                type: 'info',\n                message: '已取消'\n              });\n            });\n          } else {\n            return false;\n          }\n        }\n      });\n    },\n    //编辑\n    updateMainConfirm: function updateMainConfirm() {\n      var _this2 = this;\n\n      this.$refs.AddMainlist.validate(function (valid) {\n        if (_this2.checkSeq()) {\n          if (valid) {\n            _this2.$confirm('确认保存吗?', '提示', {\n              confirmButtonText: '确定',\n              cancelButtonText: '取消',\n              type: 'warning'\n            }).then(function () {\n              _this2.AddMainlist.barcodeRuleDetails = _this2.barcodeRuleDetails;\n              api.updateRules(_this2.rowId, _this2.AddMainlist, _this2.AddMainlist.ruleType).then(function () {\n                _this2.$message({\n                  type: 'success',\n                  message: '保存成功'\n                });\n\n                _this2.$emit('refreshTable');\n\n                _this2.dialogFormVisible = false;\n              });\n            }).catch(function () {\n              _this2.$message({\n                type: 'info',\n                message: '已取消'\n              });\n            });\n          } else {\n            return false;\n          }\n        }\n      });\n    },\n    //添加项\n    addSub: function addSub() {\n      if (this.AddMainlist.ruleType) {\n        this.$refs.addSubDialog.selectedList = this.barcodeRuleDetails;\n        this.$refs.addSubDialog.listQuery.ruleType = this.AddMainlist.ruleType;\n        this.$refs.addSubDialog.getAlternativeList();\n        this.$refs.addSubDialog.dialogFormVisible = true;\n      } else {\n        this.$message.warning('请先选择规则类型！');\n      }\n    },\n    //删除内容某一行\n    deleteContent: function deleteContent() {\n      var _this3 = this;\n\n      if (this.selectRows) {\n        this.$confirm('确认要删除该数据?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          if (_this3.selectRows.barcodeRuleId) {\n            _this3.lastBarcodeRuleDetails = _this3.lastBarcodeRuleDetails.filter(function (item) {\n              return item.rulePrepCode !== _this3.selectRows.rulePrepCode;\n            });\n\n            _this3.combineBarcodeRuleDetails();\n\n            var rulePrepCode = _this3.selectRows.rulePrepCode;\n            api.deleteDetail(_this3.rowId, rulePrepCode, _this3.selectRows.ruleType).then(function () {\n              _this3.selectedBarcodeRuleDetails = _this3.selectedBarcodeRuleDetails.filter(function (item) {\n                return item.rulePrepCode !== rulePrepCode;\n              });\n\n              _this3.$message({\n                type: 'success',\n                message: '删除成功'\n              });\n            });\n          } else {\n            _this3.selectedBarcodeRuleDetails = _this3.selectedBarcodeRuleDetails.filter(function (item) {\n              return item.rulePrepCode !== _this3.selectRows.rulePrepCode;\n            });\n\n            _this3.combineBarcodeRuleDetails();\n          }\n        }).catch(function () {\n          _this3.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.$message.warning('请勾选一条记录！');\n        return;\n      }\n    },\n    setRulesContent: function setRulesContent(val) {\n      this.selectedBarcodeRuleDetails = val;\n      this.combineBarcodeRuleDetails();\n      this.$refs.addSubDialog.dialogFormVisible = false;\n    },\n    addSelectChange: function addSelectChange(val) {\n      this.selectRows = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.detailtable.clearSelection();\n        this.$refs.detailtable.toggleRowSelection(val[val.length - 1], 'selected');\n      }\n    },\n    mainRowClick: function mainRowClick(val) {\n      this.selectRows = val;\n      this.$refs.detailtable.clearSelection();\n      this.$refs.detailtable.toggleRowSelection(val, 'selected');\n    },\n    //合并已有和已选\n    combineBarcodeRuleDetails: function combineBarcodeRuleDetails() {\n      var _this4 = this;\n\n      this.barcodeRuleDetails = [];\n      this.lastBarcodeRuleDetails.forEach(function (item) {\n        _this4.barcodeRuleDetails.push(item);\n      });\n      this.selectedBarcodeRuleDetails.forEach(function (item) {\n        _this4.barcodeRuleDetails.push(item);\n      });\n    },\n    //规则类型变化重新赋值\n    ruleTypeChange: function ruleTypeChange() {\n      this.barcodeRuleDetails = [];\n    },\n    //检查顺序\n    checkSeq: function checkSeq() {\n      var detail = this.barcodeRuleDetails;\n      var seqArr = new Array();\n\n      for (var i = 0; i < detail.length; i++) {\n        if (!detail[i].seq) {\n          this.$message({\n            type: 'error',\n            message: '请填写顺序'\n          });\n          return false;\n        } else if (!detail[i].seq.toString().match(/^(0|\\+?[1-9][0-9]*)$/)) {\n          this.$message({\n            type: 'error',\n            message: '请填写正整数'\n          });\n          return false;\n        } else {\n          seqArr.push(parseInt(detail[i].seq));\n        }\n      }\n\n      var arrf = Array.from(new Set(seqArr));\n\n      if (seqArr.length !== arrf.length) {\n        this.$message({\n          type: 'error',\n          message: '顺序不能相同'\n        });\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n};",null]}