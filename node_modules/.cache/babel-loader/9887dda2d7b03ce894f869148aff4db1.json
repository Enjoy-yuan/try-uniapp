{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/targetInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/equipmentProducts/tabs/targetInfo.vue","mtime":1596611178236},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"targetInfo\",\n  props: ['code'],\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      listLoading: false,\n      list: [],\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        normName: undefined\n      },\n      dialogFormVisible: false,\n      dialogFormType: undefined,\n      temp: {\n        company: undefined,\n        companyName: undefined,\n        normCode: undefined,\n        normName: undefined,\n        remark: undefined\n      },\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      tableKey: 0,\n      //表格索引\n      rules: {\n        normCode: [{\n          required: true,\n          message: '指标编码不能为空',\n          trigger: ['blur', 'chnage']\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字组成，长度为32',\n          trigger: ['blur', 'chnage']\n        }],\n        normName: [{\n          required: true,\n          message: '指标名称不能为空',\n          trigger: ['blur', 'chnage']\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[\\u4e00-\\u9fa5]+$/,\n          message: '只允许中文输入',\n          trigger: ['blur', 'chnage']\n        }],\n        company: [{\n          required: true,\n          message: '请选择单位',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_norm_company: function iot_norm_company(state) {\n      return state.iotDict.iot_norm_company;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getCompany: function getCompany(val) {\n      var arr = this.iot_norm_company.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.companyName = arr[0].dictItemValue;\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      api.queryNorms(this.code, this.listQuery).then(function (res) {\n        _this2.list = res.data;\n        _this2.list = _this2.$myFun.srmCodeToName(res.data, [_this2.iot_norm_company], ['company']);\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.dialogFormType = 'create';\n      this.dialogFormVisible = true;\n    },\n    create: throttle(function () {\n      var _this3 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          api.addNorm(_this3.code, _this3.temp).then(function () {\n            _this3.getList();\n\n            _this3.dialogFormVisible = false;\n\n            _this3.resTemp();\n\n            _this3.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate(normCode) {\n      var _this4 = this;\n\n      api.queryNorm(this.code, normCode).then(function (res) {\n        _this4.temp = res.data;\n        _this4.dialogFormType = 'update';\n        _this4.dialogFormVisible = true;\n      });\n    },\n    update: throttle(function () {\n      var _this5 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          api.updateNorm(_this5.code, _this5.temp.normCode, _this5.temp).then(function () {\n            _this5.getList();\n\n            _this5.dialogFormVisible = false;\n\n            _this5.resTemp();\n\n            _this5.$notify({\n              title: '成功',\n              message: '修改成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(normCode) {\n      var _this6 = this;\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteNorm(_this6.code, normCode).then(function () {\n          _this6.getList();\n\n          _this6.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this6.getList();\n        });\n      }).catch(function () {\n        _this6.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    resTemp: function resTemp() {\n      this.temp = {};\n    }\n  }\n};",null]}