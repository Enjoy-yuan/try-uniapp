{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/dataQuery/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/MOM/dataQuery/index.vue","mtime":1598598579651},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Pagination from '@/components/Pagination';\nimport echartsCom from \"./components/echartsCom\";\nimport throttle from 'lodash/throttle';\nimport * as api from '@/api/project/iot/MOM/dataQuery';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'dataQuery',\n  components: {\n    Pagination: Pagination,\n    echartsCom: echartsCom\n  },\n  data: function data() {\n    return {\n      // 查询数据\n      listQuery: {\n        project: '',\n        // 项目名称\n        type: '',\n        // 设备类型\n        name: '',\n        // 设备名称\n        position: '',\n        // 设备点位\n        time: [],\n        // 时间\n        frequency: '',\n        // 采样频率\n        mode: '',\n        // 采样模式\n        startTime: '',\n        // 开始时间\n        endTime: '',\n        // 结束时间\n        currentPage: 1,\n        pageSize: 15\n      },\n      projects: [],\n      // 项目\n      projectCode: '',\n      // 项目code\n      deviceTypes: [],\n      // 设备类型\n      deviceNames: [],\n      // 设备名称\n      devicePositions: [],\n      // 设备点位\n      list: [],\n      theight: 0,\n      // 自适应表格高度\n      total: 0,\n      // 当前数据总条数\n      listLoading: false,\n      // 表格加载loading\n      iot_sample_rate_reverse: [],\n      // 倒叙数组\n      // 表格数据 mock\n      labels: [// {\n        //     label: 'A相总电压谐波畸变率',\n        //     value: 'value0'\n        // },\n        // {\n        //     label: 'A相电流',\n        //     value: 'value1'\n        // },\n        // {\n        //     label: 'B相电流',\n        //     value: 'value2'\n        // }\n      ],\n      tableData: [// {\n        //     value0: '1',\n        //     value1: '2',\n        //     value2: '3',\n        //     time: '567890'\n        // },\n        // {\n        //     value0: '2',\n        //     value1: '3',\n        //     value2: '4',\n        //     time: '5678903456'\n        // }\n      ]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_sample_rate: function iot_sample_rate(state) {\n      return state.iotDict.iot_sample_rate;\n    },\n    iot_sample_mode: function iot_sample_mode(state) {\n      return state.iotDict.iot_sample_mode;\n    }\n  }), {\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var times = 86400000 * 30;\n          var curSelectTime = new Date(_this.minDate).getTime();\n          var before = curSelectTime - times;\n          var after = curSelectTime + times;\n          return time.getTime() > after || time.getTime() < before;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        }\n      };\n    }\n  }),\n  created: function created() {\n    var _this2 = this;\n\n    this.setTableHeight();\n\n    window.onresize = function () {\n      _this2.setTableHeight();\n    }; // 获取采样频率，采样方式\n\n\n    this.$store.dispatch('iotDict/getDicData', ['iot_sample_rate', 'iot_sample_mode']);\n    setTimeout(function () {\n      _this2.iot_sample_rate_reverse = _this2.iot_sample_rate.reverse();\n      _this2.listQuery.frequency = _this2.iot_sample_rate_reverse[0].dictItemKey;\n      _this2.listQuery.mode = _this2.iot_sample_mode[0].dictItemValue;\n    }, 1000);\n    var nowYear = new Date().getFullYear();\n    var nowMonth = new Date().getMonth() + 1;\n    var nowDate = new Date().getDate();\n    var nowHours = new Date().getHours();\n    var nowMinutes = new Date().getMinutes();\n    var nowSeconds = new Date().getSeconds();\n    nowMonth = nowMonth < 10 ? '-0' + nowMonth : '-' + nowMonth;\n    nowDate = nowDate < 10 ? '-0' + nowDate : '-' + nowDate;\n    nowHours = nowHours < 10 ? '0' + nowHours : nowHours;\n    nowMinutes = nowMinutes < 10 ? '0' + nowMinutes : nowMinutes;\n    nowSeconds = nowSeconds < 10 ? '0' + nowSeconds : nowSeconds;\n    this.listQuery.time = [nowYear + nowMonth + nowDate + ' 00:00:00', nowYear + nowMonth + nowDate + ' ' + nowHours + ':' + nowMinutes + ':' + nowSeconds]; // 初始化图表数据\n    // this.list = [\n    //     {\n    //         time: nowYear + nowMonth + nowDate + ' 00:00:00',\n    //         数据: '0'\n    //     },\n    //     {\n    //         time: nowYear + nowMonth + nowDate + ' 23:00:00',\n    //         数据: '0'\n    //     }\n    // ]\n    // 获取项目类型\n\n    api.getProject().then(function (res) {\n      _this2.projects = res.data;\n    });\n  },\n  mounted: function mounted() {// this.$refs.echartsCom.showEcharts()\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    // 项目名称的模糊搜索\n    querySearch: function querySearch(queryString, cb) {\n      var projects = this.projects;\n      this.projects.map(function (item, index) {\n        projects[index].value = item.projectName;\n      });\n      var results = queryString ? projects.filter(this.createFilter(queryString)) : projects;\n      cb(results);\n    },\n    createFilter: function createFilter(queryString) {\n      return function (project) {\n        return project.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    // 选中项目或清空项目\n    handleSelect: function handleSelect(item) {\n      var _this3 = this;\n\n      // 重置数据\n      this.deviceTypes = [];\n      this.deviceNames = [];\n      this.devicePositions = [];\n      this.listQuery.type = '';\n      this.listQuery.name = '';\n      this.listQuery.position = '';\n\n      if (item) {\n        // 获取设备类型\n        this.projectCode = item.projectCode;\n        api.getDeviceType(item.projectCode).then(function (res) {\n          _this3.deviceTypes = res.data;\n        });\n      }\n    },\n    // 选中设备类型\n    changeDeviceTypes: function changeDeviceTypes(typeCode) {\n      var _this4 = this;\n\n      // 重置数据\n      this.deviceNames = [];\n      this.devicePositions = [];\n      this.listQuery.name = '';\n      this.listQuery.position = '';\n\n      if (typeCode) {\n        // 获取设备名称\n        api.getDevice(this.projectCode, typeCode).then(function (res) {\n          _this4.deviceNames = res.data;\n          res.data.map(function (item, index) {\n            _this4.deviceNames[index].deviceName = item.deviceCode + '-' + item.deviceName;\n          });\n        });\n      }\n    },\n    // 选中设备名称\n    changeDeviceNames: function changeDeviceNames() {\n      var _this5 = this;\n\n      // 重置数据\n      this.devicePositions = [];\n      this.listQuery.position = '';\n      var postData = [];\n      this.deviceNames.map(function (item) {\n        if (_this5.listQuery.name.indexOf(item.deviceCode) !== -1) {\n          postData.push(item);\n        }\n      }); // 获取设备点位\n\n      api.postPoint(postData).then(function (res) {\n        _this5.devicePositions = res.data;\n      });\n    },\n    //表格查询\n    handleQuery: throttle(function () {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    // 搜索方法\n    getList: function getList() {\n      var _this6 = this;\n\n      this.listLoading = true;\n      var projectCode = ''; // console.log(this.listQuery)\n\n      this.projects.map(function (item) {\n        if (item.projectName === _this6.listQuery.project) {\n          projectCode = item.projectCode;\n        }\n      });\n      var postData = {\n        deviceCodeList: this.listQuery.name,\n        endTime: this.listQuery.time[1],\n        pointCodeList: this.listQuery.position,\n        projectCode: projectCode,\n        sampleMode: this.listQuery.mode,\n        sampleRate: this.listQuery.frequency,\n        startTime: this.listQuery.time[0],\n        typeCode: this.listQuery.type\n      };\n      api.postDataQuery(postData).then(function (res) {\n        setTimeout(function () {\n          _this6.listLoading = false;\n        }, 1.5 * 100);\n        _this6.list = res.data;\n\n        _this6.$refs.echartsCom.showEcharts();\n      });\n      api.postDataQuery(postData, {\n        currentPage: this.listQuery.currentPage,\n        pageSize: this.listQuery.pageSize\n      }).then(function (res) {\n        // 重置数据\n        _this6.total = 0;\n        _this6.labels = [];\n        _this6.tableData = [];\n\n        if (res.data.list.length !== 0) {\n          _this6.total = res.data.pages.count;\n          var keys = Object.keys(res.data.list[0]); // 取键，不按顺序取\n          // keys.splice(keys.indexOf('time'),1)\n\n          keys.shift();\n          keys.map(function (childItem, childIndex) {\n            var objLabels = {};\n            objLabels.label = childItem;\n            objLabels.value = 'value' + childIndex;\n\n            _this6.labels.push(objLabels);\n          }); // console.log(this.labels)\n\n          res.data.list.map(function (item) {\n            var objTableData = {};\n            var values = Object.values(item); // 取值\n\n            objTableData.time = values.shift();\n            values.map(function (childItem, childIndex) {\n              objTableData['value' + childIndex] = childItem;\n            });\n\n            _this6.tableData.push(objTableData);\n          }); // console.log(this.tableData)\n        }\n      });\n    }\n  }\n};",null]}