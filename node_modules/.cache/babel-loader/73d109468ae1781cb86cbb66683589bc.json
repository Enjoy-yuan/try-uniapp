{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/workCenter/rightcontent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/data-base/workCenter/rightcontent.vue","mtime":1600927611474},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/data-base/work-center';\nimport Pagination from '@/components/Pagination';\nimport warehouseSelect from '@/components/Select/warehouse-select.vue';\nimport orgSelect from '@/components/Select/orgSelect.vue';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'workCenter',\n  components: {\n    Pagination: Pagination,\n    warehouseSelect: warehouseSelect,\n    orgSelect: orgSelect\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      DT_ORG_TYPE: 'dt_org_type_factory',\n      theight: 0,\n      //表格高度\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        orgCode: undefined,\n        workCenterCode: undefined,\n        workCenterName: undefined,\n        parentCode: undefined\n      },\n      temp: {\n        orgCode: undefined,\n        workCenterType: undefined,\n        workCenterCode: undefined,\n        workCenterName: undefined,\n        productNum: undefined,\n        feedArea: undefined,\n        parentCode: undefined,\n        workCenterClass: undefined,\n        workCenterGroup: undefined,\n        workCenterModel: undefined,\n        beatTimeunit: undefined,\n        productBeat: undefined,\n        bufferArea: undefined\n      },\n      orgCode: undefined,\n      parentCode: undefined,\n      parentName: undefined,\n      dialogFormVisible: false,\n      dialogStatus: '',\n      tableKey: 0,\n      rules: {\n        workCenterType: [{\n          required: true,\n          message: '工作中心类型不能为空',\n          trigger: 'blur'\n        }],\n        workCenterClass: [{\n          required: true,\n          message: '工作中心类别不能为空',\n          trigger: 'blur'\n        }],\n        workCenterCode: [{\n          required: true,\n          message: '工作中心编号不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z-_0-9]{0,32}$/,\n          message: '由大写字母、数字、-和_组成，长度为32',\n          trigger: 'blur'\n        }],\n        workCenterName: [{\n          required: true,\n          message: '工作中心编号不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '颜色简称长度不能超过100',\n          trigger: 'blur'\n        }],\n        productNum: [{\n          pattern: /^[1-9]\\d{0,8}$/,\n          message: '由正数组成，长度不能超过8',\n          trigger: 'blur'\n        }],\n        productBeat: [{\n          pattern: /^[0-9]{0,6}(\\.[0-9]{4})?$/,\n          message: '由正数组成，保留四位有效数，长度不能超过6',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_workcenter_type: function dt_workcenter_type(state) {\n      return state.dict.dt_workcenter_type;\n    },\n    dt_workcenter_class: function dt_workcenter_class(state) {\n      return state.dict.dt_workcenter_class;\n    },\n    dt_workcenter_group: function dt_workcenter_group(state) {\n      return state.dict.dt_workcenter_group;\n    },\n    dt_workcenter_model: function dt_workcenter_model(state) {\n      return state.dict.dt_workcenter_model;\n    },\n    dt_timeunit: function dt_timeunit(state) {\n      return state.dict.dt_timeunit;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('dict/getDicData', ['dt_workcenter_type', 'dt_workcenter_class', 'dt_workcenter_group', 'dt_workcenter_model', 'dt_timeunit']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getList: function getList(node) {\n      var _this2 = this;\n\n      if (node) {\n        this.orgCode = node.orgCode;\n\n        if (node.workCenterCode != undefined) {\n          this.parentCode = node.workCenterCode;\n          this.parentName = node.label;\n        } else {\n          this.parentCode = '';\n          this.parentName = '';\n        }\n\n        this.listQuery.orgCode = node.orgCode;\n        this.listQuery.parentCode = node.workCenterCode;\n      }\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      if (!this.orgCode) {\n        this.$message.warning('请选择对应工厂或者上级工作中心！');\n        return;\n      }\n\n      this.resetTemp();\n      this.temp.orgCode = this.orgCode;\n      this.temp.parentCode = this.parentCode;\n      this.temp.parentName = this.parentName;\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    // handleUpdate(row) {\n    //   if (!this.orgCode) {\n    //     this.$message.warning('请选择对应工厂或者上级工作中心！')\n    //     return\n    //   }\n    //   this.workCenterCode = row.workCenterCode\n    //   api.getRecord(row.workCenterCode).then(res => {\n    //     this.temp = res\n    //     this.temp.parentCode = this.parentCode\n    //     this.temp.parentName = this.parentName\n    //     this.dialogStatus = 'update'\n    //     this.dialogFormVisible = true\n    //   })\n    // },\n    // 获取表格选中时的数据\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val;\n    },\n    handleUpdate: function handleUpdate() {\n      var _this3 = this;\n\n      //编辑弹窗\n      // if (!this.orgCode) {\n      //     this.$message.warning('请选择对应工厂或者上级工作中心！')\n      //     return\n      // }\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.readonly = true; //员工编码不可以编写\n\n        this.temp = this.selectlistRow[0]; // copy obj\n\n        api.getRecord(this.temp.workCenterCode).then(function (res) {\n          _this3.temp = res.data;\n          _this3.dialogStatus = 'update';\n          _this3.dialogFormVisible = true; // this.$nextTick(() => {\n          //   this.$refs['temp'].clearValidate()\n          // })\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update: function update() {\n      var _this4 = this;\n\n      //编辑\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this4.temp.workCenterCode, _this4.temp).then(function () {\n            _this4.getList();\n\n            _this4.dialogFormVisible = false;\n\n            _this4.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDeleteBatch: function handleDeleteBatch() {\n      if (this.selectCode.length == 0) {\n        this.$message.warning('请勾选记录！');\n        return;\n      }\n\n      this.delete(this.selectCode);\n    },\n    // handleDelete(row) {\n    //   let codes = []\n    //   codes.push(row.workCenterCode)\n    //   this.delete(codes)\n    // },\n    // delete(codes) {\n    //   this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n    //     confirmButtonText: '确定',\n    //     cancelButtonText: '取消',\n    //     type: 'warning'\n    //   }).then(() => {\n    //     api.deleteRecord(codes).then(res => {\n    //       this.handleChange()\n    //       this.getList()\n    //       this.$notify({\n    //         title: '成功',\n    //         message: '删除成功',\n    //         type: 'success',\n    //         duration: 2000\n    //       })\n    //     })\n    //   })\n    // },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      //删除列表\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n\n          _this5.selectlistRow.forEach(function (val, index) {\n            ids[index] = val.workCenterCode;\n          });\n\n          api.deleteRecord(ids).then(function () {\n            _this5.getList(), _this5.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this5.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    create: function create() {\n      var _this6 = this;\n\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this6.temp).then(function () {\n            _this6.handleChange();\n\n            _this6.getList();\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // update() {\n    //   this.$refs.temp.validate((valid) => {\n    //     if (valid) {\n    //       api.updateRecord(this.workCenterCode, this.temp).then(res => {\n    //         this.handleChange()\n    //         this.getList()\n    //         this.dialogFormVisible = false\n    //         this.$notify({\n    //           title: '成功',\n    //           message: '更新成功',\n    //           type: 'success',\n    //           duration: 2000\n    //         })\n    //         this.$refs.temp.resetFields()\n    //       })\n    //     } else {\n    //       return false\n    //     }\n    //   })\n    // },\n    cancel: function cancel() {\n      this.dialogFormVisible = false;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        orgCode: undefined,\n        workCenterType: undefined,\n        workCenterCode: undefined,\n        workCenterName: undefined,\n        productNum: undefined,\n        feedArea: undefined,\n        parentCode: undefined,\n        workCenterClass: undefined,\n        workCenterGroup: undefined,\n        workCenterModel: undefined,\n        beatTimeunit: undefined,\n        productBeat: undefined,\n        bufferArea: undefined\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.selectCode = selection.map(function (v) {\n        return v.workCenterCode;\n      });\n    },\n    handleChange: function handleChange() {\n      this.$emit('fresh', true);\n    }\n  }\n};",null]}