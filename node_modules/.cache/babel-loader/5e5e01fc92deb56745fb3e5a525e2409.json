{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processStartTest/addKey.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processStartTest/addKey.vue","mtime":1600927611542},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\n\nimport { selectlists, selecttree } from \"@/api/system/organization\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"organizationStructure\",\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      treeData: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"organizationName\"\n      },\n      tableKey: 0,\n      theight: 0,\n      //表格高度\n      list: [],\n      listSelected: [],\n      total: 0,\n      orgType: [],\n      activeName: \"\",\n      orgFun: [],\n      orgName: [],\n      listLoading: true,\n      listQuery: {\n        parentOrgCode: undefined,\n        currentPage: 1,\n        pageSize: 15,\n        organizationCode: undefined,\n        organizationName: undefined\n      },\n      showReviewer: false,\n      temp: {\n        state: 1,\n        email: undefined,\n        postalCode: undefined\n      },\n      dialogFormVisible: false,\n      dialogStatus: \"\",\n      dialogPvVisible: false,\n      pvData: [],\n      contentStyleObj: {\n        height: \"\"\n      },\n      downloadLoading: false\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_org_type: function dt_org_type(state) {\n      return state.dict.dt_org_type;\n    },\n    dt_org_function: function dt_org_function(state) {\n      return state.dict.dt_org_function;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_org_type\", \"dt_org_function\"]);\n    this.getList();\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.setTreeHeight();\n  },\n  methods: {\n    treeGetList: function treeGetList() {\n      var _this2 = this;\n\n      //点击树查询\n      selectlists(this.listQuery).then(function (response) {\n        _this2.list = response.data.list;\n        _this2.total = response.data.pages.count;\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      //查询组织列表\n      setTimeout(function () {\n        selectlists(_this3.listQuery).then(function (response) {\n          var options = [_this3.dt_org_type, _this3.dt_org_function];\n          response.data = _this3.$myFun.codeToName(response.data, options, [\"type\", \"businessFunction\"]);\n          _this3.list = response.data.list;\n          _this3.total = response.data.pages.count;\n        }), selecttree().then(function (response) {\n          //获取树数据\n          _this3.treeData = _this3.$myFun.addTreeRoot(response.data);\n          _this3.orgName = response.data.map(function (itmes) {\n            return [itmes.rowId, itmes.organizationName];\n          });\n        });\n\n        if (_this3.listSelected) {\n          _this3.listSelected.forEach(function (items) {\n            _this3.list.forEach(function (item, index) {\n              if (item.rowId === items.rowId) {\n                _this3.$nextTick(function () {\n                  this.checked(index);\n                });\n              }\n            });\n          });\n        }\n      }, 1.5 * 100);\n    },\n    checked: function checked(i) {\n      this.$refs.tb_bx.toggleRowSelection(this.list[i], true);\n    },\n    //检查是否取消勾选\n    checkUnsel: function checkUnsel(val, row) {\n      var isuncheck = true;\n      val.forEach(function (item) {\n        if (item.rowId === row.rowId) {\n          isuncheck = false;\n        }\n      });\n      return isuncheck;\n    },\n    selectMain: function selectMain(val, row) {\n      var _this4 = this;\n\n      var isuncheck = this.checkUnsel(val, row);\n\n      if (!isuncheck) {\n        if (this.unMutiple) {\n          if (val.length == 1) {\n            this.listSelected = val;\n          } else {\n            this.$message({\n              title: \"警告\",\n              message: \"请选择一条信息\",\n              type: \"warning\"\n            });\n          }\n        } else {\n          if (this.listSelected) {\n            val.forEach(function (items, indexv) {\n              var isSelected = false;\n\n              _this4.listSelected.forEach(function (item) {\n                if (item.rowId === items.rowId) {\n                  isSelected = true;\n                }\n              });\n\n              if (!isSelected) {\n                _this4.listSelected.push(val[indexv]);\n              }\n            });\n          } else {\n            this.listSelected = val;\n          }\n        }\n      } else {\n        this.listSelected = this.listSelected.filter(function (item) {\n          return item.rowId !== row.rowId;\n        });\n      }\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    // 获取表格选中时的数据\n    selectRow: function selectRow(val) {\n      if (val.length > 1) {\n        this.$refs.tb_a.clearSelection(); //清除其他行的选中\n\n        this.$refs.tb_a.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n      } else if (val.length === 1) {\n        this.selectlistRow = val;\n      }\n    },\n    // rowClick (val) {\n    //     this.$refs.tb_a.clearSelection(); //清除其他行的选中\n    //     this.$refs.tb_a.toggleRowSelection(val); //单击行绑定点击事件\n    // },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.temp.parentId = data.rowId;\n      this.listQuery.parentOrgCode = data.rowId;\n      this.treeGetList();\n    }\n  }\n};",null]}