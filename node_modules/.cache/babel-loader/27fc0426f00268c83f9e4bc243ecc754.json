{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processDesign/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processDesign/index.vue","mtime":1601025800810},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport upload from \"./upload\";\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\n\nimport * as api from \"@/api/system/process/processDesign\";\nexport default {\n  name: \"processDesign\",\n  components: {\n    Pagination: Pagination,\n    upload: upload\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      //树高度样式\n      contentStyleObj: {\n        height: \"\"\n      },\n      mainList: {\n        category: '',\n        code: '',\n        descrintior: '',\n        engname: '',\n        key: '',\n        name: '',\n        nodetype: ''\n      },\n      treeData: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"name\"\n      },\n      tableKey: 0,\n      //表格索引，虚拟dom渲染表格时使用\n      list: [],\n      total: 0,\n      orgName: [],\n      dialogStatus: \"\",\n      activeCollNames: ['1'],\n      listLoading: true,\n      dialogVisible: false,\n      dialogVisibleupload: false,\n      dialogVisiblesearch: false,\n      listQuery: {\n        category: undefined,\n        engname: undefined,\n        key: undefined,\n        name: undefined,\n        queryType: undefined,\n        currentPage: 1,\n        pageSize: 10\n      },\n      categoryName: '',\n      viewpicsrc: \"\"\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.getTreeList();\n    this.getList();\n    this.setTreeHeight();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    getTreeList: function getTreeList() {\n      var _this2 = this;\n\n      api.getModelTree('tree').then(function (rest) {\n        rest = rest.data;\n        _this2.treeData = _this2.$myFun.reDataToWorkTree(rest, 'category');\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        api.getExtModel(_this3.listQuery).then(function (res) {\n          res = res.data;\n          _this3.list = res.list;\n          _this3.total = res.pages.count;\n        });\n      }, 1.5 * 100);\n    },\n    //新增\n    handleCreate: function handleCreate() {\n      this.resetTemp();\n\n      if (this.listQuery.category) {\n        this.mainList.category = this.listQuery.category;\n        this.dialogVisible = true;\n        this.dialogStatus = 'create';\n      } else {\n        this.$message({\n          title: \"提示\",\n          message: \"请先选择节点\",\n          type: \"warning\",\n          duration: 2000\n        });\n      }\n    },\n    //编辑\n    handleUpdate: function handleUpdate(index, row) {\n      this.dialogVisible = true;\n      this.mainList = row;\n      this.dialogStatus = 'update';\n    },\n    handleDelete: function handleDelete(index, row) {\n      var _this4 = this;\n\n      //删除\n      this.$confirm(\"此操作将删除所选中数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this4.listLoading = true;\n        api.deleteList(row.id).then(function () {\n          _this4.getList();\n\n          _this4.$message({\n            title: \"成功\",\n            message: \"删除成功\",\n            type: \"success\",\n            duration: 2000\n          });\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleupload: function handleupload(index, row) {\n      //上传\n      console.log(index, row);\n      this.$refs.uploadRef.dialogVisibleupload = true;\n      this.$refs.uploadRef.action = \"http://172.30.251.18:2020/workflow/v1/actExtModel/uploadmodeler/\".concat(row.modelLinkId);\n    },\n    handleDownload: function handleDownload(index, row) {\n      //下载\n      window.open(\"http://172.30.251.18:2020/workflow/v1/actExtModel/expworklfow/\".concat(row.modelLinkId), '_self');\n    },\n    handleViewer: function handleViewer(index, row) {\n      //流程图查看\n      this.dialogVisiblesearch = true;\n      this.viewpicsrc = \"http://172.30.251.18:2020/workflow/v1/actExtModel/viewProcessImage/\".concat(row.modelLinkId);\n    },\n    handlepublish: function handlepublish(index, row) {\n      var _this5 = this;\n\n      //流程图发布\n      api.publishWorkflow(row.id, row.modelLinkId).then(function (res) {\n        if (res.status === 200) {\n          _this5.$message({\n            type: \"success\",\n            message: \"发布成功\"\n          });\n        } else {\n          _this5.$message({\n            type: \"warning\",\n            messfage: \"发布未成功,请重试\"\n          });\n        }\n      });\n    },\n    handlereturn: function handlereturn(index, row) {\n      var _this6 = this;\n\n      //还原版本\n      api.revertWorkflow(row.modelLinkId).then(function (res) {\n        if (res.status === 200 || res.status === 201) {\n          _this6.$message({\n            type: \"success\",\n            message: \"还原成功\"\n          });\n        }\n      });\n    },\n    handleAdd: function handleAdd() {\n      var _this7 = this;\n\n      //添加保存\n      this.mainList.category = this.listQuery.category;\n      api.addList(this.mainList).then(function (res) {\n        if (res.status === 200 || res.status === 201) {\n          _this7.$message({\n            type: \"success\",\n            message: \"保存成功\"\n          });\n        }\n\n        _this7.dialogVisible = false;\n      });\n    },\n    handleEdit: function handleEdit() {//编辑保存\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击某行时执行\n    rowClick: function rowClick(val) {\n      if (this.isSingle) {\n        this.$refs.tb.clearSelection(); //清除其他行的选中\n      }\n\n      this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.categoryName = data.name;\n      this.listQuery.category = data.id;\n      this.listQuery.queryType = data.nodetype;\n      this.getList();\n    },\n    resetTemp: function resetTemp() {\n      this.mainList = {};\n    },\n    handleDesign: function handleDesign(index, data) {\n      window.open(\"/workflow/modeler.html?modelId=\".concat(data.modelLinkId), \"newwindow\");\n    }\n  }\n};",null]}