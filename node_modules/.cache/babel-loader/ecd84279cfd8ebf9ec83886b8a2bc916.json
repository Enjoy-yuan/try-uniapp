{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/IOT/IOTGR/GRTabs/info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/IOT/IOTGR/GRTabs/info.vue","mtime":1600927611487},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nimport gatewaySelect from \"../../../components/gatewaySelect\";\nimport * as api from \"@/api/project/iot/IOT/ga\";\nexport default {\n  name: \"info\",\n  props: ['code', 'row'],\n  data: function data() {\n    return {\n      dialogFormVisible: false,\n      form: {\n        \"gatewayName\": undefined,\n        \"gatewaySn\": undefined,\n        \"gatewayType\": undefined,\n        \"installationAddress\": undefined,\n        \"networkingWay\": undefined,\n        \"operator\": undefined,\n        \"projectCode\": undefined,\n        \"remark\": undefined,\n        \"reportingPeriod\": undefined\n      },\n      temp: {},\n      mqttUser: {},\n      rules: {\n        gatewayName: [{\n          required: true,\n          message: '网关名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9#\\u4e00-\\u9fa5]+$/,\n          message: '支持大小写中英文及#符号',\n          trigger: 'blur'\n        }],\n        gatewaySn: [{\n          required: true,\n          message: '序列号名称不能为空',\n          trigger: ['blur', 'chnage']\n        }],\n        gatewayType: [{\n          required: true,\n          message: '请选择产品型号',\n          trigger: ['blur', 'chnage']\n        }],\n        networkingWay: [{\n          required: true,\n          message: '请选择联网方式',\n          trigger: ['blur', 'chnage']\n        }],\n        operator: [{\n          required: true,\n          message: '请选择上报周期',\n          trigger: ['blur', 'chnage']\n        }],\n        reportingPeriod: [{\n          required: true,\n          message: '请选择产品型号',\n          trigger: ['blur', 'chnage']\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_operator: function iot_operator(state) {\n      return state.iotDict.iot_operator;\n    },\n    iot_networking_way: function iot_networking_way(state) {\n      return state.iotDict.iot_networking_way;\n    },\n    iot_reporting_period: function iot_reporting_period(state) {\n      return state.iotDict.iot_reporting_period;\n    }\n  })),\n  components: {\n    gatewaySelect: gatewaySelect\n  },\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      api.queryGateway(this.code, this.row.gatewayCode).then(function (res) {\n        _this.form = res.data;\n        _this.temp = res.data;\n        _this.mqttUser = res.data.mqttUser ? res.data.mqttUser : {};\n      });\n    },\n    // 生成SN\n    getSN: throttle(function () {\n      var _this2 = this;\n\n      api.getGenerate(this.code).then(function (res) {\n        _this2.temp.gatewaySn = res.data;\n      });\n    }, 3000, {\n      leading: true,\n      trailing: false\n    }),\n    // 获取型号\n    getGatewayType: function getGatewayType(val) {\n      this.temp.gatewayType = val;\n    },\n    // 编辑\n    handleUpdate: function handleUpdate() {\n      var _this3 = this;\n\n      api.queryGateway(this.code, this.row.gatewayCode).then(function (res) {\n        _this3.form = res.data;\n        _this3.temp = res.data;\n        _this3.dialogFormVisible = true;\n      });\n    },\n    update: throttle(function () {\n      var _this4 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          _this4.temp.projectCode = _this4.code;\n          api.updateGateway(_this4.code, _this4.row.gatewayCode, _this4.temp).then(function () {\n            _this4.getList();\n\n            _this4.dialogFormVisible = false;\n\n            _this4.resTemp();\n\n            _this4.$notify({\n              title: '成功',\n              message: '更改成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    handleDownload: function handleDownload() {\n      api.downloadModal(this.row.gatewayCode).then(function (res) {\n        var blob = new Blob([res.data], {\n          type: 'application/zip;charset=utf-8'\n        });\n        var contentDisposition = res.headers['content-disposition']; //从response的headers中获取filename,  设置的文件名;\n\n        var filename = contentDisposition.substring(contentDisposition.indexOf('=') + 1);\n        var downloadElement = document.createElement('a');\n        var href = window.URL.createObjectURL(blob); //创建下载的链接\n\n        downloadElement.style.display = 'none';\n        downloadElement.href = href;\n        downloadElement.download = filename; //下载后文件名\n\n        document.body.appendChild(downloadElement);\n        downloadElement.click(); //点击下载\n\n        document.body.removeChild(downloadElement); //下载完成移除元素\n\n        window.URL.revokeObjectURL(href); //释放掉blob对象\n      });\n    },\n    resTemp: function resTemp() {\n      this.temp = {};\n    }\n  }\n};",null]}