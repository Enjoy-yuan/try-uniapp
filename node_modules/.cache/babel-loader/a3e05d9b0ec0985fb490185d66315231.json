{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuan/Documents/大唐广电/cf_web/src/permission.js","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/permission.js","mtime":1600927611419},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; // 进度条\n\nimport 'nprogress/nprogress.css'; //进度条样式\n\nimport { getToken } from '@/utils/auth'; // 从cookie获取token\n\nimport { checkToken } from '@/utils/checkToken'; // getToken from cookie\n\nimport { filterAsyncRouter } from '@/utils/addRouter';\nimport getPageTitle from '@/utils/get-page-title';\nimport Layout from '@/views/layout';\nNProgress.configure({\n  showSpinner: false\n}); // 进程配置\n\nvar whiteList = ['/login', '/auth-redirect']; // 没有重定向白名单\n\nvar getRouter;\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken, isOutOfTime, menus, accessRoutes, formatRouter, flatRoutes, formatRouteList;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 开始进度条\n            NProgress.start(); // 设置页面标题\n\n            document.title = getPageTitle(to.meta.title); // 确定用户是否已登录\n\n            hasToken = getToken();\n\n            if (!hasToken) {\n              _context.next = 40;\n              break;\n            }\n\n            isOutOfTime = checkToken();\n\n            if (!isOutOfTime) {\n              next(\"/login?redirect=\".concat(to.path));\n            }\n\n            if (!(to.path === '/login')) {\n              _context.next = 11;\n              break;\n            }\n\n            // 如果已登录，请重定向到主页\n            next({\n              path: '/'\n            });\n            NProgress.done();\n            _context.next = 38;\n            break;\n\n          case 11:\n            if (!getRouter) {\n              _context.next = 15;\n              break;\n            }\n\n            //如果getRouter存在直接下一步\n            next();\n            _context.next = 38;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.next = 18;\n            return store.dispatch('user/GetMenu');\n\n          case 18:\n            menus = _context.sent;\n            getRouter = filterAsyncRouter(menus); //过滤菜单\n            // 基于用户获取可访问的路由映射\n\n            _context.next = 22;\n            return store.dispatch('permission/generateRoutes', getRouter);\n\n          case 22:\n            accessRoutes = _context.sent;\n\n            //菜单路由解耦\n            formatRouter = function formatRouter(routes) {\n              var newRoutes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n              routes.map(function (item) {\n                if (item.children && item.children.length > 0) formatRouter(item.children, newRoutes);\n                newRoutes.push(item);\n              });\n              return newRoutes;\n            };\n\n            flatRoutes = formatRouter(accessRoutes);\n            formatRouteList = [];\n            flatRoutes.forEach(function (item) {\n              formatRouteList.push({\n                path: \"/\".concat(item.catalogEngName),\n                component: Layout,\n                redirect: item.path,\n                children: [{\n                  path: item.path,\n                  component: function component() {\n                    return import(\"@/views\".concat(item.path));\n                  },\n                  name: item.catalogEngName,\n                  meta: {\n                    title: item.catalogEngName,\n                    icon: item.icon,\n                    affix: false\n                  }\n                }]\n              });\n            });\n            router.$addRoutes(formatRouteList.concat([{\n              path: '*',\n              redirect: '/404'\n            }])); // 确保addroutes完整的hack方法\n            // 设置replace:true，这样导航就不会留下历史记录。\n\n            next(_objectSpread({}, to, {\n              replace: true\n            })); //解决刷新后出现空白\n            // next()\n\n            _context.next = 38;\n            break;\n\n          case 31:\n            _context.prev = 31;\n            _context.t0 = _context[\"catch\"](15);\n            _context.next = 35;\n            return store.dispatch('user/resetToken');\n\n          case 35:\n            Message.error(_context.t0 || 'Has Error');\n            next(\"/login?redirect=\".concat(to.path));\n            NProgress.done();\n\n          case 38:\n            _context.next = 41;\n            break;\n\n          case 40:\n            /* has no token*/\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              next(\"/login?redirect=\".concat(to.path));\n              NProgress.done();\n            }\n\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[15, 31]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.afterEach(function () {\n  // finish progress bar\n  NProgress.done();\n});",null]}