{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/myProject/EM.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/myProject/EM.vue","mtime":1597135840656},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/IOT/em\";\nimport Pagination from \"@/components/Pagination\";\nimport throttle from 'lodash/throttle';\nimport deviceTypeSelect from '@/components/Select/deviceTypeSelect';\nimport attributeSelect from '@/components/Select/attributeSelect';\nimport { mapState } from 'vuex';\nexport default {\n  name: \"EM\",\n  props: ['code', 'manufacturersList'],\n  components: {\n    Pagination: Pagination,\n    deviceTypeSelect: deviceTypeSelect,\n    attributeSelect: attributeSelect\n  },\n  data: function data() {\n    return {\n      listLoading: false,\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      list: [],\n      total: 0,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        deviceName: undefined\n      },\n      temp: {\n        deviceCode: undefined,\n        deviceName: undefined,\n        brand: undefined,\n        typeCode: undefined,\n        manufacturersCode: undefined,\n        modelNumber: undefined,\n        leaveFactoryDate: undefined,\n        remark: undefined,\n        deviceCollectList: null\n      },\n      rules: {\n        typeCode: [{\n          required: true,\n          message: '请选择设备类型',\n          trigger: 'change'\n        }],\n        deviceCode: [{\n          required: true,\n          message: '设备编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大小写字母、数字组成，长度为32',\n          trigger: 'blur'\n        }],\n        deviceName: [{\n          required: true,\n          message: '设备名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9#\\u4e00-\\u9fa5]+$/,\n          message: '支持大小写中英文及#符号',\n          trigger: 'blur'\n        }],\n        manufacturersCode: [{\n          message: '请选择设备厂商',\n          trigger: 'change'\n        }],\n        leaveFactoryDate: [{\n          message: '请选择生产日期',\n          trigger: ['change', 'blur']\n        }],\n        brand: [{\n          message: '请选择设备品牌',\n          trigger: ['change', 'blur']\n        }],\n        modelNumber: [{\n          message: '请选择设备品牌',\n          trigger: ['change', 'blur']\n        }]\n      },\n      deviceVal: undefined,\n      attributeList: null,\n      dialogFormVisible: false,\n      dialogFormVisibleDevice: false,\n      dialogFormVisibleAttribute: false,\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      tableKey: 0 //表格索引\n\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_state_device: function iot_state_device(state) {\n      return state.iotDict.iot_state_device;\n    },\n    iot_attribute_type: function iot_attribute_type(state) {\n      return state.iotDict.iot_attribute_type;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    toInfo: function toInfo(row) {\n      this.$emit('setRow', row);\n      this.$emit('setPage', 'EM-Info');\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      api.queryProjectCodes(this.code, this.listQuery).then(function (response) {\n        _this2.list = response.data.list;\n        var options = [_this2.iot_state_device];\n        _this2.list = _this2.$myFun.srmCodeToName(response.data.list, options, ['iotState']);\n\n        if (response.data.list && _this2.manufacturersList) {\n          for (var i = 0; i < response.data.list.length; i++) {\n            for (var j = 0; j < _this2.manufacturersList.length; j++) {\n              if (response.data.list[i].manufacturersCode == _this2.manufacturersList[j].manufacturersCode) {\n                response.data.list[i].manufacturersName = _this2.manufacturersList[j].manufacturersName;\n                break;\n              }\n            }\n          }\n        }\n\n        _this2.total = response.data.pages.count;\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    //表格查询\n    handleQuery: throttle(function () {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.dialogFormVisible = true;\n    },\n    // 下一步\n    nextStep: function nextStep() {\n      var _this3 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          _this3.dialogFormVisibleAttribute = true;\n        } else {\n          return false;\n        }\n      });\n    },\n    create: throttle(function () {\n      var _this4 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          if (!_this4.attributeList || !_this4.attributeList.length) {\n            return _this4.$message({\n              title: _this4.$t('message.warning'),\n              message: \"请选择属性\",\n              type: \"warning\"\n            });\n          }\n\n          _this4.temp.deviceCollectList = _this4.attributeList;\n          api.addProjectCode(_this4.code, _this4.temp).then(function () {\n            _this4.getList();\n\n            _this4.dialogFormVisibleAttribute = false;\n            _this4.dialogFormVisible = false;\n\n            _this4.resTemp();\n\n            _this4.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(deviceCode, iotState) {\n      var _this5 = this;\n\n      if (iotState == '2') {\n        return this.$message({\n          title: this.$t('message.warning'),\n          message: \"当前设备已物联,不能删除！\",\n          type: \"warning\"\n        });\n      }\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteProjectCode(_this5.code, deviceCode).then(function () {\n          _this5.getList();\n\n          _this5.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this5.getList();\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleDeviceType: function handleDeviceType() {\n      this.temp.typeCode = this.deviceVal ? this.deviceVal.typeCode : undefined;\n      this.temp.typeName = this.deviceVal ? this.deviceVal.typeName : undefined;\n      this.dialogFormVisibleDevice = false;\n    },\n    getDeviceType: function getDeviceType(val) {\n      this.deviceVal = val;\n    },\n    getAttribute: function getAttribute(val) {\n      this.attributeList = val;\n    },\n    resTemp: function resTemp() {\n      this.temp = {};\n    }\n  }\n};",null]}