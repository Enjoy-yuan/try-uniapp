{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/MOM/gatewayQuery/GRTabs/runningState.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/MOM/gatewayQuery/GRTabs/runningState.vue","mtime":1600927611510},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/IOT/ga\";\nimport Pagination from \"@/components/Pagination\";\nimport gauge from \"./gauge\";\nexport default {\n  name: \"runningState\",\n  props: ['code', 'row'],\n  data: function data() {\n    return {\n      form: {\n        name: undefined\n      },\n      chartsData: {\n        commFlowM: 0,\n        commFlowY: 0,\n        cpu: 0,\n        diskUsed: 0,\n        memUsed: 0,\n        name: undefined,\n        pKey: undefined,\n        seq: undefined,\n        signal: undefined,\n        sn: undefined,\n        ts: undefined,\n        type: undefined,\n        ver: undefined\n      },\n      list1: [],\n      list2: [],\n      tableKey: [0, 1],\n      total1: 0,\n      total2: 0,\n      listLoading: false,\n      listLoading1: false,\n      listLoading2: false,\n      theight: 0,\n      //表格高度\n      listQuery1: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        alarmTime: undefined,\n        alarmTypes: ['cpu', 'memUsed', 'diskUsed', 'yearFlow', 'signal'],\n        gatewayCode: this.row.gatewayCode\n      },\n      listQuery2: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        alarmTime: undefined,\n        alarmTypes: ['connected', 'disconnected'],\n        gatewayCode: this.row.gatewayCode\n      }\n    };\n  },\n  components: {\n    Pagination: Pagination,\n    gauge: gauge\n  },\n  filters: {\n    signal: function signal(val) {\n      if (val >= 10 && val < 15) return '差';else if (val >= 15 && val < 20) return '一般';else if (val >= 20) return '强';else return '无';\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList1();\n    this.getList2();\n    this.getSnState();\n  },\n  methods: {\n    getSnState: function getSnState() {\n      var _this2 = this;\n\n      this.listLoading = false;\n      api.getSnState(this.row.gatewayType, this.row.gatewaySn).then(function (res) {\n        _this2.listLoading = true;\n\n        if (res.data.state !== 0) {\n          _this2.chartsData = res.data;\n        } else {\n          _this2.chartsData = {\n            commFlowM: 0,\n            commFlowY: 0,\n            cpu: 0,\n            diskUsed: 0,\n            memUsed: 0,\n            name: undefined,\n            pKey: undefined,\n            seq: undefined,\n            signal: undefined,\n            sn: undefined,\n            ts: undefined,\n            type: undefined,\n            ver: undefined,\n            state: 0\n          };\n        }\n      });\n    },\n    //获取表格数据\n    getList1: function getList1() {\n      var _this3 = this;\n\n      this.listLoading1 = true;\n      this.listQuery1.alarmTypes = ['cpu', 'memUsed', 'diskUsed', 'yearFlow', 'signal'];\n      api.getAlarm(this.listQuery1).then(function (response) {\n        _this3.list1 = response.data.list;\n        _this3.total1 = response.data.pages.count;\n        setTimeout(function () {\n          _this3.listLoading1 = false;\n        }, 1.5 * 100);\n      });\n    },\n    getList2: function getList2() {\n      var _this4 = this;\n\n      this.listLoading2 = true;\n      this.listQuery2.alarmTypes = ['connected', 'disconnected'];\n      api.getAlarm(this.listQuery2).then(function (response) {\n        _this4.list2 = response.data.list;\n        _this4.total2 = response.data.pages.count;\n        setTimeout(function () {\n          _this4.listLoading2 = false;\n        }, 1.5 * 100);\n      });\n    },\n    //表格查询\n    handleQuery1: function handleQuery1() {\n      this.listQuery1.currentPage = 1;\n      this.getList1();\n    },\n    handleQuery2: function handleQuery2() {\n      this.listQuery2.currentPage = 1;\n      this.getList2();\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val, \"selected\"); //单击行绑定点击事件\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    //字节B转换\n    change: function change(limit) {\n      var size = 0;\n      var comp = '';\n\n      if (limit < 100) {\n        size = limit.toFixed(2);\n        comp = \"KB\";\n      } else if (limit < 100 * 1024) {\n        //大于100KB，则转化成MB\n        size = (limit / 1024).toFixed(2);\n        comp = \"MB\";\n      } else if (limit < 100 * 1024 * 1024) {\n        //大于100GB，则他转化成GB\n        size = (limit / (1024 * 1024)).toFixed(2);\n        comp = \"GB\";\n      } else {\n        //其他转化成TB\n        size = (limit / (1024 * 1024 * 1024)).toFixed(2);\n        comp = \"TB\";\n      } // if (limit < 0.1 * 1024) {            //小于0.1MB，则转化成KB\n      //     size = (limit / 1024).toFixed(2)\n      //     comp = \"KB\"\n      // } else if (limit < 0.1 * 1024 * 1024) {        //小于0.1GB，则转化成MB\n      //     size = (limit / (1024)).toFixed(2)\n      //     comp = \"MB\"\n      // } else {                                            //其他转化成GB\n      //     size = (limit / (1024 * 1024)).toFixed(2)\n      //     comp = \"GB\"\n      // }\n\n\n      size = Number(size);\n      return {\n        size: size,\n        comp: comp\n      };\n    }\n  }\n};",null]}