{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/customer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/customer/index.vue","mtime":1596610933475},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/database/customer';\nimport Pagination from '@/components/Pagination';\nimport { TWO_STATE_OPTIONS } from '@/utils/constant';\nimport { validatorEmail } from '@/utils/validate'; // validatorContactNumber,\n\nimport { mapState } from 'vuex';\nimport ImportFile from '@/components/ImportFile';\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'customer',\n  components: {\n    Pagination: Pagination,\n    ImportFile: ImportFile\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      theight: 0,\n      //表格高度\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        customerCode: undefined,\n        customerName: undefined,\n        customerType: undefined\n      },\n      temp: {\n        customerCode: undefined,\n        customerName: undefined,\n        customerType: undefined,\n        customerProperty: undefined,\n        isRetailer: 0,\n        address: undefined,\n        contact: undefined,\n        contactNumber: undefined,\n        email: undefined,\n        remark: undefined\n      },\n      customerCode: undefined,\n      selectCode: [],\n      dialogFormVisible: false,\n      dialogFormVisible2: false,\n      importDialogVisible: false,\n      //导入弹框\n      modalNo: 'EXTP-BAS-0001',\n      //导入模板编号\n      dialogStatus: '',\n      tableKey: 0,\n      isRetailerOptions: TWO_STATE_OPTIONS,\n      rules: {\n        customerCode: [{\n          required: true,\n          message: '客户编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z-_0-9]{1,50}$/,\n          message: '由大写字母，数字，—和_组成，长度不能超过50',\n          trigger: 'blur'\n        }],\n        customerName: [{\n          required: true,\n          message: '客户名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        contact: [{\n          max: 50,\n          message: '长度不能超过50',\n          trigger: 'blur'\n        }],\n        contactNumber: [{\n          pattern: /^0{0,1}(13[0-9]|15[7-9]|153|156|18[7-9])[0-9]{8}$/,\n          message: '手机号格式不对',\n          trigger: 'blur' // validator: validatorContactNumber\n\n        }],\n        email: [{\n          validator: validatorEmail,\n          trigger: 'blur'\n        }],\n        address: [{\n          max: 512,\n          message: '长度不能超过512',\n          trigger: 'blur'\n        }],\n        remark: [{\n          max: 512,\n          message: '描述长度为512内',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_customer_type: function dt_customer_type(state) {\n      return state.eamDict.dt_customer_type;\n    },\n    dt_customer_property: function dt_customer_property(state) {\n      return state.eamDict.dt_customer_property;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('eamDict/getDicData', ['dt_customer_type', 'dt_customer_property']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val;\n    },\n    handleImport: function handleImport() {\n      var _this3 = this;\n\n      this.importDialogVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.importDialog.getList();\n      });\n    },\n    handleUpdate: function handleUpdate() {\n      var _this4 = this;\n\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.readonly = true; //组织编码不可以编写\n\n        this.temp = this.selectlistRow[0]; // copy obj\n\n        api.getRecord(this.temp.customerCode).then(function (res) {\n          _this4.temp = res.data;\n          _this4.dialogStatus = 'update';\n          _this4.dialogFormVisible = true;\n\n          _this4.$nextTick(function () {\n            _this4.$refs['temp'].clearValidate();\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update: function update() {\n      var _this5 = this;\n\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this5.temp.customerCode, _this5.temp).then(function () {\n            _this5.getList();\n\n            _this5.dialogFormVisible = false;\n\n            _this5.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      //删除列表\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n\n          _this6.selectlistRow.forEach(function (val, index) {\n            ids[index] = val.customerCode;\n          });\n\n          api.deleteRecord(ids).then(function () {\n            _this6.getList(), _this6.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this6.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    create: function create() {\n      var _this7 = this;\n\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this7.temp).then(function () {\n            _this7.getList();\n\n            _this7.dialogFormVisible = false;\n\n            _this7.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        customerCode: undefined,\n        customerName: undefined,\n        customerType: undefined,\n        customerProperty: undefined,\n        isRetailer: 0,\n        address: undefined,\n        contact: undefined,\n        contactNumber: undefined,\n        email: undefined,\n        remark: undefined\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    handleExport: function handleExport() {\n      var _this8 = this;\n\n      this.downloadLoading = true;\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var tHeader = ['客户编码', '客户名称', '客户类型', '客户属性', '是否散户', '联系人', '联系电话', '电子邮箱', '通讯地址', '描述'];\n        var filterVal = ['customerCode', 'customerName', 'customerTypeName', 'customerPropertyName', 'isRetailer', 'contact', 'contactNumber', 'email', 'address', 'remark'];\n\n        var data = _this8.formatJson(filterVal, _this8.list);\n\n        excel.export_json_to_excel({\n          header: tHeader,\n          data: data,\n          filename: 'table-list'\n        });\n        _this8.downloadLoading = false;\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          if (j === 'timestamp') {\n            return parseTime(v[j]);\n          } else {\n            return v[j];\n          }\n        });\n      });\n    }\n  }\n};",null]}