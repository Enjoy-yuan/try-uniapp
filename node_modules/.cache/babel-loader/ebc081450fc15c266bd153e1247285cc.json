{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SPM/sparePartsPurchase/demandOrder/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SPM/sparePartsPurchase/demandOrder/index.vue","mtime":1596610933598},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/spm/sparePartsPurchase/demandOrder'; // 增、删、改api引入\n\nimport Pagination from '@/components/Pagination';\nimport supplierSelect from '@/components/Select/suppierSelect';\nimport orgSelect from '@/components/Select/orgSelect';\nimport warehouseSelect from '@/components/Select/warehouse-select';\nimport { mapState } from 'vuex'; // 基本数据引入\n\nexport default {\n  name: 'demandOrder',\n  components: {\n    Pagination: Pagination,\n    supplierSelect: supplierSelect,\n    orgSelect: orgSelect,\n    warehouseSelect: warehouseSelect\n  },\n  data: function data() {\n    return {\n      checkList: [],\n      theight: 0,\n      //表格高度\n      list: [],\n      total: 0,\n      tableKey: [0, 1],\n      //表格索引\n      listQuery: {\n        dt_requisitions_type: undefined,\n        materielCode: undefined,\n        state: 'srss20',\n        //查询\n        currentPage: 1,\n        pageSize: 15\n      },\n      temp: {\n        procurementClass: undefined,\n        demandDate: undefined,\n        applyOrgCode: undefined,\n        arriveWarehouseCode: undefined\n      },\n      rules: {\n        procurementClass: [{\n          required: true,\n          message: '采购类型不能为空',\n          trigger: 'blur'\n        }],\n        demandDate: [{\n          required: true,\n          message: '到货日期不能为空',\n          trigger: 'blur'\n        }],\n        applyOrgCode: [{\n          required: true,\n          message: '到货单位不能为空',\n          trigger: 'blur'\n        }],\n        arriveWarehouseCode: [{\n          required: true,\n          message: '到货仓库不能为空',\n          trigger: 'blur'\n        }]\n      },\n      dialogVisible: false,\n      supplierVisible: false,\n      selectedRows: [],\n      //多选时选中的所有行\n      changedRows: [],\n      supplierRow: undefined,\n      isCancel: false\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_requisitions_type: function dt_requisitions_type(state) {\n      return state.dict.dt_requisitions_type;\n    },\n    dt_purchase_class: function dt_purchase_class(state) {\n      return state.dict.dt_purchase_class;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('dict/getDicData', ['dt_requisitions_type', 'dt_purchase_class']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    setTimeout(function () {\n      _this.getList();\n    }, 500);\n  },\n  methods: {\n    // 订单生成\n    handleGenerateOrder: function handleGenerateOrder() {\n      var _this2 = this;\n\n      if (!this.selectedRows.length) {\n        this.$message({\n          title: '警告',\n          message: '请先选择订单',\n          type: 'warning'\n        });\n        return;\n      }\n\n      var str = this.selectedRows.every(function (item) {\n        return item.supplierCode;\n      });\n\n      if (!str) {\n        this.$message({\n          title: '警告',\n          message: '请先选择供应商编码',\n          type: 'warning'\n        });\n        return;\n      }\n\n      var ids = this.selectedRows.map(function (item) {\n        return item.rowId;\n      });\n      api.generateOrder(ids).then(function (res) {\n        if (res.status == 201) {\n          _this2.getList();\n\n          _this2.$message({\n            title: '成功',\n            message: '订单生成成功',\n            type: 'success'\n          });\n        }\n      });\n    },\n    // 供应商选择\n    confirmSupplier: function confirmSupplier() {\n      if (this.supplierRow == undefined) {\n        this.update();\n      } else {\n        this.supplierVisible = false;\n      }\n    },\n    handleSupplierData: function handleSupplierData(supplier) {\n      var _this3 = this;\n\n      if (supplier) {\n        if (this.supplierRow == undefined) {\n          this.temp.supplierCode = supplier.supplierCode;\n          this.temp.supplierName = supplier.supplierName;\n        } else {\n          var targetRow = this.list.filter(function (item) {\n            return item.rowId == _this3.supplierRow;\n          })[0];\n          targetRow.supplierCode = supplier.supplierCode;\n          targetRow.supplierName = supplier.supplierName;\n\n          if (this.changedRows.indexOf(targetRow.rowId == -1)) {\n            this.changedRows.push(targetRow.rowId);\n          } else {\n            return;\n          }\n        }\n      }\n    },\n    handleSave: function handleSave() {\n      var _this4 = this;\n\n      var sum = 0;\n      this.selectedRows.forEach(function (item) {\n        item.rowIds = [item.rowId];\n        api.patchRecords(item).then(function (res) {\n          sum++;\n\n          if (res.status == 201 && sum == _this4.selectedRows.length) {\n            _this4.getList();\n\n            _this4.$message({\n              title: '成功',\n              message: '保存成功',\n              type: 'success'\n            });\n          }\n        });\n      });\n    },\n    handleChange: function handleChange(rowId) {\n      if (this.changedRows.indexOf(rowId) == -1) {\n        this.changedRows.push(rowId);\n      } else {\n        return;\n      }\n    },\n    handleSupplier: function handleSupplier(row) {\n      if (row.isEditing) {\n        this.supplierRow = row.rowId;\n        this.supplierVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请先勾选订单',\n          type: 'warning'\n        });\n      }\n    },\n    handleCheckRow: function handleCheckRow() {},\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    getList: function getList() {\n      var _this5 = this;\n\n      //获取表格数据\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this5.list = _this5.$myFun.codeToName(res.data, [_this5.dt_requisitions_type], ['requisitionsType']).list;\n        _this5.total = res.data.pages.count;\n\n        _this5.list.forEach(function (item) {\n          item.isEditing = false;\n        });\n\n        _this5.isCancel = false;\n        _this5.changedRows = [];\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        requisitionsType: undefined,\n        demandDate: undefined,\n        applyOrgCode: undefined,\n        arriveWarehouseCode: undefined\n      };\n    },\n    handleQuery: function handleQuery() {\n      var _this6 = this;\n\n      if (this.changedRows.length) {\n        this.$confirm('当前有已修改的数据，确定要丢弃这些数据并刷新吗?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this6.changedRows = [];\n          _this6.isCancel = true; //表格查询\n\n          _this6.listQuery.currentPage = 1;\n\n          _this6.getList();\n        }).catch(function () {\n          _this6.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.changedRows = [];\n        this.isCancel = true; //表格查询\n\n        this.listQuery.currentPage = 1;\n        this.getList();\n      }\n    },\n    handleCreate: function handleCreate() {\n      if (!this.selectedRows.length) {\n        this.$message({\n          title: '警告',\n          message: '请选择订单',\n          type: 'warning'\n        });\n        return;\n      } //新增按钮单击事件方法\n\n\n      this.resetTemp();\n      this.dialogVisible = true;\n    },\n    handleCreate2: function handleCreate2() {\n      if (!this.selectedRows.length) {\n        this.$message({\n          title: '警告',\n          message: '请选择订单',\n          type: 'warning'\n        });\n        return;\n      } //新增按钮单击事件方法\n\n\n      this.resetTemp();\n      this.supplierVisible = true;\n    },\n    update: function update() {\n      var _this7 = this;\n\n      this.temp.rowIds = this.selectedRows.map(function (item) {\n        return item.rowId;\n      });\n\n      if (this.dialogVisible) {\n        this.$refs.temp.validate(function (valid) {\n          if (valid) {\n            api.patchRecords(_this7.temp).then(function (res) {\n              if (res.status == 201) {\n                _this7.dialogVisible = false;\n                _this7.supplierVisible = false;\n\n                _this7.getList();\n\n                _this7.$message({\n                  title: '成功',\n                  message: '保存成功',\n                  type: 'success'\n                });\n              }\n            });\n          }\n        });\n      } else {\n        api.patchRecords(this.temp).then(function (res) {\n          if (res.status == 201) {\n            _this7.dialogVisible = false;\n            _this7.supplierVisible = false;\n\n            _this7.getList();\n\n            _this7.$message({\n              title: '成功',\n              message: '保存成功',\n              type: 'success'\n            });\n          }\n        });\n      }\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.supplierRow = undefined;\n    },\n    selectChange: function selectChange(val) {\n      var _this8 = this;\n\n      // 如果当前行已被修改还未保存，为防止丢失其他行已修改数据，不允许取消\n      if (this.selectedRows.length > val.length && !this.isCancel) {\n        var cancelRow = this.getArrDifference(this.selectedRows, val)[0];\n\n        if (this.changedRows.indexOf(cancelRow.rowId) == 0) {\n          this.$message({\n            title: '警告',\n            message: '该行已被修改，请先保存',\n            type: 'warning'\n          });\n          this.$refs.tb.toggleRowSelection(cancelRow, 'selected');\n          return false;\n        }\n      }\n\n      this.selectedRows = val;\n      this.list.forEach(function (item) {\n        item.isEditing = false;\n\n        _this8.selectedRows.forEach(function (row) {\n          if (row.rowId == item.rowId) {\n            item.isEditing = true;\n          }\n        });\n      });\n    },\n    getArrDifference: function getArrDifference(arr1, arr2) {\n      return arr1.concat(arr2).filter(function (v, i, arr) {\n        return arr.indexOf(v) === arr.lastIndexOf(v);\n      });\n    }\n  }\n};",null]}