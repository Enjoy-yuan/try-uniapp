{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogOrgSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/components/Dialog/dialogOrgSelect.vue","mtime":1596610933151},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport Tree from \"@/components/Tree\";\nimport { DICT_CODE } from '@/utils/constant';\nimport { selectlists } from \"@/api/system/organization\";\nimport Pagination from '@/components/Pagination';\nexport default {\n  name: 'personSelect',\n  components: {\n    Pagination: Pagination,\n    Tree: Tree\n  },\n  props: ['unMutiple', 'title', 'required'],\n  data: function data() {\n    return {\n      treeStyleObj: {\n        height: '437px'\n      },\n      treeType: 'org',\n      activeName: 'first',\n      DICT_CODE: DICT_CODE,\n      tableKey: [0, 1, 2],\n      dialogVisible: false,\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 10,\n        page: 1,\n        parentOrgCode: null,\n        organizationCode: undefined,\n        organizationName: undefined,\n        businessFunction: null\n      },\n      treeParams: {\n        orgcode: null\n      },\n      selectedRows: [],\n      currentSelectedRow: null,\n      filterConfig: [{\n        type: 'commonInput',\n        label: '组织编码',\n        prop: 'orgCode',\n        width: '',\n        class: 'filter-item ml_5'\n      }, {\n        type: 'commonInput',\n        label: '组织名称',\n        prop: 'supplierName',\n        width: '',\n        class: 'ml_5'\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_org_type',\n        label: '组织类型',\n        prop: 'type',\n        width: '',\n        class: 'filter-item ml_5'\n      }, {\n        type: 'dictSelect',\n        dType: 'dt_org_function',\n        label: '业务职能',\n        prop: 'businessFunction',\n        width: '',\n        class: 'filter-item ml_5'\n      }],\n      mainTitle: [{\n        width: null,\n        align: 'left',\n        label: '组织编码',\n        prop: 'organizationCode'\n      }, {\n        width: null,\n        align: 'left',\n        label: '组织名称',\n        prop: 'organizationName'\n      }, {\n        width: null,\n        align: 'left',\n        label: '组织类型',\n        prop: 'type'\n      }, {\n        width: null,\n        align: 'left',\n        label: '上级组织',\n        prop: 'parentName'\n      }, {\n        width: null,\n        align: 'left',\n        label: '地址',\n        prop: 'adress'\n      }, {\n        width: null,\n        align: 'left',\n        label: '邮编',\n        prop: 'par2'\n      }, {\n        width: null,\n        align: 'left',\n        label: '联系人',\n        prop: 'contact'\n      }, {\n        width: null,\n        align: 'left',\n        label: '电话',\n        prop: 'mobile'\n      }, {\n        width: null,\n        align: 'left',\n        label: '邮箱',\n        prop: 'email'\n      }, {\n        width: null,\n        align: 'left',\n        label: '业务职能',\n        prop: 'businessFunction'\n      }, {\n        width: null,\n        align: 'left',\n        label: '状态',\n        prop: 'state'\n      }, {\n        width: null,\n        align: 'left',\n        label: '备注',\n        prop: 'remark'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_org_type: function dt_org_type(state) {\n      return state.dict.dt_org_type;\n    },\n    dt_org_function: function dt_org_function(state) {\n      return state.dict.dt_org_function;\n    }\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_org_type\", \"dt_org_function\"]); //创建时加载备选项\n\n    this.handleQuery();\n  },\n  methods: {\n    //选中某一行\n    checked: function checked(i) {\n      this.$refs.tbselect.toggleRowSelection(this.list[i], true);\n    },\n    setTreeDatas: function setTreeDatas(rowId) {\n      this.listQuery.parentOrgCode = rowId;\n      this.handleQuery();\n    },\n    handleQuery: function handleQuery() {\n      var _this = this;\n\n      this.listQuery.page = 1;\n      selectlists(this.listQuery).then(function (response) {\n        // let options = [this.dt_org_type, this.dt_org_function]\n        // res.data = this.$myFun.codeToName(res.data, options, [\n        //     'platformState', 'classification'\n        // ])\n        _this.list = response.data.list;\n        _this.total = response.data.pages.count;\n\n        if (!_this.unMutiple) {\n          if (_this.selectedRows) {\n            _this.selectedRows.forEach(function (items) {\n              _this.list.forEach(function (item, index) {\n                if (item.organizationCode === items.organizationCode) {\n                  _this.$nextTick(function () {\n                    this.checked(index);\n                  });\n                }\n              });\n            });\n          }\n        }\n      });\n    },\n    selectChange: function selectChange(val) {\n      //备选项选中行\n      if (this.unMutiple) {\n        if (val.length > 1) {\n          this.$refs.tbselect.clearSelection(); //清除其他行的选中\n\n          this.$refs.tbselect.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        } else if (val.length === 0) {\n          this.selectedRows = val;\n          this.currentSelectedRow = null;\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    handleConfirm: function handleConfirm() {\n      if (this.required && this.selectedRows) {\n        if (this.selectedRows.length === 0) {\n          this.$message({\n            type: 'warning',\n            message: '请选择一条数据'\n          });\n        } else {\n          this.$emit('handleConfirm', this.selectedRows);\n          this.dialogVisible = false;\n        }\n      } else {\n        if (this.selectedRows) {\n          if (this.selectedRows.length === 0) {\n            this.$emit('handleConfirm', []);\n          } else {\n            this.$emit('handleConfirm', this.selectedRows);\n          }\n        } else {\n          this.$emit('handleConfirm', []);\n        }\n\n        this.dialogVisible = false;\n      }\n    }\n  }\n};",null]}