{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/IOT/IOTEM/EMTabs/mainInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/IOT/IOTEM/EMTabs/mainInfo.vue","mtime":1600927611485},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport listCar from \"../../../components/listCar\";\nimport * as api from \"@/api/project/iot/IOT/em\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"mainInfo\",\n  props: ['code', 'row', 'manufacturersList'],\n  data: function data() {\n    return {\n      form: {\n        deviceCode: undefined,\n        deviceName: undefined,\n        brand: undefined,\n        typeCode: undefined,\n        manufacturersCode: undefined,\n        modelNumber: undefined,\n        leaveFactoryDate: undefined,\n        remark: undefined\n      },\n      temp: {\n        deviceCode: undefined,\n        deviceName: undefined,\n        brand: undefined,\n        typeCode: undefined,\n        manufacturersCode: undefined,\n        modelNumber: undefined,\n        leaveFactoryDate: undefined,\n        remark: undefined\n      },\n      namePlate: null,\n      namePlateFrom: {\n        data: null\n      },\n      dialogFormVisible: false,\n      dialogFormVisibleName: false,\n      rules: {\n        typeCode: [{\n          required: true,\n          message: '请选择设备类型',\n          trigger: 'change'\n        }],\n        deviceCode: [{\n          required: true,\n          message: '设备编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字组成，长度为32',\n          trigger: 'blur'\n        }],\n        deviceName: [{\n          required: true,\n          message: '设备名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9#\\u4e00-\\u9fa5]+$/,\n          message: '支持大小写中英文及#符号',\n          trigger: 'blur'\n        }],\n        manufacturersCode: [{\n          message: '请选择设备厂商',\n          trigger: 'change'\n        }],\n        leaveFactoryDate: [{\n          message: '请选择生产日期',\n          trigger: ['change', 'blur']\n        }],\n        brand: [{\n          message: '请选择设备品牌',\n          trigger: ['change', 'blur']\n        }],\n        modelNumber: [{\n          message: '请选择设备品牌',\n          trigger: ['change', 'blur']\n        }]\n      }\n    };\n  },\n  components: {\n    listCar: listCar\n  },\n  computed: _objectSpread({}, mapState({\n    iot_nameplate_state: function iot_nameplate_state(state) {\n      return state.iotDict.iot_nameplate_state;\n    } // 铭牌参数单位\n\n  }), {\n    listLength: function listLength() {\n      return this.namePlate ? this.namePlate.length : false;\n    }\n  }),\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      Promise.all([api.queryProjectCode(this.code, this.row.deviceCode), api.queryNamePlate(this.code, this.row.deviceCode)]).then(function (val) {\n        _this.form = val[0].data[0];\n\n        _this.manufacturersList.map(function (item) {\n          if (item.manufacturersCode === _this.form.manufacturersCode) {\n            _this.form.manufacturersName = item.manufacturersName;\n          }\n        });\n\n        if (_this.manufacturersList && _this.manufacturersList.length && _this.form.manufacturersCode) {\n          _this.manufacturersList.forEach(function (i) {\n            if (i.manufacturersCode == _this.form.manufacturersCode) {\n              _this.form.manufacturersName = i.manufacturersName;\n            }\n          });\n        }\n\n        val[1].data = _this.$myFun.srmCodeToName(val[1].data, [_this.iot_nameplate_state], ['company']);\n        _this.namePlate = val[1].data;\n      });\n    },\n    // 编辑\n    handleUpdate: function handleUpdate() {\n      this.temp = this.form;\n      this.dialogFormVisible = true;\n    },\n    update: throttle(function () {\n      var _this2 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          api.updateProjectCode(_this2.code, _this2.row.deviceCode, _this2.temp).then(function () {\n            _this2.getList();\n\n            _this2.dialogFormVisible = false;\n\n            _this2.resTemp();\n\n            _this2.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    handleUpdateName: function handleUpdateName() {\n      this.namePlateFrom.data = JSON.parse(JSON.stringify(this.namePlate));\n      this.dialogFormVisibleName = true;\n    },\n    updateName: throttle(function () {\n      var _this3 = this;\n\n      var arr = this.namePlateFrom.data.filter(function (i) {\n        return !i.tagCode || !i.tagName || !i.company;\n      });\n\n      if (arr.length || !this.namePlateFrom.data.length) {\n        this.$message({\n          title: this.$t('message.warning'),\n          message: \"铭牌编码、名称、单位不能为空\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      var regArr = this.namePlateFrom.data.filter(function (i) {\n        return i.tagCode && i.tagName;\n      });\n      var reg = /^[\\u4e00-\\u9fa5]+$/;\n      var codeReg = /^[a-zA-Z0-9]+$/;\n      var getRes = new Promise(function (resolve, reject) {\n        regArr.forEach(function (i) {\n          var result = reg.exec(i.tagName);\n          var resultCode = codeReg.exec(i.tagCode);\n\n          if (!result) {\n            return reject('铭牌铭牌请输入中文');\n          }\n\n          if (!resultCode) {\n            return reject('编码请输入大小写英文及数字字符');\n          }\n        });\n        resolve(true);\n      });\n      getRes.then(function (res) {\n        if (res) {\n          api.updateNamePlate(_this3.code, _this3.row.deviceCode, _this3.namePlateFrom.data).then(function () {\n            _this3.getList();\n\n            _this3.dialogFormVisibleName = false;\n\n            _this3.$notify({\n              title: '成功',\n              message: '编辑成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      }).catch(function (error) {\n        _this3.$message({\n          title: _this3.$t('message.warning'),\n          message: error,\n          type: \"warning\"\n        });\n\n        return;\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    addDomain: function addDomain() {\n      this.namePlateFrom.data.push({\n        tagCode: undefined,\n        tagName: undefined,\n        tagValue: undefined,\n        company: undefined\n      });\n    },\n    removeDomain: function removeDomain(item) {\n      var index = this.namePlateFrom.data.indexOf(item);\n\n      if (index !== -1) {\n        this.namePlateFrom.data.splice(index, 1);\n      }\n    },\n    resTemp: function resTemp() {\n      this.temp = {};\n    }\n  }\n};",null]}