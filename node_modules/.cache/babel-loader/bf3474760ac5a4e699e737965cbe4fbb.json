{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/FM/failureRegister/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/FM/failureRegister/index.vue","mtime":1596610933415},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/fm/failureRegister';\nimport faultTypeSelect from \"../../components/faultTypeSelect\";\nimport employeesSelect from \"@/components/Select/employeesSelect.vue\"; //操作人\n\nimport Pagination from '@/components/Pagination';\nimport teamSelect from \"../../components/teamSelect\";\nimport { mapState } from \"vuex\";\nimport selectTree from \"@/components/Select/selectTree\"; //下拉组件\n\nimport { queryRecords } from '@/api/project/eas/database/faultType';\nimport equipmentSelect from \"./equipmentSelect.vue\"; //操作人\n\nimport imgUpload from \"../../components/imgUpload\";\nimport fileUpload from \"../../components/fileUpload\";\nimport tab3 from \"./tab3\";\nexport default {\n  name: 'failureRegister',\n  components: {\n    Pagination: Pagination,\n    employeesSelect: employeesSelect,\n    equipmentSelect: equipmentSelect,\n    selectTree: selectTree,\n    tab3: tab3,\n    faultTypeSelect: faultTypeSelect,\n    imgUpload: imgUpload,\n    fileUpload: fileUpload,\n    teamSelect: teamSelect\n  },\n  data: function data() {\n    return {\n      list: null,\n      equipmentRow: [],\n      disposerRow: undefined,\n      dialogStatus: '',\n      dialogFormVisible: false,\n      employeeDialogVisible: false,\n      equipmentDialogVisible: false,\n      workOrderNumberA: undefined,\n      total: 0,\n      theight: 0,\n      //表格高度\n      ids: [],\n      faultNumbers: [],\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10,\n        deviceCode: undefined,\n        state: undefined,\n        faultTypeCode: undefined,\n        faultNumber: undefined\n      },\n      listQuery1: {\n        faultCode: undefined\n      },\n      temp: {\n        classCode: undefined,\n        className: undefined,\n        description: undefined,\n        address: undefined,\n        deviceCode: undefined,\n        deviceName: undefined,\n        faultCode: undefined,\n        faultGrade: undefined,\n        faultTypeCode: undefined,\n        happenTime: undefined,\n        ifMachineHalt: undefined,\n        machineHaltTime: undefined,\n        mobile: undefined,\n        operator: undefined,\n        operatorName: undefined,\n        partCode: undefined\n      },\n      faultList: [],\n      partCodeOption: [],\n      optionData: [],\n      clickChange: false,\n      //if click another row\n      currentSelectedRow: null,\n      //当前选中行\n      selectlistRow: [],\n      isClearable: true,\n      // 可清空（可选）\n      isAccordion: true,\n      // 可收起（可选）\n      valueId: undefined,\n      // 初始ID（可选）\n      props: {\n        // 配置项（必选）\n        rowId: 'rowId',\n        // 父级唯一标识\n        children: 'children',\n        label: 'faultName'\n      },\n      gw: undefined,\n      tabName: 'sbtp',\n      tabConfig: [{\n        label: '故障图片',\n        name: 'sbtp',\n        prop: 'sbtp'\n      }, {\n        label: '故障附件',\n        name: 'sbfj',\n        prop: 'sbfj'\n      }, {\n        label: '处理记录',\n        name: 'bjqd',\n        prop: 'bjqd'\n      }],\n      tableKey: [0],\n      rules: {\n        happenTime: [{\n          required: true,\n          message: '发生时间不能为空',\n          trigger: 'blur'\n        }],\n        operator: [{\n          required: true,\n          message: '操作人不能为空',\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '电话不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^1(3|4|5|7|8)\\d{9}$/,\n          message: '有数字组成，1开头34578其中一位为第二位，长度为11',\n          trigger: 'blur'\n        }],\n        faultTypeCode: [{\n          required: true,\n          message: '故障类型不能为空',\n          trigger: 'blur'\n        }],\n        partCode: [{\n          required: true,\n          message: '故障部位不能为空',\n          trigger: 'blur'\n        }],\n        deviceCode: [{\n          required: true,\n          message: '设备编号不能为空',\n          trigger: 'blur'\n        }],\n        urgencyDegree: [{\n          required: true,\n          message: '紧急程度不能为空',\n          trigger: 'blur'\n        }],\n        faultGrade: [{\n          required: true,\n          message: '故障等级不能为空',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '故障描述不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_fault_state: function dt_fault_state(state) {\n      return state.eamDict.dt_fault_state;\n    },\n    dt_urgency_degree: function dt_urgency_degree(state) {\n      return state.eamDict.dt_urgency_degree;\n    },\n    dt_fault_grade: function dt_fault_grade(state) {\n      return state.eamDict.dt_fault_grade;\n    },\n    dt_yes_or_no: function dt_yes_or_no(state) {\n      return state.eamDict.dt_yes_or_no;\n    },\n    dt_file_equipment: function dt_file_equipment(state) {\n      return state.eamDict.dt_file_equipment;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n    var p = new Promise(function (resolve) {\n      resolve(_this.$store.dispatch(\"eamDict/getDicData\", [\"dt_fault_state\", \"dt_urgency_degree\", \"dt_fault_grade\", \"dt_file_equipment\", \"dt_yes_or_no\"]));\n    });\n    Promise.all([p]).then(function () {\n      _this.getList();\n    });\n    this.getOptionData();\n  },\n  destroyed: function destroyed() {\n    this.getList();\n    this.getOptionData();\n  },\n  methods: {\n    getClass: function getClass(val) {\n      this.temp.className = val ? val.teamName : undefined;\n    },\n    clear: function clear() {\n      this.$refs.tempR.clearValidate();\n    },\n    checked: function checked() {\n      if (this.list && this.list.length) {\n        this.$refs.mainList.toggleRowSelection(this.list[0], true);\n      }\n    },\n    //故障类型\n    getValue: function getValue(value) {\n      this.listQuery.faultTypeCode = value ? value.faultCode : undefined;\n    },\n    buildTree: function buildTree(array, id, parent_id) {\n      // 创建临时对象\n      var temp = {}; // 创建需要返回的树形对象\n\n      var tree = []; // 先遍历数组，将数组的每一项添加到temp对象中\n\n      for (var i in array) {\n        temp[array[i][id]] = array[i];\n      } // 遍历temp对象，将当前子节点与父节点建立连接\n\n\n      for (var _i in temp) {\n        // 判断是否是根节点下的项\n        if (temp[_i][parent_id] != 0) {\n          if (!temp[temp[_i][parent_id]].children) {\n            temp[temp[_i][parent_id]].children = [];\n          }\n\n          temp[temp[_i][parent_id]].children.push(temp[_i]);\n        } else {\n          tree.push(temp[_i]);\n        }\n      }\n\n      return tree;\n    },\n    getOptionData: function getOptionData() {\n      var _this2 = this;\n\n      queryRecords().then(function (res) {\n        _this2.optionData = [{\n          faultName: '故障类型',\n          faultCode: 0,\n          rowId: 0,\n          children: _this2.buildTree(res.data, 'faultCode', 'preFaultCode')\n        }][0].children;\n      });\n    },\n    //查询主表\n    getList: function getList() {\n      var _this3 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this3.list = res.data.list;\n        var options = [_this3.dt_fault_state, _this3.dt_yes_or_no, _this3.dt_urgency_degree, _this3.dt_fault_grade];\n        _this3.list = _this3.$myFun.srmCodeToName(res.data.list, options, ['state', 'ifMachineHalt', 'urgencyDegree', 'faultGrade']);\n        _this3.total = res.data.pages.count;\n\n        _this3.$nextTick(function () {\n          this.checked();\n        });\n      });\n    },\n    changeShutdown: function changeShutdown(val) {\n      if (val == 'N') {\n        this.temp.machineHaltTime = [];\n      }\n    },\n    //操作人传值\n    handleEmployee: function handleEmployee(row) {\n      this.employeeRow = row;\n    },\n    //操作人弹窗\n    handleClickEmployee: function handleClickEmployee() {\n      this.employeeDialogVisible = true;\n    },\n    //操作人获取值\n    employeeCreate: function employeeCreate() {\n      this.temp.operator = this.employeeRow.employeeCode;\n      this.temp.operatorName = this.employeeRow.employeeName;\n      this.temp.mobile = this.employeeRow.mobile;\n      this.employeeDialogVisible = false;\n    },\n    //设备编码\n    handleClickDevice: function handleClickDevice() {\n      this.equipmentDialogVisible = true;\n    },\n    handleEquipment: function handleEquipment(row) {\n      this.equipmentRow = row;\n    },\n    equipmentUpdate: function equipmentUpdate() {\n      var _this4 = this;\n\n      this.temp.deviceCode = this.equipmentRow.deviceCode;\n      this.temp.deviceName = this.equipmentRow.deviceName;\n      this.temp.typeCode = this.equipmentRow.typeCode;\n      this.temp.typeName = this.equipmentRow.typeName;\n      this.temp.modelNumber = this.equipmentRow.modelNumber;\n      this.temp.useDept = this.equipmentRow.useDept;\n      this.temp.useDeptName = this.equipmentRow.useDeptName;\n      this.temp.address = this.equipmentRow.address;\n      this.temp.addressName = this.equipmentRow.addressName;\n      this.$set(this.temp, 'partCode', undefined);\n      api.queryFaultCode(this.temp.deviceCode).then(function (re) {\n        re.data.forEach(function (v, index) {\n          _this4.faultList[index] = v.faultCode;\n        });\n      });\n      this.equipmentDialogVisible = false;\n      this.getPart();\n    },\n    faultCodeChange: function faultCodeChange(val) {\n      var _this5 = this;\n\n      if (val) {\n        this.listQuery1.faultCode = val;\n        api.queryFaultCode(this.listQuery1).then(function (Response) {\n          _this5.$set(_this5.temp, 'faultTypeCode', Response.data[0].faultTypeCode);\n\n          _this5.$set(_this5.temp, 'partCode', Response.data[0].partCode);\n\n          _this5.$set(_this5.temp, 'description', Response.data[0].description);\n\n          _this5.$refs.faultType.valueTitle = Response.data[0].faultTypeCode;\n        });\n      }\n    },\n    getPart: function getPart() {\n      var _this6 = this;\n\n      api.querypart(this.temp.typeCode).then(function (res) {\n        _this6.partCodeOption = res.data;\n      });\n    },\n    value: function value() {},\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    //查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      var _this7 = this;\n\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.$nextTick(function () {\n        _this7.$refs.faultType.valueTitle = undefined;\n      });\n      this.dialogFormVisible = true;\n\n      if (!this.temp.ifMachineHalt) {\n        this.temp.ifMachineHalt = 'N';\n      }\n    },\n    //新增方法\n    create: function create() {\n      var _this8 = this;\n\n      this.$refs['tempR'].validate(function (valid) {\n        if (valid) {\n          _this8.temp.machineHaltTime = parseInt(_this8.temp.machineHaltTime);\n          api.addRecords(_this8.temp).then(function () {\n            _this8.getList();\n\n            _this8.dialogFormVisible = false;\n\n            _this8.$message({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //编辑\n    handleUpdate: function handleUpdate() {\n      var _this9 = this;\n\n      if (this.selectlistRow && this.selectlistRow.length == 1) {\n        if (this.selectlistRow[0].state === \"fs10\" || this.selectlistRow[0].state === \"fs70\") {\n          this.dialogFormVisible = true;\n          api.numberRecords(this.selectlistRow[0].faultNumber).then(function (res) {\n            _this9.temp = res.data;\n            _this9.temp.typeName = res.data.deviceTypeName;\n            _this9.temp.type = res.data.deviceType;\n            api.queryFaultCode(_this9.listQuery1).then(function (Response) {\n              _this9.$refs.faultType.valueTitle = Response.data[0].faultTypeCode;\n            });\n            _this9.dialogStatus = 'update';\n          });\n        } else {\n          this.$message({\n            title: '警告',\n            message: '只针对已录入或驳回状态的数据编辑',\n            type: 'warning'\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //编辑方法\n    update: function update() {\n      var _this10 = this;\n\n      this.$refs['tempR'].validate(function (valid) {\n        if (valid) {\n          api.updateRecords(_this10.selectlistRow[0].faultNumber, _this10.temp).then(function () {\n            _this10.getList();\n\n            _this10.dialogFormVisible = false;\n\n            _this10.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this11 = this;\n\n      //删除列表\n      this.selectlistRow.forEach(function (v, index) {\n        _this11.ids[index] = v.faultNumber;\n      });\n\n      if (this.selectlistRow && this.selectlistRow.length > 0) {\n        if (this.selectlistRow[0].state === \"fs10\" || this.selectlistRow[0].state === \"fs70\") {\n          this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            api.deleteRecords(_this11.ids).then(function () {\n              _this11.getList(), _this11.$message({\n                title: '成功',\n                message: '删除成功',\n                type: 'success',\n                duration: 2000\n              });\n            });\n          }).catch(function () {\n            _this11.$message({\n              type: 'info',\n              message: '已取消删除'\n            });\n          });\n        } else {\n          this.$message({\n            title: '警告',\n            message: '只针对已录入或驳回状态的数据删除',\n            type: 'warning'\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleRepair: function handleRepair() {\n      var _this12 = this;\n\n      if (this.selectlistRow && this.selectlistRow.length > 0) {\n        this.selectlistRow.forEach(function (v, index) {\n          _this12.faultNumbers[index] = v.faultNumber;\n        });\n        api.repairsRecords(this.faultNumbers).then(function () {\n          _this12.getList(), _this12.$message({\n            title: '成功',\n            message: '报修成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择故障编码信息',\n          type: 'warning'\n        });\n      }\n    },\n    checkSelectStatus: function checkSelectStatus(rows, row) {\n      var checkStatus = false;\n\n      if (rows) {\n        if (this.selectlistRow.length <= rows.length && rows.length != 0) {\n          checkStatus = true;\n        }\n      }\n\n      if (row) {\n        if (JSON.stringify(this.selectlistRow).indexOf(JSON.stringify(row)) == -1) {\n          checkStatus = true;\n        }\n      }\n\n      return checkStatus;\n    },\n    rowClick: function rowClick(row) {\n      var _this13 = this;\n\n      if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n        this.clickChange = false;\n      } else {\n        this.clickChange = true;\n      }\n\n      this.currentClickRow = row;\n      var selectStatus = this.checkSelectStatus(null, row);\n\n      if (selectStatus) {\n        this.currentSelectedRow = row;\n        this.$refs.mainList.toggleRowSelection(row, true);\n        this.workOrderNumberA = this.currentClickRow.faultNumber;\n        setTimeout(function () {\n          _this13.$refs.tab2[0].getList();\n\n          _this13.$refs.tab1[0].getList();\n\n          _this13.$refs.tab3[0].getList();\n        }, 1000);\n      } else {\n        if (this.clickChange) {\n          this.$refs.mainList.setCurrentRow(this.currentClickRow);\n          this.workOrderNumberA = this.currentClickRow.faultNumber;\n          setTimeout(function () {\n            _this13.$refs.tab2[0].getList();\n\n            _this13.$refs.tab1[0].getList();\n\n            _this13.$refs.tab3[0].getList();\n          }, 1000);\n        }\n      }\n    },\n    selectChange: function selectChange(val) {\n      var _this14 = this;\n\n      this.selectlistRow = val;\n\n      if (this.clickChange) {\n        this.$refs.mainList.setCurrentRow(this.currentClickRow);\n        this.workOrderNumberA = this.currentClickRow.faultNumber;\n        setTimeout(function () {\n          _this14.$refs.tab2[0].getList();\n\n          _this14.$refs.tab1[0].getList();\n\n          _this14.$refs.tab3[0].getList();\n        }, 1000);\n      }\n    },\n    tableSelect: function tableSelect(rows, row) {\n      var selectStatus = this.checkSelectStatus(rows);\n\n      if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n        this.clickChange = false;\n      } else {\n        this.clickChange = true;\n        this.currentClickRow = row;\n      }\n\n      if (selectStatus) {\n        this.currentSelectedRow = row;\n      } else {\n        this.curChange = false;\n      }\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        faultCode: undefined,\n        description: undefined,\n        faultGrade: undefined,\n        deviceCode: undefined,\n        deviceName: undefined,\n        happenTime: undefined,\n        ifMachineHalt: undefined,\n        operator: undefined,\n        operatorName: undefined,\n        partCode: undefined,\n        category: undefined,\n        urgencyDegree: undefined,\n        mobile: undefined\n      };\n    }\n  }\n};",null]}