{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/emsDict/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/dataBase/emsDict/index.vue","mtime":1596610933502},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/ems/dataBase/dict';\nimport Pagination from '@/components/Pagination';\nimport { DICT_TYPE_OPTIONS } from '@/utils/constant';\nexport default {\n  name: 'dict',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      list: null,\n      list1: [],\n      total: 0,\n      total1: 0,\n      tableKey: [0, 1],\n      //表格索引，虚拟dom渲染表格时使用\n      theight: 0,\n      stheight: 0,\n      //右子表高度\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        dictCode: undefined,\n        dictName: undefined,\n        dictType: undefined,\n        dictItemKey: undefined,\n        dictItemValue: undefined\n      },\n      listQuery1: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15\n      },\n      temp: {\n        dictCode: undefined,\n        dictName: undefined,\n        dictType: undefined,\n        dictItemDTOs: []\n      },\n      dictCode: undefined,\n      selectCode: [],\n      dialogFormVisible: false,\n      dialogFormVisible1: false,\n      dialogFormVisible2: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '新增',\n        update1: '编辑',\n        create1: '新增'\n      },\n      dictTypeOptions: DICT_TYPE_OPTIONS,\n      dictItems: [],\n      rules: {\n        dictCode: [{\n          required: true,\n          message: '字典编码不能为空',\n          trigger: 'blur'\n        }, {\n          max: 32,\n          message: '长度不能超过32',\n          trigger: 'blur'\n        }],\n        dictName: [{\n          required: true,\n          message: '字典名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 32,\n          message: '长度不能超过32',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  destroyed: function destroyed() {\n    this.setTableHeight();\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n        _this2.list1 = [];\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 2;\n      this.stheight = this.theight + 58;\n    },\n    //查询明细\n    getList1: function getList1() {\n      var _this3 = this;\n\n      api.getRecord(this.selectlistRow.dictCode).then(function (res) {\n        if (res.data) {\n          _this3.list1 = res.data.dictItemDTOs;\n          _this3.total1 = res.data.dictItemDTOs.length;\n        }\n      });\n    },\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    //新增明细弹窗\n    handleCreate1: function handleCreate1() {\n      var _this4 = this;\n\n      if (this.selectlistRow) {\n        this.readonly = true; //员工编码不可以编写\n\n        this.temp = this.selectlistRow; // copy obj\n\n        api.getRecord(this.temp.dictCode).then(function (res) {\n          _this4.temp = res.data;\n          _this4.dialogStatus = 'create1';\n          _this4.dialogFormVisible1 = true;\n\n          _this4.$nextTick(function () {\n            _this4.$refs['temp'].clearValidate();\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //新增明细弹窗方法\n    create1: function create1() {\n      var _this5 = this;\n\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          _this5.temp.dictItemDTOs = _this5.temp.dictItemDTOs.filter(function (v) {\n            return v.dictItemKey != '' && v.dictItemKey != '';\n          });\n          api.updateRecord(_this5.temp.dictCode, _this5.temp).then(function () {\n            _this5.getList1();\n\n            _this5.dialogFormVisible1 = false;\n\n            _this5.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    // 获取表格1选中时的数据\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val.pop());\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectlistRow);\n\n      if (this.selectlistRow) {\n        this.getList1();\n      }\n    },\n    // 获取表格2选中时的数据\n    selectRow1: function selectRow1(val) {\n      this.selectlistRow1 = val;\n    },\n    //点击表格某一行\n    rowClick1: function rowClick1(val) {\n      this.$refs.tb1.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    //表一单击行选中方法\n    selectRow2: function selectRow2(val) {\n      this.selectlistRow2 = val;\n      this.$refs.tb.clearSelection();\n      this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    //编辑弹窗\n    handleUpdate: function handleUpdate() {\n      var _this6 = this;\n\n      if (this.selectlistRow) {\n        this.readonly = true; //员工编码不可以编写\n\n        this.temp = this.selectlistRow; // copy obj\n\n        api.getRecord(this.temp.dictCode).then(function (res) {\n          _this6.temp = res;\n          _this6.list1 = res.dictItemDTOs;\n          _this6.dialogStatus = 'update';\n          _this6.dialogFormVisible = true;\n\n          _this6.$nextTick(function () {\n            _this6.$refs['temp'].clearValidate();\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //编辑\n    update: function update() {\n      var _this7 = this;\n\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          _this7.temp.dictItemDTOs = _this7.temp.dictItemDTOs.filter(function (v) {\n            return v.dictItemKey != '' && v.dictItemKey != '';\n          });\n          api.updateRecord(_this7.temp.dictCode, _this7.temp).then(function () {\n            _this7.getList();\n\n            _this7.dialogFormVisible = false;\n            _this7.dialogFormVisible1 = false;\n\n            _this7.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleUpdate1: function handleUpdate1() {\n      if (this.selectlistRow1 && this.selectlistRow1.length == 1) {\n        this.readonly = true; //员工编码不可以编写\n\n        this.selectlistRow.dictItemDTOs[0] = this.selectlistRow1[0]; //\n\n        this.temp.dictItemDTOs[0] = this.selectlistRow1[0];\n        this.dialogStatus = 'update1';\n        this.dialogFormVisible2 = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update1: function update1() {\n      var _this8 = this;\n\n      //明细编辑弹窗\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          _this8.temp.dictItemDTOs = _this8.temp.dictItemDTOs.filter(function (v) {\n            return v.dictItemKey != '' && v.dictItemKey != '';\n          });\n\n          var index = _this8.list1.indexOf(_this8.selectlistRow1[0]);\n\n          if (index !== -1) {\n            _this8.list1.splice(index, 1, _this8.selectlistRow1[0]);\n          }\n\n          _this8.selectlistRow.dictItemDTOs = _this8.list1; //\n\n          api.updateRecord(_this8.selectlistRow.dictCode, _this8.selectlistRow).then(function () {\n            _this8.getList1();\n\n            _this8.dialogFormVisible2 = false;\n\n            _this8.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDeleteBatch: function handleDeleteBatch() {\n      if (this.selectCode.length == 0) {\n        this.$message.warning('请勾选记录！');\n        return;\n      }\n\n      this.delete(this.selectCode);\n    },\n    //删除字典列表\n    handleDelete: function handleDelete() {\n      var _this9 = this;\n\n      if (this.selectlistRow) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteRecord(_this9.selectlistRow.dictCode).then(function () {\n            _this9.getList(), _this9.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this9.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //删除明细列表\n    handleDelete1: function handleDelete1() {\n      var _this10 = this;\n\n      if (this.selectlistRow1 && this.selectlistRow1.length == 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var index = _this10.list1.indexOf(_this10.selectlistRow1[0]);\n\n          if (index !== -1) {\n            _this10.list1.splice(index, 1);\n          }\n\n          _this10.selectlistRow.dictItemDTOs = _this10.list1;\n          api.updateRecord(_this10.selectlistRow.dictCode, _this10.selectlistRow).then(function () {\n            _this10.getList1(), _this10.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this10.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //新增数据字典\n    create: function create() {\n      var _this11 = this;\n\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          _this11.temp.dictItemDTOs = _this11.temp.dictItemDTOs.filter(function (v) {\n            return v.dictItemKey != '' && v.dictItemKey != '';\n          });\n          api.addRecord(_this11.temp).then(function () {\n            _this11.getList();\n\n            _this11.dialogFormVisible = false;\n\n            _this11.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        dictCode: undefined,\n        dictName: undefined,\n        dictType: undefined,\n        dictItemDTOs: []\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.selectCode = selection.map(function (v) {\n        return v.dictCode;\n      });\n    },\n    addDictItem: function addDictItem() {\n      this.temp.dictItemDTOs.push({\n        dictItemKey: '',\n        dictItemValue: ''\n      });\n    },\n    deleteDictItem: function deleteDictItem(item) {\n      var index = this.temp.dictItemDTOs.indexOf(item);\n\n      if (index !== -1) {\n        this.temp.dictItemDTOs.splice(index, 1);\n      }\n    }\n  }\n};",null]}