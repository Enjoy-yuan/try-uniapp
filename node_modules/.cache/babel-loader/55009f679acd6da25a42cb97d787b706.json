{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/interfaceDefinition/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/interfaceDefinition/index.vue","mtime":1600927611531},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/system/interfaceDefinition\";\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from 'vuex';\nimport { getDomainId } from \"@/utils/auth\";\nexport default {\n  name: \"interfaceDefinition\",\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      theight: 0,\n      //表格高度\n      listMQ: [],\n      listRFC: [],\n      listWeb: [],\n      listFTP: [],\n      totalMQ: 0,\n      totalRFC: 0,\n      totalWeb: 0,\n      flag: false,\n      tableA: '',\n      dialogFormVisiblepz: false,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 15\n      },\n      listQueryMQ: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      listQueryRFC: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      listQueryWeb: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      listQueryFTP: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      taskUpdateStatusDTO: {\n        jobGroup: undefined,\n        jobName: undefined,\n        rowId: undefined,\n        status: undefined\n      },\n      temp: {\n        isEffective: 1,\n        remark: undefined,\n        creator: getDomainId(),\n        updator: getDomainId(),\n        rowId: undefined\n      },\n      dto: {\n        configurationTableFields: null,\n        businessProgress: undefined,\n        interfaceObject: undefined,\n        interfaceProgram: undefined,\n        interfaceDefinitionId: undefined\n      },\n      dtf: {\n        configurationTableFields: null,\n        businessProgress: undefined,\n        interfaceObject: undefined,\n        interfaceProgram: undefined,\n        interfaceDefinitionId: undefined,\n        creator: getDomainId(),\n        updator: getDomainId(),\n        bak: undefined,\n        folder: undefined,\n        ftpAddress: undefined,\n        separators: undefined\n      },\n      dta: {\n        // configurationTables:undefined,\n        businessProgress: undefined,\n        creator: getDomainId(),\n        updator: getDomainId(),\n        function: undefined,\n        interfaceDefinitionId: undefined,\n        interfaceObject: undefined,\n        interfaceProgram: undefined,\n        password: undefined,\n        server: undefined,\n        rowId: undefined\n      },\n      dtz: {\n        businessProgress: undefined,\n        creator: getDomainId(),\n        updator: getDomainId(),\n        function: undefined,\n        interfaceDefinitionId: undefined,\n        interfaceObject: undefined,\n        interfaceProgram: undefined,\n        password: undefined,\n        server: undefined,\n        rowId: undefined\n      },\n      colorCode: undefined,\n      selectCode: [],\n      dialogFormVisible: false,\n      explainDialogFormVisible: false,\n      logDialogFormVisible: false,\n      dialogFormVisibleFTP: false,\n      dialogFormVisibleRFC: false,\n      dialogStatus: \"\",\n      tableKey: 0,\n      rules: {}\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_Interface_mode: function dt_Interface_mode(state) {\n      return state.dict.dt_Interface_mode;\n    },\n    dt_data_type: function dt_data_type(state) {\n      return state.dict.dt_data_type;\n    },\n    dt_Interface_type: function dt_Interface_type(state) {\n      return state.dict.dt_Interface_type;\n    },\n    dt_Interface_direction: function dt_Interface_direction(state) {\n      return state.dict.dt_Interface_direction;\n    },\n    dt_separator_symbol: function dt_separator_symbol(state) {\n      return state.dict.dt_separator_symbol;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_Interface_mode\", \"dt_data_type\", \"dt_Interface_type\", \"dt_Interface_direction\", \"dt_separator_symbol\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  created: function created() {\n    this.getList();\n  },\n  filters: {\n    statusFilter: function statusFilter(a) {\n      if (a === 1) {\n        return \"有效\";\n      } else {\n        return \"无效\";\n      }\n    }\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleQuery: function handleQuery() {\n      //查询\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    checked: function checked() {\n      this.$refs.tb.toggleRowSelection(this.listRFC[0], true); //官网方法，重点\n    },\n    handleconfigure: function handleconfigure() {\n      var _this3 = this;\n\n      //配置\n      if (this.selectlistRow) {\n        if (this.selectlistRow.interfaceMode == 'MQ') {\n          this.dialogFormVisiblepz = true;\n          api.queryRecordpz(this.selectlistRow.rowId, this.selectlistRow.interfaceMode).then(function (res) {\n            res.interfaceCode = _this3.selectlistRow.interfaceCode;\n            res.interfaceName = _this3.selectlistRow.interfaceName;\n            res.dataType = _this3.selectlistRow.dataType;\n            res.interfaceMode = _this3.selectlistRow.interfaceMode;\n            _this3.temp = res.data;\n            _this3.listMQ = [];\n\n            if (res.data.configurationTableFields) {\n              _this3.listMQ = res.data.configurationTableFields;\n            }\n\n            _this3.listMQ.forEach(function (item, index) {\n              item.number = (_this3.listQueryRFC.currentPage - 1) * _this3.listQueryRFC.pageSize + index + 1;\n            });\n          });\n        } else if (this.selectlistRow.interfaceMode == 'FTP') {\n          api.queryRecordpz(this.selectlistRow.rowId, this.selectlistRow.interfaceMode).then(function (res) {\n            res.interfaceCode = _this3.selectlistRow.interfaceCode;\n            res.interfaceName = _this3.selectlistRow.interfaceName;\n            res.dataType = _this3.selectlistRow.dataType;\n            res.interfaceMode = _this3.selectlistRow.interfaceMode;\n            _this3.temp = res.data; // this.temp.rowId=res.rowId \n\n            _this3.listFTP = [];\n\n            if (res.data.configurationTableFields) {\n              _this3.listFTP = res.data.configurationTableFields;\n            }\n\n            if (_this3.listFTP) {\n              _this3.listFTP.forEach(function (item, index) {\n                item.number = (_this3.listQueryFTP.currentPage - 1) * _this3.listQueryFTP.pageSize + index + 1;\n              });\n            }\n          });\n          this.dialogFormVisibleFTP = true;\n        } else if (this.selectlistRow.interfaceMode == 'RFC' || this.selectlistRow.interfaceMode == 'WebService') {\n          this.dialogStatus = \"RFC\";\n          api.queryRecordpz(this.selectlistRow.rowId, this.selectlistRow.interfaceMode).then(function (res) {\n            res.interfaceCode = _this3.selectlistRow.interfaceCode;\n            res.interfaceName = _this3.selectlistRow.interfaceName;\n            res.dataType = _this3.selectlistRow.dataType;\n            res.interfaceMode = _this3.selectlistRow.interfaceMode;\n            _this3.temp = res.data;\n\n            if (res.data.configurationTables) {\n              _this3.listRFC = res.data.configurationTables;\n            } else {\n              _this3.listRFC = [];\n            }\n\n            if (_this3.listRFC) {\n              _this3.listRFC.forEach(function (item, index) {\n                item.number = (_this3.listQueryRFC.currentPage - 1) * _this3.listQueryRFC.pageSize + index + 1;\n              });\n\n              _this3.$nextTick(function () {\n                this.checked();\n              });\n            }\n\n            if (_this3.listWeb) {\n              _this3.listWeb.forEach(function (item, index) {\n                item.number = (_this3.listQueryRFC.currentPage - 1) * _this3.listQueryRFC.pageSize + index + 1;\n              });\n            }\n          });\n          this.dialogFormVisibleRFC = true;\n        }\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择一条信息\",\n          type: \"warning\"\n        });\n      }\n    },\n    handleAttributeFTP: function handleAttributeFTP() {\n      var _this4 = this;\n\n      //FTP配置新增\n      var newValue = {\n        number: '',\n        attributeName: '',\n        attributeDesc: '',\n        tableField: '',\n        seq: ''\n      };\n      this.listFTP.push(newValue);\n      this.listFTP.forEach(function (item, index) {\n        item.number = (_this4.listQueryFTP.currentPage - 1) * _this4.listQueryFTP.pageSize + index + 1;\n      });\n    },\n    handleAttribute: function handleAttribute() {\n      var _this5 = this;\n\n      //MQ配置新增\n      var newValue = {\n        number: '',\n        attributeName: '',\n        attributeDesc: '',\n        tableField: '',\n        filedDesc: ''\n      };\n      this.listMQ.push(newValue);\n      this.listMQ.forEach(function (item, index) {\n        item.number = (_this5.listQueryMQ.currentPage - 1) * _this5.listQueryMQ.pageSize + index + 1;\n      });\n    },\n    handledel: function handledel() {\n      var _this6 = this;\n\n      //MQ配置删除\n      if (this.selectlistRowMQ) {\n        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          _this6.listMQ = _this6.listMQ.filter(function (item) {\n            var isD = true;\n\n            _this6.selectlistRowMQ.forEach(function (itemr) {\n              if (itemr.rowId === item.rowId) {\n                isD = false;\n              }\n            });\n\n            return isD;\n          });\n\n          _this6.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          });\n        }).catch(function () {\n          _this6.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message.warning(\"请勾选记录！\");\n        return;\n      }\n    },\n    handledelFTP: function handledelFTP() {\n      var _this7 = this;\n\n      //FTP配置删除\n      if (this.selectlistRowFTP) {\n        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          _this7.listFTP = _this7.listFTP.filter(function (item) {\n            var isD = true;\n\n            _this7.selectlistRowFTP.forEach(function (itemr) {\n              if (itemr.rowId === item.rowId) {\n                isD = false;\n              }\n            });\n\n            return isD;\n          });\n\n          _this7.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          });\n        }).catch(function () {\n          _this7.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message.warning(\"请勾选记录！\");\n        return;\n      }\n    },\n    updateFTP: function updateFTP() {\n      var _this8 = this;\n\n      //配置FTP确定按钮方法\n      this.listFTP.map(function (v) {\n        v.interfaceDefinitionId = _this8.selectlistRow.rowId;\n        return v;\n      });\n      this.dtf = this.temp;\n      this.dtf.configurationTableFields = this.listFTP;\n      this.dtf.interfaceDefinitionId = this.selectlistRow.rowId;\n      api.addRecordFTP(this.dtf).then(function () {\n        _this8.dialogFormVisibleFTP = false;\n\n        _this8.$message({\n          title: \"成功\",\n          message: \"配置成功\",\n          type: \"success\",\n          duration: 2000\n        });\n      });\n    },\n    updateMQ: function updateMQ() {\n      var _this9 = this;\n\n      //配置MQ确定按钮方法\n      this.dto = this.temp;\n      this.dto.configurationTableFields = this.listMQ;\n      this.dto.interfaceDefinitionId = this.selectlistRow.rowId;\n      api.addRecordMQ(this.dto).then(function () {\n        _this9.dialogFormVisiblepz = false;\n\n        _this9.$message({\n          title: \"成功\",\n          message: \"配置成功\",\n          type: \"success\",\n          duration: 2000\n        });\n      });\n    },\n    handleCreateTabA: function handleCreateTabA() {\n      var _this10 = this;\n\n      //RFC或web新增\n      var newValue = {\n        rowId: '',\n        tableName: ''\n      };\n      this.listRFC.push(newValue);\n      this.listRFC.forEach(function (item, index) {\n        item.number = (_this10.listQueryRFC.currentPage - 1) * _this10.listQueryRFC.pageSize + index + 1;\n      });\n    },\n    handleCreateTabB: function handleCreateTabB() {\n      var _this11 = this;\n\n      //RFC或web新增\n      if (this.selectlistRowRFC) {\n        var newValue = {\n          number: '',\n          attributeName: '',\n          attributeDesc: '',\n          tableField: '',\n          filedDesc: '',\n          num: this.selectlistRowRFC.number\n        };\n        this.listWeb.push(newValue);\n        this.listWeb.forEach(function (item, index) {\n          item.number = (_this11.listQueryWeb.currentPage - 1) * _this11.listQueryWeb.pageSize + index + 1;\n        });\n        this.selectlistRowRFC.configurationTableFields = this.listWeb;\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择一条信息\",\n          type: \"warning\"\n        });\n      }\n    },\n    handledelA: function handledelA() {\n      var _this12 = this;\n\n      //RFC或web删除\n      if (this.selectlistRowRFC) {\n        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          _this12.listRFC = _this12.listRFC.filter(function (item) {\n            var isD = true;\n\n            if (_this12.selectlistRowRFC.number === item.number) {\n              isD = false;\n            }\n\n            return isD;\n          });\n\n          _this12.$message({\n            type: \"success\",\n            message: \"删除成功\",\n            duration: 2000\n          });\n\n          _this12.listWeb = [];\n        }).catch(function () {\n          _this12.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message.warning(\"请勾选记录！\");\n        return;\n      }\n    },\n    handledelB: function handledelB() {\n      var _this13 = this;\n\n      //RFC或web删除\n      if (this.selectlistRowWeb) {\n        this.$confirm(\"确认要删除该数据项吗?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          _this13.listWeb = _this13.listWeb.filter(function (item) {\n            var isD = true;\n\n            _this13.selectlistRowWeb.forEach(function (itemr) {\n              if (itemr.rowId === item.rowId) {\n                isD = false;\n              }\n            });\n\n            return isD;\n          });\n\n          _this13.$message({\n            type: \"success\",\n            message: \"删除成功\",\n            duration: 2000\n          });\n        }).catch(function () {\n          _this13.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message.warning(\"请勾选记录！\");\n        return;\n      }\n    },\n    handleCreate: function handleCreate() {\n      //新增\n      this.resetTemp();\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n    },\n    create: function create() {\n      var _this14 = this;\n\n      //新增确认按钮\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this14.temp).then(function () {\n            _this14.getList();\n\n            _this14.dialogFormVisible = false;\n\n            _this14.$message({\n              title: \"成功\",\n              message: \"新增成功\",\n              type: \"success\",\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 获取表格选中时的数据\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val.pop());\n      }\n    },\n    selectRowMQ: function selectRowMQ(val) {\n      this.selectlistRowMQ = val;\n    },\n    selectRowFTP: function selectRowFTP(val) {\n      this.selectlistRowFTP = val;\n    },\n    selectRowRFC: function selectRowRFC(val) {\n      var _this15 = this;\n\n      this.selectlistRowRFC = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val[val.length - 1]);\n      }\n\n      if (this.selectlistRowRFC) {\n        if (this.selectlistRowRFC.configurationTableFields) {\n          this.listWeb = this.selectlistRowRFC.configurationTableFields;\n        } else {\n          this.listWeb = [];\n        }\n\n        if (this.selectlistRowRFC.configurationTableFields !== undefined) {\n          this.selectlistRowRFC.configurationTableFields.forEach(function (v, index) {\n            v.number = (_this15.listQueryWeb.currentPage - 1) * _this15.listQueryWeb.pageSize + index + 1;\n          }); // this.listWeb=this.selectlistRowRFC.configurationTableFields\n        }\n      }\n    },\n    RFC: function RFC() {\n      var _this16 = this;\n\n      //RFC或Web配置确定按钮方法\n      this.dta = this.temp;\n      this.dta.configurationTables = this.listRFC;\n      this.dta.interfaceDefinitionId = this.selectlistRow.rowId;\n      api.addRecordRFC(this.dta).then(function () {\n        _this16.dialogFormVisibleRFC = false;\n\n        _this16.$message({\n          title: \"成功\",\n          message: \"配置成功\",\n          type: \"success\",\n          duration: 2000\n        });\n      });\n    },\n    selectRowWeb: function selectRowWeb(val) {\n      this.selectlistRowWeb = val;\n    },\n    handleUpdate: function handleUpdate() {\n      //编辑弹窗\n      if (this.selectlistRow) {\n        this.temp = this.selectlistRow;\n        this.flag = true;\n        this.dialogStatus = \"update\";\n        this.dialogFormVisible = true;\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择一条信息\",\n          type: \"warning\"\n        });\n      }\n    },\n    update: function update() {\n      var _this17 = this;\n\n      //编辑提交\n      this.$refs[\"temp\"].validate(function (valid) {\n        if (valid) {\n          _this17.temp.updator = getDomainId();\n          api.updateRecord(_this17.temp).then(function () {\n            _this17.getList();\n\n            _this17.dialogFormVisible = false;\n\n            _this17.$message({\n              title: \"成功\",\n              message: \"更新成功\",\n              type: \"success\",\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this18 = this;\n\n      //删除列表\n      if (this.selectlistRow) {\n        this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          api.deleteRecord(_this18.selectlistRow.rowId).then(function () {\n            _this18.getList(), _this18.$message({\n              title: \"成功\",\n              message: \"删除成功\",\n              type: \"success\",\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this18.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请选择一条信息\",\n          type: \"warning\"\n        });\n      }\n    },\n    cancel: function cancel() {\n      //取消弹窗按钮\n      this.dialogFormVisible = false;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        isEffective: 1,\n        remark: undefined,\n        creator: getDomainId(),\n        updator: getDomainId()\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n    }\n  }\n};",null]}