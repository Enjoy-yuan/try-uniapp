{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainOrder/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainOrder/index.vue","mtime":1596610933388},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/em/maintainOrder'; // 增、删、改api引入\n\nimport { queryTeamEmployee } from '@/api/project/eas/database/groups';\nimport Pagination from '@/components/Pagination';\nimport caiGou from '@/components/Select/caigou';\nimport teamSelect from \"../../components/teamSelect\";\nimport deviceSelect from \"../../components/singleDeviceSelect\";\nimport employeeSelect from '@/components/Select/employeesSelect';\nimport partSelect from \"../../components/maintainPartSelect\";\nimport spareSelect from \"../../components/spareSelect\";\nimport fileUpload from \"../../components/fileUpload\";\nimport { mapState } from 'vuex'; // 基本数据引入\n\nimport { DT_ORG_TYPE } from '@/utils/constant';\nexport default {\n  name: 'maintainOrder',\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    teamSelect: teamSelect,\n    deviceSelect: deviceSelect,\n    employeeSelect: employeeSelect,\n    spareSelect: spareSelect,\n    partSelect: partSelect,\n    fileUpload: fileUpload\n  },\n  data: function data() {\n    return {\n      currentTab: 'tab1',\n      transCode: undefined,\n      theight: 0,\n      //表格高度\n      list: [],\n      teamWorker: [],\n      fromList: [{}],\n      total: 0,\n      tableKey: [0, 1, 2, 3, 4],\n      //表格索引\n      timeRange: [],\n      listQuery: {\n        //查询\n        currentPage: 1,\n        pageSize: 15,\n        states: undefined\n      },\n      temp: {\n        positionList: [],\n        spareList: [],\n        deviceType: undefined,\n        orgCode: undefined,\n        teamCode: undefined,\n        teamName: undefined,\n        applicant: undefined,\n        applicantCode: undefined,\n        applicantName: undefined\n      },\n      DT_ORG_TYPE: DT_ORG_TYPE,\n      dialogStatus: '',\n      dialogVisible: false,\n      deviceVisible: false,\n      employeeVisible: false,\n      partVisible: false,\n      spareVisible: false,\n      curChange: false,\n      //if the current row change\n      clickChange: false,\n      //if click another row\n      currentSelectedRow: null,\n      //当前选中行\n      selectedRows: [],\n      //多选时选中的所有行\n      selectFromList1: [],\n      //从表选中\n      selectFromList2: [],\n      //从表选中\n      rules: {\n        orgCode: [{\n          required: true,\n          message: '组织编码不能为空',\n          trigger: 'blur'\n        }],\n        equipmentCode: [{\n          required: true,\n          message: '设备编号不能为空',\n          trigger: 'blur'\n        }],\n        teamCode: [{\n          required: true,\n          message: '保养班组不能为空',\n          trigger: 'blur'\n        }],\n        applicant: [{\n          required: true,\n          message: '负责人不能为空',\n          trigger: 'blur'\n        }],\n        maintainLevel: [{\n          required: true,\n          message: '保养级别不能为空',\n          trigger: 'blur'\n        }],\n        timeRange: [{\n          required: true,\n          message: '计划保养时间不能为空',\n          trigger: 'blur'\n        }],\n        positionList: [{\n          required: true,\n          message: '请选择保养部位',\n          trigger: 'blur'\n        }],\n        spareList: [{\n          required: true,\n          message: '请选择使用备件',\n          trigger: 'blur'\n        }]\n      },\n      rules2: {\n        orgCode: [{\n          required: true,\n          message: '组织编码不能为空',\n          trigger: 'blur'\n        }],\n        equipmentCode: [{\n          required: true,\n          message: '设备编号不能为空',\n          trigger: 'blur'\n        }],\n        teamCode: [{\n          required: true,\n          message: '保养班组不能为空',\n          trigger: 'blur'\n        }],\n        applicant: [{\n          required: true,\n          message: '负责人不能为空',\n          trigger: 'blur'\n        }],\n        maintainLevel: [{\n          required: true,\n          message: '保养级别不能为空',\n          trigger: 'blur'\n        }],\n        positionList: [{\n          required: true,\n          message: '请选择保养部位',\n          trigger: 'blur'\n        }],\n        spareList: [{\n          required: true,\n          message: '请选择使用备件',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  filters: {\n    normalFilter: function normalFilter(val) {\n      return val == 'Y' ? '正常' : val == 'N' ? '异常' : '';\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    dt_upkeep_worder_state: function dt_upkeep_worder_state(state) {\n      return state.eamDict.dt_upkeep_worder_state;\n    },\n    dt_upkeep_level: function dt_upkeep_level(state) {\n      return state.eamDict.dt_upkeep_level;\n    },\n    dt_file_equipment: function dt_file_equipment(state) {\n      return state.eamDict.dt_file_equipment;\n    }\n  })),\n  watch: {\n    // 监听时间区间数组 写入到对应字段\n    timeRange: function timeRange(value) {\n      if (value) {\n        this.listQuery.createTimeStart = value[0];\n        this.listQuery.createTimeEnd = value[1];\n      } else {\n        delete this.listQuery.createTimeStart;\n        delete this.listQuery.createTimeEnd;\n      }\n    },\n    'temp.timeRange': function tempTimeRange(value) {\n      if (value) {\n        this.temp.planStartTime = value[0];\n        this.temp.planEndTime = value[1];\n      }\n    },\n    'listQuery.orgCode': function listQueryOrgCode() {\n      this.$set(this.listQuery, 'teamCode', undefined);\n      this.$refs.teamSelectQuery.itemKey = '';\n    },\n    'temp.orgCode': function tempOrgCode(val) {\n      var _this = this;\n\n      setTimeout(function () {\n        if (val) {\n          // 班组组件传入orgCode即可过滤成只包含当前组织的班组\n          _this.$refs.teamSelect.getOptions(val);\n        } else {\n          _this.$refs.teamSelect.getOptions();\n\n          _this.$set(_this.temp, 'tempCode', undefined);\n        }\n      }, 0);\n    },\n    'temp.teamCode': function tempTeamCode(val) {\n      if (val) {\n        this.getTeamWorker(val); // this.temp.teamName = this.$refs.teamSelect.options.filter(\n        //     item => item.teamCode == val\n        // )[0].teamName\n      }\n    },\n    'temp.applicant': function tempApplicant(val) {\n      if (val && this.teamWorker.length) {\n        this.temp.applicantName = this.teamWorker.filter(function (item) {\n          return item.employeeCode == val;\n        })[0].employeeName;\n      } else {\n        this.temp.applicant = undefined;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$store.dispatch('eamDict/getDicData', ['dt_upkeep_worder_state', 'dt_upkeep_level', 'dt_file_equipment']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this2.setTableHeight();\n    };\n\n    setTimeout(function () {\n      _this2.getList();\n\n      _this2.getTeamWorker();\n    }, 500);\n  },\n  methods: {\n    getTemp: function getTemp(val) {\n      if (val) {\n        this.temp.teamName = val.teamName;\n      }\n    },\n    addDevice: function addDevice() {\n      this.temp.positionList = [];\n      this.deviceVisible = false;\n    },\n    getTeamWorker: function getTeamWorker(teamCode) {\n      var _this3 = this;\n\n      queryTeamEmployee(teamCode, {\n        currentPage: 1,\n        pageSize: 1000\n      }).then(function (res) {\n        _this3.teamWorker = res.data.list;\n\n        if (teamCode) {\n          var arr = res.data.list.map(function (i) {\n            return i.employeeCode == _this3.temp.employeeCode;\n          });\n\n          if (!arr.includes(true)) {\n            _this3.$set(_this3.temp, 'applicant', undefined);\n          }\n        }\n      });\n    },\n    createDevice: function createDevice() {\n      var _this4 = this;\n\n      this.deviceVisible = true;\n      setTimeout(function () {\n        _this4.$refs.deviceSelect.getList();\n      }, 0);\n    },\n    calMain: function calMain() {},\n    handleAdd: function handleAdd(num) {\n      var _this5 = this;\n\n      if (num == 1) {\n        if (!this.temp.equipmentCode) {\n          this.$message({\n            title: '警告',\n            message: '请选择设备',\n            type: 'warning'\n          });\n          return;\n        }\n\n        this.partVisible = true;\n        setTimeout(function () {\n          _this5.$refs.partSelect.getList();\n        }, 0);\n      } else {\n        this.spareVisible = true;\n        setTimeout(function () {\n          _this5.$refs.spareSelect.getList();\n        }, 0);\n      }\n    },\n    getSpare: function getSpare() {\n      // 备件\n      var val = this.$refs.spareSelect.currentSelect;\n      this.spareVisible = false;\n      this.$refs.spareSelect.currentSelect = [];\n\n      if (val) {\n        var tmp = this.temp.spareList.concat(val);\n        this.temp.spareList = tmp;\n      } else {\n        return;\n      }\n    },\n    getPart: function getPart() {\n      // 部件\n      var val = this.$refs.partSelect.currentSelect;\n      this.partVisible = false;\n      this.$refs.partSelect.currentSelect = [];\n\n      if (val) {\n        var tmp = this.temp.positionList.concat(val);\n        this.temp.positionList = tmp;\n      } else {\n        return;\n      }\n    },\n    getOrg: function getOrg(val) {\n      this.$set(this.temp, 'teamCode', '');\n      this.$set(this.temp, 'teamName', ''); // 组织编码\n\n      if (val) {\n        this.$set(this.temp, 'orgCode', val.organizationCode);\n        this.$set(this.temp, 'orgName', val.organizationName);\n      } else {\n        this.temp.teamCode = '';\n        this.temp.teamName = '';\n        this.temp.orgCode = '';\n        this.temp.orgName = '';\n        return;\n      }\n    },\n    getEmployee: function getEmployee(val) {\n      // 保养负责人\n      if (val) {\n        Object.assign(this.temp, {\n          applicant: val[0].employeeCode,\n          applicantName: val[0].employeeName\n        });\n      } else {\n        return;\n      }\n    },\n    getDevice: function getDevice(val) {\n      // 获取选择设备信息\n      if (val) {\n        Object.assign(this.temp, {\n          equipmentCode: val.deviceCode,\n          deviceName: val.deviceName,\n          useDeptName: val.useDeptName,\n          useDept: val.useDept,\n          address: val.address,\n          addressName: val.addressName,\n          modelNumber: val.modelNumber,\n          deviceType: val.typeCode\n        });\n      } else {\n        return;\n      }\n    },\n    changeTab: function changeTab() {\n      if (this.currentTab == 'tab1') {\n        this.getDetail();\n      } else if (this.currentTab == 'tab2') {\n        this.transCode = this.currentClickRow.workOrderNumber; // this.$refs.fileUpload.getList()\n      } else {\n        return;\n      }\n    },\n    handleCheckRow: function handleCheckRow(row) {\n      var _this6 = this;\n\n      api.queryDetails({\n        workOrderNumber: row.workOrderNumber\n      }).then(function (res) {\n        api.queryParts(row.workOrderNumber).then(function (res2) {\n          _this6.temp.positionList = res.data;\n          _this6.temp.spareList = res2.data;\n          Object.assign(_this6.temp, row);\n          _this6.dialogStatus = 'update';\n          _this6.dialogVisible = true;\n          setTimeout(function () {\n            _this6.$refs.caiGou.itemKey = _this6.temp.orgCode;\n            _this6.$refs.teamSelect.itemKey = _this6.temp.teamCode;\n            _this6.temp.timeRange = [_this6.temp.planStartTime, _this6.temp.planEndTime];\n          }, 0);\n        });\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    getList: function getList() {\n      var _this7 = this;\n\n      //获取表格数据\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this7.list = _this7.$myFun.codeToName(res.data, [_this7.dt_upkeep_worder_state], ['state']).list;\n        _this7.total = res.data.pages.count;\n\n        _this7.$nextTick(function () {\n          _this7.$refs.tb.toggleRowSelection(_this7.list[0], true);\n        });\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        positionList: [],\n        spareList: []\n      };\n    },\n    handleQuery: function handleQuery() {\n      //表格查询\n      this.listQuery.currentPage = 1;\n      delete this.listQuery.timeRange;\n      this.getList();\n      this.fromList = undefined;\n    },\n    handleCreate: function handleCreate() {\n      var _this8 = this;\n\n      //新增按钮单击事件方法\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogVisible = true;\n      setTimeout(function () {\n        _this8.$refs.caiGou.itemKey = '';\n      }, 0);\n    },\n    create: function create() {\n      var _this9 = this;\n\n      //编辑确认\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          if (_this9.temp.spareList.every(function (item) {\n            return item.applyQuantity;\n          })) {\n            _this9.temp.positionList.forEach(function (item, index) {\n              item.serialNumber = index;\n            });\n\n            api.addRecord(_this9.temp).then(function (res) {\n              if (res.status == 201) {\n                _this9.dialogVisible = false;\n\n                _this9.$message({\n                  title: '成功',\n                  message: '创建成功',\n                  type: 'success'\n                });\n\n                _this9.getList();\n              }\n            });\n          } else {\n            _this9.$message({\n              title: '警告',\n              message: '请输入备件数量',\n              type: 'warning'\n            });\n\n            return;\n          }\n        }\n      });\n    },\n    handleUpdate: function handleUpdate() {\n      //编辑按钮单击事件方法\n      if (this.selectedRows) {\n        this.temp = this.selectedRows;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update: function update() {\n      var _this10 = this;\n\n      //编辑确认\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          _this10.temp.positionList.forEach(function (item, index) {\n            item.serialNumber = index;\n          });\n\n          api.patchRecord(_this10.temp.workOrderNumber, _this10.temp).then(function (res) {\n            if (res.status == 201) {\n              _this10.dialogVisible = false;\n\n              _this10.$message({\n                title: '成功',\n                message: '修改成功',\n                type: 'success'\n              });\n\n              _this10.getList();\n\n              _this10.fromList = [];\n            }\n          });\n        }\n      });\n    },\n    handleDispatch: function handleDispatch() {\n      var _this11 = this;\n\n      if (this.selectedRows) {\n        var newArr = this.selectedRows.filter(function (i) {\n          return i.state !== 'ukwos_10';\n        });\n\n        if (newArr.length > 0) {\n          this.$message({\n            title: '警告',\n            message: '仅编制状态可派工',\n            type: 'warning'\n          });\n          return;\n        }\n\n        this.$confirm('此操作将派工, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var tmp = _this11.selectedRows.map(function (item) {\n            return item.workOrderNumber;\n          });\n\n          api.dispatchRecord(tmp).then(function (res) {\n            if (res.status == 201) {\n              _this11.$message({\n                title: '成功',\n                message: '已派工',\n                type: 'success'\n              });\n\n              _this11.getList();\n            }\n          });\n        }).catch(function () {\n          _this11.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleDelete: function handleDelete() {\n      var _this12 = this;\n\n      if (this.selectedRows.length) {\n        var newArr = this.selectedRows.filter(function (i) {\n          return i.state !== 'ukwos_10';\n        });\n\n        if (newArr.length > 0) {\n          this.$message({\n            title: '警告',\n            message: '仅编制状态可删除',\n            type: 'warning'\n          });\n          return;\n        }\n\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var tmp = _this12.selectedRows.map(function (item) {\n            return item.workOrderNumber;\n          });\n\n          api.deleteRecord(tmp).then(function (res) {\n            if (res.status == 204) {\n              _this12.$message({\n                title: '成功',\n                message: '删除成功',\n                type: 'success'\n              });\n\n              _this12.getList();\n\n              _this12.fromList = [];\n            }\n          });\n        }).catch(function () {\n          _this12.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择记录',\n          type: 'warning'\n        });\n      }\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    //获取从表数据\n    getDetail: function getDetail() {\n      var _this13 = this;\n\n      if (this.currentTab == 'tab2') {\n        this.transCode = this.currentClickRow.workOrderNumber ? this.currentClickRow.workOrderNumber : undefined;\n        this.$refs.fileUpload.getList();\n        return;\n      }\n\n      api.queryDetails({\n        workOrderNumber: this.currentClickRow.workOrderNumber\n      }).then(function (res) {\n        _this13.fromList = res.data;\n        _this13.temp.positionList = res.data;\n      });\n    },\n    handleDeleteForm: function handleDeleteForm(num) {\n      var _this14 = this;\n\n      if (num == 1) {\n        this.selectFromList1.forEach(function (item) {\n          _this14.temp.positionList = _this14.temp.positionList.filter(function (i) {\n            return i.maintenanceCode != item.maintenanceCode;\n          });\n        });\n      } else {\n        this.selectFromList2.forEach(function (item) {\n          _this14.temp.spareList = _this14.temp.spareList.filter(function (i) {\n            return i.materielCode != item.materielCode;\n          });\n        });\n      }\n    },\n    //从表选择框选中\n    selectFromChange1: function selectFromChange1(val) {\n      this.selectFromList1 = val;\n    },\n    rowClickFrom1: function rowClickFrom1(val) {\n      this.$refs.sub1.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectFromChange2: function selectFromChange2(val) {\n      this.selectFromList2 = val;\n    },\n    rowClickFrom2: function rowClickFrom2(val) {\n      this.$refs.sub2.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    checkSelectStatus: function checkSelectStatus(rows, row) {\n      var checkStatus = false;\n\n      if (rows) {\n        if (this.selectedRows.length <= rows.length && rows.length != 0) {\n          checkStatus = true;\n        }\n      }\n\n      if (row) {\n        if (JSON.stringify(this.selectedRows).indexOf(JSON.stringify(row)) == -1) {\n          checkStatus = true;\n        }\n      }\n\n      return checkStatus;\n    },\n    //点击表格某一行\n    rowClick: function rowClick(row) {\n      if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n        this.clickChange = false;\n      } else {\n        this.clickChange = true;\n      }\n\n      this.currentClickRow = row;\n      var selectStatus = this.checkSelectStatus(null, row);\n\n      if (selectStatus) {\n        this.currentSelectedRow = row;\n        this.$refs.tb.toggleRowSelection(row, true);\n        this.getDetail();\n      } else {\n        if (this.clickChange) {\n          this.$refs.tb.setCurrentRow(this.currentClickRow);\n          this.getDetail();\n        }\n      }\n    },\n    selectChange: function selectChange(val) {\n      this.selectedRows = val;\n\n      if (this.clickChange) {\n        this.$refs.tb.setCurrentRow(this.currentClickRow);\n        this.getDetail();\n      }\n    },\n    tableSelect: function tableSelect(rows, row) {\n      var selectStatus = this.checkSelectStatus(rows);\n\n      if (JSON.stringify(this.currentClickRow) === JSON.stringify(row)) {\n        this.clickChange = false;\n      } else {\n        this.clickChange = true;\n        this.currentClickRow = row;\n      }\n\n      if (selectStatus) {\n        this.currentSelectedRow = row;\n      } else {\n        this.curChange = false;\n      }\n    }\n  }\n};",null]}