{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/materialClassify/orgmaterialParameters/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/materialClassify/orgmaterialParameters/index.vue","mtime":1599136050792},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/srm/materialClassify/orgmaterialParameters\";\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from \"vuex\";\nimport dialogMaterielCategory from '@/components/Dialog/dialogMaterielCategory.vue'; //主数据物料选择\n\nimport addMain from \"./dialog/addMain\";\nexport default {\n  name: \"RFQconfigure\",\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    dialogMaterielCategory: dialogMaterielCategory,\n    addMain: addMain\n  },\n  data: function data() {\n    return {\n      DICT_CODE: DICT_CODE,\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      list: [],\n      total: 0,\n      listQuery: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 15\n      },\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      tableKey: 0 //表格索引\n\n    };\n  },\n  created: function created() {},\n  computed: _objectSpread({}, mapState({\n    dt_manufacture_diff: function dt_manufacture_diff(state) {\n      return state.dict.dt_manufacture_diff;\n    },\n    dt_unit_type: function dt_unit_type(state) {\n      return state.dict.dt_unit_type;\n    },\n    dt_timeunit: function dt_timeunit(state) {\n      return state.dict.dt_timeunit;\n    },\n    dt_srm_pdz: function dt_srm_pdz(state) {\n      return state.dict.dt_srm_pdz;\n    },\n    dt_srm_pc0: function dt_srm_pc0(state) {\n      return state.dict.dt_srm_pc0;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_manufacture_diff\", 'dt_unit_type', 'dt_timeunit', 'dt_srm_pdz', 'dt_srm_pc0']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  watch: {},\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    refresh: function refresh() {\n      this.getList();\n    },\n    handleClassifyCode: function handleClassifyCode() {\n      if (this.listQuery.purchaseOrg) {\n        this.$refs.refZsjWlxz.listQuery.orgCode = this.listQuery.purchaseOrg;\n        this.$refs.refZsjWlxz.selectedRows = [];\n        this.$refs.refZsjWlxz.handleQuery();\n        this.$refs.refZsjWlxz.dialogVisible = true;\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先选择采购组织'\n        });\n      }\n    },\n    confirmMateriel: function confirmMateriel(data) {\n      this.$set(this.listQuery, 'materialClassification', data[0].classCode);\n      this.$set(this.listQuery, 'materialClassificationName', data[0].className);\n    },\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        var options = [_this2.dt_manufacture_diff, _this2.dt_unit_type, _this2.dt_unit_type, _this2.dt_timeunit, _this2.dt_srm_pdz, _this2.dt_srm_pc0];\n        res.data.list = _this2.$myFun.srmCodeToName(res.data.list, options, ['makeDistinction', 'purchaseUmo', 'basicUmo', 'leadTimeUnit', 'purchaseTriggeringMethod', 'purchaseStrategy']);\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    //表格查询\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.$refs.addMain.resetTemp();\n      this.$refs.addMain.dialogStatus = 'create';\n      this.$refs.addMain.dialogVisible = true;\n    },\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate(index, val) {\n      this.$refs.addMain.dialogStatus = 'update';\n      this.$refs.addMain.temp = _objectSpread({}, val);\n      this.$refs.addMain.dialogVisible = true;\n    },\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(index, val) {\n      var _this3 = this;\n\n      this.$confirm(\"是否删除该信息\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        api.deleteRecord(val.rowId).then(function () {\n          _this3.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this3.getList();\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: \"info\",\n          message: \"已取消\"\n        });\n      });\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val, \"selected\"); //单击行绑定点击事件\n    }\n  }\n};",null]}