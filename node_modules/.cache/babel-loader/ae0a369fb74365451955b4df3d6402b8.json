{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/dialog/setModel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/dialog/setModel.vue","mtime":1597628790263},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/srm/contractManage/evaluationModel\";\nimport { mapState } from 'vuex';\nimport dialogPersonSelect from '@/components/Dialog/dialogPersonSelect.vue'; //选择人\n\nexport default {\n  props: ['isSingle'],\n  components: {\n    dialogPersonSelect: dialogPersonSelect\n  },\n  data: function data() {\n    return {\n      dataIndex: null,\n      dialogVisible: false,\n      listSelected: null,\n      tableKey: 0,\n      list: null,\n      listQuery: {}\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pak: function dt_srm_pak(state) {\n      return state.dict.dt_srm_pak;\n    },\n    dt_srm_pb1: function dt_srm_pb1(state) {\n      return state.dict.dt_srm_pb1;\n    },\n    dt_srm_pb2: function dt_srm_pb2(state) {\n      return state.dict.dt_srm_pb2;\n    },\n    dt_srm_pb5: function dt_srm_pb5(state) {\n      return state.dict.dt_srm_pb5;\n    },\n    dt_srm_pb4: function dt_srm_pb4(state) {\n      return state.dict.dt_srm_pb4;\n    },\n    dt_srm_pas: function dt_srm_pas(state) {\n      return state.dict.dt_srm_pas;\n    }\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch('dict/getDicData', ['dt_srm_pak', 'dt_srm_pb1', 'dt_srm_pb2', 'dt_srm_pb5', 'dt_srm_pb4', 'dt_srm_pas']);\n\n    if (this.dt_srm_pb4) {\n      this.getList();\n    }\n  },\n  watch: {// 'dt_srm_pb4' (val) {\n    //     if (val) {\n    //         this.listQuery.parentCode = 'root'\n    //         this.listQuery.method = 'configure'\n    //         api.queryRecordTree(this.listQuery).then(res => {\n    //             this.list = val.map(v => {\n    //                 res.data.forEach(item => {\n    //                     if (v.dictItemValue == item.name) {\n    //                         v.versionCode = item.classificationCode\n    //                     }\n    //                 })\n    //                 return v\n    //             })\n    //         })\n    //     }\n    // }\n  },\n  methods: {\n    checked: function checked(i) {\n      console.log(1111);\n      this.$refs.tb.toggleRowSelection(this.list[i], true);\n    },\n    getList: function getList() {\n      var _this = this;\n\n      console.log(this.dt_srm_pb4, 'this.dt_srm_pb4');\n      this.listQuery.parentCode = 'root';\n      this.listQuery.method = 'configure';\n      api.queryRecordTree(this.listQuery).then(function (res) {\n        _this.list = _this.dt_srm_pb4.map(function (v) {\n          res.data.forEach(function (item) {\n            if (v.dictItemValue == item.name) {\n              v.versionCode = item.classificationCode;\n            }\n          });\n          return v;\n        });\n\n        if (_this.listSelected) {\n          _this.listSelected.forEach(function (items) {\n            _this.list.forEach(function (item, index) {\n              if (item.dictItemKey === items.dictItemKey) {\n                _this.$nextTick(function () {\n                  this.checked(index);\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    showPerson: function showPerson(index, val) {\n      console.log(index, val);\n      this.$refs.person.dialogVisible = true;\n      this.dataIndex = index;\n    },\n    personConfirm: function personConfirm(val) {\n      this.$set(this.list[this.dataIndex], 'evaluationPerson', val[0].employeeName);\n      console.log(val);\n    },\n    handleConfirm: function handleConfirm() {\n      if (this.selectlistRow) {\n        this.$emit('handleConfirm', this.selectlistRow);\n        this.dialogVisible = false;\n      } else {\n        this.$message({\n          title: \"警告\",\n          message: \"请勾选记录\",\n          type: \"warning\"\n        });\n      }\n    },\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        this.selectlistRow = val[val.length - 1];\n\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection();\n          this.$refs.tb.toggleRowSelection(val.pop());\n        }\n\n        this.$refs.tb.setCurrentRow(this.selectlistRow);\n      } else {\n        this.selectlistRow = val;\n      }\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      if (this.isSingle) {\n        this.$refs.tb.clearSelection(); //清除其他行的选中\n      }\n\n      this.$refs.tb.toggleRowSelection(val, \"selected\"); //单击行绑定点击事件\n    }\n  }\n};",null]}