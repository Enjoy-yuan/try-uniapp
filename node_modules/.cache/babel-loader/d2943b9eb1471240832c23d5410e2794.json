{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/rycardManagement/supplierRycardgl/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/rycardManagement/supplierRycardgl/index.vue","mtime":1596610933895},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import * as api from \"@/api/purchase/delivery_Publish\";\nimport Pagination from \"@/components/Pagination\";\nimport { mapGetters } from 'vuex';\nimport addMain from \"./dialog/addMain\";\nimport examine from \"./dialog/examine\";\nexport default {\n  name: \"supplierRycardgl\",\n  components: {\n    Pagination: Pagination,\n    addMain: addMain,\n    examine: examine\n  },\n  data: function data() {\n    return {\n      modalnum: null,\n      //模板编号\n      theight: 0,\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      list: null,\n      listSub: null,\n      total: 0,\n      selectedrow: null,\n      //主表选中行\n      dialogStatus: \"\",\n      dialogVisible: false,\n      dialogVisibleExamine: false,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      sublistQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      tableKey: [0, 1] //表格索引，虚拟dom渲染表格时使用\n\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['domainName', 'domainId'])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.listQuery.state = 'CREATE';\n    this.getDelivery();\n  },\n  methods: {\n    changeMoudle: function changeMoudle(val) {\n      this.$emit('changeSelect', val);\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    //主表数据获取\n    getDelivery: function getDelivery() {\n      if (this.listQuery.supplierCode) {// api.getDelivery(this.listQuery).then(res => {\n        //     this.list = res.list;\n        //     this.total = res.pages.count;\n        //     this.setFirstLine();\n        //     if (this.list[0]) {\n        //         this.getSubList(this.list[0])\n        //     }\n        // });\n      }\n    },\n    //显示主表\n    getList: function getList() {\n      this.getDelivery();\n    },\n    //显示从表\n    getSubList: function getSubList(row) {\n      this.sublistQuery.supplierCode = row.supplierCode;\n      this.sublistQuery.orderNumber = row.orderNumber; // api.getDeliveryDetail(this.sublistQuery).then(res => {\n      //     this.listSub = res.deliveryOrderItemDTOList;\n      // });\n    },\n    handleCreate: function handleCreate() {\n      this.dialogVisible = true;\n    },\n    handleExamine: function handleExamine() {\n      this.dialogVisibleExamine = true;\n    },\n    //发布\n    handlePublish: function handlePublish() {},\n    handleUpdate: function handleUpdate() {},\n    //删除\n    handleDelete: function handleDelete() {},\n    //查询\n    handleQuery: function handleQuery() {\n      this.listSub = [];\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //每页大小变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      if (this.isSingle) {\n        this.$refs.tb.clearSelection(); //清除其他行的选中\n      }\n\n      this.$refs.tb.toggleRowSelection(val, \"selected\"); //单击行绑定点击事件\n\n      this.getSubList(val);\n    },\n    //加载时默认选中第一行\n    setFirstLine: function setFirstLine() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$refs.tbmain.setCurrentRow(_this2.list[0]);\n      });\n    }\n  }\n};",null]}