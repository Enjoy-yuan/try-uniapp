{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processMonitor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/system/processManage/processMonitor/index.vue","mtime":1600927611541},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api1 from '@/api/system/process/processConfiguration';\nimport * as api from '@/api/system/process/processMonitor';\nimport Pagination from '@/components/Pagination';\nimport dialogStart from \"./dialogStart\";\nexport default {\n  name: 'processDesign',\n  components: {\n    Pagination: Pagination,\n    dialogStart: dialogStart\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      //树高度样式\n      contentStyleObj: {\n        height: ''\n      },\n      treeData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      tableKey: [0, 1],\n      //表格索引，虚拟dom渲染表格时使用\n      list: [{\n        organizationCode: 1\n      }],\n      listSub: [],\n      total: 0,\n      orgName: [],\n      dialogStatus: '',\n      activeCollNames: ['1'],\n      listLoading: true,\n      dialogVisible: false,\n      dialogVisibleupload: false,\n      dialogVisiblesearch: false,\n      startData: {\n        formData: null,\n        src: null\n      },\n      listQuery: {\n        key: undefined,\n        currentPage: 1,\n        pageSize: 10\n      },\n      listQuerySub: {\n        parentOrgCode: undefined,\n        currentPage: 1,\n        pageSize: 10,\n        state: 0,\n        yewuhao: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.getTreeList();\n    this.getList();\n    this.setTreeHeight();\n  },\n  methods: {\n    //模板变化\n    changeMoudle: function changeMoudle(val) {\n      this.$emit('changeSelect', val);\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() / 2 - 30;\n    },\n    getTreeList: function getTreeList() {\n      var _this2 = this;\n\n      api.getModelTree('tree').then(function (rest) {\n        rest = rest.data;\n        _this2.treeData = _this2.$myFun.reDataToWorkTree(rest, 'category');\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      // setTimeout(() => {\n      //     api.getRecords(this.listQuery).then(res => {\n      //         res = res.data.list\n      //         this.list = res\n      //     })\n      // }, 1.5 * 100);\n      setTimeout(function () {\n        api1.getRecords(_this3.listQuery).then(function (res) {\n          res = res.data.list;\n          _this3.list = res;\n        });\n      }, 1.5 * 100);\n    },\n    //获取监控详情\n    getSubList: function getSubList() {},\n    handleQuery: function handleQuery() {\n      //查询\n      this.getSubList();\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], 'selected'); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击某行时执行\n    rowClick: function rowClick(val) {\n      if (this.isSingle) {\n        this.$refs.tb.clearSelection(); //清除其他行的选中\n      }\n\n      this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.listQuery.key = data.key;\n      this.getList();\n    },\n    //流程启动\n    handleStart: function handleStart(index, row) {\n      //  this.dialogIndex = 1\n      this.$refs.dialogStart.initForm(row);\n      this.startData.src = \"/workflow/diagram-viewer/index.html?processDefinitionId=\".concat(row.id);\n      this.$refs.dialogStart.dialogVisible = true;\n    },\n    startWorkFlow: function startWorkFlow(val) {\n      this.startData.formData = val;\n      console.log(this.startData);\n      this.$router.push({\n        name: '流程启动',\n        params: this.startData\n      });\n    }\n  }\n};",null]}