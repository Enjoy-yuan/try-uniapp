{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/gatewayProducts/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/PM/gatewayProducts/main.vue","mtime":1598577833776},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/PM/gatewayProducts\";\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: \"GPMain\",\n  components: {\n    Pagination: Pagination\n  },\n  computed: _objectSpread({}, mapState({\n    iot_authentication: function iot_authentication(state) {\n      return state.iotDict.iot_authentication;\n    },\n    iot_data_format: function iot_data_format(state) {\n      return state.iotDict.iot_data_format;\n    },\n    iot_node_type: function iot_node_type(state) {\n      return state.iotDict.iot_node_type;\n    }\n  })),\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      listLoading: false,\n      list: null,\n      total: 0,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        gatewayName: undefined\n      },\n      temp: {\n        gatewayCode: undefined,\n        gatewayName: undefined,\n        authentication: undefined,\n        dataFormat: undefined,\n        nodeType: undefined,\n        isTls: 0,\n        remark: undefined\n      },\n      rules: {\n        gatewayCode: [{\n          required: true,\n          message: '网关产品编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大小写字母、数字组成，长度为32',\n          trigger: 'blur'\n        }],\n        gatewayName: [{\n          required: true,\n          message: '网关产品名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[\\u4e00-\\u9fa5a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字及中文组成',\n          trigger: 'blur'\n        }],\n        authentication: [{\n          required: true,\n          message: '请选择认证方式',\n          trigger: 'change'\n        }],\n        dataFormat: [{\n          required: true,\n          message: '请选择数据格式',\n          trigger: 'change'\n        }],\n        nodeType: [{\n          required: true,\n          message: '请选择节点类型',\n          trigger: 'change'\n        }],\n        remark: [{\n          max: 100,\n          message: '长度不大于100字',\n          trigger: 'blur'\n        }]\n      },\n      dialogFormVisible: undefined,\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      tableKey: 0 //表格索引\n\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setTableHeight();\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //获取表格数据\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      api.queryRecords(this.listQuery).then(function (response) {\n        _this2.list = response.data.list;\n        _this2.total = response.data.pages.count;\n        var options = [_this2.iot_authentication, _this2.iot_data_format, _this2.iot_node_type];\n        _this2.list = _this2.$myFun.srmCodeToName(_this2.list, options, ['authentication', 'dataFormat', 'nodeType']);\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    //表格查询\n    handleQuery: throttle(function () {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    toInfo: function toInfo(row) {\n      this.$emit('setCode', row);\n      this.$emit('setPage', 'info');\n    },\n    //新增按钮单击事件方法\n    handleCreate: function handleCreate() {\n      this.reTemp();\n      this.dialogFormVisible = true;\n    },\n    create: throttle(function () {\n      var _this3 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this3.temp).then(function () {\n            _this3.getList();\n\n            _this3.dialogFormVisible = false;\n\n            _this3.reTemp();\n\n            _this3.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //删除按钮单击事件方法\n    handleDelete: function handleDelete(code) {\n      var _this4 = this;\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteRecord(code).then(function () {\n          _this4.getList();\n\n          _this4.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this4.getList();\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    reTemp: function reTemp() {\n      this.temp = {\n        gatewayCode: undefined,\n        gatewayName: undefined,\n        authentication: undefined,\n        dataFormat: undefined,\n        nodeType: undefined,\n        isTls: 0,\n        remark: undefined\n      };\n    }\n  }\n};",null]}