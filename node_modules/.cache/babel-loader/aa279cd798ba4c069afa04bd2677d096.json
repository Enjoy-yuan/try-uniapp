{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuan/Documents/大唐广电/cf_web/src/utils/request.js","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/utils/request.js","mtime":1600927611434},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message } from 'element-ui';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth'; // create an axios instance\n\nvar service = axios.create({\n  // baseURL: process.env.SYSTEM_BASE_API, // api 的 base_url\n  timeout: 50000 // request timeout\n\n}); // 请求拦截器\n\nservice.interceptors.request.use(function (config) {\n  // 在发送请求之前做点什么\n  if (store.getters.token) {\n    // 让每个请求携带token-- ['X-Auth-Token']为自定义key 请根据实际情况自行修改\n    config.headers['X-Auth-Token'] = getToken();\n  }\n\n  return config;\n}, function (error) {\n  // 处理请求错误\n  console.log(error); // for debug\n\n  Promise.reject(error);\n}); // 响应拦截器\n\nservice.interceptors.response.use(function (response) {\n  return response;\n},\n/**\n * 下面的注释为通过在response里，自定义code来标示请求状态\n * 当code返回如下情况则说明权限有问题，登出并返回到登录页\n * 如想通过 xmlhttprequest 来状态码标识 逻辑可写在下面error中\n * 以下代码均为样例，请结合自生需求加以修改，若不需要，则可删除\n */\n// response => {\n//   const res = response.data\n//   if (res.code !== 20000) {\n//     Message({\n//       message: res.message,\n//       type: 'error',\n//       duration: 5 * 1000\n//     })\n//     // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n//     if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n//       // 请自行在引入 MessageBox\n//       // import { Message, MessageBox } from 'element-ui'\n//       MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n//         confirmButtonText: '重新登录',\n//         cancelButtonText: '取消',\n//         type: 'warning'\n//       }).then(() => {\n//         store.dispatch('FedLogOut').then(() => {\n//           location.reload() // 为了重新实例化vue-router对象 避免bug\n//         })\n//       })\n//     }\n//     return Promise.reject('error')\n//   } else {\n//     return response.data\n//   }\n// },\nfunction (error) {\n  console.log(error);\n\n  if (error) {\n    // console.log('err' + error) // for debug\n    if (error.response) {\n      Message({\n        message: \"\".concat(error.response.data.message),\n        type: 'error',\n        duration: 5 * 1000\n      });\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default service;",null]}