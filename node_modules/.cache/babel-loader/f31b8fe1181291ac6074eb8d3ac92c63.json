{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/tab/tabNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/supplierManagement/supplierAccess/platformNote/tab/tabNote.vue","mtime":1599136050849},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport * as api from \"@/api/project/srm/supplierManage/supplierAccess/platformNote\";\nimport Pagination from \"@/components/Pagination\"; // 分页组件\n\nexport default {\n  name: 'tabNote',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      total: 0,\n      totalSub: 0,\n      listQuery: {\n        pageSize: 10,\n        currentPage: 1\n      },\n      itemQuery: {\n        pageSize: 10,\n        currentPage: 1\n      },\n      tableData: [],\n      tableDataSub: [],\n      selectedRows: [],\n      currentSelectedRow: [],\n      oprateBtnConfig: [{\n        id: 0,\n        class: 'filter-item',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleAdd',\n        name: '新增',\n        show: true\n      }, {\n        id: 1,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-edit-outline',\n        clickMethod: 'handlePublish',\n        name: '发布',\n        show: true\n      }, {\n        id: 2,\n        class: 'filter-item ml_5',\n        icon: 'el-icon-plus',\n        clickMethod: 'handleWorkflow',\n        name: '审批流程示意',\n        show: false\n      }],\n      tableConfig: [{\n        label: '通知单号',\n        prop: 'noticeNo',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '引入类型',\n        prop: 'introduceTypeCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商名称',\n        prop: 'supplierName',\n        align: 'center',\n        width: '180'\n      }, {\n        label: '供应商编码',\n        prop: 'supplierCode',\n        align: 'center',\n        width: 'auto'\n      }, {\n        dType: 'dt_srm_paf',\n        label: '审核状态',\n        prop: 'auditStateCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '当前审核人',\n        prop: 'taskUser',\n        align: 'center',\n        width: '120'\n      }, //wu\n      {\n        label: '审核时间',\n        prop: 'auditTime',\n        align: 'center',\n        width: '120'\n      }, //wu\n      {\n        label: '审核备注',\n        prop: 'remark',\n        align: 'center',\n        width: '120'\n      }, //wu\n      {\n        label: '类型',\n        prop: 'qualifiedTypeCN',\n        align: 'center',\n        width: 'auto'\n      }, //资质类型\n      {\n        label: '创建人',\n        prop: 'creator',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '修改人',\n        prop: 'updator',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改时间',\n        prop: 'updateTime',\n        align: 'center',\n        width: '150'\n      }],\n      tableSubConfig: [{\n        label: '物料分类',\n        prop: 'materielClassName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '资质是否合格',\n        prop: 'qualification',\n        align: 'center',\n        width: 'auto'\n      }, //boolean\n      {\n        label: '是否引入',\n        prop: 'introduction',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建人',\n        prop: 'creator',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        align: 'center',\n        width: '150'\n      }, {\n        label: '修改人',\n        prop: 'updator',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改时间',\n        prop: 'updateTime',\n        align: 'center',\n        width: '150'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_paf: function dt_srm_paf(state) {\n      return state.dict.dt_srm_paf;\n    },\n    //审核状态\n    dt_srm_pao: function dt_srm_pao(state) {\n      return state.dict.dt_srm_pao;\n    },\n    //引入类型\n    dt_srm_pae: function dt_srm_pae(state) {\n      return state.dict.dt_srm_pae;\n    } //资质类型\n\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_srm_paf\", \"dt_srm_pao\", \"dt_srm_pae\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 105;\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        var options = [_this2.dt_srm_paf, _this2.dt_srm_pao, _this2.dt_srm_pae];\n        res.data = _this2.$myFun.codeToName(res.data, options, ['auditState', 'introduceType', 'qualifiedType']);\n        _this2.tableData = res.data.list;\n        _this2.total = res.data.pages.count;\n\n        _this2.setFirstLine();\n      });\n    },\n    //操作按钮事件\n    oprateClick: function oprateClick(id) {\n      switch (id) {\n        case 0:\n          {\n            this.handleAdd();\n            break;\n          }\n\n        case 1:\n          {\n            this.handlePublish();\n            break;\n          }\n\n        case 2:\n          {\n            this.handleWorkflow();\n            break;\n          }\n      }\n    },\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n          this.getRow();\n        } else if (val.length === 0) {\n          this.selectedRows = val;\n          this.currentSelectedRow = null;\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n        this.getRow(this.currentSelectedRow);\n      }\n    },\n    //获取单条数据\n    getRow: function getRow(row) {\n      var _this3 = this;\n\n      if (row) {\n        api.queryItems(row.noticeNo, this.itemQuery).then(function (res) {\n          _this3.totalSub = res.data.pages.count;\n          _this3.tableDataSub = res.data.list;\n        });\n      }\n    },\n    handleAdd: function handleAdd() {\n      this.$emit('handleAdd', 'add', null);\n    },\n    //发布按钮\n    handlePublish: function handlePublish() {\n      var _this4 = this;\n\n      if (this.currentSelectedRow) {\n        console.log('发布');\n        this.$confirm(\"\\u60A8\\u786E\\u5B9A\\u53D1\\u5E03\\uFF1A\".concat(this.currentSelectedRow.noticeNo, \" \\u5417\\uFF1F\"), '消息提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.updateRecords(_this4.currentSelectedRow.noticeNo, {\n            method: \"RELEASE\"\n          }).then(function () {\n            _this4.$message({\n              type: 'success',\n              message: '发布成功'\n            });\n\n            _this4.getList();\n          });\n        }).catch(function () {\n          _this4.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先选择一条信息'\n        });\n      }\n    },\n    handleWorkflow: function handleWorkflow() {\n      this.$message({\n        type: 'error',\n        message: '开发中，暂无法使用'\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this5 = this;\n\n      api.queryRow(row.noticeNo).then(function (res) {\n        _this5.$emit('handleAdd', 'edit', res.data);\n      });\n    },\n    handleDelete: function handleDelete(index, row) {\n      var _this6 = this;\n\n      console.log(index, row, '删除通知');\n      this.$confirm(\"\\u786E\\u5B9A\\u5220\\u9664\".concat(row.noticeNo, \" \\u5417\\uFF1F\"), '消息提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteRecords(row.noticeNo).then(function () {\n          _this6.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n\n          _this6.getList();\n        });\n      }).catch(function () {\n        _this6.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n    showPerson: function showPerson(propName, index) {\n      var title = '';\n\n      switch (propName) {\n        case 'taskUser':\n          {\n            title = '任务接收人选择';\n            break;\n          }\n\n        case 'evaluateUser':\n          {\n            title = '评价人选择';\n            break;\n          }\n      }\n\n      this.dataIndex = index;\n      this.$emit('showPerson', title, propName);\n    },\n    personConfirm: function personConfirm(propName, val) {\n      this.$set(this.tableData[this.dataIndex], propName, val[0].employeeName);\n    },\n    setFirstLine: function setFirstLine() {\n      var _this7 = this;\n\n      this.$nextTick(function () {\n        _this7.$refs.tb.toggleRowSelection(_this7.tableData[0], \"selected\");\n\n        _this7.$refs.tb.setCurrentRow(_this7.tableData[0]);\n      });\n    }\n  }\n};",null]}