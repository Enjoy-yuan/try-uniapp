{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/eqmtRunRecords/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EL/eqmtRunRecords/index.vue","mtime":1596610933374},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/el/eqmtRunRecords'; // 增、删、改api引入\n\nimport moment from 'moment';\nimport caiGou from '@/components/Select/caigou';\nimport Pagination from '@/components/Pagination';\nimport useDept from \"../../components/useDeptSelect\";\nimport deviceSelect from \"./singleDeviceSelect\";\nimport { DT_ORG_TYPE } from '@/utils/constant';\nimport { mapState } from 'vuex'; // 基本数据引入\n\nexport default {\n  name: 'eqmtRunRecords',\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    useDept: useDept,\n    deviceSelect: deviceSelect\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      DT_ORG_TYPE: DT_ORG_TYPE,\n      pickerOptionsOn: {\n        disabledDate: function disabledDate(time) {\n          var endDateVal = _this.temp.powerOffTime;\n\n          if (endDateVal) {\n            return time.getTime() > new Date(endDateVal).getTime();\n          }\n        }\n      },\n      pickerOptionsOff: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = _this.temp.powerOnTime;\n\n          if (beginDateVal) {\n            return time.getTime() < new Date(beginDateVal).getTime();\n          }\n        }\n      },\n      pickerOptionsStart: {\n        disabledDate: function disabledDate(time) {\n          var endDateVal = _this.temp2.endTime;\n\n          if (endDateVal) {\n            return time.getTime() > new Date(endDateVal).getTime();\n          }\n        }\n      },\n      pickerOptionsEnd: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = _this.temp2.startTime;\n\n          if (beginDateVal) {\n            return time.getTime() < new Date(beginDateVal).getTime();\n          }\n        }\n      },\n      theight: 0,\n      //表格高度\n      timeRange: undefined,\n      list: [],\n      fromList: [],\n      total: 0,\n      total2: 0,\n      tableKey: [0, 1],\n      //表格索引\n      listQuery: {\n        //查询\n        currentPage: 1,\n        pageSize: 10,\n        orgCode: undefined,\n        deviceCode: undefined,\n        useDept: undefined,\n        runTimeStart: undefined,\n        runTimeEnd: undefined\n      },\n      listQuery1: {\n        //从表查询\n        currentPage: 1,\n        pageSize: 10\n      },\n      temp: {\n        deviceCode: undefined,\n        deviceName: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        powerOnTime: undefined,\n        powerOffTime: undefined,\n        remark: undefined,\n        runningTime: undefined,\n        inspectRecordDetails: []\n      },\n      temp2: {\n        unusualType: undefined,\n        endTime: undefined,\n        startTime: undefined,\n        intervalTime: undefined,\n        remark: undefined\n      },\n      rules: {\n        orgCode: [{\n          required: true,\n          message: '组织编码不能为空',\n          trigger: ['blur', 'change']\n        }],\n        deviceCode: [{\n          required: true,\n          message: '设备不能为空',\n          trigger: ['blur']\n        }],\n        powerOnTime: [{\n          required: true,\n          message: '请选择开机时间',\n          trigger: ['blur', 'change']\n        }],\n        powerOffTime: [{\n          required: true,\n          message: '请选择关机时间',\n          trigger: ['blur', 'change']\n        }],\n        unusualType: [{\n          required: true,\n          message: '异常类型不能为空',\n          trigger: ['blur', 'change']\n        }],\n        startTime: [{\n          required: true,\n          message: '请选择开始时间',\n          trigger: ['blur', 'change']\n        }],\n        endTime: [{\n          required: true,\n          message: '请选择结束时间',\n          trigger: ['blur', 'change']\n        }]\n      },\n      dialogFormVisible: false,\n      dialogStatus: 'create',\n      dialogFormVisible2: false,\n      dialogStatus2: 'create',\n      deviceVisible: false,\n      selectedRows: null,\n      //多选时选中的单行\n      selectedRows2: null //从表选择的所有行\n\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_device_unusual_type: function dt_device_unusual_type(state) {\n      return state.eamDict.dt_device_unusual_type;\n    },\n    dt_inspect_record_result: function dt_inspect_record_result(state) {\n      return state.eamDict.dt_inspect_record_result;\n    }\n  })),\n  watch: {\n    // 监听时间区间数组 写入到对应字段\n    'timeRange': function timeRange(value) {\n      if (value) {\n        this.listQuery.runTimeStart = value[0];\n        this.listQuery.runTimeEnd = value[1];\n      }\n    },\n    'temp.powerOnTime': function tempPowerOnTime(val) {\n      if (this.temp.powerOffTime) {\n        var date1 = moment(val);\n        var date2 = moment(this.temp.powerOffTime);\n        this.temp.runningTime = date2.diff(date1, 'minute'); //计算相差的分钟数\n      }\n    },\n    'temp.powerOffTime': function tempPowerOffTime(val) {\n      if (this.temp.powerOnTime) {\n        var date1 = moment(val);\n        var date2 = moment(this.temp.powerOnTime);\n        this.temp.runningTime = date1.diff(date2, 'minute'); //计算相差的分钟数\n      }\n    },\n    'temp2.startTime': function temp2StartTime(val) {\n      if (this.temp2.EndTime) {\n        var date1 = moment(val);\n        var date2 = moment(this.temp2.EndTime);\n        this.temp2.intervalTime = date2.diff(date1, 'minute');\n      }\n    },\n    'temp2.endTime': function temp2EndTime(val) {\n      if (this.temp2.startTime) {\n        var date1 = moment(val);\n        var date2 = moment(this.temp2.startTime);\n        this.temp2.intervalTime = date1.diff(date2, 'minute'); //计算相差的分钟数\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$store.dispatch('eamDict/getDicData', ['dt_inspect_record_result', 'dt_device_unusual_type']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this2.setTableHeight();\n    };\n\n    setTimeout(function () {\n      _this2.getList();\n    }, 500);\n  },\n  methods: {\n    getDevice: function getDevice(val) {\n      if (val) {\n        Object.assign(this.temp, val);\n      } else {\n        return;\n      }\n    },\n    handleDevice: function handleDevice() {\n      this.deviceVisible = true;\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      //获取表格数据\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this3.list = res.data.list;\n        _this3.total = res.data.pages.count;\n      });\n    },\n    //获取从表数据\n    getSub: function getSub() {\n      var _this4 = this;\n\n      if (this.selectedRows) {\n        api.queryRecordsSub(this.listQuery1, this.selectedRows.runRecordCode).then(function (res) {\n          _this4.fromList = _this4.$myFun.codeToName(res.data, [_this4.dt_device_unusual_type], ['unusualType']).list;\n          _this4.total2 = res.data.pages.count;\n        });\n      }\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {};\n    },\n    resetTempSub: function resetTempSub() {\n      this.temp2 = {};\n    },\n    handleQuery: function handleQuery() {\n      //表格查询\n      this.listQuery.currentPage = 1;\n      this.getList();\n      this.fromList = undefined;\n    },\n    handleCreate: function handleCreate() {\n      //新增按钮单击事件方法\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    handleCreate2: function handleCreate2() {\n      if (!this.selectedRows) {\n        this.$message({\n          title: '警告',\n          message: '请选择一条主表数据',\n          type: 'warning'\n        });\n        return;\n      }\n\n      var selectedRows = JSON.parse(JSON.stringify(this.selectedRows));\n      this.temp2.deviceCode = selectedRows.deviceCode;\n      this.temp2.deviceName = selectedRows.deviceName;\n      this.temp2.powerOffTime = selectedRows.powerOffTime;\n      this.temp2.powerOnTime = selectedRows.powerOnTime;\n      this.dialogStatus2 = 'create';\n      this.dialogFormVisible2 = true;\n    },\n    create: function create() {\n      var _this5 = this;\n\n      //新增确认\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.addRecords(_this5.temp).then(function (res) {\n            if (res.status == 201) {\n              _this5.getList();\n\n              _this5.dialogFormVisible = false;\n\n              _this5.$message({\n                title: '成功',\n                message: '新增成功',\n                type: 'success',\n                duration: 2000\n              });\n            }\n          });\n        }\n      });\n    },\n    create2: function create2() {\n      var _this6 = this;\n\n      this.$refs['tempSub'].validate(function (valid) {\n        if (valid) {\n          api.addRecordsSub(_this6.temp2, _this6.selectedRows.runRecordCode).then(function (res) {\n            if (res.status == 201) {\n              _this6.getSub();\n\n              _this6.dialogFormVisible2 = false;\n\n              _this6.$message({\n                title: '成功',\n                message: '新增成功',\n                type: 'success',\n                duration: 2000\n              });\n            }\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate() {\n      var _this7 = this;\n\n      if (!this.selectedRows) {\n        this.$message({\n          title: '警告',\n          message: '请选择记录',\n          type: 'warning'\n        });\n        return;\n      }\n\n      api.queryRecord(this.selectedRows.runRecordCode).then(function (res) {\n        if (res.data.runRecordCode == _this7.selectedRows.runRecordCode) {\n          _this7.temp = JSON.parse(JSON.stringify(_this7.selectedRows));\n        } else {\n          _this7.temp = res.data;\n        }\n\n        _this7.dialogStatus = 'update';\n        _this7.dialogFormVisible = true;\n      });\n    },\n    handleUpdate2: function handleUpdate2() {\n      var _this8 = this;\n\n      if (this.selectedRows2.length !== 1 || !this.selectedRows2) {\n        this.$message({\n          title: '警告',\n          message: '请选择一条记录',\n          type: 'warning'\n        });\n        return;\n      }\n\n      var selectedRows = JSON.parse(JSON.stringify(this.selectedRows));\n      api.queryRecordSub(this.selectedRows2[0].runRecordCode, this.selectedRows2[0].rowNo).then(function (res) {\n        _this8.temp2 = res.data;\n        _this8.temp2.powerOnTime = res.data.createTime;\n        _this8.temp2.powerOffTime = res.data.updateTime;\n        _this8.temp2.deviceCode = selectedRows.deviceCode;\n        _this8.temp2.deviceName = selectedRows.deviceName;\n        _this8.temp2.intervalTime = selectedRows.intervalTime;\n        _this8.dialogStatus2 = 'update';\n        _this8.dialogFormVisible2 = true;\n      });\n    },\n    update: function update() {\n      var _this9 = this;\n\n      //新增确认\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.updataRecord(_this9.temp.runRecordCode, _this9.temp).then(function (res) {\n            if (res.status == 201) {\n              _this9.getList();\n\n              _this9.dialogFormVisible = false;\n\n              _this9.$message({\n                title: '成功',\n                message: '修改成功',\n                type: 'success',\n                duration: 2000\n              });\n            }\n          });\n        }\n      });\n    },\n    update2: function update2() {\n      var _this10 = this;\n\n      //修改确认\n      this.$refs['tempSub'].validate(function (valid) {\n        if (valid) {\n          api.updataRecordSub(_this10.selectedRows2[0].runRecordCode, _this10.selectedRows2[0].rowNo, _this10.temp2).then(function (res) {\n            if (res.status == 201) {\n              _this10.getSub();\n\n              _this10.dialogFormVisible2 = false;\n\n              _this10.$message({\n                title: '成功',\n                message: '修改成功',\n                type: 'success',\n                duration: 2000\n              });\n            }\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this11 = this;\n\n      //删除按钮单击事件方法\n      if (this.selectedRows) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteRecord(_this11.selectedRows.runRecordCode).then(function (res) {\n            _this11.fromList = [];\n\n            if (res.status == 204) {\n              _this11.getList();\n\n              _this11.$message({\n                title: '成功',\n                message: '删除成功',\n                type: 'success',\n                duration: 2000\n              });\n            }\n          });\n        }).catch(function () {\n          _this11.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleDelete2: function handleDelete2() {\n      var _this12 = this;\n\n      if (this.selectedRows2) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var rowNos = '';\n\n          _this12.selectedRows2.forEach(function (i, index) {\n            if (index == 0) {\n              rowNos += i.rowNo;\n            } else {\n              rowNos += \",\".concat(i.rowNo);\n            }\n          });\n\n          api.deleteRecordSub(_this12.selectedRows2[0].runRecordCode, rowNos).then(function (res) {\n            if (res.status == 201) {\n              _this12.getSub();\n\n              _this12.$message({\n                title: '成功',\n                message: '删除成功',\n                type: 'success',\n                duration: 2000\n              });\n            }\n          });\n        }).catch(function () {\n          _this12.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleClose: function handleClose() {\n      this.resetTemp();\n      this.$refs.temp.resetFields();\n    },\n    handleCloseSub: function handleCloseSub() {\n      this.resetTempSub();\n      this.$refs.tempSub.resetFields();\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectChange: function selectChange(val) {\n      if (!val.length) {\n        this.fromList = [];\n        this.selectedRows = undefined;\n        return false;\n      }\n\n      this.selectedRows = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val[val.length - 1]);\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectedRows);\n\n      if (this.selectedRows) {\n        this.getSub();\n      }\n    },\n    rowClick2: function rowClick2(val) {\n      this.$refs.subList.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    selectChange2: function selectChange2(val) {\n      this.selectedRows2 = val; // if (!val.length) {\n      //     this.selectedRows2 = undefined\n      //     return false\n      // }\n      // this.selectedRows2 = val[val.length - 1]\n      // if (val.length > 1) {\n      //     this.$refs.subList.clearSelection()\n      //     this.$refs.subList.toggleRowSelection(val[val.length - 1])\n      // }\n      // this.$refs.subList.setCurrentRow(this.selectedRows2)\n    }\n  }\n};",null]}