{"remainingRequest":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/components/attributeFrom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/cf_web/src/views/project/IOT/components/attributeFrom.vue","mtime":1600927611522},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/cf_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/cf_web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/iot/PM/equipmentProducts\";\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  props: ['dialogFormVisible', 'dialogFormType', 'temp', 'title'],\n  name: \"attributeFrom\",\n  watch: {\n    dialogFormVisible: function dialogFormVisible(val) {\n      this.dialogFormVisibleM = val;\n    }\n  },\n  data: function data() {\n    return {\n      dialogFormVisibleM: false,\n      rules: {\n        attributeCode: [{\n          required: true,\n          message: '属性编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{0,32}$/,\n          message: '由大写字母、数字组成，长度为32',\n          trigger: 'blur'\n        }],\n        attributeName: [{\n          required: true,\n          message: '属性名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '长度不能超过100',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9\\u4e00-\\u9fa5]+$/,\n          message: '只允许中英文及数字输入',\n          trigger: 'blur'\n        }],\n        attributeType: [{\n          required: true,\n          message: '请选择属性类型',\n          trigger: 'change'\n        }],\n        company: [{\n          required: true,\n          message: '请选择单位',\n          trigger: 'change'\n        }],\n        dataType: [{\n          required: true,\n          message: '请选择数据类型',\n          trigger: 'change'\n        }],\n        readType: [{\n          required: true,\n          message: '请选择读写类型',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_attribute_type: function iot_attribute_type(state) {\n      return state.iotDict.iot_attribute_type;\n    },\n    iot_attribute_company: function iot_attribute_company(state) {\n      return state.iotDict.iot_attribute_company;\n    },\n    iot_data_type: function iot_data_type(state) {\n      return state.iotDict.iot_data_type;\n    },\n    iot_read_type: function iot_read_type(state) {\n      return state.iotDict.iot_read_type;\n    }\n  })),\n  methods: {\n    getAttributeType: function getAttributeType(val) {\n      var arr = this.iot_attribute_type.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.attributeTypeName = arr[0].dictItemValue;\n    },\n    getCompany: function getCompany(val) {\n      var arr = this.iot_attribute_company.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.companyName = arr[0].dictItemValue;\n    },\n    getDataType: function getDataType(val) {\n      var arr = this.iot_data_type.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.dataTypeName = arr[0].dictItemValue;\n    },\n    getReadType: function getReadType(val) {\n      var arr = this.iot_read_type.filter(function (i) {\n        return i.dictItemKey == val;\n      });\n      this.temp.readTypeName = arr[0].dictItemValue;\n    },\n    create: throttle(function () {\n      var _this = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          _this.$emit('create', _this.temp);\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    //编辑按钮单击事件方法\n    handleUpdate: function handleUpdate(attributeCode) {\n      var _this2 = this;\n\n      api.queryAttribute(this.code, attributeCode).then(function (res) {\n        _this2.temp = res.data;\n        _this2.temp.min = parseInt(res.data.min);\n        _this2.temp.max = parseInt(res.data.max);\n        _this2.dialogFormType = 'update';\n        _this2.dialogFormVisible = true;\n      });\n    },\n    update: throttle(function () {\n      var _this3 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          _this3.$emit('update', _this3.temp);\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    off: function off() {\n      this.$emit('off', false);\n    }\n  }\n};",null]}