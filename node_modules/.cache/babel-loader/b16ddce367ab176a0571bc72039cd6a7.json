{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/modelLedger/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EMS/deviceManagement/modelLedger/index.vue","mtime":1596610933519},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/ems/deviceManagement/modelLedger';\nimport Pagination from '@/components/Pagination';\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: 'equipmentModel',\n  components: {\n    Pagination: Pagination\n  },\n  computed: _objectSpread({}, mapState({\n    dt_work_workCenterLevel: function dt_work_workCenterLevel(state) {\n      return state.businessComponent.dt_work_workCenterLevel;\n    },\n    dt_nh_energyType_list: function dt_nh_energyType_list(state) {\n      return state.businessComponent.dt_nh_energyType_list;\n    },\n    dt_sb_modelDetail_list: function dt_sb_modelDetail_list(state) {\n      return state.businessComponent.dt_sb_modelDetail_list;\n    },\n    dt_sb_meterType_list: function dt_sb_meterType_list(state) {\n      return state.businessComponent.dt_sb_meterType_list;\n    },\n    dt_sb_meterKind_list: function dt_sb_meterKind_list(state) {\n      return state.businessComponent.dt_sb_meterKind_list;\n    },\n    dt_equip_type: function dt_equip_type(state) {\n      return state.emsDict.dt_equip_type;\n    }\n  })),\n  data: function data() {\n    var _this = this;\n\n    var energyItemCode = function energyItemCode(rule, value, callback) {\n      if (!value && Boolean(_this.temp.equipTypeCode == 'meter')) {\n        callback(new Error('请选择能源分项名称'));\n      } else {\n        callback();\n      }\n    };\n\n    var energyTypeCode = function energyTypeCode(rule, value, callback) {\n      if (!value && Boolean(_this.temp.equipTypeCode == 'meter')) {\n        callback(new Error('请选择能源分类名称'));\n      } else {\n        callback();\n      }\n    };\n\n    var meterKindCode = function meterKindCode(rule, value, callback) {\n      if (!value && Boolean(_this.temp.equipTypeCode == 'meter')) {\n        callback(new Error('请选择仪表类别'));\n      } else {\n        callback();\n      }\n    };\n\n    var meterTypeCode = function meterTypeCode(rule, value, callback) {\n      if (!value && Boolean(_this.temp.equipTypeCode == 'meter')) {\n        callback(new Error('请选择仪表型号'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      list: null,\n      subList: null,\n      unRelationData: null,\n      energyItemList: null,\n      workCenterList: null,\n      meterTypeList: null,\n      selectQuipTypeCode: undefined,\n      listQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        equipTypeCode: undefined,\n        modelName: undefined,\n        energyTypeCode: undefined\n      },\n      subListQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 15,\n        modelCode: undefined\n      },\n      temp: {\n        modelCode: undefined,\n        modelName: undefined,\n        factoryAddress: undefined,\n        meterAddr: undefined,\n        meterRatio: undefined,\n        meterTypeCode: undefined,\n        //仪表型号名称 dt_sb_meterType_list\n        meterKindCode: undefined,\n        useInstructions: undefined,\n        instructions: undefined,\n        gatherPeriod: undefined,\n        equipTypeCode: undefined,\n        // 设备类型 equipType\n        remark: undefined,\n        energyItemCode: undefined,\n        energyTypeCode: undefined,\n        stepCode: undefined,\n        //设备台账名称\n        belongEquipCode: undefined,\n        workCenterCode: undefined,\n        workCenterLevel: undefined\n      },\n      dialogFormVisible: false,\n      dialogRelation: false,\n      dialogStatus: '',\n      tableKey: [0, 1, 2],\n      total: 0,\n      subTotal: 0,\n      theight: 0,\n      //表格高度\n      rules: {\n        modelCode: [{\n          required: true,\n          message: '编码不能为空',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '长度不能超过50',\n          trigger: 'blur'\n        }],\n        modelName: [{\n          required: true,\n          message: '名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '长度不能超过50',\n          trigger: 'blur'\n        }],\n        equipTypeCode: [{\n          required: true,\n          message: '请选择设备类型',\n          trigger: 'blur'\n        }],\n        remark: [{\n          max: 100,\n          message: '长度不能超过50',\n          trigger: 'blur'\n        }],\n        energyItemCode: [{\n          massage: '请选择能源分项名称',\n          trigger: 'blur'\n        }, {\n          validator: energyItemCode\n        }],\n        energyTypeCode: [{\n          message: '请选择能源分类名称',\n          trigger: 'blur'\n        }, {\n          validator: energyTypeCode\n        }],\n        meterKindCode: [{\n          message: '请选择仪表类别',\n          trigger: 'blur'\n        }, {\n          validator: meterKindCode\n        }],\n        meterTypeCode: [{\n          message: '请选择仪表型号',\n          trigger: 'blur'\n        }, {\n          validator: meterTypeCode\n        }],\n        workCenterLevel: [{\n          required: true,\n          message: '请选择工作中心等级',\n          trigger: ['blur', 'change']\n        }],\n        workCenterCode: [{\n          required: true,\n          message: '请选择工作中心',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  watch: {\n    dt_equip_type: function dt_equip_type() {\n      var _this2 = this;\n\n      this.list.map(function (v, i) {\n        v.serial = i + 1;\n\n        _this2.dt_equip_type.forEach(function (item) {\n          if (item.dictItemKey == v.equipTypeCode) {\n            v.equipTypeName = item.dictItemValue;\n          }\n        });\n      });\n    },\n    'temp.equipTypeCode': function tempEquipTypeCode(val) {\n      var _this3 = this;\n\n      if (val == 'product') {\n        this.$set(this.temp, 'workCenterLevel', 'dt_workcenter_class_line'); // this.temp.workCenterLevel = 'dt_workcenter_class_line'\n\n        var par = {\n          workCenterLevel: 'dt_workcenter_class_line' // this.temp.workCenterCode = undefined\n\n        };\n        api.queryWorkCenter(par).then(function (res) {\n          _this3.workCenterList = JSON.parse(JSON.stringify(res.data));\n\n          var arr = _this3.workCenterList.map(function (i) {\n            return i.unitCode == _this3.temp.workCenterCode;\n          });\n\n          if (!arr.includes(true)) {\n            _this3.temp.workCenterCode = undefined;\n          }\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    this.$store.dispatch('businessComponent/getBusinessComponentData', ['dt_work_workCenterLevel', 'dt_nh_energyType_list', 'dt_sb_modelDetail_list', 'dt_sb_meterType_list', 'dt_sb_meterKind_list']);\n    this.$store.dispatch('emsDict/getDicData', ['dt_equip_type']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this4.setTableHeight();\n    };\n\n    this.getList();\n  },\n  destroyed: function destroyed() {\n    this.$store.dispatch('businessComponent/getBusinessComponentData', ['dt_work_workCenterLevel', 'dt_nh_energyType_list', 'dt_sb_modelDetail_list', 'dt_sb_meterType_list', 'dt_sb_meterKind_list']);\n    this.$store.dispatch('emsDict/getDicData', ['dt_equip_type']);\n    this.setTableHeight();\n    this.getList();\n  },\n  methods: {\n    bug: function bug() {\n      this.$forceUpdate();\n    },\n    getList: function getList() {\n      var _this5 = this;\n\n      api.queryModelDetail(this.listQuery).then(function (res) {\n        res.data.list.map(function (v, i) {\n          v.serial = i + 1;\n\n          _this5.dt_equip_type.forEach(function (item) {\n            if (item.dictItemKey == v.equipTypeCode) {\n              v.equipTypeName = item.dictItemValue;\n            }\n          });\n        });\n        _this5.list = res.data.list;\n        _this5.total = res.data.pages.count;\n      });\n    },\n    getSubList: function getSubList() {\n      var _this6 = this;\n\n      api.queryModelDataItem(this.subListQuery).then(function (res) {\n        res.data.list.map(function (v, i) {\n          v.serial = i + 1;\n        });\n        _this6.subList = res.data.list;\n        _this6.subTotal = res.data.pages.count;\n      });\n    },\n    getUnRelationList: function getUnRelationList() {\n      var _this7 = this;\n\n      var query = {\n        modelCode: this.selectlistRow.modelCode\n      };\n      api.queryUnModelData(query).then(function (res) {\n        res.data.map(function (v, i) {\n          v.serial = i + 1;\n        });\n        _this7.unRelationData = res.data;\n      });\n    },\n    getEnergyItem: function getEnergyItem() {\n      var _this8 = this;\n\n      // 查询能耗分类\n      var par = {\n        energyTypeCode: this.temp.energyTypeCode\n      };\n      api.queryEnergyItem(par).then(function (res) {\n        _this8.energyItemList = res.data;\n\n        var arr = _this8.energyItemList.map(function (i) {\n          return i.energyItemCode == _this8.temp.energyItemCode;\n        });\n\n        if (!arr.includes(true)) {\n          _this8.temp.energyItemCode = undefined;\n        }\n      });\n    },\n    getMeterType: function getMeterType() {\n      var _this9 = this;\n\n      // 查询型号queryMeterType\n      var par = {\n        meterCode: this.temp.meterKindCode\n      };\n      api.queryMeterType(par).then(function (res) {\n        _this9.meterTypeList = res.data;\n\n        var arr = _this9.meterTypeList.map(function (i) {\n          return i.meterTypeCode == _this9.temp.meterTypeCode;\n        });\n\n        if (!arr.includes(true)) {\n          _this9.temp.meterTypeCode = undefined;\n        }\n      });\n    },\n    getWorkCenter: function getWorkCenter() {\n      var _this10 = this;\n\n      // 查询工作中心\n      var par = {\n        workCenterLevel: this.temp.workCenterLevel\n      };\n      api.queryWorkCenter(par).then(function (res) {\n        _this10.workCenterList = res.data;\n\n        var arr = _this10.workCenterList.map(function (i) {\n          return i.unitCode == _this10.temp.workCenterCode;\n        });\n\n        if (!arr.includes(true)) {\n          _this10.temp.workCenterCode = undefined;\n        }\n      });\n      this.$forceUpdate();\n    },\n    handleQuery: function handleQuery() {\n      //查询\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    deleteQuery: function deleteQuery() {\n      // 清除查询条件\n      this.listQuery.currentPage = 1;\n      this.listQuery.equipTypeCode = undefined;\n      this.listQuery.modelName = undefined;\n      this.listQuery.energyTypeCode = undefined;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      //新增弹窗\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    create: throttle(function () {\n      var _this11 = this;\n\n      this.$forceUpdate();\n      this.$nextTick(function () {\n        _this11.$refs.temp.validate(function (valid) {\n          if (valid) {\n            api.createModelDetail(_this11.temp).then(function () {\n              _this11.getList();\n\n              _this11.dialogFormVisible = false;\n\n              _this11.$refs.temp.resetFields(); //清空表单\n\n\n              _this11.$notify({\n                title: '成功',\n                message: '新增成功',\n                type: 'success',\n                duration: 2000\n              });\n            });\n          } else {\n            return false;\n          }\n        });\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    handleDelete: function handleDelete() {\n      var _this12 = this;\n\n      //删除列表\n      if (this.selectlistRow) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n          ids[0] = _this12.selectlistRow.modelCode;\n          api.deleteModelDetail(ids).then(function () {\n            _this12.getList();\n\n            _this12.getSubList();\n\n            _this12.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this12.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleUpdate: function handleUpdate() {\n      //编辑弹窗\n      if (this.selectlistRow) {\n        this.temp = JSON.parse(JSON.stringify(this.selectlistRow));\n\n        if (this.temp.equipTypeCode == 'meter') {\n          this.getMeterType();\n          this.getEnergyItem();\n        }\n\n        this.getWorkCenter();\n        this.dialogStatus = 'update';\n        this.dialogFormVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    update: throttle(function () {\n      var _this13 = this;\n\n      //编辑\n      this.$refs['temp'].clearValidate();\n      this.$refs['temp'].validate(function (valid) {\n        if (valid) {\n          api.updateModelDetail(_this13.selectlistRow.modelCode, _this13.temp).then(function () {\n            _this13.getList();\n\n            _this13.getSubList();\n\n            _this13.dialogFormVisible = false;\n\n            _this13.$refs.temp.resetFields(); //清空表单\n\n\n            _this13.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    handleRelationData: function handleRelationData() {\n      //关联数据采集项\n      if (this.selectlistRow) {\n        this.getUnRelationList();\n        this.dialogRelation = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleUnRelationData: function handleUnRelationData() {\n      var _this14 = this;\n\n      //取消关联\n      if (this.selectlistRow) {\n        if (this.subSelectRow && this.subSelectRow.length >= 1) {\n          var ids = [];\n          this.subSelectRow.forEach(function (i) {\n            ids.push(i.modelDataItemId);\n          });\n          api.deleteModelDataItem(ids).then(function () {\n            _this14.getSubList();\n\n            _this14.$notify({\n              title: '成功',\n              message: '成功取消关联',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {};\n    },\n    setTableHeight: function setTableHeight() {\n      //表格高度计算\n      this.theight = this.$myFun.getSingleTbHeight() - 185;\n    },\n    // 获取主表选中时的数据\n    handleSelectRow: function handleSelectRow(val) {\n      this.selectlistRow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val[val.length - 1]);\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectlistRow);\n\n      if (this.selectlistRow) {\n        this.selectQuipTypeCode = this.selectlistRow.equipTypeCode;\n        this.subListQuery.modelCode = this.selectlistRow.modelCode;\n        this.getSubList();\n      }\n    },\n    // 获取从表选中时的数据\n    handleSubSelectRow: function handleSubSelectRow(val) {\n      this.subSelectRow = val;\n    },\n    // 未关联数据中选取的数据\n    handleRelationRow: function handleRelationRow(val) {\n      this.unRelationListRow = val;\n    },\n    // 添加关联\n    Relation: function Relation() {\n      var _this15 = this;\n\n      if (this.unRelationListRow && this.unRelationListRow.length >= 1) {\n        var ids = [];\n        this.unRelationListRow.forEach(function (i) {\n          ids.push(i.dataItemCode);\n        });\n        api.relateSave(this.selectlistRow.modelCode, ids).then(function () {\n          _this15.getUnRelationList();\n\n          _this15.getSubList();\n\n          _this15.dialogRelation = false;\n\n          _this15.$notify({\n            title: '成功',\n            message: '新增成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      } //\n\n    },\n    handleClose: function handleClose(val) {\n      if (!val) {\n        this.$refs.temp.resetFields();\n      }\n\n      this.resetTemp();\n    }\n  }\n};",null]}