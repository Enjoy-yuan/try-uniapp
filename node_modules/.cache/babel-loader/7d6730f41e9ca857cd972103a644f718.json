{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuan/Documents/大唐广电/dt-web/src/store/modules/iotDict.js","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/store/modules/iotDict.js","mtime":1596697959561},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { getRecord } from '@/api/project/iot/system/dict'; //系统数据字典\n\nvar state = {\n  dt_org_type: [],\n  dt_org_function: [],\n  dt_datarights_type: [],\n  dt_pushmaterial_state: [],\n  dt_field_type: [],\n  dt_implement_type: [],\n  dt_monitor_state: [],\n  dt_role_type: [],\n  dt_domainScope_type: [],\n  iot_node_type: [],\n  // 节点类型\n  iot_norm_company: [],\n  // 指标单位\n  iot_data_type: [],\n  // 数据类型\n  iot_data_format: [],\n  //数据格式\n  iot_attribute_company: [],\n  // 属性单位\n  iot_read_type: [],\n  // 读写类型\n  iot_attribute_type: [],\n  // 属性类型\n  iot_authentication: [],\n  //认证方式\n  iot_function_category: [],\n  //功能类别\n  iot_jurisdiction: [],\n  //权限\n  iot_locked_industry: [],\n  //所属行业\n  iot_trial_scenario: [],\n  //试用场景\n  iot_nameplate_state: [],\n  //铭牌单位\n  iot_operator: [],\n  //\t运营商\n  iot_networking_way: [],\n  //联网方式\n  iot_reporting_period: [],\n  //上报周期\n  iot_project_type: [],\n  iot_state: [],\n  iot_state_gateway: [],\n  iot_state_device: [],\n  iot_is_standard: [],\n  iot_sample_rate: [],\n  iot_sample_mode: []\n};\nvar mutations = {\n  getDicData: function getDicData(state, data) {\n    state[data.dicCodes] = data.res;\n  }\n};\nvar actions = {\n  getDicData: function getDicData(context, dicCodes) {\n    var _loop = function _loop(i) {\n      if (state[dicCodes[i]].length == 0) {\n        getRecord(dicCodes[i]).then(function (res) {\n          res = res.data.dictItemDTOs;\n          context.commit('getDicData', {\n            dicCodes: dicCodes[i],\n            res: res\n          });\n        });\n      }\n    };\n\n    for (var i = 0; i < dicCodes.length; i++) {\n      _loop(i);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}