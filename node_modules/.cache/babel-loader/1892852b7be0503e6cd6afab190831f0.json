{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/groups/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/database/groups/index.vue","mtime":1596610933484},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/eas/database/groups';\nimport * as org from '@/api/system/organization';\nimport Pagination from '@/components/Pagination'; // Secondary package based on el-pagination\n// import { mapState } from 'vuex'\n\nimport addMain from \"./dialog/addMain\";\nimport dialogEmployeeSelect from '@/components/EamDialog/dialogEmployeeSelect';\nimport dialogWorkSelect from '@/components/EamDialog/dialogWorkSelect';\nexport default {\n  name: 'groups',\n  components: {\n    Pagination: Pagination,\n    addMain: addMain,\n    dialogEmployeeSelect: dialogEmployeeSelect,\n    dialogWorkSelect: dialogWorkSelect\n  },\n  data: function data() {\n    return {\n      activeContent: 'content1',\n      defaultProps: {\n        children: 'children',\n        label: 'organizationName'\n      },\n      filterWorkCenterCode: [],\n      filterEmployeeCode: [],\n      tableKey: [0, 1, 2],\n      theight: 0,\n      //表格高度\n      treeData: [],\n      list: [],\n      groupList: [],\n      //班组人员\n      workcenterList: [],\n      //班组工作中心\n      total: 0,\n      groupTotal: 0,\n      workcenterTotal: 0,\n      person: undefined,\n      parentId: null,\n      parentData: null,\n      //当前树节点\n      parentRowId: null,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 15,\n        orgCode: undefined,\n        //'dtcg0001'\n        teamCode: undefined,\n        teamName: undefined\n      },\n      groupListQuery: {\n        currentPage: 1,\n        pageSize: 15,\n        teamCode: undefined\n      },\n      workcenterListQuery: {\n        currentPage: 1,\n        pageSize: 15,\n        teamCode: undefined\n      },\n      selectlistRow: null,\n      selectlistRowGroups: null,\n      selectlistRowWorks: null,\n      contentStyleObj: {\n        height: ''\n      }\n    };\n  },\n  computed: {// ...mapState({\n    //     dt_srm_p0: state => state.eamDict.dt_srm_p0\n    // })\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // this.$store.dispatch('eamDict/getDicData', ['dt_srm_p0'])\n    this.getTree();\n    this.getList();\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.setTreeHeight();\n  },\n  filters: {\n    platformFilter: function platformFilter(a) {\n      if (a === false) {\n        return '否';\n      } else {\n        return '是';\n      }\n    }\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() / 2 - 60;\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    treeGetList: function treeGetList(rowId) {\n      var _this2 = this;\n\n      //点击树查询\n      var dto = {\n        classCode: rowId,\n        currentPage: 1,\n        pageSize: 15,\n        orgCode: this.parentData.organizationCode //   'dtcg0001'\n\n      };\n      api.queryRecords(dto).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n      });\n    },\n    refresh: function refresh() {\n      this.getTree();\n      this.getList();\n    },\n    getTree: function getTree() {\n      var _this3 = this;\n\n      org.selectlists().then(function (res) {\n        _this3.treeData = _this3.$myFun.addTreeRoot(res.data.filter(function (item) {\n          return item.type == 'dt_org_type_group' || item.type == 'dt_org_type_factory' || item.type == 'dt_org_type_company';\n        }));\n      });\n    },\n    //查询主表信息\n    getList: function getList() {\n      var _this4 = this;\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this4.list = res.data.list;\n        _this4.total = res.data.pages.count;\n        _this4.groupList = null;\n        _this4.groupTotal = 0;\n        _this4.workcenterList = null;\n        _this4.workcenterTotal = 0;\n      });\n    },\n    //查询班组人员表信息\n    getGroupList: function getGroupList() {\n      var _this5 = this;\n\n      this.groupListQuery.teamCode = this.selectlistRow.teamCode;\n      api.queryTeamEmployee(this.selectlistRow.teamCode, this.groupListQuery).then(function (res) {\n        _this5.groupList = res.data.list;\n        _this5.groupTotal = res.data.pages.count;\n      });\n    },\n    //查找班组工作中心\n    getWorkList: function getWorkList() {\n      var _this6 = this;\n\n      this.workcenterListQuery.teamCode = this.selectlistRow.teamCode;\n      api.queryWorkcenter(this.selectlistRow.teamCode, this.workcenterListQuery).then(function (res) {\n        res.data.list.forEach(function (i) {\n          i.teamName = _this6.selectlistRow.teamName;\n        });\n        _this6.workcenterList = res.data.list;\n        _this6.workcenterTotal = res.data.pages.count;\n      });\n    },\n    handleQuery: function handleQuery() {\n      this.getTree();\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      //新增弹窗调用\n      if (!this.parentData) {\n        this.$message({\n          title: '警告',\n          message: '请选择工厂类型菜单',\n          type: 'warning'\n        });\n        return;\n      }\n\n      if (this.parentData.type !== 'dt_org_type_factory') {\n        this.$message({\n          title: '警告',\n          message: '请选择工厂类型菜单',\n          type: 'warning'\n        });\n        return;\n      }\n\n      if (this.parentId || this.parentId == 0) {\n        this.$refs.addMain.resetTemp();\n        this.$refs.addMain.dialogStatus = 'create';\n        this.$refs.addMain.temp.parentRowId = this.parentId;\n        this.$refs.addMain.temp.orgName = this.parentData.organizationName;\n        this.$refs.addMain.temp.orgCode = this.parentData.organizationCode;\n        this.$refs.addMain.dialogVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择上级菜单',\n          type: 'warning'\n        });\n      }\n    },\n    //编辑按钮单击事件\n    handleUpdate: function handleUpdate() {\n      if (this.selectlistRow) {\n        this.$refs.addMain.dialogStatus = 'update';\n        this.$refs.addMain.temp = JSON.parse(JSON.stringify(this.selectlistRow));\n        this.$refs.addMain.dialogVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //删除按钮单击事件\n    handleDelete: function handleDelete() {\n      var _this7 = this;\n\n      if (this.selectlistRow) {\n        this.$confirm('是否删除该信息', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteRecord(_this7.selectlistRow.teamCode).then(function () {\n            _this7.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this7.getTree();\n\n            _this7.getList();\n          });\n        }).catch(function () {\n          _this7.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //班组人员新增\n    handleGroupCreate: function handleGroupCreate() {\n      if (this.selectlistRow) {\n        this.filterEmployeeCode = this.groupList.map(function (v) {\n          return v.employeeCode;\n        });\n        this.$refs.dialogEmployeeSelect.dialogVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条班组信息',\n          type: 'warning'\n        });\n      }\n    },\n    //班组人员新增确定按钮单击事件\n    personConfirm: function personConfirm(val) {\n      var _this8 = this;\n\n      var data = [];\n      val.forEach(function (item) {\n        data.push({\n          employeeCode: item.employeeCode,\n          employeeName: item.employeeName,\n          teamCode: _this8.selectlistRow.teamCode,\n          teamName: _this8.selectlistRow.teamName\n        });\n      });\n      api.addTeamEmployee(data, this.groupListQuery.teamCode).then(function () {\n        _this8.getGroupList();\n\n        _this8.$message({\n          title: '成功',\n          message: '新增成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    // 班组人员删除\n    handleGroupDelect: function handleGroupDelect() {\n      var _this9 = this;\n\n      if (this.selectlistRowGroups) {\n        this.$confirm('是否删除该信息', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var data = _this9.selectlistRowGroups.map(function (i) {\n            return i.employeeCode;\n          });\n\n          api.deleteTeamEmployee(data, _this9.selectlistRow.teamCode).then(function () {\n            _this9.getGroupList();\n\n            _this9.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this9.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //工作中心人员选择\n    handleWorkCreate: function handleWorkCreate() {\n      if (this.selectlistRow) {\n        this.$refs.dialogWorkSelect.dialogVisible = true;\n        this.filterWorkCenterCode = this.workcenterList.map(function (v) {\n          return v.workCenterCode;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条班组信息',\n          type: 'warning'\n        });\n      }\n    },\n    //工作中心人员选择确定按钮单击事件\n    workConfirm: function workConfirm(val) {\n      var _this10 = this;\n\n      var data = [];\n      val.forEach(function (item) {\n        data.push({\n          state: 'string',\n          teamCode: _this10.selectlistRow.teamCode,\n          teamName: _this10.selectlistRow.teamName,\n          workCenterCode: item.workCenterCode,\n          workCenterName: item.workCenterName\n        });\n      });\n      api.addWorkcenter(data, this.groupListQuery.teamCode).then(function () {\n        _this10.getWorkList();\n\n        _this10.$message({\n          title: '成功',\n          message: '新增成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    // 工作中心人员删除\n    handleWorkDelect: function handleWorkDelect() {\n      var _this11 = this;\n\n      if (this.selectlistRowWorks) {\n        this.$confirm('是否删除该信息', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var data = _this11.selectlistRowWorks.map(function (i) {\n            return i.workCenterCode;\n          });\n\n          api.deleteWorkcenter(data, _this11.selectlistRow.teamCode).then(function () {\n            _this11.getWorkList();\n\n            _this11.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this11.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    // 获取表格选中时的数据(主表)\n    selectRow: function selectRow(val) {\n      this.selectlistRow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val.pop());\n      }\n\n      if (this.selectlistRow) {\n        this.getGroupList();\n        this.getWorkList();\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectlistRow);\n    },\n    rowClick: function rowClick(val) {\n      this.$refs.tb.clearSelection();\n      this.$refs.tb.toggleRowSelection(val);\n    },\n    // 获取表格选中时的数据(班组人员信息表)\n    selectRowGroup: function selectRowGroup(val) {\n      // this.selectlistRowGroup = val[val.length - 1]\n      this.selectlistRowGroups = val; // if (val.length > 1) {\n      //     this.$refs.tbGroup.clearSelection()\n      //     this.$refs.tbGroup.toggleRowSelection(val.pop())\n      // }\n      // this.$refs.tbGroup.setCurrentRow(this.selectlistRowGroup)\n    },\n    rowClickGroup: function rowClickGroup(val) {\n      this.$refs.tbGroup.clearSelection();\n      this.$refs.tbGroup.toggleRowSelection(val);\n    },\n    // 获取表格选中时的数据(班组工作中心表)\n    selectRowWork: function selectRowWork(val) {\n      // this.selectlistRowWork = val[val.length - 1]\n      this.selectlistRowWorks = val; // if (val.length > 1) {\n      //     this.$refs.tbWork.clearSelection()\n      //     this.$refs.tbWork.toggleRowSelection(val.pop())\n      // }\n      // this.$refs.tbWork.setCurrentRow(this.selectlistRowWork)\n    },\n    rowClickWork: function rowClickWork(val) {\n      this.$refs.tbWork.clearSelection();\n      this.$refs.tbWork.toggleRowSelection(val);\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.parentId = data.rowId;\n      this.parentData = data;\n      this.listQuery.orgCode = data.organizationCode;\n      this.getList();\n      this.treeGetList(data.classCode);\n    },\n    getDialogVisible: function getDialogVisible(data) {\n      // 接收弹出层的值\n      if (!data) {\n        this.getList();\n      }\n    }\n  }\n};",null]}