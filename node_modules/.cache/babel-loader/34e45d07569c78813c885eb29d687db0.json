{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabJGcost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabJGcost.vue","mtime":1596610933674},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { queryRecords } from \"@/api/project/srm/supplierSelection/constantParameters\"\nexport default {\n  name: 'tabJGcost',\n  props: ['tabJGcostList'],\n  data: function data() {\n    return {\n      type: null,\n      tableData: []\n    };\n  },\n  watch: {\n    tabJGcostList: function tabJGcostList(val) {\n      var _this = this;\n\n      if (this.type == 'add') {\n        var arr = JSON.parse(JSON.stringify(val));\n        arr.forEach(function (i) {\n          i.actuarialProcessHour = i.processHour ? i.processHour : 0; //工时精算\n\n          i.actuarialOperatorCount = i.operatorCount ? i.operatorCount : 0; //人数精算\n\n          i.actuarialProcessUnitPrice = i.processUnitPrice ? i.processUnitPrice : 0; //单价精算\n\n          i.actuarialConsumptionQuota = i.consumptionQuota ? i.consumptionQuota : 0; //消耗定额精算\n\n          i.actuarialDeviceOriginalValue = i.deviceOriginalValue ? i.deviceOriginalValue : 0; //设备原值精算\n\n          i.actuarialUnitPrice = i.unitPrice ? i.unitPrice : 0; //单价精算\n\n          i.actuarialRejectRate = i.rejectRate ? i.rejectRate : 0; //废品率精算\n\n          i.actuarialLaborCost = _this.checkValue(i.actuarialProcessHour * i.actuarialOperatorCount * i.actuarialProcessUnitPrice) || 0; //人工费精算\n\n          i.actuarialBurningCharge = _this.checkValue(i.ratedPower * i.powerUtilization * i.electricityTariff * i.actuarialProcessHour) || 0; //燃动费精算\n\n          i.actuarialDeviceAllocationWork = _this.checkValue(i.actuarialDeviceOriginalValue * 0.95 / 10 / 12 / 21.75 / 8 / i.constantValue) || 0; //设备分摊工时费精算\n\n          i.actuarialDeviceAllocation = _this.checkValue(i.actuarialDeviceAllocationWork * i.actuarialProcessHour) || 0; //设备分摊精算\n\n          i.actuarialAuxiliaryMaterialCost = _this.checkValue(i.actuarialConsumptionQuota * i.actuarialUnitPrice) || 0; //辅料成本精算\n\n          i.actuarialSubtotalCost = _this.checkValue(i.actuarialLaborCost + i.actuarialBurningCharge + i.actuarialDeviceAllocation + i.actuarialAuxiliaryMaterialCost) || 0; //费用精算\n\n          i.actuarialWasteLoss = _this.checkValue(i.actuarialRejectRate * i.actuarialSubtotalCost) || 0; //废品损失精算\n        });\n        this.tableData = arr;\n      } else {\n        var _arr = JSON.parse(JSON.stringify(val));\n\n        this.tableData = _arr;\n      }\n    }\n  },\n  methods: {\n    checkValue: function checkValue(val) {\n      if (isNaN(val) || val == Infinity) {\n        return undefined;\n      } else {\n        if (val.toString().indexOf('.') !== -1) {\n          val = parseFloat(val).toFixed(2);\n        }\n\n        return val;\n      }\n    },\n    getSummaries: function getSummaries(param) {\n      var _this2 = this;\n\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '总计';\n          return;\n        }\n\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          if (column.property == 'partName' || column.property == 'actuarialProcessHour' || column.property == 'actuarialOperatorCount' || column.property == 'actuarialProcessUnitPrice' || column.property == 'actuarialLaborCost' || column.property == 'ratedPower' || column.property == 'actuarialBurningCharge' || column.property == 'actuarialDeviceOriginalValue' || column.property == 'actuarialDeviceAllocationWork' || column.property == 'actuarialDeviceAllocation' || column.property == 'actuarialConsumptionQuota' || column.property == 'actuarialUnitPrice' || column.property == 'actuarialAuxiliaryMaterialCost' || column.property == 'actuarialSubtotalCost' || column.property == 'actuarialRejectRate' || column.property == 'actuarialWasteLoss') {\n            sums[index] = values.reduce(function (prev, curr) {\n              var value = Number(curr);\n\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0); // sums[index] += ' 元'\n          } else {\n            sums[index] = '--';\n          }\n        } else {\n          sums[index] = 0;\n        }\n      });\n      columns.forEach(function (val, index) {\n        //小计精算\n        if (val.property == 'actuarialSubtotalCost') {\n          _this2.$store.dispatch('getData/getJgSums', sums[index]);\n        } //设备额定功率\n\n\n        if (val.property == 'ratedPower') {\n          _this2.$store.dispatch('getData/getRatedPower', sums[index]);\n        }\n      });\n      return sums;\n    },\n    getPriceCost: function getPriceCost(row) {\n      var _this3 = this;\n\n      this.tableData.forEach(function (i) {\n        if (i.rowId == row.rowId) {\n          i.actuarialLaborCost = _this3.checkValue(i.actuarialProcessHour * i.actuarialOperatorCount * i.actuarialProcessUnitPrice); //人工费精算\n\n          i.actuarialBurningCharge = _this3.checkValue(i.ratedPower * i.powerUtilization * i.electricityTariff * i.actuarialProcessHour); //燃动费精算\n\n          i.actuarialDeviceAllocationWork = _this3.checkValue(i.actuarialDeviceOriginalValueactuarialDeviceOriginalValue * 0.95 / 10 / 12 / 21.75 / 8 / i.constantValue) || 0; //设备分摊工时费精算\n\n          i.actuarialDeviceAllocation = _this3.checkValue(i.actuarialDeviceAllocationWork * i.actuarialProcessHour); //设备分摊精算\n\n          i.actuarialAuxiliaryMaterialCost = _this3.checkValue(i.actuarialConsumptionQuota * i.actuarialUnitPrice); //辅料成本精算\n\n          i.actuarialSubtotalCost = _this3.checkValue(i.actuarialLaborCost + i.actuarialBurningCharge + i.actuarialDeviceAllocation + i.actuarialAuxiliaryMaterialCost); //费用精算\n\n          i.actuarialWasteLoss = _this3.checkValue(i.actuarialRejectRate * i.actuarialSubtotalCost); //废品损失精算\n        }\n      });\n    },\n    initData: function initData(val) {\n      this.type = val;\n      this.tableData = [];\n    }\n  }\n};",null]}