{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processConfiguration/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processConfiguration/index.vue","mtime":1596610934248},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/system/process/processConfiguration';\nimport tabSelect from '@/components/Select/tabSelect';\nimport dialog1 from \"./diaLog/dialog1\";\nimport dialog2 from \"./diaLog/dialog2\";\nimport dialog3 from \"./diaLog/dialog3\";\nimport Pagination from '@/components/Pagination'; // Secondary package based on el-pagination\n\nimport { mapState } from 'vuex';\nexport default {\n  name: 'processDesign',\n  components: {\n    Pagination: Pagination,\n    dialog1: dialog1,\n    dialog2: dialog2,\n    dialog3: dialog3,\n    tabSelect: tabSelect\n  },\n  data: function data() {\n    return {\n      theight: 0,\n      //表格高度\n      unMutiple: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      //树高度样式\n      contentStyleObj: {\n        height: ''\n      },\n      mainList: {},\n      treeData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      tableKey: 0,\n      //表格索引，虚拟dom渲染表格时使用\n      list: [],\n      total: 0,\n      orgName: [],\n      dialogStatus: '',\n      listLoading: true,\n      dialogVisible: false,\n      dialogVisiblethree: false,\n      listQuery: {\n        key: undefined,\n        currentPage: 1,\n        pageSize: 10\n      },\n      dialogIndex: 0,\n      nodeData: null\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_org_type: function dt_org_type(state) {\n      return state.dict.dt_org_type;\n    },\n    dt_org_function: function dt_org_function(state) {\n      return state.dict.dt_org_function;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener('message', this.handleMessage);\n    this.$store.dispatch('dict/getDicData', ['dt_org_type', 'dt_org_function']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.getTreeList();\n    this.setTreeHeight();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    getTreeList: function getTreeList() {\n      var _this2 = this;\n\n      api.getModelTree('tree').then(function (rest) {\n        rest = rest.data;\n        _this2.treeData = _this2.$myFun.reDataToWorkTree(rest, 'category');\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      //查询组织列表\n      setTimeout(function () {\n        api.getRecords(_this3.listQuery).then(function (res) {\n          res = res.data.list;\n          _this3.list = res;\n        });\n      }, 1.5 * 100);\n    },\n    handleQuery: function handleQuery() {\n      //查询\n      this.listQuery.page = 1;\n    },\n    //流程信息配置\n    handleInformation: function handleInformation(index, row) {\n      this.dialogIndex = 1;\n      this.$refs.refConfig.initForm(row);\n      this.$refs.refConfig.src = \"/workflow/diagram-viewer/index.html?processDefinitionId=\".concat(row.id);\n      this.$refs.refConfig.dialogVisible = true;\n    },\n    //流程节点配置\n    handleNode: function handleNode(index, row) {\n      console.log(row);\n      this.dialogIndex = 2;\n      this.$refs.refNode.dialogVisible = true;\n      this.$refs.refNode.initData();\n      this.$refs.refNode.src = \"/workflow/diagram-viewer/index.html?processDefinitionId=\".concat(row.id);\n      this.$refs.refNode.initTab(row);\n    },\n    //流程国际化配置\n    handleInternational: function handleInternational() {\n      this.dialogIndex = 3;\n      this.dialogVisiblethree = true;\n    },\n    handleImitate: function handleImitate() {//流程模拟\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.listQuery.key = data.key;\n      this.getList();\n    },\n    resetTemp: function resetTemp() {\n      this.mainList = {};\n    },\n    handlesaveC: function handlesaveC() {},\n    handleMessage: function () {\n      var _handleMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(event) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.nodeData = event.data;\n\n                if (this.nodeData.cmd === 'getModelData') {\n                  if (this.nodeData.params.success) {\n                    console.log(this.nodeData.params, 'test iframe main');\n                    this.initDialog();\n                  }\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleMessage(_x) {\n        return _handleMessage.apply(this, arguments);\n      }\n\n      return handleMessage;\n    }(),\n    initDialogIndex: function initDialogIndex() {\n      this.dialogIndex = 0;\n    },\n    //初始化弹框数据\n    initDialog: function initDialog() {\n      switch (this.dialogIndex) {\n        case 1:\n          {\n            this.$refs.refConfig.nodeClick(this.nodeData);\n            break;\n          }\n\n        case 2:\n          {\n            this.$refs.refNode.nodeClick(this.nodeData);\n            break;\n          }\n\n        case 3:\n          {\n            break;\n          }\n      }\n    },\n    selectClick: function selectClick(i) {\n      this.$refs['orgRef' + i].dialogVisible = true;\n    },\n    handleTabConfirm: function handleTabConfirm(val) {\n      this.$refs.refNode.setPerson(val);\n    },\n    handleChangeStatus: function handleChangeStatus(index, row) {\n      var data = {\n        available: \"1\"\n      };\n      var id = row.id;\n      api.infoConfig(id, data).then(function (res) {\n        console.log(res);\n      });\n    },\n    //控制tab的单多选\n    setTabSelect: function setTabSelect(val) {\n      console.log(val, 999999);\n\n      if (val === \"1\") {\n        this.unMutiple = false;\n      } else {\n        this.unMutiple = true;\n      }\n    }\n  }\n};",null]}