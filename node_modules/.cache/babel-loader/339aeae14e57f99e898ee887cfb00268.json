{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/employeesManagement/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/employeesManagement/index.vue","mtime":1596610934240},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\n\nimport { selectlists, creat, deletelist, updatalist, adduser, selectuser, deleteuser } from '@/api/system/employees';\nimport { selecttree } from '@/api/system/organization';\nexport default {\n  name: \"employeesManagement\",\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    var validatePassword = function validatePassword(rule, value, callback) {\n      var reg = /(^[1-9]\\d{5,11}$)/;\n\n      if (value == '' || value == undefined || value == null) {\n        callback();\n      } else {\n        if (!reg.test(value) && value != '') {\n          callback(new Error('请输入正确的密码'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return {\n      modalnum: null,\n      //模板编号\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      //树高度样式\n      contentStyleObj: {\n        height: \"\"\n      },\n      treeData: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"organizationName\"\n      },\n      tableKey: 0,\n      //表格索引，虚拟dom渲染表格时使用\n      list: [],\n      total: 0,\n      orgName: [],\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 15,\n        page: 1,\n        scope: false\n      },\n      listuser: [],\n      //关联员工记录\n      frametotal: 0,\n      //弹框的条数\n      readonly: false,\n      temp: {},\n      dialogFormVisible: false,\n      dialogFormUser: false,\n      dialogStatus: '',\n      rules: {\n        employeeCode: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }, {\n          max: 32,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        employeeName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }, {\n          max: 32,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        state: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        userName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        realName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        // password: [\n        //     { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        // ],\n        password: [{\n          required: true,\n          validator: validatePassword,\n          trigger: \"blur\",\n          message: \"请输入6-12位数字\"\n        }],\n        officePhone: [{\n          max: 32,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }]\n      },\n      dialogPvVisible: false,\n      pvData: []\n    };\n  },\n  computed: {\n    organizationId: {\n      get: function get() {\n        return this.organizationId; //获取的时候直接获取值\n      },\n      set: function set(listQuery) {\n        this.organizationId = listQuery.organizationName; //设置的时候变为大写\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", [\"dt_org_type\", \"dt_org_function\"]);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n\n      _this.setTreeHeight();\n    };\n\n    this.getList();\n    this.setTreeHeight();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    treeGetList: function treeGetList() {\n      var _this2 = this;\n\n      //点击树查询\n      this.listLoading = true;\n      selectlists(this.listQuery).then(function (response) {\n        _this2.list = response.data.list;\n        _this2.total = response.data.pages.count;\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      //查询\n      this.listLoading = true;\n      selectlists(this.listQuery).then(function (response) {\n        _this3.list = response.data.list;\n        _this3.total = response.data.pages.count;\n        setTimeout(function () {\n          _this3.listLoading = false;\n        }, 1.5 * 100);\n      }), selecttree().then(function (response) {\n        //获取树数据\n        _this3.treeData = _this3.$myFun.addTreeRoot(response.data);\n        _this3.orgName = response.data.map(function (itmes) {\n          return [itmes.rowId, itmes.organizationName];\n        });\n        setTimeout(function () {\n          _this3.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    filertOrgName: function filertOrgName(val) {\n      for (var i = 0; i < this.orgName.length; i++) {\n        if (this.orgName[i][0] == val) {\n          return this.orgName[i][1];\n        }\n\n        if (val == 0) {\n          return \"根目录\";\n        }\n      }\n    },\n    handleFilter: function handleFilter() {\n      var _this4 = this;\n\n      //查询组织列表\n      this.listQuery.page = 1;\n      this.listLoading = true;\n      selectlists(this.listQuery).then(function (response) {\n        _this4.list = response.data.list;\n        _this4.total = response.data.pages.count;\n        setTimeout(function () {\n          _this4.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        sex: 1,\n        state: 1,\n        isLog: 1\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this5 = this;\n\n      //新增弹窗\n      if (this.listQuery.orgId || this.listQuery.orgId == 0) {\n        this.resetTemp();\n        this.dialogStatus = 'create';\n        this.dialogFormVisible = true;\n        this.temp.organizationId = this.listQuery.orgId;\n        this.readonly = true; //组织编码可以编写\n\n        selecttree().then(function (response) {\n          //获取树数据\n          _this5.treeData = _this5.$myFun.addTreeRoot(response.data);\n        });\n        this.$nextTick(function () {\n          _this5.$refs['dataForm'].clearValidate();\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择上级菜单',\n          type: 'warning'\n        });\n      }\n    },\n    createData: function createData() {\n      var _this6 = this;\n\n      //新增\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          creat(_this6.temp).then(function () {\n            _this6.getList();\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$message({\n              title: '成功',\n              message: '创建成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate() {\n      var _this7 = this;\n\n      //编辑弹窗\n      if (this.selectedRows && this.selectedRows.length == 1) {\n        this.readonly = true; //员工编码不可以编写\n\n        this.temp = this.selectedRows[0]; // copy obj\n\n        this.dialogStatus = 'update';\n        this.dialogFormVisible = true;\n        this.$nextTick(function () {\n          _this7.$refs['dataForm'].clearValidate();\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    updateData: function updateData() {\n      var _this8 = this;\n\n      //编辑\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          // const tempData = Object.assign({}, this.temp)\n          // tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n          updatalist(_this8.temp.employeeCode, _this8.temp).then(function () {\n            _this8.getList();\n\n            _this8.dialogFormVisible = false;\n\n            _this8.$message({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    //查询关联的员工记录\n    getUserList: function getUserList(code) {\n      var _this9 = this;\n\n      selectuser(code).then(function (response) {\n        _this9.listuser = response.data;\n        _this9.frametotal = response.data.length; // this.total = response.data.pages.count\n      });\n    },\n    handadduser: function handadduser() {\n      var _this10 = this;\n\n      //添加\n      adduser(this.selectedRows[0].employeeCode, this.temp).then(function () {\n        _this10.handleUser();\n\n        _this10.$message({\n          title: '成功',\n          message: '创建成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    handdeleltuser: function handdeleltuser() {\n      var _this11 = this;\n\n      //删除\n      if (this.selectedRowsUser && this.selectedRowsUser.length == 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var name = [];\n\n          for (var i = 0; i < _this11.selectedRowsUser.length; i++) {\n            name[i] = _this11.selectedRowsUser[i].userName;\n          }\n\n          deleteuser(_this11.selectedRows[0].employeeCode, name).then(function () {\n            _this11.dialogFormUser = true;\n\n            _this11.handleUser();\n          });\n        }).catch(function () {\n          _this11.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条员工信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleUser: function handleUser() {\n      var _this12 = this;\n\n      //用户维护\n      if (this.selectedRows && this.selectedRows.length == 1) {\n        this.getUserList(this.selectedRows[0].employeeCode);\n        this.resetTemp();\n        this.temp.employeeCode = this.selectedRows[0].employeeCode;\n        this.temp.employeeName = this.selectedRows[0].employeeName;\n        this.dialogFormUser = true;\n        this.$nextTick(function () {\n          _this12.$refs['dataForm'].clearValidate();\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条员工信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleAddUser: function handleAddUser() {\n      adduser();\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      if (this.isSingle) {\n        if (val.length > 1) {\n          this.$refs.tb.clearSelection(); //清除其他行的选中\n\n          this.$refs.tb.toggleRowSelection(val[val.length - 1], \"selected\"); //单击行绑定点击事件\n        } else if (val.length === 1) {\n          this.selectedRows = val;\n          this.currentSelectedRow = val[val.length - 1];\n        }\n      } else {\n        this.selectedRows = val;\n        this.currentSelectedRow = val[val.length - 1];\n      }\n    },\n    //点击某行时执行\n    rowClick: function rowClick(val) {\n      if (this.isSingle) {\n        this.$refs.tb.clearSelection(); //清除其他行的选中\n      }\n\n      this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    //删除\n    handleDelete: function handleDelete() {\n      var _this13 = this;\n\n      if (this.selectedRows && this.selectedRows.length == 1) {\n        this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = [];\n\n          _this13.selectedRows.forEach(function (val, index) {\n            ids[index] = val.employeeCode;\n          });\n\n          deletelist(ids).then(function () {\n            _this13.getList(), _this13.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this13.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //树高度设置\n    setTreeHeight: function setTreeHeight() {\n      this.contentStyleObj.height = this.$myFun.getTreehHeight();\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      //点击树查询\n      this.listQuery.orgCode = data.organizationCode;\n      this.listQuery.orgId = data.rowId;\n      this.treeGetList();\n    },\n    selectRowUser: function selectRowUser(val) {\n      this.selectedRowsUser = val;\n    }\n  }\n};",null]}