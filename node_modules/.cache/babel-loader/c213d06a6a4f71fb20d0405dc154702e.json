{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/problemManage/problemManagement/content/problemManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/problemManage/problemManagement/content/problemManage.vue","mtime":1599136050789},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from \"@/api/project/srm/contractManage/problemManagement\";\nimport resume from \"../dialog/resume\"; //履历\n\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport Pagination from \"@/components/Pagination\";\nimport { mapState } from \"vuex\";\nimport close from \"../dialog/close\"; //复检\n\nimport addMain from \"../dialog/addMain\"; //\n\nimport examine from \"../dialog/examine\"; //方案审核\n\nexport default {\n  name: \"problemManagement\",\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    resume: resume,\n    close: close,\n    addMain: addMain,\n    examine: examine\n  },\n  data: function data() {\n    return {\n      modalnum: null,\n      //模板编号\n      theight: 0,\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      currentSelectedRow: null,\n      //当前选中的行\n      selectedRows: null,\n      //多选时选中的所有行\n      list: null,\n      listSub: null,\n      total: 0,\n      selectedrow: null,\n      //主表选中行\n      DICT_CODE: DICT_CODE,\n      tableConfig: [{\n        label: '序号',\n        prop: 'rowId',\n        align: 'center',\n        width: '80px'\n      }, {\n        label: '组织编码',\n        prop: 'orgName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '问题计划号',\n        prop: 'questionNo',\n        align: 'center',\n        width: '120px'\n      }, {\n        label: '问题状态',\n        prop: 'stateCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '严重等级',\n        prop: 'severityLevelCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '问题大类',\n        prop: 'statisticalBigClassCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商',\n        prop: 'supplierCode',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '供应商名称',\n        prop: 'supplierName',\n        align: 'center',\n        width: '150px'\n      }, {\n        label: '物料分类',\n        prop: 'materielClass',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料',\n        prop: 'materielCode',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '物料名称',\n        prop: 'materielName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '问题描述',\n        prop: 'questionDesc',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '发现时间',\n        prop: 'firstFindTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建人',\n        prop: 'creatorName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改人',\n        prop: 'updatorName',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改时间',\n        prop: 'updateTime',\n        align: 'center',\n        width: 'auto'\n      }],\n      subtableConfig: [{\n        label: '序号',\n        prop: 'rowId',\n        align: 'center',\n        width: '80px'\n      }, {\n        label: '处理单号',\n        prop: 'questionNo',\n        align: 'center',\n        width: '120px'\n      }, {\n        label: '问题计划号',\n        prop: 'handleOrderNo',\n        align: 'center',\n        width: '120px'\n      }, {\n        label: '类型',\n        prop: 'handleTypeCodeCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '状态',\n        prop: 'handleState',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '解决对策',\n        prop: 'solutions',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '方案审核',\n        prop: 'auditStateCodeCN',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '审核说明',\n        prop: 'auditExplain',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '负责人',\n        prop: 'handler',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '预计完成时间',\n        prop: 'predictCompletionTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '预计关闭日期',\n        prop: 'closeTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '实际解决日期',\n        prop: 'realSolveTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建人',\n        prop: 'creator',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改人',\n        prop: 'updator',\n        align: 'center',\n        width: 'auto'\n      }, {\n        label: '修改时间',\n        prop: 'updateTime',\n        align: 'center',\n        width: 'auto'\n      }],\n      listQuery: {\n        purchaseOrg: 'dtcg0001',\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      sublistQuery: {\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      tableKey: [0, 1] //表格索引，虚拟dom渲染表格时使用\n\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pc3: function dt_srm_pc3(state) {\n      return state.dict.dt_srm_pc3;\n    },\n    dt_srm_pc4: function dt_srm_pc4(state) {\n      return state.dict.dt_srm_pc4;\n    },\n    dt_srm_pb4: function dt_srm_pb4(state) {\n      return state.dict.dt_srm_pb4;\n    },\n    dt_srm_pc5: function dt_srm_pc5(state) {\n      return state.dict.dt_srm_pc5;\n    },\n    dt_srm_pcl: function dt_srm_pcl(state) {\n      return state.dict.dt_srm_pcl;\n    },\n    dt_srm_pcj: function dt_srm_pcj(state) {\n      return state.dict.dt_srm_pcl;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch(\"dict/getDicData\", ['dt_srm_pc3', 'dt_srm_pc4', 'dt_srm_pb4', 'dt_srm_pc5', 'dt_srm_pcl', 'dt_srm_pcj']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() - 285;\n    },\n    refresh: function refresh() {\n      this.getList();\n    },\n    checked: function checked() {\n      this.$refs.tb.toggleRowSelection(this.list[0], true); //官网方法，重点\n    },\n    //显示主表\n    getList: function getList() {\n      var _this2 = this;\n\n      api.queryRecord(this.listQuery).then(function (res) {\n        var options = [_this2.dt_srm_pc3, _this2.dt_srm_pc4, _this2.dt_srm_pb4];\n        res.data = _this2.$myFun.codeToName(res.data, options, ['state', 'severityLevel', 'statisticalBigClass']);\n        _this2.list = res.data.list;\n        _this2.total = res.data.pages.count;\n\n        _this2.$nextTick(function () {\n          this.checked();\n        });\n      });\n    },\n    //显示从表\n    getSubList: function getSubList() {\n      var _this3 = this;\n\n      var dto = {\n        currentPage: 1,\n        pageSize: 10,\n        rowId: this.selectlistRow.rowId\n      };\n      api.queryRecordItems(dto).then(function (res) {\n        var options = [_this3.dt_srm_pc5, _this3.dt_srm_pcl];\n        res.data = _this3.$myFun.codeToName(res.data, options, ['handleTypeCode', 'auditStateCode']);\n        _this3.listSub = res.data.list;\n      });\n    },\n    //新增按钮单击事件\n    handleCreate: function handleCreate() {\n      // this.$emit('setState', 'create', '')、\n      this.$refs.addMain.initForm();\n      this.$refs.addMain.dialogStatus = 'create';\n      this.$refs.addMain.dialogVisible = true;\n    },\n    //确认按钮单击事件\n    handleConfirm: function handleConfirm() {\n      var _this4 = this;\n\n      if (this.selectlistRow) {\n        this.$confirm(\"\\u662F\\u5426\\u786E\\u8BA4\\u8BE5\\u4FE1\\u606F\\uFF1F\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          var dto = {\n            rowIds: [_this4.selectlistRow.rowId],\n            confirmer: _this4.selectlistRow.creatorName,\n            confirmCode: _this4.selectlistRow.creator\n          };\n          api.confirmRecord(dto).then(function () {\n            _this4.$message({\n              title: '成功',\n              message: '确认成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this4.getList();\n          });\n        }).catch(function () {\n          _this4.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //关闭按钮单击事件\n    handleClose: function handleClose() {\n      if (this.selectlistRow) {\n        this.$refs.close.dialogStatus = 'create';\n        this.$refs.close.dialogVisible = true;\n        this.$refs.close.temp.rowId = this.selectlistRow.rowId;\n        this.$refs.close.temp.close_people = this.selectlistRow.creatorName;\n        this.$refs.close.temp.close_people_code = this.selectlistRow.creator;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //再重发按钮单击事件\n    handleReissued: function handleReissued() {\n      var _this5 = this;\n\n      if (this.selectlistRow) {\n        this.$confirm(\"\\u786E\\u8BA4\\u91CD\\u65B0\\u6253\\u5F00\\u95EE\\u9898\\uFF1F\\u6253\\u5F00\\u540E\\u53EF\\u91CD\\u65B0\\u8FDB\\u884C\\u95EE\\u9898\\u5904\\u7406\\uFF1B\\u95EE\\u9898\\u5355\\u53F7\\uFF1A\".concat(this.selectlistRow.questionNo), \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          api.newRecord(_this5.selectlistRow.rowId).then(function () {\n            _this5.$message({\n              title: '成功',\n              message: '再重发成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this5.getList();\n          });\n        }).catch(function () {\n          _this5.$message({\n            type: \"info\",\n            message: \"已取消\"\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //履历\n    handleResume: function handleResume() {\n      if (this.selectlistRow) {\n        this.$refs.resume.dialogVisible = true;\n        this.$refs.resume.rowId = this.selectlistRow.rowId;\n        this.$refs.resume.getList();\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //行内删除按钮单击事件\n    handleDelete: function handleDelete(index, val) {\n      var _this6 = this;\n\n      console.log(index, val);\n      this.$confirm(\"是否删除该信息\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        api.deleteRecord(val.rowId).then(function () {\n          _this6.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this6.getList();\n        });\n      }).catch(function () {\n        _this6.$message({\n          type: \"info\",\n          message: \"已取消\"\n        });\n      });\n    },\n    handleUpdate: function handleUpdate(index, val) {\n      //行内编辑按钮单击事件\n      this.$refs.addMain.temp = _objectSpread({}, val);\n      this.$refs.addMain.dialogStatus = 'update';\n      this.$refs.addMain.dialogVisible = true;\n    },\n    //查询\n    handleQuery: function handleQuery() {\n      this.listSub = [];\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //从表查询按钮单击事件\n    handleSearch: function handleSearch() {\n      var _this7 = this;\n\n      if (this.selectlistRow) {\n        var dto = {\n          currentPage: 1,\n          pageSize: 10,\n          rowId: this.selectlistRow.rowId\n        };\n        api.queryRecordItems(dto).then(function (res) {\n          console.log(res, 'ppkkk');\n          var options = [_this7.dt_srm_pc5, _this7.dt_srm_pcl];\n          res.data = _this7.$myFun.codeToName(res.data, options, ['handleTypeCode', 'auditState']);\n          _this7.listSub = res.data.list;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    handleSee: function handleSee(index, val) {\n      var _this8 = this;\n\n      api.queryRecordAll(val.rowId).then(function (res) {\n        console.log(res, 'kkkkkk');\n\n        _this8.$emit('setState', 'search', res.data);\n      });\n    },\n    //从表方案处理按钮单击事件\n    handlePlan: function handlePlan() {\n      if (this.selectlistRow) {\n        if (this.selectlistRow.state == 'PC31') {\n          var status = this.listSub.every(function (v) {\n            return v.handleStateCode !== 'PCJ0';\n          });\n\n          if (status) {\n            this.$emit('setState', 'create', this.selectlistRow);\n          } else {\n            this.$message({\n              title: '警告',\n              message: '含有编制状态不可处理方案',\n              type: 'warning',\n              duration: 2000\n            });\n          }\n        } else {\n          this.$message({\n            title: '警告',\n            message: '非问题解决状态不能执行此操作',\n            type: 'warning',\n            duration: 2000\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    handleUpdateItems: function handleUpdateItems(index, val) {\n      this.$emit('setState', 'update', val);\n    },\n    //从表提交按钮单击事件\n    handleSubmit: function handleSubmit() {\n      var _this9 = this;\n\n      if (this.selectlistRow && this.selectlistRow.state == 'PC32') {\n        if (this.selectedRowsSub) {\n          this.$confirm(\"\\u662F\\u5426\\u63D0\\u4EA4\\uFF1F\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"warning\"\n          }).then(function () {\n            var dto = {\n              rowId: _this9.selectedRowsSub.rowId\n            };\n            api.submitRecord(dto).then(function () {\n              _this9.$message({\n                title: '成功',\n                message: '提交成功',\n                type: 'success',\n                duration: 2000\n              });\n\n              _this9.getList();\n            });\n          }).catch(function () {\n            _this9.$message({\n              type: \"info\",\n              message: \"已取消\"\n            });\n          });\n        } else {\n          this.$message({\n            title: '警告',\n            message: '请选择一条信息',\n            type: 'warning',\n            duration: 2000\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '非解决中状态不可执行此操作',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //方案审核按钮单击事件\n    handleExamine: function handleExamine() {\n      if (this.selectlistRow && this.selectlistRow.state == 'PC32') {\n        if (this.selectedRowsSub) {\n          this.$refs.examine.dialogVisible = true;\n          this.$refs.examine.temp.rowId = this.selectedRowsSub.rowId;\n        } else {\n          this.$message({\n            title: '警告',\n            message: '请选择一条信息',\n            type: 'warning',\n            duration: 2000\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '非解决中状态不可执行此操作',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //问题解决按钮单击事件\n    handleSolve: function handleSolve() {\n      var _this10 = this;\n\n      if (this.selectlistRow && this.selectlistRow.state == 'PC32') {\n        if (this.selectedRowsSub) {\n          this.$confirm(\"\\u786E\\u8BA4\\u5DF2\\u6309\\u5904\\u7406\\u65B9\\u6848\\u89E3\\u51B3\\u95EE\\u9898\\uFF1F\\u786E\\u8BA4\\u540E\\u5C06\\u7531\\u76F8\\u5173\\u8D1F\\u8D23\\u4EBA\\u8FDB\\u884C\\u590D\\u68C0\\uFF1B\\u5904\\u7406\\u5355\\u53F7\\uFF1A\".concat(this.selectedRowsSub.questionNo), \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"warning\"\n          }).then(function () {\n            var dto = {\n              rowId: _this10.selectedRowsSub.rowId\n            };\n            api.solveRecord(dto).then(function () {\n              _this10.$message({\n                title: '成功',\n                message: '解决成功',\n                type: 'success',\n                duration: 2000\n              });\n\n              _this10.getList();\n            });\n          }).catch(function () {\n            _this10.$message({\n              type: \"info\",\n              message: \"已取消\"\n            });\n          });\n        } else {\n          this.$message({\n            title: '警告',\n            message: '请选择一条信息',\n            type: 'warning',\n            duration: 2000\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '非解决中状态不可执行此操作',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //从表复检按钮单击事件\n    handleExamin: function handleExamin() {\n      if (this.selectlistRow && this.selectlistRow.state == 'PC32') {\n        if (this.selectedRowsSub) {\n          this.$refs.close.dialogStatus = 'update';\n          this.$refs.close.dialogVisible = true;\n          this.$refs.close.temp.rowId = this.selectedRowsSub.rowId;\n        } else {\n          this.$message({\n            title: '警告',\n            message: '请选择一条信息',\n            type: 'warning',\n            duration: 2000\n          });\n        }\n      } else {\n        this.$message({\n          title: '警告',\n          message: '非解决中状态不可执行此操作',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    //从表答按钮单击事件\n    handleAnswer: function handleAnswer(index, val) {\n      console.log(index, val); // this.$refs.addMain.dialogVisible = true\n    },\n    //从表删除按钮单击事件\n    handleDeleteSub: function handleDeleteSub(index, val) {\n      var _this11 = this;\n\n      console.log(index, val);\n      this.$confirm(\"是否删除该信息\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        api.deleteRecordItems(val.rowId).then(function () {\n          _this11.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this11.getList();\n        });\n      }).catch(function () {\n        _this11.$message({\n          type: \"info\",\n          message: \"已取消\"\n        });\n      });\n    },\n    //每页大小变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    //当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      this.selectlistRow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val.pop());\n      }\n\n      if (this.selectlistRow) {\n        this.getSubList();\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectlistRow);\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.$refs.tb.clearSelection();\n      this.$refs.tb.toggleRowSelection(val);\n    },\n    selectChangeSub: function selectChangeSub(val) {\n      this.selectedRowsSub = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tbSub.clearSelection();\n        this.$refs.tbSub.toggleRowSelection(val.pop());\n      }\n\n      this.$refs.tbSub.setCurrentRow(this.selectedRowsSub);\n    },\n    //加载时默认选中第一行\n    setFirstLine: function setFirstLine() {\n      var _this12 = this;\n\n      this.$nextTick(function () {\n        _this12.$refs.tbmain.setCurrentRow(_this12.list[0]);\n      });\n    }\n  }\n};",null]}