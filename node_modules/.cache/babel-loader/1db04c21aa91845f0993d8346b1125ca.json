{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabWLcost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/priceManage/actuarialPrice/actuarialDetailCost/tab/tabWLcost.vue","mtime":1596610933676},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  name: 'tabWLcost',\n  props: ['tabWLcostList'],\n  data: function data() {\n    return {\n      type: null,\n      tableData: []\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pdm: function dt_srm_pdm(state) {\n      return state.dict.dt_srm_pdm;\n    }\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch('dict/getDicData', ['dt_srm_pdm']);\n  },\n  watch: {\n    tabWLcostList: function tabWLcostList(val) {\n      console.log(val, 'transportType');\n      var options = [this.dt_srm_pdm];\n      val = this.$myFun.srmCodeToName(val, options, ['transportType']);\n\n      if (this.type == 'add') {\n        if (val && val.length > 0) {\n          var arr = JSON.parse(JSON.stringify(val));\n          arr.forEach(function (i) {\n            i.actuarialEachShipmentNumber = i.eachShipmentNumber ? i.eachShipmentNumber : 0; //件数精算\n\n            i.actuarialSingleCost = i.singleCost ? i.singleCost : 0; //件数精算\n\n            i.actuarialSubtotalCost = i.actuarialSingleCost / i.actuarialEachShipmentNumber; //小计精算\n          });\n          this.tableData = arr;\n        } else {\n          this.tableData = [];\n        }\n      } else {\n        var _arr = JSON.parse(JSON.stringify(val));\n\n        this.tableData = _arr;\n      }\n    }\n  },\n  methods: {\n    checkValue: function checkValue(val) {\n      if (isNaN(val) || val == Infinity) {\n        return undefined;\n      } else {\n        if (val.toString().indexOf('.') !== -1) {\n          val = val.toFixed(2);\n        }\n\n        return val;\n      }\n    },\n    getSummaries: function getSummaries(param) {\n      var _this = this;\n\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '总计';\n          return;\n        }\n\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          if (column.property == 'transportTypeCN' || column.property == 'actuarialEachShipmentNumber' || column.property == 'actuarialSingleCost' || column.property == 'actuarialSubtotalCost') {\n            sums[index] = values.reduce(function (prev, curr) {\n              var value = Number(curr);\n\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0); // sums[index] += ' 元'\n          } else {\n            sums[index] = '--';\n          }\n        } else {\n          sums[index] = 0;\n        }\n      });\n      columns.forEach(function (val, index) {\n        //小计精算\n        if (val.property == 'actuarialSubtotalCost') {\n          _this.$store.dispatch('getData/getWlData', sums[index]);\n        }\n      });\n      return sums;\n    },\n    getPriceCost: function getPriceCost(row) {\n      var _this2 = this;\n\n      this.tableData.forEach(function (i) {\n        if (i.rowId == row.rowId) {\n          i.actuarialSubtotalCost = _this2.checkValue(i.actuarialSingleCost / i.actuarialEachShipmentNumber); //小计精算\n        }\n      });\n    },\n    initData: function initData(val) {\n      this.type = val;\n      this.tableData = [];\n    }\n  }\n};",null]}