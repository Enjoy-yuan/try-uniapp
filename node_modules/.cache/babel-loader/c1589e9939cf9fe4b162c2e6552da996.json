{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTIA/components/equipment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/IOT/IOT/IOTIA/components/equipment.vue","mtime":1600480761734},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import Pagination from '@/components/Pagination'\nimport * as api from '@/api/project/iot/IOT/ia.js';\nimport { queryProjects } from '@/api/project/iot/IOT/project';\nimport { mapState } from 'vuex';\nimport throttle from 'lodash/throttle';\nimport clip from '@/utils/clipboard';\nexport default {\n  name: 'equipment',\n  // components: { Pagination },\n  data: function data() {\n    return {\n      treeData: [],\n      // 树型菜单\n      theight: 0,\n      // 表格⾼度\n      titleName: '',\n      // 点击的标题名\n      listQuery: {\n        currentPage: 1,\n        pageSize: 15,\n        method: 'NO'\n      },\n      tableData: [],\n      // 表格数据\n      total: 0,\n      // 总条数\n      listLoading: false,\n      // 表格加载动画\n      defaultProps: {\n        // 树型结构属性\n        children: 'children',\n        label: 'name'\n      },\n      contentStyleObj: {\n        // 树型⾼度\n        height: ''\n      },\n      treeRowId: [],\n      // 默认展开的菜单\n      projectCode: '',\n      // 项⽬代码编号\n      projectList: [],\n      // 项⽬数组\n      deviceCode: '',\n      // 菜单点击编码\n      normCode: '',\n      // 表格行编号\n      rowData: '',\n      // 点击当前行数据\n      dialogFormVisible: false,\n      // 弹框是否显示\n      dialogFormVisible2: false,\n      // 粒度设置弹框\n      dialogFormVisible3: false,\n      // 公式编辑弹框\n      temp: {\n        // 弹框输入框数据\n        normName: '',\n        normCode: '',\n        company: '',\n        indexDescription: ''\n      },\n      // 第二个弹框数据\n      temp2: {\n        minuteFifteen: '',\n        minuteThirty: '',\n        hour: '',\n        day: '',\n        month: '',\n        year: '',\n        dayDetail: '',\n        monthDetail: ''\n      },\n      // 第三个弹框数据\n      temp3: {\n        name: '',\n        point: '',\n        nameplate: ''\n      },\n      rowFormula: {},\n      // 点击行的数据\n      inputFormula: '',\n      // 公式\n      deviceNames: [],\n      // 公式编辑，设备名称数组\n      devicePoints: [],\n      // 公式编辑，设备点位数组\n      deviceNameplates: [],\n      // 公式编辑，设备铭牌数组\n      copyDevicePoints: [],\n      // 复制的设备点位数组\n      copyDeviceNameplates: [],\n      // 复制的设备铭牌数组\n      days: [],\n      // 时间数组\n      months: [],\n      // 日期数组\n      rules: {\n        // 规则校验\n        normName: [{\n          required: true,\n          message: '请输入指标名称',\n          trigger: 'blur'\n        }],\n        normCode: [{\n          required: true,\n          message: '请输入指标编码',\n          trigger: 'blur'\n        }],\n        company: [{\n          required: true,\n          message: '请输入单位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    iot_is_standard: function iot_is_standard(state) {\n      return state.iotDict.iot_is_standard;\n    },\n    iot_norm_company: function iot_norm_company(state) {\n      return state.iotDict.iot_norm_company;\n    }\n  }), {\n    inputFormulaCode: function inputFormulaCode() {\n      var _this = this;\n\n      var temp = this.inputFormula;\n\n      if (this.copyDevicePoints.length > 0 && temp) {\n        this.copyDevicePoints.map(function (item) {\n          temp = temp.replace(new RegExp(item.attributeName, 'g'), item.attributeCode);\n        });\n      }\n\n      if (this.copyDeviceNameplates.length > 0 && temp) {\n        this.copyDeviceNameplates.map(function (item) {\n          _this.deviceNames.map(function (childItem) {\n            temp = temp.replace(eval('/\\\\[' + childItem.deviceName + '.' + item.tagName + '\\\\]/g'), item.tagValue);\n          });\n        });\n      }\n\n      if (this.deviceNames.length > 0 && temp) {\n        this.deviceNames.map(function (item) {\n          temp = temp.replace(new RegExp(item.deviceName, 'g'), item.gatewayCode + '.' + item.deviceCode);\n        });\n      }\n\n      return temp;\n    }\n  }),\n  watch: {\n    '$route.params': {\n      immediate: true,\n      handler: function handler(newval) {\n        var _this2 = this;\n\n        if (newval && newval.code) {\n          // 在code变化时才重新请求\n          queryProjects().then(function (res) {\n            _this2.projectList = res.data;\n            _this2.projectCode = newval.code;\n\n            _this2.getTreeData();\n          });\n        } else if (!this.projectCode) {\n          // 不存在projectCode则取接⼝返回的第⼀个projectCode\n          queryProjects().then(function (res) {\n            _this2.projectList = res.data;\n            _this2.projectCode = res.data[0].projectCode;\n\n            _this2.getTreeData();\n          });\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    // 循环造数据\n    for (var i = 1; i <= 24; i++) {\n      this.days.push(i + '时');\n    }\n\n    for (var _i = 1; _i <= 31; _i++) {\n      this.months.push(_i + '号');\n    }\n\n    this.$store.dispatch('iotDict/getDicData', ['iot_is_standard', 'iot_norm_company']);\n    this.setTableHeight(); //表格⾼度⾃适应\n\n    window.onresize = function () {\n      _this3.setTableHeight();\n    };\n  },\n  methods: {\n    // 清空数据并打开自定义指标弹框\n    openDialog: function openDialog() {\n      this.temp = {\n        normName: '',\n        normCode: '',\n        company: '',\n        indexDescription: ''\n      };\n      this.dialogFormVisible = true;\n    },\n    // 关闭自定义指标弹框\n    closeDialog: function closeDialog() {\n      this.dialogFormVisible = false;\n    },\n    // 清空数据，打开粒度弹框\n    openDialogGranularity: function openDialogGranularity(index, row) {\n      var _this4 = this;\n\n      this.temp2 = {\n        minuteFifteen: '',\n        minuteThirty: '',\n        hour: '',\n        day: '',\n        month: '',\n        year: '',\n        dayDetail: '',\n        monthDetail: ''\n      };\n      this.normCode = row.normCode;\n      this.rowData = row;\n\n      if (row.dateDefinition) {\n        this.temp2.day = '自定义';\n        this.temp2.dayDetail = row.dateDefinition.split('-')[0];\n      }\n\n      if (row.monthDefinition) {\n        this.temp2.day = '自定义';\n        this.temp2.dayDetail = row.monthDefinition.split('-')[0];\n      }\n\n      if (this.rowData.calculationGranularity) {\n        this.rowData.calculationGranularity.split(',').map(function (item) {\n          if (item === '15min') {\n            _this4.temp2.minuteFifteen = true;\n          }\n\n          if (item === '30min') {\n            _this4.temp2.minuteThirty = true;\n          }\n\n          if (item === '1h') {\n            _this4.temp2.hour = true;\n          }\n\n          if (item === '1d') {\n            _this4.temp2.day = '自然天';\n          }\n\n          if (item === '1month') {\n            _this4.temp2.month = '自然月';\n          }\n\n          if (item === '1y') {\n            _this4.temp2.year = true;\n          }\n        });\n      }\n\n      this.dialogFormVisible2 = true;\n    },\n    // 清空数据，打开公式编辑\n    openDialogFormula: function openDialogFormula(index, row) {\n      var _this5 = this;\n\n      this.rowFormula = row; // 清空数据\n\n      this.temp3 = {\n        name: '',\n        point: '',\n        nameplate: ''\n      };\n      this.inputFormula = row.formula;\n\n      if (row.pointArray) {\n        this.copyDevicePoints = JSON.parse(row.pointArray);\n      }\n\n      if (row.nameplateArray) {\n        this.copyDeviceNameplates = JSON.parse(row.nameplateArray);\n      }\n\n      this.devicePoints = [];\n      this.deviceNames = [];\n      this.deviceNameplates = [];\n      api.getDeviceByProjectCode(row.projectCode).then(function (res) {\n        _this5.deviceNames = res.data;\n      });\n      this.dialogFormVisible3 = true;\n    },\n    // 关闭公式编辑弹框\n    closeDialogFormula: function closeDialogFormula() {\n      this.dialogFormVisible3 = false;\n    },\n    //改变设备名称\n    changeName: function changeName(deviceCode) {\n      var _this6 = this;\n\n      // 清空数据\n      this.temp3.point = '';\n      this.devicePoints = [];\n      this.temp3.nameplate = '';\n      this.deviceNameplates = [];\n      api.getCollect(this.rowFormula.projectCode, deviceCode).then(function (res) {\n        _this6.devicePoints = res.data;\n      });\n      api.getNamelpate(this.rowFormula.projectCode, deviceCode).then(function (res) {\n        res.data.map(function (item) {\n          if (item.tagValue) {\n            item.value = item.tagName + '(' + item.company + ')';\n\n            _this6.deviceNameplates.push(item);\n          }\n        });\n      });\n    },\n    // 复制点位\n    copyPoint: function copyPoint(event) {\n      var _this7 = this;\n\n      var formula = '';\n\n      if (this.temp3.name === '') {\n        this.$message({\n          message: '请先选择设备名称',\n          type: 'warning',\n          duration: 1500\n        });\n      } else if (this.temp3.point === '') {\n        this.$message({\n          message: '请先选择设备点位',\n          type: 'warning',\n          duration: 1500\n        });\n      } else {\n        this.deviceNames.map(function (item) {\n          if (item.deviceCode === _this7.temp3.name) {\n            formula = '[' + item.deviceName + '.';\n          }\n        });\n        this.devicePoints.map(function (item) {\n          if (item.attributeCode === _this7.temp3.point) {\n            formula += item.attributeName + ']';\n\n            _this7.copyDevicePoints.push({\n              attributeCode: item.attributeCode,\n              attributeName: item.attributeName\n            });\n          }\n        });\n        clip(formula, event);\n      }\n    },\n    // 复制铭牌\n    copyNameplate: function copyNameplate() {\n      var _this8 = this;\n\n      var formula = '';\n\n      if (this.temp3.name === '') {\n        this.$message({\n          message: '请先选择设备名称',\n          type: 'warning',\n          duration: 1500\n        });\n      } else {\n        if (this.temp3.nameplate === '') {\n          this.$message({\n            message: '请先选择设备铭牌',\n            type: 'warning',\n            duration: 1500\n          });\n        } else {\n          this.deviceNames.map(function (item) {\n            if (item.deviceCode === _this8.temp3.name) {\n              formula = '[' + item.deviceName + '.';\n            }\n          });\n          this.deviceNameplates.map(function (item) {\n            if (item.tagValue === _this8.temp3.nameplate) {\n              formula += item.tagName + ']';\n\n              _this8.copyDeviceNameplates.push({\n                tagValue: item.tagValue,\n                tagName: item.tagName\n              });\n            }\n          });\n          clip(formula, event);\n        }\n      }\n    },\n    // 关闭粒度设置弹框\n    closeDialogGranularity: function closeDialogGranularity() {\n      this.dialogFormVisible2 = false;\n    },\n    // 保存公式\n    saveFormula: function saveFormula() {\n      var _this9 = this;\n\n      var pointArray = [];\n      var nameplateArray = [];\n      this.copyDevicePoints.map(function (item) {\n        if (_this9.inputFormula.indexOf(item.attributeName) !== -1) {\n          pointArray.push({\n            attributeName: item.attributeName,\n            attributeCode: item.attributeCode\n          });\n        }\n      });\n      this.copyDeviceNameplates.map(function (item) {\n        if (_this9.inputFormula.indexOf(item.tagName) !== -1) {\n          nameplateArray.push({\n            tagName: item.tagName,\n            tagValue: item.tagValue\n          });\n        }\n      });\n      api.patchFormula(this.rowFormula.projectCode, this.rowFormula.deviceCode, this.rowFormula.normCode, {\n        formula: this.inputFormula,\n        formulaPreview: this.inputFormulaCode,\n        pointArray: JSON.stringify(pointArray),\n        nameplateArray: JSON.stringify(nameplateArray)\n      }, {\n        method: 'NO'\n      }).then(function () {\n        _this9.$message({\n          message: '编辑成功',\n          type: 'success',\n          duration: 1500\n        });\n\n        _this9.getList();\n\n        _this9.closeDialogFormula();\n      });\n    },\n    // 粒度设置\n    createGranularity: function createGranularity() {\n      var _this10 = this;\n\n      if (this.temp2.day === '自定义' && this.temp2.dayDetail === '') {\n        this.$message.error('请选择天级自定义时间');\n      } else if (this.temp2.month === '自定义' && this.temp2.monthDetail === '') {\n        this.$message.error('请选择月级自定义月份');\n      } else {\n        var granularity = [];\n\n        if (this.temp2.minuteFifteen) {\n          granularity.push('15min');\n        }\n\n        if (this.temp2.minuteThirty) {\n          granularity.push('30min');\n        }\n\n        if (this.temp2.hour) {\n          granularity.push('1h');\n        }\n\n        if (this.temp2.day === '自然天') {\n          granularity.push('1d');\n        }\n\n        if (this.temp2.month === '自然月') {\n          granularity.push('1month');\n        }\n\n        if (this.temp2.year) {\n          granularity.push('1y');\n        }\n\n        var data = {\n          granularity: granularity.join(),\n          dateDefinition: this.temp2.day === '自定义' ? this.temp2.dayDetail + '-' + this.temp2.dayDetail : '',\n          monthDefinition: this.temp2.month === '自定义' ? this.temp2.monthDetail + '-' + this.temp2.monthDetail : ''\n        };\n        api.granularitySetting(this.projectCode, this.deviceCode, this.normCode, data, {\n          method: 'NO'\n        }).then(function () {\n          _this10.closeDialogGranularity();\n\n          _this10.getList();\n        });\n      }\n    },\n    // 添加信息\n    createInfo: throttle(function () {\n      var _this11 = this;\n\n      this.$refs.tempRef.validate(function (valid) {\n        if (valid) {\n          var flag1 = false;\n          var flag2 = false;\n\n          _this11.tableData.map(function (item) {\n            if (item.normName === _this11.temp.normName) {\n              flag1 = true;\n            }\n\n            if (item.normCode === _this11.temp.normCode) {\n              flag2 = true;\n            }\n          });\n\n          if (flag1) {\n            _this11.$message({\n              message: '指标名称不能重复',\n              type: 'warning',\n              duration: 2000\n            });\n          } else if (flag2) {\n            _this11.$message({\n              message: '指标编码不能重复',\n              type: 'warning',\n              duration: 2000\n            });\n          } else {\n            api.createInfo(_this11.projectCode, _this11.deviceCode, _this11.temp, {\n              method: 'NO'\n            }).then(function () {\n              _this11.getList();\n\n              _this11.closeDialog();\n\n              _this11.$notify({\n                title: '成功',\n                message: '添加成功',\n                type: 'success',\n                duration: 2000\n              });\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }, 2000, {\n      leading: true,\n      trailing: false\n    }),\n    // 删除信息\n    deleteInfo: function deleteInfo(index, row) {\n      var _this12 = this;\n\n      this.$confirm('此操作将删除所选中数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteInfo(_this12.projectCode, _this12.deviceCode, row.normCode, {\n          methods: 'NO'\n        }).then(function () {\n          _this12.$message({\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this12.getList();\n        });\n      }).catch(function () {\n        _this12.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    // 递归取第一个数据\n    getData: function getData(arr) {\n      if (arr[0].children) {\n        this.getData(arr[0].children);\n      } else {\n        this.treeRowId = [].concat(arr[0].rowId);\n        this.handleNodeClick(arr[0]);\n      }\n    },\n    getTreeData: function getTreeData(projectCode) {\n      var _this13 = this;\n\n      // 清空数据\n      this.treeData = [];\n      this.titleName = '';\n      this.tableData = [];\n      this.total = 0;\n      this.deviceCode = ''; // 下拉框选中重新赋值\n\n      if (projectCode) {\n        this.projectCode = projectCode;\n      } //获取树数据\n\n\n      api.getTree(this.projectCode).then(function (response) {\n        if (response.data.length !== 0) {\n          var temp = response.data;\n          response.data.map(function (item, index) {\n            temp[index].rowId = item.code;\n            temp[index].parentId = item.parentCode;\n          });\n          _this13.treeData = _this13.$myFun.addTreeRoot(temp)[0].children;\n\n          _this13.getData(_this13.treeData); // this.treeData[0].name = '根⽬录'\n\n        }\n      });\n    },\n    //表格⾼度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n      this.contentStyleObj.height = this.theight + 'px';\n    },\n    // 树型菜单点击触发\n    handleNodeClick: function handleNodeClick(data) {\n      if (data.deviceCode) {\n        this.titleName = data.name;\n        this.deviceCode = data.deviceCode;\n        this.getList();\n      }\n    },\n    // 获取表格数据\n    getList: function getList() {\n      var _this14 = this;\n\n      this.listLoading = true;\n      api.getInfo(this.projectCode, this.deviceCode, this.listQuery).then(function (res) {\n        var options = [_this14.iot_is_standard];\n        res.data.list = _this14.$myFun.codeToName(res.data.list, options, ['isStandard']);\n        _this14.tableData = res.data.list;\n        _this14.total = res.data.pages.count;\n        setTimeout(function () {\n          _this14.listLoading = false;\n        }, 1.5 * 100);\n      });\n    }\n  }\n};",null]}