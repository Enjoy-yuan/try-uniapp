{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/reservoirLocation/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/data-base/reservoirLocation/index.vue","mtime":1596610933346},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _slicedToArray from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/data-base/warehouse';\nimport { selectlists as listOrg } from '@/api/system/organization';\nimport Pagination from '@/components/Pagination';\nimport orgSelect from '@/components/Select/orgSelect.vue';\nimport { DT_ORG_TYPE, TWO_STATE_OPTIONS } from '@/utils/constant';\nimport { mapState } from 'vuex';\nimport JsBarcode from 'jsbarcode';\nexport default {\n  name: 'reservoirLocation',\n  components: {\n    Pagination: Pagination,\n    orgSelect: orgSelect\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 10,\n        orgCode: undefined,\n        warehouseCode: undefined\n      },\n      printData: {},\n      //打印数据\n      orgCode: undefined,\n      orgName: undefined,\n      warehouseCode: undefined,\n      warehouseName: undefined,\n      areaCode: undefined,\n      areaName: undefined,\n      areaList: null,\n      areaTemp: {\n        warehouseCode: undefined,\n        areaCode: undefined,\n        areaName: undefined,\n        isEnabled: 1,\n        areaType: undefined\n      },\n      packDataList: null,\n      packPrintList: [],\n      updatePacklist: {\n        barCode: [],\n        method: '',\n        supplierBatch: '',\n        supplierRemark: ''\n      },\n      areaDialogVisible: false,\n      locationList: null,\n      locationTemp: {\n        areaCode: undefined,\n        column: undefined,\n        height: undefined,\n        isEnabled: 1,\n        layer: undefined,\n        locationClass: undefined,\n        locationCode: undefined,\n        locationName: undefined,\n        locationType: undefined,\n        longth: undefined,\n        remark: undefined,\n        row: undefined,\n        warehouseCode: undefined,\n        width: undefined,\n        wtb: undefined\n      },\n      locationDialogVisible: false,\n      dialogPackPrintVisible: false,\n      //打印弹框显示\n      dialogStatus: '',\n      tableKey: [0, 1, 2],\n      //表格索引，虚拟dom渲染表格时使用\n      theight: 0,\n      stheight: 0,\n      //右子表高度\n      DT_ORG_TYPE: DT_ORG_TYPE,\n      TWO_STATE_OPTIONS: TWO_STATE_OPTIONS,\n      rules: {\n        warehouseCode: [{\n          required: true,\n          message: '仓库编码不能为空',\n          trigger: 'blur'\n        }],\n        areaCode: [{\n          required: true,\n          message: '编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z0-9]{0,8}$/,\n          message: '由大写字母和数字组成，长度为8',\n          trigger: 'blur'\n        }],\n        areaName: [{\n          required: true,\n          message: '名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 60,\n          message: '长度不能超过60',\n          trigger: 'blur'\n        }],\n        areaType: [{\n          required: true,\n          message: '请选择区位类型',\n          trigger: 'blur'\n        }],\n        locationCode: [{\n          required: true,\n          message: '编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z0-9]{0,8}$/,\n          message: '由大写字母和数字组成，长度为8',\n          trigger: 'blur'\n        }],\n        locationName: [{\n          required: true,\n          message: '名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 60,\n          message: '长度不能超过60',\n          trigger: 'blur'\n        }],\n        locationType: [{\n          required: true,\n          message: '请选择储位类型',\n          trigger: 'blur'\n        }],\n        locationClass: [{\n          required: true,\n          message: '请选择储位类别',\n          trigger: 'blur'\n        }],\n        longth: [{\n          pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/,\n          message: '由正数组成，保留两位有效数，长度不能超过14',\n          trigger: 'blur'\n        }],\n        width: [{\n          pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/,\n          message: '由正数组成，保留两位有效数，长度不能超过14',\n          trigger: 'blur'\n        }],\n        height: [{\n          pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/,\n          message: '由正数组成，保留两位有效数，长度不能超过14',\n          trigger: 'blur'\n        }],\n        wtb: [{\n          pattern: /^[0-9]{0,12}(\\.[0-9]{2})?$/,\n          message: '由正数组成，保留两位有效数，长度不能超过14',\n          trigger: 'blur'\n        }],\n        row: [{\n          pattern: /^[A-Z-_0-9]{0,8}$/,\n          message: '由大写字母、数字、-和_组成，长度为8',\n          trigger: 'blur'\n        }],\n        column: [{\n          pattern: /^[A-Z-_0-9]{0,8}$/,\n          message: '由大写字母、数字、-和_组成，长度为8',\n          trigger: 'blur'\n        }],\n        layer: [{\n          pattern: /^[A-Z-_0-9]{0,8}$/,\n          message: '由大写字母、数字、-和_组成，长度为8',\n          trigger: 'blur'\n        }],\n        remark: [{\n          size: 512,\n          message: '长度不能超过512',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_soragecell_type: function dt_soragecell_type(state) {\n      return state.dict.dt_soragecell_type;\n    },\n    dt_soragecell_class: function dt_soragecell_class(state) {\n      return state.dict.dt_soragecell_class;\n    },\n    dt_whpartition_type: function dt_whpartition_type(state) {\n      return state.dict.dt_whpartition_type;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('dict/getDicData', ['dt_soragecell_type', 'dt_soragecell_class', 'dt_whpartition_type']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      this.orgCode = undefined;\n      this.orgName = undefined;\n      this.warehouseCode = undefined;\n      this.warehouseName = undefined;\n      this.areaCode = undefined;\n      this.areaName = undefined;\n      this.areaList = [];\n      this.locationList = [];\n      var orgs = listOrg({\n        type: DT_ORG_TYPE.factory,\n        organizationCode: this.orgCode,\n        state: 1\n      });\n      var list = api.queryRecords(this.listQuery);\n      Promise.all([orgs, list]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            o = _ref2[0],\n            l = _ref2[1];\n\n        _this2.list = l.data.list.map(function (v) {\n          var org = o.data.find(function (value) {\n            return value.organizationCode == v.orgCode;\n          });\n\n          if (org) {\n            v.orgName = org.organizationName;\n          } else {\n            v.orgName = '';\n          }\n\n          return v;\n        }); // this.total = res.pages.count\n      });\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight() + 50;\n      this.stheight = this.theight / 2;\n    },\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreateArea: function handleCreateArea() {\n      if (!this.orgCode) {\n        this.$message.warning('请选择对应仓库！');\n        return;\n      }\n\n      this.resetAreaTemp();\n      this.areaTemp.orgCode = this.orgCode;\n      this.areaTemp.warehouseCode = this.warehouseCode;\n      this.areaTemp.warehouseName = this.warehouseName;\n      this.dialogStatus = 'create';\n      this.areaDialogVisible = true;\n    },\n    handleUpdateArea: function handleUpdateArea() {\n      var _this3 = this;\n\n      if (this.selectListArea) {\n        api.getArea(this.selectListArea.warehouseCode, this.selectListArea.areaCode).then(function (res) {\n          _this3.areaTemp = res.data;\n          _this3.areaTemp.orgCode = _this3.orgCode;\n          _this3.areaTemp.warehouseCode = _this3.warehouseCode;\n          _this3.areaTemp.warehouseName = _this3.warehouseName;\n          _this3.dialogStatus = 'update';\n          _this3.areaDialogVisible = true;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleDeleteArea: function handleDeleteArea() {\n      var _this4 = this;\n\n      if (this.selectListArea) {\n        this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteArea(_this4.selectListArea.warehouseCode, _this4.selectListArea.areaCode).then(function () {\n            _this4.listArea();\n\n            _this4.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this4.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    createArea: function createArea() {\n      var _this5 = this;\n\n      this.$refs.areaTemp.validate(function (valid) {\n        if (valid) {\n          api.addArea(_this5.warehouseCode, _this5.areaTemp).then(function () {\n            _this5.listArea();\n\n            _this5.areaDialogVisible = false;\n\n            _this5.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    updateArea: function updateArea() {\n      var _this6 = this;\n\n      this.$refs.areaTemp.validate(function (valid) {\n        if (valid) {\n          api.updateArea(_this6.warehouseCode, _this6.areaTemp.areaCode, _this6.areaTemp).then(function () {\n            _this6.listArea();\n\n            _this6.areaDialogVisible = false;\n\n            _this6.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this6.$refs.areaTemp.resetFields();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetAreaTemp: function resetAreaTemp() {\n      this.areaTemp = {\n        warehouseCode: undefined,\n        areaCode: undefined,\n        areaName: undefined,\n        isEnabled: 1,\n        areaType: undefined\n      };\n    },\n    handleCloseArea: function handleCloseArea() {\n      this.resetAreaTemp();\n      this.$refs.areaTemp.resetFields();\n    },\n    clickWarehouse: function clickWarehouse(row) {\n      this.orgCode = row.orgCode;\n      this.orgName = row.orgName;\n      this.warehouseCode = row.warehouseCode;\n      this.warehouseName = row.warehouseName;\n      this.areaCode = undefined;\n      this.areaName = undefined;\n      this.listArea();\n      this.locationList = [];\n    },\n    listArea: function listArea() {\n      var _this7 = this;\n\n      api.listArea(this.warehouseCode).then(function (res) {\n        _this7.areaList = res.data;\n      });\n    },\n    handleCreateLocation: function handleCreateLocation() {\n      if (!this.orgCode || !this.areaCode) {\n        this.$message.warning('请选择对应仓库库区！');\n        return;\n      }\n\n      this.resetLocationTemp();\n      this.locationTemp.orgCode = this.orgCode;\n      this.locationTemp.orgName = this.orgName;\n      this.locationTemp.warehouseCode = this.warehouseCode;\n      this.locationTemp.warehouseName = this.warehouseName;\n      this.locationTemp.areaCode = this.areaCode;\n      this.locationTemp.areaName = this.areaName;\n      this.dialogStatus = 'create';\n      this.locationDialogVisible = true;\n    },\n    handleUpdateLocation: function handleUpdateLocation() {\n      var _this8 = this;\n\n      if (this.selectListLocation && this.selectListLocation.length == 1) {\n        api.getLocation(this.selectListLocation[0].warehouseCode, this.selectListLocation[0].areaCode, this.selectListLocation[0].locationCode).then(function (res) {\n          _this8.locationTemp = res.data;\n          _this8.locationTemp.areaName = _this8.selectListLocation[0].areaName;\n          _this8.locationTemp.orgCode = _this8.orgCode;\n          _this8.locationTemp.orgName = _this8.orgName;\n          _this8.locationTemp.warehouseCode = _this8.warehouseCode;\n          _this8.locationTemp.warehouseName = _this8.warehouseName;\n          _this8.locationTemp.areaCode = _this8.areaCode; // this.locationTemp.areaName = this.areaName\n\n          _this8.dialogStatus = 'update';\n          _this8.locationDialogVisible = true;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleDeleteLocation: function handleDeleteLocation() {\n      var _this9 = this;\n\n      if (this.selectListLocation && this.selectListLocation.length == 1) {\n        this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteLocation(_this9.selectListLocation[0].warehouseCode, _this9.selectListLocation[0].areaCode, _this9.selectListLocation[0].locationCode).then(function () {\n            _this9.listLocation();\n\n            _this9.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this9.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleBulkPrint: function handleBulkPrint() {\n      var _this10 = this;\n\n      if (this.selectListLocation == undefined) {\n        this.$message({\n          title: this.$t('message.warning'),\n          message: '请选择要打印的标签',\n          type: \"warning\"\n        });\n      } else {\n        var printable = true;\n\n        try {\n          this.selectListLocation.forEach(function (item) {\n            if (item.printSign === 1) {\n              printable = false;\n\n              _this10.$message({\n                title: _this10.$t('message.warning'),\n                message: '所选项包含已打印过的标签，不能进行批量打印',\n                type: \"warning\"\n              });\n\n              throw '';\n            }\n          });\n\n          if (printable) {\n            this.updateMethod = 'batchPrint';\n            this.createPrintPack();\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    },\n    //生成打印内容\n    createPrintPack: function createPrintPack() {\n      var _this11 = this;\n\n      this.dialogPackPrintVisible = true;\n      this.packPrintList = this.selectListLocation;\n      this.$nextTick(function () {\n        _this11.packPrintList.forEach(function (item) {\n          // this.$refs['childQRcode'+item.locationCode][index].qrCreate(item.locationCode);\n          JsBarcode(\"#barcode\" + item.locationCode, item.locationCode);\n        });\n      });\n    },\n    //执行包装标签打印\n    doPackPrint: function doPackPrint() {\n      var _this12 = this;\n\n      this.$confirm('是否进行打印操作？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this12.dialogPackPrintVisible = false;\n\n        _this12.initUpdatePacklist();\n\n        api.updatePackTag(_this12.updatePacklist).then(function () {\n          api.queryPackTag(_this12.listQueryPack).then(function (resq) {\n            _this12.packDataList = resq.data;\n          });\n\n          _this12.$message.success('设置成功');\n        });\n        var newWin = window.open(\"\");\n        var newstr = document.getElementById('packprint').innerHTML;\n        newWin.document.write(newstr);\n        newWin.document.close(); //IE添加\n\n        setTimeout(function () {\n          newWin.print();\n          newWin.close();\n        }, 100);\n      });\n    },\n    initUpdatePacklist: function initUpdatePacklist() {\n      var barcodes = new Array();\n      this.selectListLocation.forEach(function (item) {\n        barcodes.push(item.locationCode);\n      });\n      this.updatePacklist.barCode = barcodes;\n      this.updatePacklist.method = this.updateMethod;\n\n      if (this.updateMethod !== 'setUp') {\n        this.updatePacklist.supplierBatch = '';\n        this.updatePacklist.supplierRemark = '';\n      }\n    },\n    createLocation: function createLocation() {\n      var _this13 = this;\n\n      this.$refs.locationTemp.validate(function (valid) {\n        if (valid) {\n          api.addLocation(_this13.warehouseCode, _this13.areaCode, _this13.locationTemp).then(function () {\n            _this13.listLocation();\n\n            _this13.locationDialogVisible = false;\n\n            _this13.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    updateLocation: function updateLocation() {\n      var _this14 = this;\n\n      this.$refs.locationTemp.validate(function (valid) {\n        if (valid) {\n          api.updateLocation(_this14.warehouseCode, _this14.areaCode, _this14.locationTemp.locationCode, _this14.locationTemp).then(function () {\n            _this14.listLocation();\n\n            _this14.locationDialogVisible = false;\n\n            _this14.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this14.$refs.locationTemp.resetFields();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetLocationTemp: function resetLocationTemp() {\n      this.locationTemp = {\n        warehouseCode: undefined,\n        locationCode: undefined,\n        locationName: undefined,\n        isEnabled: 1,\n        locationType: undefined\n      };\n    },\n    handleCloseLocation: function handleCloseLocation() {\n      this.resetLocationTemp();\n      this.$refs.locationTemp.resetFields();\n    },\n    listLocation: function listLocation() {\n      var _this15 = this;\n\n      //查询库位\n      this.warehouseCode = this.selectListArea.warehouseCode;\n      this.areaCode = this.selectListArea.areaCode;\n      api.listLocation(this.warehouseCode, this.areaCode).then(function (res) {\n        _this15.locationList = res.data;\n      });\n    },\n    clickArea: function clickArea(val) {\n      //   this.areaCode = row.areaCode\n      //   this.areaName = row.areaName\n      //   this.listLocation()\n      this.selectlistRow2 = val;\n      this.$refs.tb.clearSelection();\n      this.$refs.tb.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    selectArea: function selectArea(val) {\n      //区位复选框选中\n      this.selectListArea = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val.pop());\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectListArea);\n\n      if (this.selectListArea) {\n        this.listLocation();\n      }\n    },\n    selectLocation: function selectLocation(val) {\n      this.selectListLocation = val;\n    }\n  }\n};",null]}