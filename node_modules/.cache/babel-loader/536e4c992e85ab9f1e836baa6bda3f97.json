{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainPlan/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/EAS/EM/maintainPlan/index.vue","mtime":1596610933390},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport * as api from '@/api/project/eas/em/maintainPlan';\nimport { queryRecords } from '@/api/project/eas/database/groups'; //班组\n\nimport { DT_ORG_TYPE } from '@/utils/constant';\nimport Pagination from '@/components/Pagination';\nimport { mapState } from 'vuex'; // 基本数据引入\n\nimport employeesSelect from '@/components/Select/employeesSelect'; //操作人\n\nimport emplSelect from \"../../components/teamEmpSelect\"; //操作人下拉框\n\nimport eqmtSelect from \"../../components/eqmtSelect\";\nimport materielSelect from \"./materielSelect\";\nimport teamSelect from \"../../components/teamSelect\";\nimport partSelect from \"../../components/maintainPartSelect\";\nimport deviceType from \"../../components/deviceTypeSelect\";\nexport default {\n  name: 'maintainPlan',\n  components: {\n    Pagination: Pagination,\n    caiGou: caiGou,\n    employeesSelect: employeesSelect,\n    eqmtSelect: eqmtSelect,\n    materielSelect: materielSelect,\n    partSelect: partSelect,\n    teamSelect: teamSelect,\n    emplSelect: emplSelect,\n    deviceType: deviceType\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      checkList: [],\n      groupList: [],\n      parentRow: [],\n      teamList: [],\n      deviceList: [],\n      upkeepList: [],\n      materielList: [],\n      value: '',\n      theight: 0,\n      //表格高度\n      isSingle: true,\n      //表格是否单选 点击各按钮根据流程逻辑控制单多选\n      materielData: [],\n      list: [],\n      total: 0,\n      tableKey: [0, 1, 2, 3],\n      //表格索引\n      listQuery: {\n        orgCode: undefined,\n        equipmentCode: undefined,\n        teamCode: undefined,\n        upkeepPlanTimeStart: undefined,\n        upkeepPlanTimeEnd: undefined,\n        maintainPlanCode: undefined,\n        state: undefined,\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      listQuery1: {\n        //从表查询\n        currentPage: 1,\n        pageSize: 15\n      },\n      temp: {\n        teamName: undefined,\n        teamCode: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        applicant: undefined,\n        applicantName: undefined,\n        loopMode: undefined,\n        loopCycle: undefined,\n        maintainLevel: undefined,\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined,\n        promptLeadTime: undefined,\n        deviceTypeCode: undefined\n      },\n      updateTemp: {\n        teamName: undefined,\n        teamCode: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        applicant: undefined,\n        applicantName: undefined,\n        loopMode: undefined,\n        loopCycle: undefined,\n        maintainLevel: undefined,\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined,\n        promptLeadTime: undefined,\n        deviceTypeCode: undefined\n      },\n      tempTime: {\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined\n      },\n      tempFrom: {\n        assembleLine: undefined,\n        assembleQuantity: undefined,\n        bomId: undefined,\n        endDate: undefined,\n        manufactureLine: undefined,\n        materielCode: undefined,\n        startDate: undefined,\n        workStationCode: undefined,\n        timeRange: undefined\n      },\n      dto: {\n        applicant: undefined,\n        applicantName: undefined,\n        deviceList: [],\n        loopCycle: undefined,\n        loopMode: undefined,\n        maintainLevel: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        positionList: [],\n        promptLeadTime: undefined,\n        spareList: [],\n        teamCode: undefined,\n        teamName: undefined,\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined\n      },\n      upDto: {\n        applicant: undefined,\n        applicantName: undefined,\n        loopCycle: undefined,\n        loopMode: undefined,\n        maintainLevel: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        equipmentCode: undefined,\n        positionList: [],\n        promptLeadTime: undefined,\n        spareList: [],\n        teamCode: undefined,\n        teamName: undefined,\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined\n      },\n      dtos: {\n        maintainPlanCodeList: [],\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined\n      },\n      DT_ORG_TYPE: DT_ORG_TYPE,\n      dialogFormVisible: false,\n      upDialogFormVisible: false,\n      importDialogVisible: false,\n      supportDialogVisible: false,\n      timeDialogFormVisible: false,\n      fromDialogStatus: '',\n      deviceFormVisible: false,\n      fromDialogFormVisible: false,\n      partVisible: false,\n      currentSelectedRow: null,\n      selectedRows: null,\n      selectFromList: null,\n      selectMateriel: null,\n      selectPart: null,\n      rules: {\n        applicant: [{\n          required: true,\n          message: '保养负责人不能为空',\n          trigger: 'blur'\n        }],\n        maintainLevel: [{\n          required: true,\n          message: '保养级别不能为空',\n          trigger: 'blur'\n        }],\n        orgCode: [{\n          required: true,\n          message: '组织编码不能为空',\n          trigger: 'blur'\n        }],\n        teamCode: [{\n          required: true,\n          message: '班组编码不能为空',\n          trigger: 'blur'\n        }],\n        teamName: [{\n          required: true,\n          message: '班组名称不能为空',\n          trigger: 'blur'\n        }],\n        upkeepPlanTimeEnd: [{\n          required: true,\n          message: '计划保养结束时间不能为空',\n          trigger: 'blur'\n        }],\n        upkeepPlanTimeStart: [{\n          required: true,\n          message: '计划保养开始时间不能为空',\n          trigger: 'blur'\n        }],\n        deviceTypeCode: [{\n          required: true,\n          message: '设备类型不能为空',\n          trigger: 'blur'\n        }]\n      },\n      timeRules: {\n        upkeepPlanTimeEnd: [{\n          required: true,\n          message: '计划保养结束时间不能为空',\n          trigger: 'blur'\n        }],\n        upkeepPlanTimeStart: [{\n          required: true,\n          message: '计划保养开始时间不能为空',\n          trigger: 'blur'\n        }]\n      },\n      pickerOptionsStart: {\n        disabledDate: function disabledDate(time) {\n          var endDateVal = _this.tempTime.upkeepPlanTimeEnd;\n\n          if (endDateVal) {\n            return time.getTime() > new Date(endDateVal).getTime();\n          }\n        }\n      },\n      pickerOptionsEnd: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = _this.tempTime.upkeepPlanTimeStart;\n\n          if (beginDateVal) {\n            return time.getTime() < new Date(beginDateVal).getTime();\n          }\n        }\n      },\n      pickerOptionsStart1: {\n        disabledDate: function disabledDate(time) {\n          var endDateVal = _this.temp.upkeepPlanTimeEnd;\n\n          if (endDateVal) {\n            return time.getTime() > new Date(endDateVal).getTime();\n          }\n        }\n      },\n      pickerOptionsEnd1: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = _this.temp.upkeepPlanTimeStart;\n\n          if (beginDateVal) {\n            return time.getTime() < new Date(beginDateVal).getTime();\n          }\n        }\n      }\n    };\n  },\n  created: function created() {},\n  computed: _objectSpread({}, mapState({\n    dt_upkeep_plan_state: function dt_upkeep_plan_state(state) {\n      return state.eamDict.dt_upkeep_plan_state;\n    },\n    dt_inspect_plan_cycle: function dt_inspect_plan_cycle(state) {\n      return state.eamDict.dt_inspect_plan_cycle;\n    },\n    dt_loop_mode: function dt_loop_mode(state) {\n      return state.eamDict.dt_loop_mode;\n    },\n    dt_upkeep_level: function dt_upkeep_level(state) {\n      return state.eamDict.dt_upkeep_level;\n    }\n  })),\n  watch: {\n    // 监听时间区间数组 写入到对应字段\n    'temp.timeRange': function tempTimeRange(value) {\n      if (value) {\n        this.temp.startDate = value[0];\n        this.temp.endDate = value[1];\n      }\n    },\n    'tempFrom.timeRange': function tempFromTimeRange(value) {\n      if (value) {\n        this.tempFrom.startDate = value[0];\n        this.tempFrom.endDate = value[1];\n      }\n    },\n    'temp.deviceTypeCode': function tempDeviceTypeCode(value) {\n      if (value) {\n        this.upkeepList = [];\n        this.deviceList = [];\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.getGroup();\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this2.setTableHeight();\n    };\n\n    var p = new Promise(function (res) {\n      res(_this2.$store.dispatch('eamDict/getDicData', ['dt_loop_mode', 'dt_upkeep_level', 'dt_upkeep_plan_state', 'dt_inspect_plan_cycle']));\n    });\n    Promise.all([p]).then(function () {\n      _this2.getList();\n    });\n  },\n  methods: {\n    getBug: function getBug(val) {\n      this.$set(this.temp, 'applicant', val.employeeCode);\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    //获取班组\n    getGroup: function getGroup() {\n      var _this3 = this;\n\n      queryRecords(this.listQuery1).then(function (res) {\n        _this3.groupList = res.data.list;\n      });\n    },\n    //班组选择\n    changeClass: function changeClass(val) {\n      if (val) {\n        this.temp.teamName = val.teamCode;\n        this.updateTemp.teamName = val.teamName;\n      }\n    },\n    getList: function getList() {\n      var _this4 = this;\n\n      //获取表格数据\n      if (this.value) {\n        var d1 = this.value[0];\n        var d2 = this.value[1];\n        this.listQuery.upkeepPlanTimeStart = d1;\n        this.listQuery.upkeepPlanTimeEnd = d2;\n      } else {\n        this.listQuery.upkeepPlanTimeStart = '';\n        this.listQuery.upkeepPlanTimeEnd = '';\n      }\n\n      api.queryRecords(this.listQuery).then(function (res) {\n        _this4.list = res.data.list;\n        var options = [_this4.dt_loop_mode, _this4.dt_upkeep_level, _this4.dt_inspect_plan_cycle];\n        _this4.list = _this4.$myFun.srmCodeToName(_this4.list, options, ['loopMode', 'maintainLevel', 'cycleUnit']);\n        _this4.total = res.data.pages.count;\n      });\n    },\n    //获取组织名称\n    org: function org(val) {\n      this.temp.orgName = val;\n      this.updateTemp.orgName = val;\n    },\n    //保养负责人弹窗\n    handleApplicant: function handleApplicant() {\n      this.supportDialogVisible = true;\n    },\n    //保养父子传值\n    handleSupport: function handleSupport(row) {\n      this.parentRow = row;\n    },\n    //保养确认\n    supportCreate: function supportCreate() {\n      this.temp.applicant = this.parentRow[0].employeeCode;\n      this.temp.applicantName = this.parentRow[0].employeeName;\n      this.updateTemp.applicant = this.parentRow[0].employeeCode;\n      this.updateTemp.applicantName = this.parentRow[0].employeeName;\n      this.supportDialogVisible = false;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        teamName: undefined,\n        teamCode: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        applicant: undefined,\n        applicantName: undefined,\n        loopMode: undefined,\n        loopCycle: undefined,\n        maintainLevel: undefined,\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined,\n        promptLeadTime: undefined\n      };\n    },\n    handleQuery: function handleQuery() {\n      //表格查询\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //打开设备编码弹窗\n    createDevice: function createDevice() {\n      var _this5 = this;\n\n      if (!this.temp.deviceTypeCode) {\n        this.$message({\n          title: '警告',\n          message: '请选择设备类型',\n          type: 'warning'\n        });\n        return;\n      }\n\n      setTimeout(function () {\n        _this5.$refs.eqmtSelect.listQuery.typeCode = _this5.temp.deviceTypeCode;\n\n        _this5.$refs.eqmtSelect.getList();\n      }, 0);\n      this.deviceFormVisible = true;\n    },\n    //设备编码确认\n    deviceCreate: function deviceCreate() {\n      var deviceList = this.deviceList.concat(this.$refs.eqmtSelect.currentSelect);\n      this.deviceList = deviceList.filter(function (x, index) {\n        var arrids = [];\n        deviceList.forEach(function (item) {\n          arrids.push(item.deviceCode);\n        });\n        return arrids.indexOf(x.deviceCode) === index;\n      });\n      this.deviceFormVisible = false;\n      this.$refs.eqmtSelect.currentSelect = null;\n    },\n    //删除设备编码\n    deleteDevice: function deleteDevice() {\n      var _this6 = this;\n\n      if (this.selectFromList && this.selectFromList.length > 0) {\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this6.deviceList = _this6.$myFun.getArrDifference(_this6.deviceList, _this6.selectFromList);\n\n          _this6.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this6.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //打开部位弹窗\n    createPart: function createPart() {\n      var _this7 = this;\n\n      setTimeout(function () {\n        _this7.$refs.partSelect.getList();\n      }, 0);\n      this.partVisible = true;\n    },\n    //部位确认\n    getPart: function getPart() {\n      var upkeepList = this.upkeepList.concat(this.$refs.partSelect.currentSelect);\n      this.upkeepList = upkeepList.filter(function (x, index) {\n        var arrids = [];\n        upkeepList.forEach(function (item) {\n          arrids.push(item.partCode);\n        });\n        return arrids.indexOf(x.partCode) === index;\n      });\n      this.partVisible = false;\n      this.$refs.partSelect.currentSelect = undefined;\n    },\n    //删除部位\n    deletePart: function deletePart() {\n      var _this8 = this;\n\n      if (this.selectPart && this.selectPart.length > 0) {\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this8.upkeepList = _this8.$myFun.getArrDifference(_this8.upkeepList, _this8.selectPart);\n\n          _this8.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this8.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //打开物料弹窗\n    createMateriel: function createMateriel() {\n      var _this9 = this;\n\n      this.importDialogVisible = true;\n      setTimeout(function () {\n        _this9.$refs.importDialog.getEquipmentData();\n      }, 0);\n    },\n    //物料编码确认\n    materielUpdate: function materielUpdate() {\n      var materielList = this.materielList.concat(this.$refs.importDialog.listSelected);\n      this.materielList = materielList.filter(function (x, index) {\n        var arrids = [];\n        materielList.forEach(function (item) {\n          arrids.push(item.materielCode);\n        });\n        return arrids.indexOf(x.materielCode) === index;\n      });\n      this.importDialogVisible = false;\n      this.$refs.importDialog.listSelected = undefined;\n    },\n    //删除物料\n    deleteMateriel: function deleteMateriel() {\n      var _this10 = this;\n\n      if (this.selectMateriel && this.selectMateriel.length > 0) {\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this10.materielList = _this10.$myFun.getArrDifference(_this10.materielList, _this10.selectMateriel);\n\n          _this10.$message({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this10.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //新增\n    handleCreate: function handleCreate() {\n      //新增按钮单击事件方法\n      this.resetTemp();\n      this.getGroup();\n      this.materielList = [];\n      this.upkeepList = [];\n      this.deviceList = [];\n      this.dialogFormVisible = true;\n    },\n    //新增方法\n    create: function create() {\n      var _this11 = this;\n\n      //编辑确认\n      var noNumber = this.materielList.filter(function (i) {\n        return !i.applyQuantity;\n      });\n\n      if (this.deviceList.length == 0) {\n        this.$message({\n          title: '警告',\n          message: '设备表不能为空',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      if (noNumber.length !== 0) {\n        this.$message({\n          title: '警告',\n          message: '备件数量不能为空',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      this.$refs['tempref'].validate(function (valid) {\n        if (valid) {\n          _this11.dto.applicant = _this11.temp.applicant;\n          _this11.dto.applicantName = _this11.temp.applicantName;\n          _this11.dto.loopCycle = parseInt(_this11.temp.loopCycle);\n          _this11.dto.loopMode = _this11.temp.loopMode;\n          _this11.dto.cycleUnit = _this11.temp.cycleUnit;\n          _this11.dto.maintainLevel = _this11.temp.maintainLevel;\n          _this11.dto.orgCode = _this11.temp.orgCode;\n          _this11.dto.orgName = _this11.temp.orgName;\n          _this11.dto.promptLeadTime = parseInt(_this11.temp.promptLeadTime);\n          _this11.dto.teamCode = _this11.temp.teamCode;\n          _this11.dto.teamName = _this11.temp.teamName;\n          _this11.dto.upkeepPlanTimeEnd = _this11.temp.upkeepPlanTimeEnd;\n          _this11.dto.upkeepPlanTimeStart = _this11.temp.upkeepPlanTimeStart;\n          _this11.dto.deviceTypeCode = _this11.temp.deviceTypeCode;\n          _this11.dto.positionList = _this11.upkeepList.map(function (i, index) {\n            return {\n              ifNormal: i.ifNormal,\n              maintenanceCode: i.maintenanceCode,\n              remark: i.remark,\n              serialNumber: index + 1\n            };\n          });\n          _this11.dto.spareList = _this11.materielList;\n          _this11.dto.deviceList = _this11.deviceList.map(function (i) {\n            return i.deviceCode;\n          });\n          api.addRecords(_this11.dto).then(function () {\n            _this11.getList();\n\n            _this11.dialogFormVisible = false;\n\n            _this11.$message({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //编辑\n    handleUpdate: function handleUpdate() {\n      var _this12 = this;\n\n      //编辑按钮单击事件方法\n      if (this.selectedRows) {\n        if (this.selectedRows.state == '生效') {\n          this.$message({\n            title: '警告',\n            message: '无法对生效状态下的数据进行编辑',\n            type: 'warning'\n          });\n          return false;\n        }\n\n        api.detailsRecords(this.selectedRows.maintainPlanCode).then(function (res) {\n          _this12.updateTemp = res.data;\n          _this12.materielList = res.data.spareList;\n          _this12.upkeepList = res.data.positionList;\n          _this12.upDialogFormVisible = true;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //编辑方法\n    update: function update() {\n      var _this13 = this;\n\n      //编辑确认\n      this.upDto.applicant = this.updateTemp.applicant;\n      this.upDto.applicantName = this.updateTemp.applicantName;\n      this.upDto.loopCycle = parseInt(this.updateTemp.loopCycle);\n      this.upDto.cycleUnit = this.updateTemp.cycleUnit;\n      this.upDto.loopMode = this.updateTemp.loopMode;\n      this.upDto.loopMode = this.updateTemp.loopMode;\n      this.upDto.maintainLevel = this.updateTemp.maintainLevel;\n      this.upDto.orgCode = this.updateTemp.orgCode;\n      this.upDto.orgName = this.updateTemp.orgName;\n      this.upDto.equipmentCode = this.updateTemp.equipmentCode;\n      this.upDto.promptLeadTime = parseInt(this.updateTemp.promptLeadTime);\n      this.upDto.teamCode = this.updateTemp.teamCode;\n      this.upDto.teamName = this.updateTemp.teamName;\n      this.upDto.upkeepPlanTimeEnd = this.updateTemp.upkeepPlanTimeEnd;\n      this.upDto.upkeepPlanTimeStart = this.updateTemp.upkeepPlanTimeStart;\n      this.upDto.deviceTypeCode = this.updateTemp.deviceTypeCode;\n      this.upDto.positionList = this.upkeepList;\n      this.upDto.spareList = this.materielList;\n      this.$refs['updateTemp'].validate(function (valid) {\n        if (valid) {\n          api.updateRecords(_this13.selectedRows.maintainPlanCode, _this13.upDto).then(function () {\n            _this13.getList();\n\n            _this13.upDialogFormVisible = false;\n\n            _this13.$message({\n              title: '成功',\n              message: '编辑成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    //删除\n    handleDelete: function handleDelete() {\n      var _this14 = this;\n\n      //删除按钮单击事件方法\n      if (this.selectedRows) {\n        if (this.selectedRows.state == '生效') {\n          this.$message({\n            title: '警告',\n            message: '无法对生效状态下的数据进行删除',\n            type: 'warning'\n          });\n          return false;\n        }\n\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.deleteRecords([_this14.selectedRows.maintainPlanCode]).then(function () {\n            _this14.getList(), _this14.$message({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this14.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    resetTime: function resetTime() {\n      this.tempTime = {\n        upkeepPlanTimeEnd: undefined,\n        upkeepPlanTimeStart: undefined\n      };\n    },\n    //打开时间调整\n    handleTime: function handleTime() {\n      if (this.selectedRows) {\n        if (this.selectedRows.state == '生效') {\n          this.$message({\n            title: '警告',\n            message: '无法对生效状态下的数据进行时间调整',\n            type: 'warning'\n          });\n          return false;\n        }\n\n        this.tempTime.upkeepPlanTimeEnd = this.selectedRows.upkeepPlanTimeEnd;\n        this.tempTime.upkeepPlanTimeStart = this.selectedRows.upkeepPlanTimeStart;\n        this.timeDialogFormVisible = true;\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //时间调整确认\n    timeUpdate: function timeUpdate() {\n      var _this15 = this;\n\n      this.dtos.maintainPlanCodeList = [];\n      this.dtos.maintainPlanCodeList.push(this.selectedRows.maintainPlanCode);\n      this.dtos.upkeepPlanTimeEnd = this.tempTime.upkeepPlanTimeEnd;\n      this.dtos.upkeepPlanTimeStart = this.tempTime.upkeepPlanTimeStart;\n      this.$refs['tempTime'].validate(function (valid) {\n        if (valid) {\n          api.timeRecords(_this15.dtos).then(function () {\n            _this15.getList();\n\n            _this15.timeDialogFormVisible = false;\n\n            _this15.$message({\n              title: '成功',\n              message: '日期调整成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //派工\n    handleDispatch: function handleDispatch() {\n      var _this16 = this;\n\n      if (this.selectedRows.state == '生效') {\n        this.$message({\n          title: '警告',\n          message: '无法对生效状态下的数据进行派工',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      if (this.selectedRows) {\n        this.$confirm('是否开始派工?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          api.dispatchRecords(_this16.selectedRows.maintainPlanCode).then(function () {\n            _this16.getList();\n\n            _this16.$message({\n              title: '成功',\n              message: '派工成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }).catch(function () {\n          _this16.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //主表勾选\n    selectChange: function selectChange(val) {\n      this.selectedRows = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tb.clearSelection();\n        this.$refs.tb.toggleRowSelection(val[val.length - 1]);\n      }\n\n      this.$refs.tb.setCurrentRow(this.selectedRows);\n    },\n    //主表行点击\n    rowClick: function rowClick(val) {\n      this.$refs.tb.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    //设备选择框选中\n    selectFromChange: function selectFromChange(val) {\n      this.selectFromList = val;\n    },\n    //物料选择框选中\n    selectMaterielChange: function selectMaterielChange(val) {\n      this.selectMateriel = val;\n    },\n    //部位选择框选中\n    selectPartChange: function selectPartChange(val) {\n      this.selectPart = val;\n    }\n  }\n};",null]}