{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/roleManagement/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/roleManagement/index.vue","mtime":1596610934267},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport changeModuleSelect from '@/components/template/changeMoudleSelect';\nimport * as api from '@/api/system/role';\nimport Pagination from '@/components/Pagination';\nimport { refreshMenu } from '@/utils/tool';\nimport { mapState } from 'vuex';\nimport { selectDatas } from '@/api/system/menu';\nexport default {\n  name: 'roleManagement',\n  components: {\n    Pagination: Pagination,\n    changeModuleSelect: changeModuleSelect\n  },\n  data: function data() {\n    return {\n      data1: [],\n      defaultProps: {\n        children: 'children',\n        label: 'catalogName'\n      },\n      list: [],\n      list2: [],\n      total: 0,\n      theight: 0,\n      //表格高度\n      listQuery: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 15\n      },\n      listQuery2: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      listQuery3: {\n        //查询\n        page: true,\n        currentPage: 1,\n        pageSize: 10\n      },\n      temp: {\n        //新增创建\n        roleCode: undefined,\n        roleName: undefined,\n        roleType: undefined,\n        domainScope: undefined,\n        remark: undefined\n      },\n      checkeddatas: [],\n      roleCode: undefined,\n      selectCode: [],\n      dialogFormVisible: false,\n      dialogFormVisible1: false,\n      dialogFormVisible2: false,\n      dialogStatus: '',\n      selectedrow: {},\n      selectedrow1: {},\n      tableKey: 0,\n      rules: {\n        roleCode: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }, {\n          max: 30,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        roleName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        roleType: [{\n          max: 100,\n          message: this.$t('validate.max32'),\n          trigger: 'blur'\n        }],\n        remark: [{\n          max: 200,\n          message: this.$t('validate.max200'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {// this.$store.dispatch(\"mesDict/getDicData\", [\"dt_role_type\"])\n  },\n  computed: _objectSpread({}, mapState({\n    dt_role_type: function dt_role_type(state) {\n      return state.dict.dt_role_type;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('dict/getDicData', ['dt_role_type']);\n    this.setTableHeight(); //表格高度自适应\n\n    window.onresize = function () {\n      _this.setTableHeight();\n    };\n\n    this.getList();\n  },\n  watch: {\n    dt_role_type: function dt_role_type() {\n      this.getList();\n    }\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      api.selectrole(this.listQuery).then(function (response) {\n        var options = [_this2.dt_role_type];\n        response.data = _this2.$myFun.codeToName(response.data, options, ['roleType']);\n        _this2.list = response.data.list;\n        _this2.total = response.data.pages.count; // Just to simulate the time of the request\n\n        setTimeout(function () {\n          _this2.listLoading = false;\n        }, 1.5 * 100);\n      });\n    },\n    changeMoudle: function changeMoudle(val) {\n      this.$emit('changeSelect', val);\n    },\n    handleCheckChange: function handleCheckChange() {\n      return this.$refs.tree.getCheckedNodes().concat(this.$refs.tree.getHalfCheckedNodes()); //获取选中和半选中状态下的数据\n    },\n    getList1: function getList1() {\n      var _this3 = this;\n\n      api.authorizationRecord(this.selectedrow.roleCode).then(function (res) {\n        _this3.list2 = res.data;\n        _this3.total = res.data.pages.count;\n      });\n    },\n    handleQuery: function handleQuery() {\n      this.listQuery.currentPage = 1;\n      this.getList();\n    },\n    //表格高度计算\n    setTableHeight: function setTableHeight() {\n      this.theight = this.$myFun.getSingleTbHeight();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.pageSize = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.currentPage = val;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      //新增按钮单击事件方法\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    handleCreate1: function handleCreate1() {\n      var _this4 = this;\n\n      //功能授权按钮单击事件方法\n      if (this.selectedrow && this.selectedrow.length == 1) {\n        this.listQuery2.roleCodes = this.selectedrow[0].roleCode;\n        var dd = [];\n        selectDatas(this.listQuery2).then(function (res) {\n          _this4.checkeddatas = _this4.$myFun.reDataToTree(res.data).filter(function (items) {\n            //默认选中项,解决多层级父节点半选中问题\n            if (items.children) {\n              var getSelectTree = function getSelectTree(v) {\n                v.filter(function (em) {\n                  if (em.children) {\n                    getSelectTree(em.children);\n                  } else {\n                    dd.push(em.rowId);\n                  }\n                });\n              };\n\n              getSelectTree(items.children);\n            }\n\n            return dd;\n          });\n          _this4.checkeddatas = dd;\n        });\n        api.selectRecord().then(function (res) {\n          _this4.dialogStatus = 'create';\n          _this4.dialogFormVisible1 = true;\n          _this4.data1 = _this4.$myFun.addTreeRoot(res.data);\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    // 获取表格选中时的数据\n    selected: function selected(val) {\n      if (val.length > 1) {\n        this.$refs.tb_a.clearSelection(); //清除其他行的选中\n\n        this.$refs.tb_a.toggleRowSelection(val[val.length - 1], 'selected'); //单击行绑定点击事件\n      } else if (val.length === 1) {\n        this.selectedrow = val;\n      }\n    },\n    rowClick: function rowClick(val) {\n      this.$refs.tb_a.clearSelection(); //清除其他行的选中\n\n      this.$refs.tb_a.toggleRowSelection(val); //单击行绑定点击事件\n    },\n    selected1: function selected1(val) {\n      this.selectedrow1 = val;\n    },\n    handleCreate2: function handleCreate2() {\n      var _this5 = this;\n\n      //授权用户按钮单击事件方法\n      if (this.selectedrow && this.selectedrow.length == 1) {\n        this.dialogFormVisible2 = true;\n        this.dialogStatus = 'create';\n        this.listQuery3.roleCode = this.selectedrow[0].roleCode;\n        api.roleToUser(this.listQuery3).then(function (res) {\n          _this5.list2 = res.data.list;\n          _this5.total = res.data.pages.count;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleUpdate: function handleUpdate() {\n      var _this6 = this;\n\n      //编辑按钮单击事件方法\n      if (this.selectedrow && this.selectedrow.length == 1) {\n        this.roleCode = this.selectedrow[0].roleCode;\n        api.getRecord(this.selectedrow[0].roleCode).then(function (res) {\n          _this6.temp = res.data;\n          _this6.dialogStatus = 'update';\n          _this6.dialogFormVisible = true;\n        });\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    handleDelete: function handleDelete() {\n      //表格删除按钮单击事件方法\n      if (this.selectedrow && this.selectedrow.length == 1) {\n        var codes = [];\n        codes.push(this.selectedrow[0].roleCode);\n        this.delete(codes);\n      } else {\n        this.$message({\n          title: '警告',\n          message: '请选择一条信息',\n          type: 'warning'\n        });\n      }\n    },\n    //删除用户授权\n    handleDelete1: function handleDelete1() {\n      var _this7 = this;\n\n      var userNames = [];\n      this.selectedrow1.forEach(function (item) {\n        userNames.push(item.userName);\n      });\n      var data = {\n        methods: 'USER',\n        userNames: userNames\n      };\n      api.addMenu(this.selectedrow[0].roleCode, data).then(function () {\n        _this7.handleCreate2();\n\n        _this7.$notify({\n          title: '成功',\n          message: '删除成功',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    deleteUsers: function deleteUsers(codes) {\n      var _this8 = this;\n\n      this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteUser(codes).then(function () {\n          _this8.handleCreate2();\n\n          _this8.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    },\n    delete: function _delete(codes) {\n      var _this9 = this;\n\n      this.$confirm('此操作将永久删除记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        api.deleteRecord(codes).then(function () {\n          _this9.getList();\n\n          _this9.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    },\n    create: function create() {\n      var _this10 = this;\n\n      //新增弹窗确定按钮单击事件方法\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.addRecord(_this10.temp).then(function () {\n            _this10.getList();\n\n            _this10.dialogFormVisible = false;\n\n            _this10.$notify({\n              title: '成功',\n              message: '新增成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    create1: function create1() {\n      var _this11 = this;\n\n      //功能授权弹窗确定按钮单击事件方法\n      var catalogs = this.handleCheckChange().map(function (item) {\n        return item.catalogCode;\n      });\n      api.addMenu(this.selectedrow[0].roleCode, {\n        catalogCodes: catalogs\n      }).then(function () {\n        _this11.$notify({\n          title: '成功',\n          message: '授权成功',\n          type: 'success',\n          duration: 2000\n        }); // this.reload()//允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在起上下游关系成立的时间里始终生效\n        // this.$router.go(0) //刷新当前体验不好，会出现空白\n\n\n        refreshMenu(); //刷新菜单解决体验不好\n      });\n      this.dialogFormVisible1 = false;\n    },\n    create2: function create2() {\n      //授权用户弹窗确定按钮单击事件方法\n      this.dialogFormVisible2 = false;\n    },\n    update: function update() {\n      var _this12 = this;\n\n      //编辑弹窗确定按钮单击事件方法\n      this.$refs.temp.validate(function (valid) {\n        if (valid) {\n          api.updateRecord(_this12.roleCode, _this12.temp).then(function () {\n            _this12.getList();\n\n            _this12.dialogFormVisible = false;\n\n            _this12.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this12.$refs.temp.resetFields();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.dialogFormVisible = false;\n      this.dialogFormVisible1 = false;\n      this.dialogFormVisible2 = false;\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        roleCode: undefined,\n        roleName: undefined,\n        roleType: undefined,\n        remark: undefined\n      };\n    },\n    handleClose: function handleClose() {\n      this.resetTemp(); // this.$refs.temp.resetFields()\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.selectCode = selection.map(function (v) {\n        return v.roleCode;\n      });\n    }\n  }\n};",null]}