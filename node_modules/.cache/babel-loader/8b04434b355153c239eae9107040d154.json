{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/batchAdding.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/project/SRM/contractManage/supplierPerformance/dailyEvaluation/evaluationFormat/content/batchAdding.vue","mtime":1599136050781},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yuan/Documents/\\u5927\\u5510\\u5E7F\\u7535/dt-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/project/srm/contractManage/evaluationFormat'; // import { queryRecords } from '@/api/project/srm/dataBase/dictMaintenance'\n\nimport { DICT_CODE } from '@/utils/constant';\nimport caiGou from '@/components/Select/xtpt/caigou'; //下拉组件\n\nimport { mapState } from \"vuex\";\nimport setModel from \"../dialog/setModel\"; //下拉组件\n\nimport dialogGysxz from '@/components/Dialog/dialogsGysxz'; //供应商选择\n// import evaluatePlan from '@/components/Dialog/evaluatePlan.vue'//主数据物料选择\n\nexport default {\n  components: {\n    setModel: setModel,\n    caiGou: caiGou,\n    dialogGysxz: dialogGysxz\n  },\n  data: function data() {\n    return {\n      Edit: false,\n      status: null,\n      selectStatus: false,\n      type: null,\n      DICT_CODE: DICT_CODE,\n      temp: {\n        rowId: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        evaluationType: undefined,\n        evaluationClassification: undefined,\n        evaluationPlan: undefined,\n        evaluationStage: undefined,\n        evaluationDate: undefined,\n        remark: undefined\n      },\n      list: [],\n      listSub: [],\n      rules: {\n        orgCode: [{\n          required: true,\n          message: '组织编码不能为空',\n          trigger: 'blur'\n        }],\n        evaluationType: [{\n          required: true,\n          message: '评价类型不能为空',\n          trigger: 'blur'\n        }],\n        evaluationClassification: [{\n          required: true,\n          message: '评价类别不能为空',\n          trigger: 'blur'\n        }],\n        evaluationPlan: [{\n          required: true,\n          message: '评价计划不能为空',\n          trigger: 'blur'\n        }],\n        evaluationStage: [{\n          required: true,\n          message: '评价阶段不能为空',\n          trigger: 'blur'\n        }],\n        evaluationTime: [{\n          required: true,\n          message: '评价日期不能为空',\n          trigger: 'blur'\n        }]\n      },\n      // 计划号列表\n      planData: [],\n      dialogPlanVisible: false,\n      selectedrow: null\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dt_srm_pak: function dt_srm_pak(state) {\n      return state.dict.dt_srm_pak;\n    },\n    // 评价类型\n    dt_srm_pb1: function dt_srm_pb1(state) {\n      return state.dict.dt_srm_pb1;\n    },\n    // 评价分类\n    dt_srm_pb2: function dt_srm_pb2(state) {\n      return state.dict.dt_srm_pb2;\n    },\n    // 评价计划(类别)\n    dt_srm_pb3: function dt_srm_pb3(state) {\n      return state.dict.dt_srm_pb3;\n    },\n    // 评价阶段\n    dt_srm_pb4: function dt_srm_pb4(state) {\n      return state.dict.dt_srm_pb4;\n    } // 评价项 \n\n  })),\n  created: function created() {\n    this.$store.dispatch(\"dict/getDicData\", ['dt_srm_pak', 'dt_srm_pb1', 'dt_srm_pb2', 'dt_srm_pb3', 'dt_srm_pb4']);\n  },\n  watch: {\n    // 根据采购组织获取评价计划数据\n    'temp.orgCode': function tempOrgCode(val) {\n      if (!val) {\n        this.temp.evaluationPlan = undefined;\n        this.planData = [];\n      } else {\n        this.getPlanNoData(val);\n      }\n    }\n  },\n  methods: {\n    // 初始化表单\n    initForm: function initForm() {\n      this.temp = {\n        rowId: undefined,\n        orgCode: undefined,\n        orgName: undefined,\n        evaluationType: undefined,\n        evaluationClassification: undefined,\n        evaluationPlan: undefined,\n        evaluationStage: undefined,\n        evaluationTime: undefined,\n        remark: undefined\n      };\n      this.$refs['dataForm'].resetFields();\n      this.$refs['dataForm'].clearValidate();\n      this.list = [];\n      this.listSub = [];\n    },\n    //获取组织编码名称\n    selectName: function selectName(val) {\n      this.temp.orgName = val;\n    },\n    // 根据采购组织获取评价计划数据\n    getPlanNoData: function getPlanNoData(val) {\n      var _this = this;\n\n      if (val) {\n        var dto = {\n          currentPage: 1,\n          pageSize: 15,\n          orgCode: val\n        };\n        api.getPlanNo(dto).then(function (res) {\n          // console.log(res)\n          res.data.list.forEach(function (item) {\n            var obj = {\n              evaluationPlanNo: item.evaluationPlanNo,\n              evaluationStage: item.evaluationStage\n            };\n\n            _this.planData.push(obj);\n          });\n          _this.planData = _this.$myFun.srmCodeToName(_this.planData, [_this.dt_srm_pb3], ['evaluationStage']);\n        });\n      }\n    },\n    showPJJH: function showPJJH() {\n      if (!this.temp.orgCode) {\n        this.$message({\n          type: 'warning',\n          message: '请先选择采购组织！'\n        });\n      } else {\n        this.dialogPlanVisible = true;\n      }\n    },\n    // 评价计划确定\n    handlePJJH: function handlePJJH() {\n      // console.log(this.selectedrow)\n      if (!this.selectedrow) {\n        this.$message({\n          type: 'warning',\n          message: '请选择一条或者几条！'\n        });\n      } else {\n        this.dialogPlanVisible = false;\n        this.temp.evaluationPlan = this.selectedrow.evaluationPlanNo;\n        this.temp.evaluationStage = this.selectedrow.evaluationStage;\n      }\n    },\n    //批量新增\n    handleCreate: function handleCreate() {\n      this.$refs.refGys.initSelect();\n      this.$refs.refGys.dialogVisible = true;\n      this.$refs.refGys.getList();\n    },\n    //新增\n    // handleAdd () {\n    //     this.$refs.addMainSub.dialogVisible = true\n    // },\n    //供应商确定\n    handleGysClick: function handleGysClick(val) {\n      var _this2 = this;\n\n      // this.$set(this.temp, 'supplierCode', val[0].supplierCode)\n      // this.$set(this.temp, 'supplierName', val[0].supplierName)\n      // console.log(val)\n      this.list = val;\n      this.list.forEach(function (item, index) {\n        _this2.$set(item, 'num1', index + 1);\n      });\n    },\n    //批量设置评价模型\n    handleSetmodel: function handleSetmodel() {\n      this.$refs.setModel.dialogVisible = true;\n      this.$refs.setModel.getList(); // this.$refs.setModel.$refs.tb.clearSelection()\n    },\n    handleConfirm: function handleConfirm(val) {\n      if (this.selectStatus == true) {\n        this.listSub.push(JSON.parse(JSON.stringify(val)));\n      } else {\n        this.listSub = val;\n      }\n    },\n    // 模型设置确定\n    modelList: function modelList(selectedRow) {\n      var _this3 = this;\n\n      // console.log(selectedRow)\n      this.$nextTick(function () {\n        selectedRow.forEach(function (item, index) {\n          item.num2 = index + 1;\n        });\n        _this3.listSub = selectedRow;\n      });\n    },\n    handleClose: function handleClose() {\n      this.$emit('changeState', 'manage');\n    },\n    //保存按钮单击事件\n    handleSave: function handleSave() {\n      var _this4 = this;\n\n      this.$refs.dataForm.validate(function (valid) {\n        if (valid) {\n          var dto = {\n            orgCode: _this4.temp.orgCode,\n            orgName: _this4.temp.orgName,\n            evaluationType: _this4.temp.evaluationType,\n            evaluationClassification: _this4.temp.evaluationClassification,\n            evaluationPlanNo: _this4.temp.evaluationPlan,\n            evaluationStage: _this4.temp.evaluationStage,\n            evaluationTime: _this4.temp.evaluationTime,\n            remark: _this4.temp.remark,\n            supplierInfoDTOS: _this4.list,\n            evaluationModelInfoDTOS: _this4.listSub\n          };\n          console.log(dto);\n          console.log(JSON.stringify(dto));\n          api.batchAddRecord(dto).then(function () {\n            _this4.$message({\n              title: '成功',\n              message: '保存成功',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this4.$emit('changeState', 'manage');\n\n            _this4.$emit('refresh');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 表内修改\n    // handleUpdate (index, val) {\n    //     this.$refs.search.dialogStatus = 'update'\n    //     this.$refs.search.dialogVisible = true\n    //     this.$refs.search.temp = { ...val }\n    // },\n    //表格操作删除\n    // handleDelete (index, row) {\n    //     console.log('删除', index, row)\n    //     this.$confirm('确认要删除该数据项吗?', '提示', {\n    //         confirmButtonText: '确定',\n    //         cancelButtonText: '取消',\n    //         type: 'warning'\n    //     }).then(() => {\n    //         this.list = this.list.filter(item => {\n    //             let isD = true\n    //             if (row.rowId === item.rowId) {\n    //                 isD = false\n    //             }\n    //             return isD\n    //         })\n    //         this.$message({\n    //             type: 'success',\n    //             message: '删除成功'\n    //         })\n    //     }).catch(() => {\n    //         this.$message({\n    //             type: 'info',\n    //             message: '已取消'\n    //         })\n    //     })\n    // },\n    // 表格选择框选中 注:参数为选中的所有行的数组\n    selectChange: function selectChange(val) {\n      this.selectedrow = val[val.length - 1];\n\n      if (val.length > 1) {\n        this.$refs.tbPlan.clearSelection(); //清除其他行的选中\n\n        this.$refs.tbPlan.toggleRowSelection(val.pop(), 'selected');\n      }\n\n      this.$refs.tbPlan.setCurrentRow(this.selectedrow);\n    },\n    //点击表格某一行\n    rowClick: function rowClick(val) {\n      this.selectedrow = val;\n      this.$refs.tbPlan.clearSelection();\n      this.$refs.tbPlan.toggleRowSelection(val, 'selected'); //单击行绑定点击事件\n    },\n    handleDeleteModel: function handleDeleteModel(index, row) {\n      var _this5 = this;\n\n      this.$confirm('确认要删除该数据项吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this5.listSub = _this5.listSub.filter(function (item) {\n          var isD = true;\n\n          if (row.dictItemKey === item.dictItemKey) {\n            isD = false;\n          }\n\n          return isD;\n        });\n\n        _this5.$message({\n          type: 'success',\n          message: '删除成功'\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    }\n  }\n};",null]}