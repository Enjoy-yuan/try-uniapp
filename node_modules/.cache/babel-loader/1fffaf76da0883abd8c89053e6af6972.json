{"remainingRequest":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js!/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processConfiguration/tab/tabRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuan/Documents/大唐广电/dt-web/src/views/system/processManage/processConfiguration/tab/tabRule.vue","mtime":1596610934250},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuan/Documents/大唐广电/dt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/api/system/process/processConfiguration';\nexport default {\n  name: 'contentRule',\n  data: function data() {\n    return {\n      activeCollName: ['1'],\n      tableList: [],\n      tableKey: [0],\n      dirList: [],\n      dirListd: [],\n      dirListn: [],\n      dirNodeList: [],\n      varNameList: [],\n      calculaterList: [{\n        id: 0,\n        name: '=',\n        value: 'eq'\n      }, {\n        id: 1,\n        name: '!=',\n        value: 'neq'\n      }, {\n        id: 2,\n        name: '>',\n        value: 'gt'\n      }, {\n        id: 3,\n        name: '<',\n        value: 'lt'\n      }, {\n        id: 4,\n        name: '>=',\n        value: 'egt'\n      }, {\n        id: 5,\n        name: '<=',\n        value: 'elt'\n      }]\n    };\n  },\n  computed: {},\n  mounted: function mounted() {},\n  methods: {\n    initForm: function initForm(data) {\n      this.tableList = data;\n    },\n    handleAdd: function handleAdd() {\n      var singleRow = {\n        varcode: '',\n        varvalue: '',\n        opercode: '',\n        value: '',\n        flownode: '',\n        flownodename: '',\n        tergetnode: '',\n        tergetnodename: '',\n        editable: true\n      };\n      this.tableList.push(singleRow);\n    },\n    //前端编辑\n    handleEditTable: function handleEditTable(index, row) {\n      var _this = this;\n\n      this.tableList.forEach(function (item) {\n        if (item.varcode === row.varcode) {\n          _this.tableList[index].editable = true;\n        }\n      });\n    },\n    //前端保存\n    handleSaveTable: function handleSaveTable(index, row) {\n      var _this2 = this;\n\n      this.tableList.forEach(function (item) {\n        if (item.varcode === row.varcode) {\n          _this2.tableList[index].editable = false;\n        }\n      });\n    },\n    //前端表格删除\n    handleDeleteTable: function handleDeleteTable(index, row) {\n      this.tableList = this.tableList.filter(function (item) {\n        console.log(item.varcode, row.varcode);\n        return item.varcode !== row.varcode;\n      });\n    },\n    getNodeDir: function getNodeDir(query) {\n      var _this3 = this;\n\n      api.getActivity(query).then(function (res) {\n        _this3.dirList = res.data;\n        _this3.dirListd = _this3.dirList.filter(function (item) {\n          return item.type === 'SequenceFlow';\n        });\n        _this3.dirListn = _this3.dirList.filter(function (item) {\n          return item.type === 'UserTask';\n        });\n      });\n    },\n    setFlownode: function setFlownode(id, val, index) {\n      console.log(id, val, index);\n      var name = this.dirListd.filter(function (item) {\n        return item.id === val.flownode;\n      });\n      console.log(name);\n      this.tableList[index].flownodename = name[0].name;\n    },\n    setTargetnode: function setTargetnode(id, val, index) {\n      console.log(id, val, index);\n      var name = this.dirListn.filter(function (item) {\n        return item.id === val.tergetnode;\n      });\n      console.log(name);\n      this.tableList[index].tergetnodename = name[0].name;\n    }\n  }\n};",null]}